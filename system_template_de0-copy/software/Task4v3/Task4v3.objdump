
Task4v3.elf:     file format elf32-littlenios2
Task4v3.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x000106cc memsz 0x000106cc flags r-x
    LOAD off    0x000116ec vaddr 0x008106ec paddr 0x00812148 align 2**12
         filesz 0x00001a5c memsz 0x00001a5c flags rw-
    LOAD off    0x00013ba4 vaddr 0x00813ba4 paddr 0x00813ba4 align 2**12
         filesz 0x00000000 memsz 0x000002ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fddc  008001b4  008001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000075c  0080ff90  0080ff90  00010f90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a5c  008106ec  00812148  000116ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002ec  00813ba4  00813ba4  00013ba4  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  00013148  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001078  00000000  00000000  00013170  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000017d7  00000000  00000000  000141e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00029a31  00000000  00000000  000159bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a101  00000000  00000000  0003f3f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000186e9  00000000  00000000  000494f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001f44  00000000  00000000  00061bdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000028a6  00000000  00000000  00063b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000ef34  00000000  00000000  000663c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  000752fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba8  00000000  00000000  00075320  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007954f  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00079552  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00079555  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00079556  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00079557  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007955b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007955f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00079563  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007956c  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00079575  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0007957e  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000027  00000000  00000000  00079590  2**0
                  CONTENTS, READONLY
 29 .jdi          00004fae  00000000  00000000  000795b7  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003419c  00000000  00000000  0007e565  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001b4 l    d  .text	00000000 .text
0080ff90 l    d  .rodata	00000000 .rodata
008106ec l    d  .rwdata	00000000 .rwdata
00813ba4 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
008001ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 sf_cos.c
00000000 l    df *ABS*	00000000 sf_floor.c
00000000 l    df *ABS*	00000000 ef_rem_pio2.c
00810050 l     O .rodata	00000318 two_over_pi
0080ffd0 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 kf_cos.c
00000000 l    df *ABS*	00000000 kf_rem_pio2.c
00810368 l     O .rodata	0000000c init_jk
00810374 l     O .rodata	0000002c PIo2
00000000 l    df *ABS*	00000000 kf_sin.c
00000000 l    df *ABS*	00000000 sf_fabs.c
00000000 l    df *ABS*	00000000 sf_scalbn.c
00000000 l    df *ABS*	00000000 sf_copysign.c
00000000 l    df *ABS*	00000000 fp-bit.c
00801e04 l     F .text	000001e4 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
008026f8 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 efgcvt.c
00000000 l    df *ABS*	00000000 impure.c
008106ec l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00803ec0 l     F .text	00000058 __sprint_r
0081053a l     O .rodata	00000010 blanks.3452
0081052a l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00805f3c l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 ecvtbuf.c
00807734 l     F .text	00000204 print_e
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00808430 l     F .text	00000058 std
0080853c l     F .text	00000008 __fp_lock
00808544 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
00812114 l     O .rwdata	00000004 charset
0081056c l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
008106b4 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0080d0d4 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d3e8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d448 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d54c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d670 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d750 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d8b0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
0080db20 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00812138 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080dd48 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080decc l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
008110a8 l     O .rwdata	00001060 jtag_uart
0080dfbc l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e1fc l     F .text	00000228 altera_avalon_jtag_uart_irq
0080e424 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080eaa0 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080edc4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080f1e8 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080f338 l     F .text	000000f8 alt_file_locked
0080f5bc l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0080fd78 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0080ff2c l     F .text	00000040 alt_sim_halt
0080a220 g     F .text	00000094 _mprec_log10
0080a30c g     F .text	00000088 __any_on
0080bb50 g     F .text	00000070 _isatty_r
0081068c g     O .rodata	00000028 __mprec_tinytens
0080d910 g     F .text	0000006c alt_main
0080b77c g     F .text	0000008c strcpy
00803d98 g     F .text	000000a0 _puts_r
00813c00 g     O .bss	00000100 alt_irq
0080bbc0 g     F .text	00000078 _lseek_r
00812148 g       *ABS*	00000000 __flash_rwdata_start
0080cbd4 g     F .text	00000088 __eqdf2
00813e90 g       *ABS*	00000000 __alt_heap_start
00803d20 g     F .text	00000044 printf
0080b57c g     F .text	00000068 __sseek
00808498 g     F .text	000000a4 __sinit
00808058 g     F .text	000001a8 fcvtbuf
008091a4 g     F .text	00000084 _setlocale_r
00808598 g     F .text	0000009c __sfmoreglue
0080d99c g     F .text	00000020 __malloc_unlock
0080229c g     F .text	00000174 __divsf3
00809c9c g     F .text	000000e0 memmove
00808588 g     F .text	00000010 _cleanup
0080a394 g     F .text	000000bc _Balloc
00802610 g     F .text	00000094 __fixsfsi
0080d9bc g     F .text	00000040 alt_putstr
0080cce4 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000001c __reset
0080dcb4 g     F .text	00000094 times
00800840 g     F .text	0000053c __ieee754_rem_pio2f
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080badc g     F .text	00000074 _fstat_r
00813bbc g     O .bss	00000004 errno
00802fc0 g     F .text	00000038 __make_dp
008036ac g     F .text	0000002c __make_fp
00813bc4 g     O .bss	00000004 alt_argv
0081a108 g       *ABS*	00000000 _gp
00801fe8 g     F .text	00000070 __subsf3
00810f28 g     O .rwdata	00000180 alt_fd_list
0080f7e0 g     F .text	00000094 alt_find_dev
00809bfc g     F .text	000000a0 memcpy
0080857c g     F .text	0000000c _cleanup_r
0080cf04 g     F .text	000000f8 __floatsidf
0080f2c0 g     F .text	00000078 alt_io_redirect
0080cdf4 g     F .text	00000088 __ltdf2
0080ff90 g       *ABS*	00000000 __DTOR_END__
00803e38 g     F .text	00000014 puts
0080a170 g     F .text	000000b0 __ratio
0080e63c g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00803d64 g     F .text	00000034 _printf_r
0080d210 g     F .text	00000008 __udivsi3
0080d5ac g     F .text	000000c4 isatty
0081059c g     O .rodata	000000c8 __mprec_tens
00809180 g     F .text	00000008 __locale_charset
00803bf0 g     F .text	00000040 gcvtf
0080fa64 g     F .text	00000090 alt_icache_flush
00813bb0 g     O .bss	00000004 __malloc_top_pad
00812110 g     O .rwdata	00000004 __mb_cur_max
00809188 g     F .text	0000000c _localeconv_r
0080aaf8 g     F .text	0000003c __i2b
00808b64 g     F .text	0000049c __sfvwrite_r
0080b504 g     F .text	00000070 _sbrk_r
00801c90 g     F .text	00000010 fabsf
0080bc38 g     F .text	00000078 _read_r
00810aec g     O .rwdata	0000000c __lc_ctype
00812130 g     O .rwdata	00000004 alt_max_fd
008039ec g     F .text	00000138 __unpack_d
0080b9b8 g     F .text	00000110 _fclose_r
008083fc g     F .text	00000034 fflush
00813bb4 g     O .bss	00000004 __malloc_max_sbrked_mem
008026a4 g     F .text	00000054 __extendsfdf2
00802b88 g     F .text	00000074 __adddf3
0080a050 g     F .text	00000120 __b2d
0080c31c g     F .text	00000660 __umoddi3
0080d7bc g     F .text	000000f4 lseek
0081210c g     O .rwdata	00000004 _global_impure_ptr
0080aea0 g     F .text	000005f4 _realloc_r
00801ad4 g     F .text	000001bc __kernel_sinf
00813e90 g       *ABS*	00000000 __bss_end
0080f0f0 g     F .text	000000f8 alt_iic_isr_register
0080f6b4 g     F .text	0000010c alt_tick
0080bcb0 g     F .text	0000066c __udivdi3
00810664 g     O .rodata	00000028 __mprec_bigtens
0080ad80 g     F .text	00000120 __s2b
0080306c g     F .text	00000194 __floatunsidf
00809f70 g     F .text	00000060 __mcmp
00808564 g     F .text	00000018 __fp_lock_all
0080f0a8 g     F .text	00000048 alt_ic_irq_enabled
0080f61c g     F .text	00000098 alt_alarm_stop
0080066c g     F .text	000000c0 cosf
00813bcc g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000c8 alt_irq_handler
00810f00 g     O .rwdata	00000028 alt_dev_null
0080353c g     F .text	000000c8 __unpack_f
0080ecf4 g     F .text	0000001c alt_dcache_flush_all
00809e3c g     F .text	00000070 __hi0bits
0080cffc g     F .text	000000d8 __fixdfsi
00800d7c g     F .text	000002bc __kernel_cosf
00812148 g       *ABS*	00000000 __ram_rwdata_end
00812128 g     O .rwdata	00000008 alt_dev_list
0080dda8 g     F .text	00000124 write
00802488 g     F .text	00000078 __gtsf2
008106ec g       *ABS*	00000000 __ram_rodata_end
0080d474 g     F .text	000000d8 fstat
0080ce7c g     F .text	00000088 __ledf2
0080ac60 g     F .text	00000120 __pow5mult
00813ba4 g     O .bss	00000004 __nlocale_changed
0080d218 g     F .text	00000008 __umodsi3
00813e90 g       *ABS*	00000000 end
008033dc g     F .text	00000160 __pack_f
0080e13c g     F .text	000000c0 altera_avalon_jtag_uart_init
0080ff8c g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00807c18 g     F .text	000002f8 _dcvt
0080eb10 g     F .text	00000090 alt_avalon_timer_sc_init
0080335c g     F .text	00000080 __clzsi2
0080e860 g     F .text	00000240 altera_avalon_jtag_uart_write
00808488 g     F .text	00000004 __sfp_lock_acquire
00809b18 g     F .text	000000e4 memchr
00803f18 g     F .text	00001ec4 ___vfprintf_internal_r
00808850 g     F .text	00000314 _free_r
0080fd7c g     F .text	000001b0 __call_exitprocs
00813ba8 g     O .bss	00000004 __mlocale_changed
0081211c g     O .rwdata	00000004 __malloc_sbrk_base
008001b4 g     F .text	0000003c _start
00813bd0 g     O .bss	00000004 _alt_tick_rate
00807938 g     F .text	000002e0 _gcvt
0080a758 g     F .text	0000014c __lshift
00813bd4 g     O .bss	00000004 _alt_nticks
0080d9fc g     F .text	00000124 read
0080df60 g     F .text	0000005c alt_sys_init
00802578 g     F .text	00000098 __floatsisf
0080fc44 g     F .text	00000134 __register_exitproc
0080a8a4 g     F .text	00000254 __multiply
0080e4d4 g     F .text	00000074 altera_avalon_jtag_uart_close
00803200 g     F .text	00000038 __mulsi3
008106ec g       *ABS*	00000000 __ram_rwdata_start
0080ff90 g       *ABS*	00000000 __ram_rodata_start
00813bd8 g     O .bss	00000028 __malloc_current_mallinfo
00802410 g     F .text	00000078 __eqsf2
0080a450 g     F .text	0000017c __d2b
0080dff4 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0080f994 g     F .text	000000d0 alt_get_fd
0080d220 g     F .text	000000c8 __fpcmp_parts_d
0080b948 g     F .text	00000070 _close_r
008001f0 g     F .text	000000e4 generateVector
0080fbd0 g     F .text	00000074 memcmp
0080e0a4 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00813e90 g       *ABS*	00000000 __alt_stack_base
0080e0ec g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00805e00 g     F .text	0000013c __swsetup_r
0080c97c g     F .text	00000258 __divdf3
00808634 g     F .text	000000f0 __sfp
0080a2b4 g     F .text	00000058 __copybits
00810af8 g     O .rwdata	00000408 __malloc_av_
00808494 g     F .text	00000004 __sinit_lock_release
00802bfc g     F .text	000003c4 __muldf3
0080b660 g     F .text	00000060 __sread
008103a0 g     O .rodata	00000010 __thenan_sf
0080f874 g     F .text	00000120 alt_find_file
0080ed10 g     F .text	000000b4 alt_dev_llist_insert
0080d97c g     F .text	00000020 __malloc_lock
0080dbf8 g     F .text	000000bc sbrk
00801ca0 g     F .text	0000014c scalbnf
00808200 g     F .text	000001fc _fflush_r
0080b880 g     F .text	000000c8 _calloc_r
00813ba4 g       *ABS*	00000000 __bss_start
00809d7c g     F .text	00000098 memset
008004ac g     F .text	000001c0 main
00803ca8 g     F .text	00000024 fcvt
00813bc8 g     O .bss	00000004 alt_envp
00813bb8 g     O .bss	00000004 __malloc_max_total_mem
0080e04c g     F .text	00000058 altera_avalon_jtag_uart_write_fd
00807f10 g     F .text	00000148 ecvtbuf
0080b574 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080bac8 g     F .text	00000014 fclose
00802ff8 g     F .text	00000074 __truncdfsf2
00813d00 g     O .bss	00000190 _atexit0
00806180 g     F .text	000015b4 _dtoa_r
008093d8 g     F .text	00000740 _malloc_r
00812134 g     O .rwdata	00000004 alt_errno
00803c54 g     F .text	00000054 ecvtf
008090c8 g     F .text	000000b8 _fwalk
0080d150 g     F .text	00000060 __divsi3
008103b0 g     O .rodata	00000014 __thenan_df
00808724 g     F .text	0000012c _malloc_trim_r
0080ff90 g       *ABS*	00000000 __CTOR_END__
008020bc g     F .text	000001e0 __mulsf3
0080b6c0 g     F .text	000000bc strcmp
0080ff90 g       *ABS*	00000000 __flash_rodata_start
0080ff90 g       *ABS*	00000000 __DTOR_LIST__
0080cc5c g     F .text	00000088 __nedf2
0080df2c g     F .text	00000034 alt_irq_init
0080db80 g     F .text	00000078 alt_release_fd
00801dec g     F .text	00000018 copysignf
008103c4 g     O .rodata	00000100 __clz_tab
00813bac g     O .bss	00000004 _PathLocale
0080faf4 g     F .text	00000014 atexit
00802500 g     F .text	00000078 __gesf2
008002d4 g     F .text	000001d8 sumVector
0080b808 g     F .text	00000078 _write_r
00809228 g     F .text	0000001c setlocale
00812108 g     O .rwdata	00000004 _impure_ptr
00813bc0 g     O .bss	00000004 alt_argc
0080ee88 g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
00809fd0 g     F .text	00000080 __ulp
0080b494 g     F .text	00000040 __isinfd
0080854c g     F .text	00000018 __fp_unlock_all
00803c30 g     F .text	00000024 ecvt
00812120 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00809194 g     F .text	00000010 localeconv
0080ef1c g     F .text	00000050 alt_ic_isr_register
00812148 g       *ABS*	00000000 _edata
00813e90 g       *ABS*	00000000 _end
008001b4 g       *ABS*	00000000 __ram_exceptions_end
0080e548 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0080fb40 g     F .text	00000074 _fputs_r
0080f008 g     F .text	000000a0 alt_ic_irq_disable
0080b5e4 g     F .text	0000007c __swrite
00812118 g     O .rwdata	00000004 __malloc_trim_threshold
00803ccc g     F .text	00000054 fcvtf
0080f7c0 g     F .text	00000020 altera_nios2_qsys_irq_init
0080fb08 g     F .text	00000038 exit
00809000 g     F .text	000000c8 _fwalk_reent
0080a5cc g     F .text	0000018c __mdiff
0080d1b0 g     F .text	00000060 __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
0080848c g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00803b24 g     F .text	000000cc gcvt
00803604 g     F .text	000000a8 __fpcmp_parts_f
0080ff6c g     F .text	00000020 _exit
0080b4d4 g     F .text	00000030 __isnand
00801038 g     F .text	00000a9c __kernel_rem_pio2f
0080eba0 g     F .text	00000154 alt_alarm_start
00803238 g     F .text	00000124 __muldi3
00809244 g     F .text	00000194 __smakebuf_r
00803e4c g     F .text	00000074 strlen
0080f430 g     F .text	0000018c open
0080cd6c g     F .text	00000088 __gedf2
0080eeec g     F .text	00000030 alt_icache_flush_all
0080072c g     F .text	00000114 floorf
0080fbb4 g     F .text	0000001c fputs
0081213c g     O .rwdata	00000004 alt_priority_mask
0080ef6c g     F .text	0000009c alt_ic_irq_enable
00805ddc g     F .text	00000024 __vfprintf_internal
00802b08 g     F .text	00000080 __subdf3
00809eac g     F .text	000000c4 __lo0bits
00812140 g     O .rwdata	00000008 alt_alarm_list
0080ee24 g     F .text	00000064 _do_ctors
0080d2e8 g     F .text	00000100 close
00802058 g     F .text	00000064 __addsf3
0080d6d0 g     F .text	00000080 alt_load
008036d8 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00808490 g     F .text	00000004 __sinit_lock_acquire
0080ab34 g     F .text	0000012c __multadd
00809e14 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00880014 	movui	r2,8192
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08406d14 	ori	at,at,436
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  800044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  8000fc:	0005313a 	rdctl	r2,ipending
  800100:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  800108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  80010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800110:	00800044 	movi	r2,1
  800114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  800118:	e0ffff17 	ldw	r3,-4(fp)
  80011c:	e0bffe17 	ldw	r2,-8(fp)
  800120:	1884703a 	and	r2,r3,r2
  800124:	1005003a 	cmpeq	r2,r2,zero
  800128:	1000161e 	bne	r2,zero,800184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	e0bffd17 	ldw	r2,-12(fp)
  800130:	00c02074 	movhi	r3,129
  800134:	18cf0004 	addi	r3,r3,15360
  800138:	100490fa 	slli	r2,r2,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	11400017 	ldw	r5,0(r2)
  800144:	e0bffd17 	ldw	r2,-12(fp)
  800148:	00c02074 	movhi	r3,129
  80014c:	18cf0004 	addi	r3,r3,15360
  800150:	100490fa 	slli	r2,r2,3
  800154:	10c5883a 	add	r2,r2,r3
  800158:	10800104 	addi	r2,r2,4
  80015c:	11000017 	ldw	r4,0(r2)
  800160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800164:	0005313a 	rdctl	r2,ipending
  800168:	e0bffb15 	stw	r2,-20(fp)

  return active;
  80016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
  800170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	1004c03a 	cmpne	r2,r2,zero
  80017c:	103fe31e 	bne	r2,zero,80010c <alt_irq_handler+0x20>
  800180:	00000706 	br	8001a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
  800184:	e0bffe17 	ldw	r2,-8(fp)
  800188:	1085883a 	add	r2,r2,r2
  80018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
  800190:	e0bffd17 	ldw	r2,-12(fp)
  800194:	10800044 	addi	r2,r2,1
  800198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  80019c:	003fde06 	br	800118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
  8001a0:	e037883a 	mov	sp,fp
  8001a4:	dfc00117 	ldw	ra,4(sp)
  8001a8:	df000017 	ldw	fp,0(sp)
  8001ac:	dec00204 	addi	sp,sp,8
  8001b0:	f800283a 	ret

Disassembly of section .text:

008001b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001b4:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
  8001bc:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001c0:	d6a84214 	ori	gp,gp,41224
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001c4:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001c8:	108ee914 	ori	r2,r2,15268

    movhi r3, %hi(__bss_end)
  8001cc:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001d0:	18cfa414 	ori	r3,r3,16016

    beq r2, r3, 1f
  8001d4:	10c00326 	beq	r2,r3,8001e4 <_start+0x30>

0:
    stw zero, (r2)
  8001d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001e0:	10fffd36 	bltu	r2,r3,8001d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  8001e4:	080d6d00 	call	80d6d0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  8001e8:	080d9100 	call	80d910 <alt_main>

008001ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  8001ec:	003fff06 	br	8001ec <alt_after_alt_main>

008001f0 <generateVector>:
//Test case 3
#define step 0.001
#define N 255001
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  8001f0:	defffb04 	addi	sp,sp,-20
  8001f4:	dfc00415 	stw	ra,16(sp)
  8001f8:	df000315 	stw	fp,12(sp)
  8001fc:	dc000215 	stw	r16,8(sp)
  800200:	df000204 	addi	fp,sp,8
  800204:	e13fff15 	stw	r4,-4(fp)
	int i;
	x[0] = 0;
  800208:	e0bfff17 	ldw	r2,-4(fp)
  80020c:	10000015 	stw	zero,0(r2)
	for (i=1; i<N; i++){
  800210:	00800044 	movi	r2,1
  800214:	e0bffe15 	stw	r2,-8(fp)
  800218:	00002406 	br	8002ac <generateVector+0xbc>
		x[i] = x[i-1] + step;
  80021c:	e0bffe17 	ldw	r2,-8(fp)
  800220:	1085883a 	add	r2,r2,r2
  800224:	1085883a 	add	r2,r2,r2
  800228:	1007883a 	mov	r3,r2
  80022c:	e0bfff17 	ldw	r2,-4(fp)
  800230:	18a1883a 	add	r16,r3,r2
  800234:	e0bffe17 	ldw	r2,-8(fp)
  800238:	1085883a 	add	r2,r2,r2
  80023c:	1085883a 	add	r2,r2,r2
  800240:	1007883a 	mov	r3,r2
  800244:	e0bfff17 	ldw	r2,-4(fp)
  800248:	1885883a 	add	r2,r3,r2
  80024c:	10bfff04 	addi	r2,r2,-4
  800250:	10800017 	ldw	r2,0(r2)
  800254:	1009883a 	mov	r4,r2
  800258:	08026a40 	call	8026a4 <__extendsfdf2>
  80025c:	100b883a 	mov	r5,r2
  800260:	180d883a 	mov	r6,r3
  800264:	2809883a 	mov	r4,r5
  800268:	300b883a 	mov	r5,r6
  80026c:	01b4bcb4 	movhi	r6,54002
  800270:	31aa7f04 	addi	r6,r6,-22020
  800274:	01cfd434 	movhi	r7,16208
  800278:	39d89344 	addi	r7,r7,25165
  80027c:	0802b880 	call	802b88 <__adddf3>
  800280:	1009883a 	mov	r4,r2
  800284:	180b883a 	mov	r5,r3
  800288:	2005883a 	mov	r2,r4
  80028c:	2807883a 	mov	r3,r5
  800290:	1009883a 	mov	r4,r2
  800294:	180b883a 	mov	r5,r3
  800298:	0802ff80 	call	802ff8 <__truncdfsf2>
  80029c:	80800015 	stw	r2,0(r16)
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++){
  8002a0:	e0bffe17 	ldw	r2,-8(fp)
  8002a4:	10800044 	addi	r2,r2,1
  8002a8:	e0bffe15 	stw	r2,-8(fp)
  8002ac:	e0fffe17 	ldw	r3,-8(fp)
  8002b0:	00800134 	movhi	r2,4
  8002b4:	10b90604 	addi	r2,r2,-7144
  8002b8:	10ffd80e 	bge	r2,r3,80021c <generateVector+0x2c>
		x[i] = x[i-1] + step;
	}
}
  8002bc:	e037883a 	mov	sp,fp
  8002c0:	dfc00217 	ldw	ra,8(sp)
  8002c4:	df000117 	ldw	fp,4(sp)
  8002c8:	dc000017 	ldw	r16,0(sp)
  8002cc:	dec00304 	addi	sp,sp,12
  8002d0:	f800283a 	ret

008002d4 <sumVector>:

float sumVector(float x[], int M)
{
  8002d4:	defff504 	addi	sp,sp,-44
  8002d8:	dfc00a15 	stw	ra,40(sp)
  8002dc:	df000915 	stw	fp,36(sp)
  8002e0:	dd000815 	stw	r20,32(sp)
  8002e4:	dcc00715 	stw	r19,28(sp)
  8002e8:	dc800615 	stw	r18,24(sp)
  8002ec:	dc400515 	stw	r17,20(sp)
  8002f0:	dc000415 	stw	r16,16(sp)
  8002f4:	df000404 	addi	fp,sp,16
  8002f8:	e13ffe15 	stw	r4,-8(fp)
  8002fc:	e17fff15 	stw	r5,-4(fp)
	float sum = 0.00;
  800300:	e03ffd15 	stw	zero,-12(fp)
	int i;
	for(i = 0; i<M; i++){
  800304:	e03ffc15 	stw	zero,-16(fp)
  800308:	00005a06 	br	800474 <sumVector+0x1a0>
		sum = sum + ((0.5*x[i]) +(x[i]*x[i]*cosf(floorf(x[i]/4)-32)));
  80030c:	e13ffd17 	ldw	r4,-12(fp)
  800310:	08026a40 	call	8026a4 <__extendsfdf2>
  800314:	1025883a 	mov	r18,r2
  800318:	1827883a 	mov	r19,r3
  80031c:	e0bffc17 	ldw	r2,-16(fp)
  800320:	1085883a 	add	r2,r2,r2
  800324:	1085883a 	add	r2,r2,r2
  800328:	1007883a 	mov	r3,r2
  80032c:	e0bffe17 	ldw	r2,-8(fp)
  800330:	1885883a 	add	r2,r3,r2
  800334:	10800017 	ldw	r2,0(r2)
  800338:	1009883a 	mov	r4,r2
  80033c:	08026a40 	call	8026a4 <__extendsfdf2>
  800340:	100b883a 	mov	r5,r2
  800344:	180d883a 	mov	r6,r3
  800348:	2809883a 	mov	r4,r5
  80034c:	300b883a 	mov	r5,r6
  800350:	000d883a 	mov	r6,zero
  800354:	01cff834 	movhi	r7,16352
  800358:	0802bfc0 	call	802bfc <__muldf3>
  80035c:	1009883a 	mov	r4,r2
  800360:	180b883a 	mov	r5,r3
  800364:	2021883a 	mov	r16,r4
  800368:	2823883a 	mov	r17,r5
  80036c:	e0bffc17 	ldw	r2,-16(fp)
  800370:	1085883a 	add	r2,r2,r2
  800374:	1085883a 	add	r2,r2,r2
  800378:	1007883a 	mov	r3,r2
  80037c:	e0bffe17 	ldw	r2,-8(fp)
  800380:	1885883a 	add	r2,r3,r2
  800384:	11000017 	ldw	r4,0(r2)
  800388:	e0bffc17 	ldw	r2,-16(fp)
  80038c:	1085883a 	add	r2,r2,r2
  800390:	1085883a 	add	r2,r2,r2
  800394:	1007883a 	mov	r3,r2
  800398:	e0bffe17 	ldw	r2,-8(fp)
  80039c:	1885883a 	add	r2,r3,r2
  8003a0:	10800017 	ldw	r2,0(r2)
  8003a4:	100b883a 	mov	r5,r2
  8003a8:	08020bc0 	call	8020bc <__mulsf3>
  8003ac:	1029883a 	mov	r20,r2
  8003b0:	e0bffc17 	ldw	r2,-16(fp)
  8003b4:	1085883a 	add	r2,r2,r2
  8003b8:	1085883a 	add	r2,r2,r2
  8003bc:	1007883a 	mov	r3,r2
  8003c0:	e0bffe17 	ldw	r2,-8(fp)
  8003c4:	1885883a 	add	r2,r3,r2
  8003c8:	10800017 	ldw	r2,0(r2)
  8003cc:	1009883a 	mov	r4,r2
  8003d0:	01502034 	movhi	r5,16512
  8003d4:	080229c0 	call	80229c <__divsf3>
  8003d8:	1009883a 	mov	r4,r2
  8003dc:	080072c0 	call	80072c <floorf>
  8003e0:	1009883a 	mov	r4,r2
  8003e4:	01508034 	movhi	r5,16896
  8003e8:	0801fe80 	call	801fe8 <__subsf3>
  8003ec:	1009883a 	mov	r4,r2
  8003f0:	080066c0 	call	80066c <cosf>
  8003f4:	a009883a 	mov	r4,r20
  8003f8:	100b883a 	mov	r5,r2
  8003fc:	08020bc0 	call	8020bc <__mulsf3>
  800400:	1009883a 	mov	r4,r2
  800404:	08026a40 	call	8026a4 <__extendsfdf2>
  800408:	100f883a 	mov	r7,r2
  80040c:	1811883a 	mov	r8,r3
  800410:	8009883a 	mov	r4,r16
  800414:	880b883a 	mov	r5,r17
  800418:	380d883a 	mov	r6,r7
  80041c:	400f883a 	mov	r7,r8
  800420:	0802b880 	call	802b88 <__adddf3>
  800424:	1009883a 	mov	r4,r2
  800428:	180b883a 	mov	r5,r3
  80042c:	2005883a 	mov	r2,r4
  800430:	2807883a 	mov	r3,r5
  800434:	9009883a 	mov	r4,r18
  800438:	980b883a 	mov	r5,r19
  80043c:	100d883a 	mov	r6,r2
  800440:	180f883a 	mov	r7,r3
  800444:	0802b880 	call	802b88 <__adddf3>
  800448:	1009883a 	mov	r4,r2
  80044c:	180b883a 	mov	r5,r3
  800450:	2005883a 	mov	r2,r4
  800454:	2807883a 	mov	r3,r5
  800458:	1009883a 	mov	r4,r2
  80045c:	180b883a 	mov	r5,r3
  800460:	0802ff80 	call	802ff8 <__truncdfsf2>
  800464:	e0bffd15 	stw	r2,-12(fp)

float sumVector(float x[], int M)
{
	float sum = 0.00;
	int i;
	for(i = 0; i<M; i++){
  800468:	e0bffc17 	ldw	r2,-16(fp)
  80046c:	10800044 	addi	r2,r2,1
  800470:	e0bffc15 	stw	r2,-16(fp)
  800474:	e0fffc17 	ldw	r3,-16(fp)
  800478:	e0bfff17 	ldw	r2,-4(fp)
  80047c:	18bfa316 	blt	r3,r2,80030c <sumVector+0x38>
		sum = sum + ((0.5*x[i]) +(x[i]*x[i]*cosf(floorf(x[i]/4)-32)));
	}

	return sum;
  800480:	e0bffd17 	ldw	r2,-12(fp)
}
  800484:	e037883a 	mov	sp,fp
  800488:	dfc00617 	ldw	ra,24(sp)
  80048c:	df000517 	ldw	fp,20(sp)
  800490:	dd000417 	ldw	r20,16(sp)
  800494:	dcc00317 	ldw	r19,12(sp)
  800498:	dc800217 	ldw	r18,8(sp)
  80049c:	dc400117 	ldw	r17,4(sp)
  8004a0:	dc000017 	ldw	r16,0(sp)
  8004a4:	dec00704 	addi	sp,sp,28
  8004a8:	f800283a 	ret

008004ac <main>:


int main()
{
  8004ac:	defffe04 	addi	sp,sp,-8
  8004b0:	dfc00115 	stw	ra,4(sp)
  8004b4:	df000015 	stw	fp,0(sp)
  8004b8:	d839883a 	mov	fp,sp
  8004bc:	023ffc34 	movhi	r8,65520
  8004c0:	421bd604 	addi	r8,r8,28504
  8004c4:	da37883a 	add	sp,sp,r8
	printf("Task 4!\n");
  8004c8:	01002074 	movhi	r4,129
  8004cc:	213fe404 	addi	r4,r4,-112
  8004d0:	0803e380 	call	803e38 <puts>

	float x[N];

	// Returned result
	float y;
	generateVector(x);
  8004d4:	00bffc34 	movhi	r2,65520
  8004d8:	109bda04 	addi	r2,r2,28520
  8004dc:	e089883a 	add	r4,fp,r2
  8004e0:	08001f00 	call	8001f0 <generateVector>
	// The following is used for timing
	char buf[50];
	clock_t exec_t1, exec_t2;

	exec_t1 = times(NULL); // get system time before starting the process
  8004e4:	0009883a 	mov	r4,zero
  8004e8:	080dcb40 	call	80dcb4 <times>
  8004ec:	00fffc34 	movhi	r3,65520
  8004f0:	18dbd804 	addi	r3,r3,28512
  8004f4:	1f07883a 	add	r3,r3,fp
  8004f8:	18800015 	stw	r2,0(r3)
	// The code that you want to time goes here
	int i;
	for (i=0; i<1;i++){
  8004fc:	013ffc34 	movhi	r4,65520
  800500:	211bd604 	addi	r4,r4,28504
  800504:	2709883a 	add	r4,r4,fp
  800508:	20000015 	stw	zero,0(r4)
  80050c:	00001306 	br	80055c <main+0xb0>
		y = sumVector(x, N);
  800510:	00bffc34 	movhi	r2,65520
  800514:	109bda04 	addi	r2,r2,28520
  800518:	e089883a 	add	r4,fp,r2
  80051c:	01400134 	movhi	r5,4
  800520:	29790644 	addi	r5,r5,-7143
  800524:	08002d40 	call	8002d4 <sumVector>
  800528:	00fffc34 	movhi	r3,65520
  80052c:	18dbd904 	addi	r3,r3,28516
  800530:	1f07883a 	add	r3,r3,fp
  800534:	18800015 	stw	r2,0(r3)
	clock_t exec_t1, exec_t2;

	exec_t1 = times(NULL); // get system time before starting the process
	// The code that you want to time goes here
	int i;
	for (i=0; i<1;i++){
  800538:	013ffc34 	movhi	r4,65520
  80053c:	211bd604 	addi	r4,r4,28504
  800540:	2709883a 	add	r4,r4,fp
  800544:	20800017 	ldw	r2,0(r4)
  800548:	10800044 	addi	r2,r2,1
  80054c:	00fffc34 	movhi	r3,65520
  800550:	18dbd604 	addi	r3,r3,28504
  800554:	1f07883a 	add	r3,r3,fp
  800558:	18800015 	stw	r2,0(r3)
  80055c:	013ffc34 	movhi	r4,65520
  800560:	211bd604 	addi	r4,r4,28504
  800564:	2709883a 	add	r4,r4,fp
  800568:	20800017 	ldw	r2,0(r4)
  80056c:	10800050 	cmplti	r2,r2,1
  800570:	103fe71e 	bne	r2,zero,800510 <main+0x64>
		y = sumVector(x, N);
	}
	// till here
	exec_t2 = times(NULL); // get system time after finishing the process
  800574:	0009883a 	mov	r4,zero
  800578:	080dcb40 	call	80dcb4 <times>
  80057c:	00fffc34 	movhi	r3,65520
  800580:	18dbd704 	addi	r3,r3,28508
  800584:	1f07883a 	add	r3,r3,fp
  800588:	18800015 	stw	r2,0(r3)
	gcvt((exec_t2 - exec_t1), 10, buf);
  80058c:	013ffc34 	movhi	r4,65520
  800590:	211bd704 	addi	r4,r4,28508
  800594:	2709883a 	add	r4,r4,fp
  800598:	20c00017 	ldw	r3,0(r4)
  80059c:	013ffc34 	movhi	r4,65520
  8005a0:	211bd804 	addi	r4,r4,28512
  8005a4:	2709883a 	add	r4,r4,fp
  8005a8:	20800017 	ldw	r2,0(r4)
  8005ac:	1889c83a 	sub	r4,r3,r2
  8005b0:	080306c0 	call	80306c <__floatunsidf>
  8005b4:	100b883a 	mov	r5,r2
  8005b8:	180d883a 	mov	r6,r3
  8005bc:	00800434 	movhi	r2,16
  8005c0:	10a41d04 	addi	r2,r2,-28556
  8005c4:	00fffc34 	movhi	r3,65520
  8005c8:	18dbd604 	addi	r3,r3,28504
  8005cc:	1f07883a 	add	r3,r3,fp
  8005d0:	188f883a 	add	r7,r3,r2
  8005d4:	2809883a 	mov	r4,r5
  8005d8:	300b883a 	mov	r5,r6
  8005dc:	01800284 	movi	r6,10
  8005e0:	0803b240 	call	803b24 <gcvt>
	alt_putstr(" proc time = ");
  8005e4:	01002074 	movhi	r4,129
  8005e8:	213fe604 	addi	r4,r4,-104
  8005ec:	080d9bc0 	call	80d9bc <alt_putstr>
	alt_putstr(buf);
  8005f0:	00800434 	movhi	r2,16
  8005f4:	10a41d04 	addi	r2,r2,-28556
  8005f8:	00fffc34 	movhi	r3,65520
  8005fc:	18dbd604 	addi	r3,r3,28504
  800600:	1f07883a 	add	r3,r3,fp
  800604:	1889883a 	add	r4,r3,r2
  800608:	080d9bc0 	call	80d9bc <alt_putstr>
	alt_putstr(" ticks \n" );
  80060c:	01002074 	movhi	r4,129
  800610:	213fea04 	addi	r4,r4,-88
  800614:	080d9bc0 	call	80d9bc <alt_putstr>
	// printf could be used if there was enough memory

	alt_putstr(" Result = ");
  800618:	01002074 	movhi	r4,129
  80061c:	213fed04 	addi	r4,r4,-76
  800620:	080d9bc0 	call	80d9bc <alt_putstr>
	printf("result: %f \n",y);
  800624:	00bffc34 	movhi	r2,65520
  800628:	109bd904 	addi	r2,r2,28516
  80062c:	1705883a 	add	r2,r2,fp
  800630:	11000017 	ldw	r4,0(r2)
  800634:	08026a40 	call	8026a4 <__extendsfdf2>
  800638:	100d883a 	mov	r6,r2
  80063c:	180f883a 	mov	r7,r3
  800640:	01002074 	movhi	r4,129
  800644:	213ff004 	addi	r4,r4,-64
  800648:	300b883a 	mov	r5,r6
  80064c:	380d883a 	mov	r6,r7
  800650:	0803d200 	call	803d20 <printf>
	// printf could be used if there was enough memory
	return 0;
  800654:	0005883a 	mov	r2,zero
}
  800658:	e037883a 	mov	sp,fp
  80065c:	dfc00117 	ldw	ra,4(sp)
  800660:	df000017 	ldw	fp,0(sp)
  800664:	dec00204 	addi	sp,sp,8
  800668:	f800283a 	ret

0080066c <cosf>:
  80066c:	00a00034 	movhi	r2,32768
  800670:	10bfffc4 	addi	r2,r2,-1
  800674:	defffd04 	addi	sp,sp,-12
  800678:	110c703a 	and	r6,r2,r4
  80067c:	00cfd274 	movhi	r3,16201
  800680:	18c3f604 	addi	r3,r3,4056
  800684:	dfc00215 	stw	ra,8(sp)
  800688:	200b883a 	mov	r5,r4
  80068c:	1980130e 	bge	r3,r6,8006dc <cosf+0x70>
  800690:	009fe034 	movhi	r2,32640
  800694:	10bfffc4 	addi	r2,r2,-1
  800698:	1180040e 	bge	r2,r6,8006ac <cosf+0x40>
  80069c:	0801fe80 	call	801fe8 <__subsf3>
  8006a0:	dfc00217 	ldw	ra,8(sp)
  8006a4:	dec00304 	addi	sp,sp,12
  8006a8:	f800283a 	ret
  8006ac:	d80b883a 	mov	r5,sp
  8006b0:	08008400 	call	800840 <__ieee754_rem_pio2f>
  8006b4:	118000cc 	andi	r6,r2,3
  8006b8:	00c00044 	movi	r3,1
  8006bc:	30c00c26 	beq	r6,r3,8006f0 <cosf+0x84>
  8006c0:	00800084 	movi	r2,2
  8006c4:	30801426 	beq	r6,r2,800718 <cosf+0xac>
  8006c8:	30000e1e 	bne	r6,zero,800704 <cosf+0x98>
  8006cc:	d9000017 	ldw	r4,0(sp)
  8006d0:	d9400117 	ldw	r5,4(sp)
  8006d4:	0800d7c0 	call	800d7c <__kernel_cosf>
  8006d8:	003ff106 	br	8006a0 <cosf+0x34>
  8006dc:	000b883a 	mov	r5,zero
  8006e0:	0800d7c0 	call	800d7c <__kernel_cosf>
  8006e4:	dfc00217 	ldw	ra,8(sp)
  8006e8:	dec00304 	addi	sp,sp,12
  8006ec:	f800283a 	ret
  8006f0:	d9000017 	ldw	r4,0(sp)
  8006f4:	d9400117 	ldw	r5,4(sp)
  8006f8:	0801ad40 	call	801ad4 <__kernel_sinf>
  8006fc:	10a0003c 	xorhi	r2,r2,32768
  800700:	003fe706 	br	8006a0 <cosf+0x34>
  800704:	d9000017 	ldw	r4,0(sp)
  800708:	d9400117 	ldw	r5,4(sp)
  80070c:	180d883a 	mov	r6,r3
  800710:	0801ad40 	call	801ad4 <__kernel_sinf>
  800714:	003fe206 	br	8006a0 <cosf+0x34>
  800718:	d9000017 	ldw	r4,0(sp)
  80071c:	d9400117 	ldw	r5,4(sp)
  800720:	0800d7c0 	call	800d7c <__kernel_cosf>
  800724:	10a0003c 	xorhi	r2,r2,32768
  800728:	003fdd06 	br	8006a0 <cosf+0x34>

0080072c <floorf>:
  80072c:	defffc04 	addi	sp,sp,-16
  800730:	00a00034 	movhi	r2,32768
  800734:	10bfffc4 	addi	r2,r2,-1
  800738:	dc400115 	stw	r17,4(sp)
  80073c:	20a2703a 	and	r17,r4,r2
  800740:	8806d5fa 	srli	r3,r17,23
  800744:	dc000015 	stw	r16,0(sp)
  800748:	00800584 	movi	r2,22
  80074c:	1c3fe044 	addi	r16,r3,-127
  800750:	dc800215 	stw	r18,8(sp)
  800754:	dfc00315 	stw	ra,12(sp)
  800758:	200b883a 	mov	r5,r4
  80075c:	2025883a 	mov	r18,r4
  800760:	14001816 	blt	r2,r16,8007c4 <floorf+0x98>
  800764:	80002316 	blt	r16,zero,8007f4 <floorf+0xc8>
  800768:	00802034 	movhi	r2,128
  80076c:	10bfffc4 	addi	r2,r2,-1
  800770:	1423d83a 	sra	r17,r2,r16
  800774:	2446703a 	and	r3,r4,r17
  800778:	18000b26 	beq	r3,zero,8007a8 <floorf+0x7c>
  80077c:	015c52b4 	movhi	r5,29002
  800780:	297cb284 	addi	r5,r5,-3382
  800784:	08020580 	call	802058 <__addsf3>
  800788:	1009883a 	mov	r4,r2
  80078c:	000b883a 	mov	r5,zero
  800790:	08024880 	call	802488 <__gtsf2>
  800794:	0080030e 	bge	zero,r2,8007a4 <floorf+0x78>
  800798:	90002116 	blt	r18,zero,800820 <floorf+0xf4>
  80079c:	0444303a 	nor	r2,zero,r17
  8007a0:	90a4703a 	and	r18,r18,r2
  8007a4:	900b883a 	mov	r5,r18
  8007a8:	2805883a 	mov	r2,r5
  8007ac:	dfc00317 	ldw	ra,12(sp)
  8007b0:	dc800217 	ldw	r18,8(sp)
  8007b4:	dc400117 	ldw	r17,4(sp)
  8007b8:	dc000017 	ldw	r16,0(sp)
  8007bc:	dec00404 	addi	sp,sp,16
  8007c0:	f800283a 	ret
  8007c4:	009fe034 	movhi	r2,32640
  8007c8:	10bfffc4 	addi	r2,r2,-1
  8007cc:	147ff62e 	bgeu	r2,r17,8007a8 <floorf+0x7c>
  8007d0:	08020580 	call	802058 <__addsf3>
  8007d4:	100b883a 	mov	r5,r2
  8007d8:	2805883a 	mov	r2,r5
  8007dc:	dfc00317 	ldw	ra,12(sp)
  8007e0:	dc800217 	ldw	r18,8(sp)
  8007e4:	dc400117 	ldw	r17,4(sp)
  8007e8:	dc000017 	ldw	r16,0(sp)
  8007ec:	dec00404 	addi	sp,sp,16
  8007f0:	f800283a 	ret
  8007f4:	015c52b4 	movhi	r5,29002
  8007f8:	297cb284 	addi	r5,r5,-3382
  8007fc:	08020580 	call	802058 <__addsf3>
  800800:	1009883a 	mov	r4,r2
  800804:	000b883a 	mov	r5,zero
  800808:	08024880 	call	802488 <__gtsf2>
  80080c:	00bfe50e 	bge	zero,r2,8007a4 <floorf+0x78>
  800810:	90000716 	blt	r18,zero,800830 <floorf+0x104>
  800814:	0025883a 	mov	r18,zero
  800818:	900b883a 	mov	r5,r18
  80081c:	003fe206 	br	8007a8 <floorf+0x7c>
  800820:	00802034 	movhi	r2,128
  800824:	1405d83a 	sra	r2,r2,r16
  800828:	90a5883a 	add	r18,r18,r2
  80082c:	003fdb06 	br	80079c <floorf+0x70>
  800830:	883fdc26 	beq	r17,zero,8007a4 <floorf+0x78>
  800834:	04afe034 	movhi	r18,49024
  800838:	900b883a 	mov	r5,r18
  80083c:	003fda06 	br	8007a8 <floorf+0x7c>

00800840 <__ieee754_rem_pio2f>:
  800840:	defff104 	addi	sp,sp,-60
  800844:	00a00034 	movhi	r2,32768
  800848:	10bfffc4 	addi	r2,r2,-1
  80084c:	dcc00815 	stw	r19,32(sp)
  800850:	20a6703a 	and	r19,r4,r2
  800854:	008fd274 	movhi	r2,16201
  800858:	1083f604 	addi	r2,r2,4056
  80085c:	dd800b15 	stw	r22,44(sp)
  800860:	dd000915 	stw	r20,36(sp)
  800864:	dfc00e15 	stw	ra,56(sp)
  800868:	df000d15 	stw	fp,52(sp)
  80086c:	ddc00c15 	stw	r23,48(sp)
  800870:	dd400a15 	stw	r21,40(sp)
  800874:	dc800715 	stw	r18,28(sp)
  800878:	dc400615 	stw	r17,24(sp)
  80087c:	dc000515 	stw	r16,20(sp)
  800880:	202d883a 	mov	r22,r4
  800884:	2829883a 	mov	r20,r5
  800888:	14c01016 	blt	r2,r19,8008cc <__ieee754_rem_pio2f+0x8c>
  80088c:	a1000015 	stw	r4,0(r20)
  800890:	002b883a 	mov	r21,zero
  800894:	28000115 	stw	zero,4(r5)
  800898:	a805883a 	mov	r2,r21
  80089c:	dfc00e17 	ldw	ra,56(sp)
  8008a0:	df000d17 	ldw	fp,52(sp)
  8008a4:	ddc00c17 	ldw	r23,48(sp)
  8008a8:	dd800b17 	ldw	r22,44(sp)
  8008ac:	dd400a17 	ldw	r21,40(sp)
  8008b0:	dd000917 	ldw	r20,36(sp)
  8008b4:	dcc00817 	ldw	r19,32(sp)
  8008b8:	dc800717 	ldw	r18,28(sp)
  8008bc:	dc400617 	ldw	r17,24(sp)
  8008c0:	dc000517 	ldw	r16,20(sp)
  8008c4:	dec00f04 	addi	sp,sp,60
  8008c8:	f800283a 	ret
  8008cc:	009005f4 	movhi	r2,16407
  8008d0:	10b2f8c4 	addi	r2,r2,-13341
  8008d4:	14c00c0e 	bge	r2,r19,800908 <__ieee754_rem_pio2f+0xc8>
  8008d8:	0090d274 	movhi	r2,17225
  8008dc:	1083e004 	addi	r2,r2,3968
  8008e0:	14c0220e 	bge	r2,r19,80096c <__ieee754_rem_pio2f+0x12c>
  8008e4:	009fe034 	movhi	r2,32640
  8008e8:	10bfffc4 	addi	r2,r2,-1
  8008ec:	14c0930e 	bge	r2,r19,800b3c <__ieee754_rem_pio2f+0x2fc>
  8008f0:	200b883a 	mov	r5,r4
  8008f4:	0801fe80 	call	801fe8 <__subsf3>
  8008f8:	002b883a 	mov	r21,zero
  8008fc:	a0800015 	stw	r2,0(r20)
  800900:	a0800115 	stw	r2,4(r20)
  800904:	003fe406 	br	800898 <__ieee754_rem_pio2f+0x58>
  800908:	0100740e 	bge	zero,r4,800adc <__ieee754_rem_pio2f+0x29c>
  80090c:	014ff274 	movhi	r5,16329
  800910:	2943e004 	addi	r5,r5,3968
  800914:	0801fe80 	call	801fe8 <__subsf3>
  800918:	1023883a 	mov	r17,r2
  80091c:	00bffc04 	movi	r2,-16
  800920:	9884703a 	and	r2,r19,r2
  800924:	00cff274 	movhi	r3,16329
  800928:	18c3f404 	addi	r3,r3,4048
  80092c:	10c0c026 	beq	r2,r3,800c30 <__ieee754_rem_pio2f+0x3f0>
  800930:	040dcd74 	movhi	r16,14133
  800934:	841110c4 	addi	r16,r16,17475
  800938:	8809883a 	mov	r4,r17
  80093c:	800b883a 	mov	r5,r16
  800940:	0801fe80 	call	801fe8 <__subsf3>
  800944:	100b883a 	mov	r5,r2
  800948:	8809883a 	mov	r4,r17
  80094c:	a0800015 	stw	r2,0(r20)
  800950:	0801fe80 	call	801fe8 <__subsf3>
  800954:	1009883a 	mov	r4,r2
  800958:	800b883a 	mov	r5,r16
  80095c:	0801fe80 	call	801fe8 <__subsf3>
  800960:	05400044 	movi	r21,1
  800964:	a0800115 	stw	r2,4(r20)
  800968:	003fcb06 	br	800898 <__ieee754_rem_pio2f+0x58>
  80096c:	0801c900 	call	801c90 <fabsf>
  800970:	1009883a 	mov	r4,r2
  800974:	014fc8f4 	movhi	r5,16163
  800978:	297e6104 	addi	r5,r5,-1660
  80097c:	1023883a 	mov	r17,r2
  800980:	08020bc0 	call	8020bc <__mulsf3>
  800984:	1009883a 	mov	r4,r2
  800988:	014fc034 	movhi	r5,16128
  80098c:	08020580 	call	802058 <__addsf3>
  800990:	1009883a 	mov	r4,r2
  800994:	08026100 	call	802610 <__fixsfsi>
  800998:	1009883a 	mov	r4,r2
  80099c:	102b883a 	mov	r21,r2
  8009a0:	08025780 	call	802578 <__floatsisf>
  8009a4:	1009883a 	mov	r4,r2
  8009a8:	016ff274 	movhi	r5,49097
  8009ac:	2943e004 	addi	r5,r5,3968
  8009b0:	1021883a 	mov	r16,r2
  8009b4:	08020bc0 	call	8020bc <__mulsf3>
  8009b8:	100b883a 	mov	r5,r2
  8009bc:	8809883a 	mov	r4,r17
  8009c0:	08020580 	call	802058 <__addsf3>
  8009c4:	014dcd74 	movhi	r5,14133
  8009c8:	295110c4 	addi	r5,r5,17475
  8009cc:	8009883a 	mov	r4,r16
  8009d0:	102f883a 	mov	r23,r2
  8009d4:	08020bc0 	call	8020bc <__mulsf3>
  8009d8:	100b883a 	mov	r5,r2
  8009dc:	1023883a 	mov	r17,r2
  8009e0:	008007c4 	movi	r2,31
  8009e4:	8039883a 	mov	fp,r16
  8009e8:	b825883a 	mov	r18,r23
  8009ec:	1540a40e 	bge	r2,r21,800c80 <__ieee754_rem_pio2f+0x440>
  8009f0:	9009883a 	mov	r4,r18
  8009f4:	880b883a 	mov	r5,r17
  8009f8:	0801fe80 	call	801fe8 <__subsf3>
  8009fc:	1006d5fa 	srli	r3,r2,23
  800a00:	982fd5fa 	srai	r23,r19,23
  800a04:	a0800015 	stw	r2,0(r20)
  800a08:	18c03fcc 	andi	r3,r3,255
  800a0c:	b8c7c83a 	sub	r3,r23,r3
  800a10:	00800204 	movi	r2,8
  800a14:	10c0220e 	bge	r2,r3,800aa0 <__ieee754_rem_pio2f+0x260>
  800a18:	e009883a 	mov	r4,fp
  800a1c:	014dcd74 	movhi	r5,14133
  800a20:	29510004 	addi	r5,r5,17408
  800a24:	08020bc0 	call	8020bc <__mulsf3>
  800a28:	100b883a 	mov	r5,r2
  800a2c:	9009883a 	mov	r4,r18
  800a30:	1023883a 	mov	r17,r2
  800a34:	0801fe80 	call	801fe8 <__subsf3>
  800a38:	1027883a 	mov	r19,r2
  800a3c:	e009883a 	mov	r4,fp
  800a40:	014ba1b4 	movhi	r5,11910
  800a44:	2968c204 	addi	r5,r5,-23800
  800a48:	08020bc0 	call	8020bc <__mulsf3>
  800a4c:	9009883a 	mov	r4,r18
  800a50:	980b883a 	mov	r5,r19
  800a54:	1021883a 	mov	r16,r2
  800a58:	0801fe80 	call	801fe8 <__subsf3>
  800a5c:	1009883a 	mov	r4,r2
  800a60:	880b883a 	mov	r5,r17
  800a64:	0801fe80 	call	801fe8 <__subsf3>
  800a68:	100b883a 	mov	r5,r2
  800a6c:	8009883a 	mov	r4,r16
  800a70:	0801fe80 	call	801fe8 <__subsf3>
  800a74:	100b883a 	mov	r5,r2
  800a78:	9809883a 	mov	r4,r19
  800a7c:	1023883a 	mov	r17,r2
  800a80:	0801fe80 	call	801fe8 <__subsf3>
  800a84:	1006d5fa 	srli	r3,r2,23
  800a88:	a0800015 	stw	r2,0(r20)
  800a8c:	00800644 	movi	r2,25
  800a90:	18c03fcc 	andi	r3,r3,255
  800a94:	b8c7c83a 	sub	r3,r23,r3
  800a98:	10c09a16 	blt	r2,r3,800d04 <__ieee754_rem_pio2f+0x4c4>
  800a9c:	9825883a 	mov	r18,r19
  800aa0:	a1400017 	ldw	r5,0(r20)
  800aa4:	9009883a 	mov	r4,r18
  800aa8:	0801fe80 	call	801fe8 <__subsf3>
  800aac:	1009883a 	mov	r4,r2
  800ab0:	880b883a 	mov	r5,r17
  800ab4:	0801fe80 	call	801fe8 <__subsf3>
  800ab8:	a0800115 	stw	r2,4(r20)
  800abc:	b03f760e 	bge	r22,zero,800898 <__ieee754_rem_pio2f+0x58>
  800ac0:	a0c00017 	ldw	r3,0(r20)
  800ac4:	10a0003c 	xorhi	r2,r2,32768
  800ac8:	056bc83a 	sub	r21,zero,r21
  800acc:	18e0003c 	xorhi	r3,r3,32768
  800ad0:	a0800115 	stw	r2,4(r20)
  800ad4:	a0c00015 	stw	r3,0(r20)
  800ad8:	003f6f06 	br	800898 <__ieee754_rem_pio2f+0x58>
  800adc:	014ff274 	movhi	r5,16329
  800ae0:	2943e004 	addi	r5,r5,3968
  800ae4:	08020580 	call	802058 <__addsf3>
  800ae8:	1023883a 	mov	r17,r2
  800aec:	00bffc04 	movi	r2,-16
  800af0:	9884703a 	and	r2,r19,r2
  800af4:	00cff274 	movhi	r3,16329
  800af8:	18c3f404 	addi	r3,r3,4048
  800afc:	10c06d26 	beq	r2,r3,800cb4 <__ieee754_rem_pio2f+0x474>
  800b00:	040dcd74 	movhi	r16,14133
  800b04:	841110c4 	addi	r16,r16,17475
  800b08:	8809883a 	mov	r4,r17
  800b0c:	800b883a 	mov	r5,r16
  800b10:	08020580 	call	802058 <__addsf3>
  800b14:	100b883a 	mov	r5,r2
  800b18:	8809883a 	mov	r4,r17
  800b1c:	a0800015 	stw	r2,0(r20)
  800b20:	0801fe80 	call	801fe8 <__subsf3>
  800b24:	1009883a 	mov	r4,r2
  800b28:	800b883a 	mov	r5,r16
  800b2c:	08020580 	call	802058 <__addsf3>
  800b30:	057fffc4 	movi	r21,-1
  800b34:	a0800115 	stw	r2,4(r20)
  800b38:	003f5706 	br	800898 <__ieee754_rem_pio2f+0x58>
  800b3c:	9805d5fa 	srai	r2,r19,23
  800b40:	0490e034 	movhi	r18,17280
  800b44:	054000c4 	movi	r21,3
  800b48:	15ffde84 	addi	r23,r2,-134
  800b4c:	b82295fa 	slli	r17,r23,23
  800b50:	9c63c83a 	sub	r17,r19,r17
  800b54:	8809883a 	mov	r4,r17
  800b58:	08026100 	call	802610 <__fixsfsi>
  800b5c:	1009883a 	mov	r4,r2
  800b60:	08025780 	call	802578 <__floatsisf>
  800b64:	100b883a 	mov	r5,r2
  800b68:	8809883a 	mov	r4,r17
  800b6c:	d8800215 	stw	r2,8(sp)
  800b70:	0801fe80 	call	801fe8 <__subsf3>
  800b74:	1009883a 	mov	r4,r2
  800b78:	900b883a 	mov	r5,r18
  800b7c:	08020bc0 	call	8020bc <__mulsf3>
  800b80:	1009883a 	mov	r4,r2
  800b84:	1021883a 	mov	r16,r2
  800b88:	08026100 	call	802610 <__fixsfsi>
  800b8c:	1009883a 	mov	r4,r2
  800b90:	08025780 	call	802578 <__floatsisf>
  800b94:	100b883a 	mov	r5,r2
  800b98:	8009883a 	mov	r4,r16
  800b9c:	d8800315 	stw	r2,12(sp)
  800ba0:	0801fe80 	call	801fe8 <__subsf3>
  800ba4:	1009883a 	mov	r4,r2
  800ba8:	900b883a 	mov	r5,r18
  800bac:	08020bc0 	call	8020bc <__mulsf3>
  800bb0:	d8800415 	stw	r2,16(sp)
  800bb4:	00000106 	br	800bbc <__ieee754_rem_pio2f+0x37c>
  800bb8:	802b883a 	mov	r21,r16
  800bbc:	ac3fffc4 	addi	r16,r21,-1
  800bc0:	8405883a 	add	r2,r16,r16
  800bc4:	1085883a 	add	r2,r2,r2
  800bc8:	d8c00204 	addi	r3,sp,8
  800bcc:	10c5883a 	add	r2,r2,r3
  800bd0:	11000017 	ldw	r4,0(r2)
  800bd4:	000b883a 	mov	r5,zero
  800bd8:	08024100 	call	802410 <__eqsf2>
  800bdc:	103ff626 	beq	r2,zero,800bb8 <__ieee754_rem_pio2f+0x378>
  800be0:	a80f883a 	mov	r7,r21
  800be4:	00800084 	movi	r2,2
  800be8:	00c02074 	movhi	r3,129
  800bec:	18c01404 	addi	r3,r3,80
  800bf0:	b80d883a 	mov	r6,r23
  800bf4:	d9000204 	addi	r4,sp,8
  800bf8:	a00b883a 	mov	r5,r20
  800bfc:	d8800015 	stw	r2,0(sp)
  800c00:	d8c00115 	stw	r3,4(sp)
  800c04:	08010380 	call	801038 <__kernel_rem_pio2f>
  800c08:	102b883a 	mov	r21,r2
  800c0c:	b03f220e 	bge	r22,zero,800898 <__ieee754_rem_pio2f+0x58>
  800c10:	a0c00017 	ldw	r3,0(r20)
  800c14:	a0800117 	ldw	r2,4(r20)
  800c18:	056bc83a 	sub	r21,zero,r21
  800c1c:	18e0003c 	xorhi	r3,r3,32768
  800c20:	10a0003c 	xorhi	r2,r2,32768
  800c24:	a0800115 	stw	r2,4(r20)
  800c28:	a0c00015 	stw	r3,0(r20)
  800c2c:	003f1a06 	br	800898 <__ieee754_rem_pio2f+0x58>
  800c30:	8809883a 	mov	r4,r17
  800c34:	014dcd74 	movhi	r5,14133
  800c38:	29510004 	addi	r5,r5,17408
  800c3c:	0801fe80 	call	801fe8 <__subsf3>
  800c40:	044ba1b4 	movhi	r17,11910
  800c44:	8c68c204 	addi	r17,r17,-23800
  800c48:	1009883a 	mov	r4,r2
  800c4c:	880b883a 	mov	r5,r17
  800c50:	1021883a 	mov	r16,r2
  800c54:	0801fe80 	call	801fe8 <__subsf3>
  800c58:	100b883a 	mov	r5,r2
  800c5c:	8009883a 	mov	r4,r16
  800c60:	a0800015 	stw	r2,0(r20)
  800c64:	0801fe80 	call	801fe8 <__subsf3>
  800c68:	1009883a 	mov	r4,r2
  800c6c:	880b883a 	mov	r5,r17
  800c70:	0801fe80 	call	801fe8 <__subsf3>
  800c74:	05400044 	movi	r21,1
  800c78:	a0800115 	stw	r2,4(r20)
  800c7c:	003f0606 	br	800898 <__ieee754_rem_pio2f+0x58>
  800c80:	ad47883a 	add	r3,r21,r21
  800c84:	00802074 	movhi	r2,129
  800c88:	10bff404 	addi	r2,r2,-48
  800c8c:	18c7883a 	add	r3,r3,r3
  800c90:	1887883a 	add	r3,r3,r2
  800c94:	193fff17 	ldw	r4,-4(r3)
  800c98:	00bfc004 	movi	r2,-256
  800c9c:	9884703a 	and	r2,r19,r2
  800ca0:	113f5326 	beq	r2,r4,8009f0 <__ieee754_rem_pio2f+0x1b0>
  800ca4:	b809883a 	mov	r4,r23
  800ca8:	0801fe80 	call	801fe8 <__subsf3>
  800cac:	a0800015 	stw	r2,0(r20)
  800cb0:	003f7b06 	br	800aa0 <__ieee754_rem_pio2f+0x260>
  800cb4:	8809883a 	mov	r4,r17
  800cb8:	014dcd74 	movhi	r5,14133
  800cbc:	29510004 	addi	r5,r5,17408
  800cc0:	08020580 	call	802058 <__addsf3>
  800cc4:	044ba1b4 	movhi	r17,11910
  800cc8:	8c68c204 	addi	r17,r17,-23800
  800ccc:	1009883a 	mov	r4,r2
  800cd0:	880b883a 	mov	r5,r17
  800cd4:	1021883a 	mov	r16,r2
  800cd8:	08020580 	call	802058 <__addsf3>
  800cdc:	100b883a 	mov	r5,r2
  800ce0:	8009883a 	mov	r4,r16
  800ce4:	a0800015 	stw	r2,0(r20)
  800ce8:	0801fe80 	call	801fe8 <__subsf3>
  800cec:	1009883a 	mov	r4,r2
  800cf0:	880b883a 	mov	r5,r17
  800cf4:	08020580 	call	802058 <__addsf3>
  800cf8:	057fffc4 	movi	r21,-1
  800cfc:	a0800115 	stw	r2,4(r20)
  800d00:	003ee506 	br	800898 <__ieee754_rem_pio2f+0x58>
  800d04:	e009883a 	mov	r4,fp
  800d08:	014ba1b4 	movhi	r5,11910
  800d0c:	2968c004 	addi	r5,r5,-23808
  800d10:	08020bc0 	call	8020bc <__mulsf3>
  800d14:	100b883a 	mov	r5,r2
  800d18:	9809883a 	mov	r4,r19
  800d1c:	1025883a 	mov	r18,r2
  800d20:	0801fe80 	call	801fe8 <__subsf3>
  800d24:	1021883a 	mov	r16,r2
  800d28:	e009883a 	mov	r4,fp
  800d2c:	01492374 	movhi	r5,9357
  800d30:	294c4c84 	addi	r5,r5,12594
  800d34:	08020bc0 	call	8020bc <__mulsf3>
  800d38:	9809883a 	mov	r4,r19
  800d3c:	800b883a 	mov	r5,r16
  800d40:	1023883a 	mov	r17,r2
  800d44:	0801fe80 	call	801fe8 <__subsf3>
  800d48:	1009883a 	mov	r4,r2
  800d4c:	900b883a 	mov	r5,r18
  800d50:	0801fe80 	call	801fe8 <__subsf3>
  800d54:	100b883a 	mov	r5,r2
  800d58:	8809883a 	mov	r4,r17
  800d5c:	0801fe80 	call	801fe8 <__subsf3>
  800d60:	100b883a 	mov	r5,r2
  800d64:	8009883a 	mov	r4,r16
  800d68:	1023883a 	mov	r17,r2
  800d6c:	8025883a 	mov	r18,r16
  800d70:	0801fe80 	call	801fe8 <__subsf3>
  800d74:	a0800015 	stw	r2,0(r20)
  800d78:	003f4906 	br	800aa0 <__ieee754_rem_pio2f+0x260>

00800d7c <__kernel_cosf>:
  800d7c:	defff904 	addi	sp,sp,-28
  800d80:	00a00034 	movhi	r2,32768
  800d84:	10bfffc4 	addi	r2,r2,-1
  800d88:	dc400115 	stw	r17,4(sp)
  800d8c:	1122703a 	and	r17,r2,r4
  800d90:	008c8034 	movhi	r2,12800
  800d94:	10bfffc4 	addi	r2,r2,-1
  800d98:	dd400515 	stw	r21,20(sp)
  800d9c:	dcc00315 	stw	r19,12(sp)
  800da0:	dfc00615 	stw	ra,24(sp)
  800da4:	dd000415 	stw	r20,16(sp)
  800da8:	dc800215 	stw	r18,8(sp)
  800dac:	dc000015 	stw	r16,0(sp)
  800db0:	2027883a 	mov	r19,r4
  800db4:	282b883a 	mov	r21,r5
  800db8:	14404b16 	blt	r2,r17,800ee8 <__kernel_cosf+0x16c>
  800dbc:	08026100 	call	802610 <__fixsfsi>
  800dc0:	10009326 	beq	r2,zero,801010 <__kernel_cosf+0x294>
  800dc4:	9809883a 	mov	r4,r19
  800dc8:	980b883a 	mov	r5,r19
  800dcc:	08020bc0 	call	8020bc <__mulsf3>
  800dd0:	1009883a 	mov	r4,r2
  800dd4:	016b5234 	movhi	r5,44360
  800dd8:	2975d384 	addi	r5,r5,-10418
  800ddc:	1021883a 	mov	r16,r2
  800de0:	08020bc0 	call	8020bc <__mulsf3>
  800de4:	1009883a 	mov	r4,r2
  800de8:	014c43f4 	movhi	r5,12559
  800dec:	295d3d84 	addi	r5,r5,29942
  800df0:	08020580 	call	802058 <__addsf3>
  800df4:	100b883a 	mov	r5,r2
  800df8:	8009883a 	mov	r4,r16
  800dfc:	08020bc0 	call	8020bc <__mulsf3>
  800e00:	1009883a 	mov	r4,r2
  800e04:	014d2534 	movhi	r5,13460
  800e08:	297c9f04 	addi	r5,r5,-3460
  800e0c:	0801fe80 	call	801fe8 <__subsf3>
  800e10:	100b883a 	mov	r5,r2
  800e14:	8009883a 	mov	r4,r16
  800e18:	08020bc0 	call	8020bc <__mulsf3>
  800e1c:	1009883a 	mov	r4,r2
  800e20:	014df434 	movhi	r5,14288
  800e24:	29434044 	addi	r5,r5,3329
  800e28:	08020580 	call	802058 <__addsf3>
  800e2c:	100b883a 	mov	r5,r2
  800e30:	8009883a 	mov	r4,r16
  800e34:	08020bc0 	call	8020bc <__mulsf3>
  800e38:	1009883a 	mov	r4,r2
  800e3c:	014eadb4 	movhi	r5,15030
  800e40:	2942d844 	addi	r5,r5,2913
  800e44:	0801fe80 	call	801fe8 <__subsf3>
  800e48:	100b883a 	mov	r5,r2
  800e4c:	8009883a 	mov	r4,r16
  800e50:	08020bc0 	call	8020bc <__mulsf3>
  800e54:	1009883a 	mov	r4,r2
  800e58:	014f4af4 	movhi	r5,15659
  800e5c:	296aaac4 	addi	r5,r5,-21845
  800e60:	08020580 	call	802058 <__addsf3>
  800e64:	100b883a 	mov	r5,r2
  800e68:	8009883a 	mov	r4,r16
  800e6c:	08020bc0 	call	8020bc <__mulsf3>
  800e70:	1025883a 	mov	r18,r2
  800e74:	8009883a 	mov	r4,r16
  800e78:	014fc034 	movhi	r5,16128
  800e7c:	08020bc0 	call	8020bc <__mulsf3>
  800e80:	8009883a 	mov	r4,r16
  800e84:	900b883a 	mov	r5,r18
  800e88:	1023883a 	mov	r17,r2
  800e8c:	08020bc0 	call	8020bc <__mulsf3>
  800e90:	9809883a 	mov	r4,r19
  800e94:	a80b883a 	mov	r5,r21
  800e98:	1021883a 	mov	r16,r2
  800e9c:	08020bc0 	call	8020bc <__mulsf3>
  800ea0:	100b883a 	mov	r5,r2
  800ea4:	8009883a 	mov	r4,r16
  800ea8:	0801fe80 	call	801fe8 <__subsf3>
  800eac:	100b883a 	mov	r5,r2
  800eb0:	8809883a 	mov	r4,r17
  800eb4:	0801fe80 	call	801fe8 <__subsf3>
  800eb8:	100b883a 	mov	r5,r2
  800ebc:	010fe034 	movhi	r4,16256
  800ec0:	0801fe80 	call	801fe8 <__subsf3>
  800ec4:	dfc00617 	ldw	ra,24(sp)
  800ec8:	dd400517 	ldw	r21,20(sp)
  800ecc:	dd000417 	ldw	r20,16(sp)
  800ed0:	dcc00317 	ldw	r19,12(sp)
  800ed4:	dc800217 	ldw	r18,8(sp)
  800ed8:	dc400117 	ldw	r17,4(sp)
  800edc:	dc000017 	ldw	r16,0(sp)
  800ee0:	dec00704 	addi	sp,sp,28
  800ee4:	f800283a 	ret
  800ee8:	200b883a 	mov	r5,r4
  800eec:	08020bc0 	call	8020bc <__mulsf3>
  800ef0:	1009883a 	mov	r4,r2
  800ef4:	016b5234 	movhi	r5,44360
  800ef8:	2975d384 	addi	r5,r5,-10418
  800efc:	1021883a 	mov	r16,r2
  800f00:	08020bc0 	call	8020bc <__mulsf3>
  800f04:	1009883a 	mov	r4,r2
  800f08:	014c43f4 	movhi	r5,12559
  800f0c:	295d3d84 	addi	r5,r5,29942
  800f10:	08020580 	call	802058 <__addsf3>
  800f14:	100b883a 	mov	r5,r2
  800f18:	8009883a 	mov	r4,r16
  800f1c:	08020bc0 	call	8020bc <__mulsf3>
  800f20:	1009883a 	mov	r4,r2
  800f24:	014d2534 	movhi	r5,13460
  800f28:	297c9f04 	addi	r5,r5,-3460
  800f2c:	0801fe80 	call	801fe8 <__subsf3>
  800f30:	100b883a 	mov	r5,r2
  800f34:	8009883a 	mov	r4,r16
  800f38:	08020bc0 	call	8020bc <__mulsf3>
  800f3c:	1009883a 	mov	r4,r2
  800f40:	014df434 	movhi	r5,14288
  800f44:	29434044 	addi	r5,r5,3329
  800f48:	08020580 	call	802058 <__addsf3>
  800f4c:	100b883a 	mov	r5,r2
  800f50:	8009883a 	mov	r4,r16
  800f54:	08020bc0 	call	8020bc <__mulsf3>
  800f58:	1009883a 	mov	r4,r2
  800f5c:	014eadb4 	movhi	r5,15030
  800f60:	2942d844 	addi	r5,r5,2913
  800f64:	0801fe80 	call	801fe8 <__subsf3>
  800f68:	100b883a 	mov	r5,r2
  800f6c:	8009883a 	mov	r4,r16
  800f70:	08020bc0 	call	8020bc <__mulsf3>
  800f74:	1009883a 	mov	r4,r2
  800f78:	014f4af4 	movhi	r5,15659
  800f7c:	296aaac4 	addi	r5,r5,-21845
  800f80:	08020580 	call	802058 <__addsf3>
  800f84:	100b883a 	mov	r5,r2
  800f88:	8009883a 	mov	r4,r16
  800f8c:	08020bc0 	call	8020bc <__mulsf3>
  800f90:	1025883a 	mov	r18,r2
  800f94:	008fa6b4 	movhi	r2,16026
  800f98:	10a66644 	addi	r2,r2,-26215
  800f9c:	147fb50e 	bge	r2,r17,800e74 <__kernel_cosf+0xf8>
  800fa0:	008fd234 	movhi	r2,16200
  800fa4:	14401c0e 	bge	r2,r17,801018 <__kernel_cosf+0x29c>
  800fa8:	044fa434 	movhi	r17,16016
  800fac:	050fce34 	movhi	r20,16184
  800fb0:	8009883a 	mov	r4,r16
  800fb4:	014fc034 	movhi	r5,16128
  800fb8:	08020bc0 	call	8020bc <__mulsf3>
  800fbc:	1009883a 	mov	r4,r2
  800fc0:	880b883a 	mov	r5,r17
  800fc4:	0801fe80 	call	801fe8 <__subsf3>
  800fc8:	8009883a 	mov	r4,r16
  800fcc:	900b883a 	mov	r5,r18
  800fd0:	1023883a 	mov	r17,r2
  800fd4:	08020bc0 	call	8020bc <__mulsf3>
  800fd8:	9809883a 	mov	r4,r19
  800fdc:	a80b883a 	mov	r5,r21
  800fe0:	1021883a 	mov	r16,r2
  800fe4:	08020bc0 	call	8020bc <__mulsf3>
  800fe8:	100b883a 	mov	r5,r2
  800fec:	8009883a 	mov	r4,r16
  800ff0:	0801fe80 	call	801fe8 <__subsf3>
  800ff4:	100b883a 	mov	r5,r2
  800ff8:	8809883a 	mov	r4,r17
  800ffc:	0801fe80 	call	801fe8 <__subsf3>
  801000:	100b883a 	mov	r5,r2
  801004:	a009883a 	mov	r4,r20
  801008:	0801fe80 	call	801fe8 <__subsf3>
  80100c:	003fad06 	br	800ec4 <__kernel_cosf+0x148>
  801010:	008fe034 	movhi	r2,16256
  801014:	003fab06 	br	800ec4 <__kernel_cosf+0x148>
  801018:	00bfc034 	movhi	r2,65280
  80101c:	8885883a 	add	r2,r17,r2
  801020:	100b883a 	mov	r5,r2
  801024:	010fe034 	movhi	r4,16256
  801028:	1023883a 	mov	r17,r2
  80102c:	0801fe80 	call	801fe8 <__subsf3>
  801030:	1029883a 	mov	r20,r2
  801034:	003fde06 	br	800fb0 <__kernel_cosf+0x234>

00801038 <__kernel_rem_pio2f>:
  801038:	deff9804 	addi	sp,sp,-416
  80103c:	d8806817 	ldw	r2,416(sp)
  801040:	ddc06515 	stw	r23,404(sp)
  801044:	dc005e15 	stw	r16,376(sp)
  801048:	1087883a 	add	r3,r2,r2
  80104c:	18c7883a 	add	r3,r3,r3
  801050:	00802074 	movhi	r2,129
  801054:	1080da04 	addi	r2,r2,872
  801058:	1887883a 	add	r3,r3,r2
  80105c:	1dc00017 	ldw	r23,0(r3)
  801060:	30bfff44 	addi	r2,r6,-3
  801064:	38ffffc4 	addi	r3,r7,-1
  801068:	dfc06715 	stw	ra,412(sp)
  80106c:	df006615 	stw	fp,408(sp)
  801070:	dd806415 	stw	r22,400(sp)
  801074:	dd406315 	stw	r21,396(sp)
  801078:	dd006215 	stw	r20,392(sp)
  80107c:	dcc06115 	stw	r19,388(sp)
  801080:	dc806015 	stw	r18,384(sp)
  801084:	dc405f15 	stw	r17,380(sp)
  801088:	3021883a 	mov	r16,r6
  80108c:	d9c05915 	stw	r7,356(sp)
  801090:	d9005715 	stw	r4,348(sp)
  801094:	d9405815 	stw	r5,352(sp)
  801098:	d8c05615 	stw	r3,344(sp)
  80109c:	10024916 	blt	r2,zero,8019c4 <__kernel_rem_pio2f+0x98c>
  8010a0:	1005d0fa 	srai	r2,r2,3
  8010a4:	d8805015 	stw	r2,320(sp)
  8010a8:	10024a16 	blt	r2,zero,8019d4 <__kernel_rem_pio2f+0x99c>
  8010ac:	d9005017 	ldw	r4,320(sp)
  8010b0:	017ffe04 	movi	r5,-8
  8010b4:	08032000 	call	803200 <__mulsi3>
  8010b8:	d9005617 	ldw	r4,344(sp)
  8010bc:	8085883a 	add	r2,r16,r2
  8010c0:	173ffe04 	addi	fp,r2,-8
  8010c4:	b907883a 	add	r3,r23,r4
  8010c8:	18001216 	blt	r3,zero,801114 <__kernel_rem_pio2f+0xdc>
  8010cc:	d9405017 	ldw	r5,320(sp)
  8010d0:	d9806917 	ldw	r6,420(sp)
  8010d4:	dc801404 	addi	r18,sp,80
  8010d8:	2921c83a 	sub	r16,r5,r4
  8010dc:	8405883a 	add	r2,r16,r16
  8010e0:	1085883a 	add	r2,r2,r2
  8010e4:	30a3883a 	add	r17,r6,r2
  8010e8:	80e7883a 	add	r19,r16,r3
  8010ec:	00000106 	br	8010f4 <__kernel_rem_pio2f+0xbc>
  8010f0:	84000044 	addi	r16,r16,1
  8010f4:	0005883a 	mov	r2,zero
  8010f8:	80000216 	blt	r16,zero,801104 <__kernel_rem_pio2f+0xcc>
  8010fc:	89000017 	ldw	r4,0(r17)
  801100:	08025780 	call	802578 <__floatsisf>
  801104:	90800015 	stw	r2,0(r18)
  801108:	8c400104 	addi	r17,r17,4
  80110c:	94800104 	addi	r18,r18,4
  801110:	84fff71e 	bne	r16,r19,8010f0 <__kernel_rem_pio2f+0xb8>
  801114:	b8001c16 	blt	r23,zero,801188 <__kernel_rem_pio2f+0x150>
  801118:	dcc05617 	ldw	r19,344(sp)
  80111c:	d9c05917 	ldw	r7,356(sp)
  801120:	dd003c04 	addi	r20,sp,240
  801124:	982a403a 	cmpge	r21,r19,zero
  801128:	b9ed883a 	add	r22,r23,r7
  80112c:	a801ad26 	beq	r21,zero,8017e4 <__kernel_rem_pio2f+0x7ac>
  801130:	dc405717 	ldw	r17,348(sp)
  801134:	0021883a 	mov	r16,zero
  801138:	0025883a 	mov	r18,zero
  80113c:	9c05c83a 	sub	r2,r19,r16
  801140:	1085883a 	add	r2,r2,r2
  801144:	1085883a 	add	r2,r2,r2
  801148:	16c5883a 	add	r2,r2,sp
  80114c:	89000017 	ldw	r4,0(r17)
  801150:	11401417 	ldw	r5,80(r2)
  801154:	84000044 	addi	r16,r16,1
  801158:	8c400104 	addi	r17,r17,4
  80115c:	08020bc0 	call	8020bc <__mulsf3>
  801160:	100b883a 	mov	r5,r2
  801164:	9009883a 	mov	r4,r18
  801168:	08020580 	call	802058 <__addsf3>
  80116c:	1025883a 	mov	r18,r2
  801170:	d8805917 	ldw	r2,356(sp)
  801174:	143ff11e 	bne	r2,r16,80113c <__kernel_rem_pio2f+0x104>
  801178:	9cc00044 	addi	r19,r19,1
  80117c:	a4800015 	stw	r18,0(r20)
  801180:	a5000104 	addi	r20,r20,4
  801184:	9dbfe91e 	bne	r19,r22,80112c <__kernel_rem_pio2f+0xf4>
  801188:	bdc5883a 	add	r2,r23,r23
  80118c:	d9005617 	ldw	r4,344(sp)
  801190:	15c7883a 	add	r3,r2,r23
  801194:	1dc7883a 	add	r3,r3,r23
  801198:	1085883a 	add	r2,r2,r2
  80119c:	2008403a 	cmpge	r4,r4,zero
  8011a0:	16c5883a 	add	r2,r2,sp
  8011a4:	1ec7883a 	add	r3,r3,sp
  8011a8:	e1400050 	cmplti	r5,fp,1
  8011ac:	b82d883a 	mov	r22,r23
  8011b0:	d9005d15 	stw	r4,372(sp)
  8011b4:	d8805a15 	stw	r2,360(sp)
  8011b8:	d8c05c15 	stw	r3,368(sp)
  8011bc:	d9405b15 	stw	r5,364(sp)
  8011c0:	b5a3883a 	add	r17,r22,r22
  8011c4:	8c45883a 	add	r2,r17,r17
  8011c8:	16c5883a 	add	r2,r2,sp
  8011cc:	14803c17 	ldw	r18,240(r2)
  8011d0:	05801c0e 	bge	zero,r22,801244 <__kernel_rem_pio2f+0x20c>
  8011d4:	15003c04 	addi	r20,r2,240
  8011d8:	b027883a 	mov	r19,r22
  8011dc:	d82b883a 	mov	r21,sp
  8011e0:	014ee034 	movhi	r5,15232
  8011e4:	9009883a 	mov	r4,r18
  8011e8:	08020bc0 	call	8020bc <__mulsf3>
  8011ec:	1009883a 	mov	r4,r2
  8011f0:	08026100 	call	802610 <__fixsfsi>
  8011f4:	1009883a 	mov	r4,r2
  8011f8:	08025780 	call	802578 <__floatsisf>
  8011fc:	1009883a 	mov	r4,r2
  801200:	0170e034 	movhi	r5,50048
  801204:	1021883a 	mov	r16,r2
  801208:	08020bc0 	call	8020bc <__mulsf3>
  80120c:	1009883a 	mov	r4,r2
  801210:	900b883a 	mov	r5,r18
  801214:	08020580 	call	802058 <__addsf3>
  801218:	1009883a 	mov	r4,r2
  80121c:	08026100 	call	802610 <__fixsfsi>
  801220:	a8800015 	stw	r2,0(r21)
  801224:	a53fff04 	addi	r20,r20,-4
  801228:	a1400017 	ldw	r5,0(r20)
  80122c:	8009883a 	mov	r4,r16
  801230:	9cffffc4 	addi	r19,r19,-1
  801234:	08020580 	call	802058 <__addsf3>
  801238:	1025883a 	mov	r18,r2
  80123c:	ad400104 	addi	r21,r21,4
  801240:	983fe71e 	bne	r19,zero,8011e0 <__kernel_rem_pio2f+0x1a8>
  801244:	9009883a 	mov	r4,r18
  801248:	e00b883a 	mov	r5,fp
  80124c:	0801ca00 	call	801ca0 <scalbnf>
  801250:	1009883a 	mov	r4,r2
  801254:	014f8034 	movhi	r5,15872
  801258:	1021883a 	mov	r16,r2
  80125c:	08020bc0 	call	8020bc <__mulsf3>
  801260:	1009883a 	mov	r4,r2
  801264:	080072c0 	call	80072c <floorf>
  801268:	1009883a 	mov	r4,r2
  80126c:	01704034 	movhi	r5,49408
  801270:	08020bc0 	call	8020bc <__mulsf3>
  801274:	100b883a 	mov	r5,r2
  801278:	8009883a 	mov	r4,r16
  80127c:	08020580 	call	802058 <__addsf3>
  801280:	1009883a 	mov	r4,r2
  801284:	1021883a 	mov	r16,r2
  801288:	08026100 	call	802610 <__fixsfsi>
  80128c:	1009883a 	mov	r4,r2
  801290:	d8805515 	stw	r2,340(sp)
  801294:	08025780 	call	802578 <__floatsisf>
  801298:	100b883a 	mov	r5,r2
  80129c:	8009883a 	mov	r4,r16
  8012a0:	0801fe80 	call	801fe8 <__subsf3>
  8012a4:	d9805b17 	ldw	r6,364(sp)
  8012a8:	1027883a 	mov	r19,r2
  8012ac:	30012b1e 	bne	r6,zero,80175c <__kernel_rem_pio2f+0x724>
  8012b0:	b0bfffc4 	addi	r2,r22,-1
  8012b4:	1085883a 	add	r2,r2,r2
  8012b8:	1085883a 	add	r2,r2,r2
  8012bc:	16c5883a 	add	r2,r2,sp
  8012c0:	11400017 	ldw	r5,0(r2)
  8012c4:	00c00204 	movi	r3,8
  8012c8:	1f07c83a 	sub	r3,r3,fp
  8012cc:	28cdd83a 	sra	r6,r5,r3
  8012d0:	010001c4 	movi	r4,7
  8012d4:	d9c05517 	ldw	r7,340(sp)
  8012d8:	30c6983a 	sll	r3,r6,r3
  8012dc:	2709c83a 	sub	r4,r4,fp
  8012e0:	398f883a 	add	r7,r7,r6
  8012e4:	28cbc83a 	sub	r5,r5,r3
  8012e8:	2909d83a 	sra	r4,r5,r4
  8012ec:	d9c05515 	stw	r7,340(sp)
  8012f0:	11400015 	stw	r5,0(r2)
  8012f4:	d9005415 	stw	r4,336(sp)
  8012f8:	d8c05417 	ldw	r3,336(sp)
  8012fc:	00c0220e 	bge	zero,r3,801388 <__kernel_rem_pio2f+0x350>
  801300:	d9005517 	ldw	r4,340(sp)
  801304:	21000044 	addi	r4,r4,1
  801308:	d9005515 	stw	r4,340(sp)
  80130c:	0581450e 	bge	zero,r22,801824 <__kernel_rem_pio2f+0x7ec>
  801310:	0021883a 	mov	r16,zero
  801314:	000b883a 	mov	r5,zero
  801318:	d809883a 	mov	r4,sp
  80131c:	01c04004 	movi	r7,256
  801320:	01803fc4 	movi	r6,255
  801324:	00000706 	br	801344 <__kernel_rem_pio2f+0x30c>
  801328:	38c5c83a 	sub	r2,r7,r3
  80132c:	18000226 	beq	r3,zero,801338 <__kernel_rem_pio2f+0x300>
  801330:	04000044 	movi	r16,1
  801334:	20800015 	stw	r2,0(r4)
  801338:	29400044 	addi	r5,r5,1
  80133c:	21000104 	addi	r4,r4,4
  801340:	b1400826 	beq	r22,r5,801364 <__kernel_rem_pio2f+0x32c>
  801344:	8004c03a 	cmpne	r2,r16,zero
  801348:	20c00017 	ldw	r3,0(r4)
  80134c:	103ff626 	beq	r2,zero,801328 <__kernel_rem_pio2f+0x2f0>
  801350:	30c5c83a 	sub	r2,r6,r3
  801354:	29400044 	addi	r5,r5,1
  801358:	20800015 	stw	r2,0(r4)
  80135c:	21000104 	addi	r4,r4,4
  801360:	b17ff81e 	bne	r22,r5,801344 <__kernel_rem_pio2f+0x30c>
  801364:	d9405b17 	ldw	r5,364(sp)
  801368:	2800041e 	bne	r5,zero,80137c <__kernel_rem_pio2f+0x344>
  80136c:	00800044 	movi	r2,1
  801370:	e0810126 	beq	fp,r2,801778 <__kernel_rem_pio2f+0x740>
  801374:	00800084 	movi	r2,2
  801378:	e0810726 	beq	fp,r2,801798 <__kernel_rem_pio2f+0x760>
  80137c:	d9805417 	ldw	r6,336(sp)
  801380:	00800084 	movi	r2,2
  801384:	30806126 	beq	r6,r2,80150c <__kernel_rem_pio2f+0x4d4>
  801388:	9809883a 	mov	r4,r19
  80138c:	000b883a 	mov	r5,zero
  801390:	08024100 	call	802410 <__eqsf2>
  801394:	1000701e 	bne	r2,zero,801558 <__kernel_rem_pio2f+0x520>
  801398:	b1bfffc4 	addi	r6,r22,-1
  80139c:	35c00b16 	blt	r6,r23,8013cc <__kernel_rem_pio2f+0x394>
  8013a0:	3185883a 	add	r2,r6,r6
  8013a4:	1085883a 	add	r2,r2,r2
  8013a8:	16c9883a 	add	r4,r2,sp
  8013ac:	3007883a 	mov	r3,r6
  8013b0:	000b883a 	mov	r5,zero
  8013b4:	20800017 	ldw	r2,0(r4)
  8013b8:	18ffffc4 	addi	r3,r3,-1
  8013bc:	213fff04 	addi	r4,r4,-4
  8013c0:	288ab03a 	or	r5,r5,r2
  8013c4:	1dfffb0e 	bge	r3,r23,8013b4 <__kernel_rem_pio2f+0x37c>
  8013c8:	2800681e 	bne	r5,zero,80156c <__kernel_rem_pio2f+0x534>
  8013cc:	d9c05a17 	ldw	r7,360(sp)
  8013d0:	38bfff17 	ldw	r2,-4(r7)
  8013d4:	1000fe1e 	bne	r2,zero,8017d0 <__kernel_rem_pio2f+0x798>
  8013d8:	d8805c17 	ldw	r2,368(sp)
  8013dc:	01000044 	movi	r4,1
  8013e0:	10ffff04 	addi	r3,r2,-4
  8013e4:	18ffff04 	addi	r3,r3,-4
  8013e8:	18800017 	ldw	r2,0(r3)
  8013ec:	21000044 	addi	r4,r4,1
  8013f0:	103ffc26 	beq	r2,zero,8013e4 <__kernel_rem_pio2f+0x3ac>
  8013f4:	b12b883a 	add	r21,r22,r4
  8013f8:	b4000044 	addi	r16,r22,1
  8013fc:	ac00020e 	bge	r21,r16,801408 <__kernel_rem_pio2f+0x3d0>
  801400:	a82d883a 	mov	r22,r21
  801404:	003f6e06 	br	8011c0 <__kernel_rem_pio2f+0x188>
  801408:	d8c05017 	ldw	r3,320(sp)
  80140c:	d9005917 	ldw	r4,356(sp)
  801410:	840d883a 	add	r6,r16,r16
  801414:	b0c5883a 	add	r2,r22,r3
  801418:	d8c06917 	ldw	r3,420(sp)
  80141c:	b10f883a 	add	r7,r22,r4
  801420:	1085883a 	add	r2,r2,r2
  801424:	1085883a 	add	r2,r2,r2
  801428:	39cb883a 	add	r5,r7,r7
  80142c:	1885883a 	add	r2,r3,r2
  801430:	294b883a 	add	r5,r5,r5
  801434:	318d883a 	add	r6,r6,r6
  801438:	d8c01404 	addi	r3,sp,80
  80143c:	d9003c04 	addi	r4,sp,240
  801440:	1947883a 	add	r3,r3,r5
  801444:	2189883a 	add	r4,r4,r6
  801448:	10800104 	addi	r2,r2,4
  80144c:	d8c05215 	stw	r3,328(sp)
  801450:	d9005115 	stw	r4,324(sp)
  801454:	d8805315 	stw	r2,332(sp)
  801458:	382d883a 	mov	r22,r7
  80145c:	d9405317 	ldw	r5,332(sp)
  801460:	29000017 	ldw	r4,0(r5)
  801464:	08025780 	call	802578 <__floatsisf>
  801468:	d9805217 	ldw	r6,328(sp)
  80146c:	d9c05d17 	ldw	r7,372(sp)
  801470:	30800015 	stw	r2,0(r6)
  801474:	38002326 	beq	r7,zero,801504 <__kernel_rem_pio2f+0x4cc>
  801478:	b585883a 	add	r2,r22,r22
  80147c:	1585883a 	add	r2,r2,r22
  801480:	1585883a 	add	r2,r2,r22
  801484:	dc405717 	ldw	r17,348(sp)
  801488:	16c5883a 	add	r2,r2,sp
  80148c:	14801404 	addi	r18,r2,80
  801490:	0029883a 	mov	r20,zero
  801494:	0027883a 	mov	r19,zero
  801498:	89000017 	ldw	r4,0(r17)
  80149c:	91400017 	ldw	r5,0(r18)
  8014a0:	a5000044 	addi	r20,r20,1
  8014a4:	94bfff04 	addi	r18,r18,-4
  8014a8:	08020bc0 	call	8020bc <__mulsf3>
  8014ac:	100b883a 	mov	r5,r2
  8014b0:	9809883a 	mov	r4,r19
  8014b4:	08020580 	call	802058 <__addsf3>
  8014b8:	1027883a 	mov	r19,r2
  8014bc:	d8805917 	ldw	r2,356(sp)
  8014c0:	8c400104 	addi	r17,r17,4
  8014c4:	153ff41e 	bne	r2,r20,801498 <__kernel_rem_pio2f+0x460>
  8014c8:	d8c05117 	ldw	r3,324(sp)
  8014cc:	d9005317 	ldw	r4,332(sp)
  8014d0:	d9405217 	ldw	r5,328(sp)
  8014d4:	1cc00015 	stw	r19,0(r3)
  8014d8:	21000104 	addi	r4,r4,4
  8014dc:	29400104 	addi	r5,r5,4
  8014e0:	18c00104 	addi	r3,r3,4
  8014e4:	84000044 	addi	r16,r16,1
  8014e8:	d9005315 	stw	r4,332(sp)
  8014ec:	d9405215 	stw	r5,328(sp)
  8014f0:	d8c05115 	stw	r3,324(sp)
  8014f4:	b5800044 	addi	r22,r22,1
  8014f8:	ac3fd80e 	bge	r21,r16,80145c <__kernel_rem_pio2f+0x424>
  8014fc:	a82d883a 	mov	r22,r21
  801500:	003f2f06 	br	8011c0 <__kernel_rem_pio2f+0x188>
  801504:	0027883a 	mov	r19,zero
  801508:	003fef06 	br	8014c8 <__kernel_rem_pio2f+0x490>
  80150c:	050fe034 	movhi	r20,16256
  801510:	980b883a 	mov	r5,r19
  801514:	a009883a 	mov	r4,r20
  801518:	0801fe80 	call	801fe8 <__subsf3>
  80151c:	1025883a 	mov	r18,r2
  801520:	8005003a 	cmpeq	r2,r16,zero
  801524:	9027883a 	mov	r19,r18
  801528:	103f971e 	bne	r2,zero,801388 <__kernel_rem_pio2f+0x350>
  80152c:	a009883a 	mov	r4,r20
  801530:	e00b883a 	mov	r5,fp
  801534:	0801ca00 	call	801ca0 <scalbnf>
  801538:	100b883a 	mov	r5,r2
  80153c:	9009883a 	mov	r4,r18
  801540:	0801fe80 	call	801fe8 <__subsf3>
  801544:	1027883a 	mov	r19,r2
  801548:	9809883a 	mov	r4,r19
  80154c:	000b883a 	mov	r5,zero
  801550:	08024100 	call	802410 <__eqsf2>
  801554:	103f9026 	beq	r2,zero,801398 <__kernel_rem_pio2f+0x360>
  801558:	9809883a 	mov	r4,r19
  80155c:	000b883a 	mov	r5,zero
  801560:	08024100 	call	802410 <__eqsf2>
  801564:	10011d1e 	bne	r2,zero,8019dc <__kernel_rem_pio2f+0x9a4>
  801568:	b1bfffc4 	addi	r6,r22,-1
  80156c:	3185883a 	add	r2,r6,r6
  801570:	1085883a 	add	r2,r2,r2
  801574:	16c5883a 	add	r2,r2,sp
  801578:	10c00017 	ldw	r3,0(r2)
  80157c:	e73ffe04 	addi	fp,fp,-8
  801580:	18013c1e 	bne	r3,zero,801a74 <__kernel_rem_pio2f+0xa3c>
  801584:	302d883a 	mov	r22,r6
  801588:	1007883a 	mov	r3,r2
  80158c:	18ffff04 	addi	r3,r3,-4
  801590:	18800017 	ldw	r2,0(r3)
  801594:	b5bfffc4 	addi	r22,r22,-1
  801598:	e73ffe04 	addi	fp,fp,-8
  80159c:	103ffb26 	beq	r2,zero,80158c <__kernel_rem_pio2f+0x554>
  8015a0:	e00b883a 	mov	r5,fp
  8015a4:	010fe034 	movhi	r4,16256
  8015a8:	0801ca00 	call	801ca0 <scalbnf>
  8015ac:	1025883a 	mov	r18,r2
  8015b0:	b0003416 	blt	r22,zero,801684 <__kernel_rem_pio2f+0x64c>
  8015b4:	b585883a 	add	r2,r22,r22
  8015b8:	1085883a 	add	r2,r2,r2
  8015bc:	16e1883a 	add	r16,r2,sp
  8015c0:	b023883a 	mov	r17,r22
  8015c4:	04ffffc4 	movi	r19,-1
  8015c8:	81000017 	ldw	r4,0(r16)
  8015cc:	8c7fffc4 	addi	r17,r17,-1
  8015d0:	08025780 	call	802578 <__floatsisf>
  8015d4:	900b883a 	mov	r5,r18
  8015d8:	1009883a 	mov	r4,r2
  8015dc:	08020bc0 	call	8020bc <__mulsf3>
  8015e0:	80803c15 	stw	r2,240(r16)
  8015e4:	9009883a 	mov	r4,r18
  8015e8:	014ee034 	movhi	r5,15232
  8015ec:	08020bc0 	call	8020bc <__mulsf3>
  8015f0:	1025883a 	mov	r18,r2
  8015f4:	843fff04 	addi	r16,r16,-4
  8015f8:	8cfff31e 	bne	r17,r19,8015c8 <__kernel_rem_pio2f+0x590>
  8015fc:	b02b883a 	mov	r21,r22
  801600:	0029883a 	mov	r20,zero
  801604:	b838403a 	cmpge	fp,r23,zero
  801608:	e0007c26 	beq	fp,zero,8017fc <__kernel_rem_pio2f+0x7c4>
  80160c:	a0007b16 	blt	r20,zero,8017fc <__kernel_rem_pio2f+0x7c4>
  801610:	ad45883a 	add	r2,r21,r21
  801614:	1085883a 	add	r2,r2,r2
  801618:	d8c03c04 	addi	r3,sp,240
  80161c:	18a5883a 	add	r18,r3,r2
  801620:	0021883a 	mov	r16,zero
  801624:	0027883a 	mov	r19,zero
  801628:	04402074 	movhi	r17,129
  80162c:	8c40dd04 	addi	r17,r17,884
  801630:	00000106 	br	801638 <__kernel_rem_pio2f+0x600>
  801634:	a4000b16 	blt	r20,r16,801664 <__kernel_rem_pio2f+0x62c>
  801638:	89000017 	ldw	r4,0(r17)
  80163c:	91400017 	ldw	r5,0(r18)
  801640:	84000044 	addi	r16,r16,1
  801644:	8c400104 	addi	r17,r17,4
  801648:	08020bc0 	call	8020bc <__mulsf3>
  80164c:	100b883a 	mov	r5,r2
  801650:	9809883a 	mov	r4,r19
  801654:	08020580 	call	802058 <__addsf3>
  801658:	94800104 	addi	r18,r18,4
  80165c:	1027883a 	mov	r19,r2
  801660:	bc3ff40e 	bge	r23,r16,801634 <__kernel_rem_pio2f+0x5fc>
  801664:	a505883a 	add	r2,r20,r20
  801668:	1085883a 	add	r2,r2,r2
  80166c:	16c5883a 	add	r2,r2,sp
  801670:	14c02815 	stw	r19,160(r2)
  801674:	ad7fffc4 	addi	r21,r21,-1
  801678:	00bfffc4 	movi	r2,-1
  80167c:	a5000044 	addi	r20,r20,1
  801680:	a8bfe11e 	bne	r21,r2,801608 <__kernel_rem_pio2f+0x5d0>
  801684:	d9806817 	ldw	r6,416(sp)
  801688:	00800084 	movi	r2,2
  80168c:	11806a16 	blt	r2,r6,801838 <__kernel_rem_pio2f+0x800>
  801690:	0180b70e 	bge	zero,r6,801970 <__kernel_rem_pio2f+0x938>
  801694:	b0010916 	blt	r22,zero,801abc <__kernel_rem_pio2f+0xa84>
  801698:	b585883a 	add	r2,r22,r22
  80169c:	1085883a 	add	r2,r2,r2
  8016a0:	16c5883a 	add	r2,r2,sp
  8016a4:	14402804 	addi	r17,r2,160
  8016a8:	b021883a 	mov	r16,r22
  8016ac:	0005883a 	mov	r2,zero
  8016b0:	04bfffc4 	movi	r18,-1
  8016b4:	89400017 	ldw	r5,0(r17)
  8016b8:	1009883a 	mov	r4,r2
  8016bc:	843fffc4 	addi	r16,r16,-1
  8016c0:	08020580 	call	802058 <__addsf3>
  8016c4:	8c7fff04 	addi	r17,r17,-4
  8016c8:	84bffa1e 	bne	r16,r18,8016b4 <__kernel_rem_pio2f+0x67c>
  8016cc:	d9405417 	ldw	r5,336(sp)
  8016d0:	2800e61e 	bne	r5,zero,801a6c <__kernel_rem_pio2f+0xa34>
  8016d4:	1007883a 	mov	r3,r2
  8016d8:	d9805817 	ldw	r6,352(sp)
  8016dc:	d9002817 	ldw	r4,160(sp)
  8016e0:	100b883a 	mov	r5,r2
  8016e4:	30c00015 	stw	r3,0(r6)
  8016e8:	0801fe80 	call	801fe8 <__subsf3>
  8016ec:	0580080e 	bge	zero,r22,801710 <__kernel_rem_pio2f+0x6d8>
  8016f0:	0023883a 	mov	r17,zero
  8016f4:	dc002904 	addi	r16,sp,164
  8016f8:	81400017 	ldw	r5,0(r16)
  8016fc:	1009883a 	mov	r4,r2
  801700:	8c400044 	addi	r17,r17,1
  801704:	08020580 	call	802058 <__addsf3>
  801708:	84000104 	addi	r16,r16,4
  80170c:	8dbffa1e 	bne	r17,r22,8016f8 <__kernel_rem_pio2f+0x6c0>
  801710:	d9c05417 	ldw	r7,336(sp)
  801714:	38000126 	beq	r7,zero,80171c <__kernel_rem_pio2f+0x6e4>
  801718:	10a0003c 	xorhi	r2,r2,32768
  80171c:	d8c05817 	ldw	r3,352(sp)
  801720:	18800115 	stw	r2,4(r3)
  801724:	d8c05517 	ldw	r3,340(sp)
  801728:	188001cc 	andi	r2,r3,7
  80172c:	dfc06717 	ldw	ra,412(sp)
  801730:	df006617 	ldw	fp,408(sp)
  801734:	ddc06517 	ldw	r23,404(sp)
  801738:	dd806417 	ldw	r22,400(sp)
  80173c:	dd406317 	ldw	r21,396(sp)
  801740:	dd006217 	ldw	r20,392(sp)
  801744:	dcc06117 	ldw	r19,388(sp)
  801748:	dc806017 	ldw	r18,384(sp)
  80174c:	dc405f17 	ldw	r17,380(sp)
  801750:	dc005e17 	ldw	r16,376(sp)
  801754:	dec06804 	addi	sp,sp,416
  801758:	f800283a 	ret
  80175c:	e000161e 	bne	fp,zero,8017b8 <__kernel_rem_pio2f+0x780>
  801760:	8c45883a 	add	r2,r17,r17
  801764:	16c5883a 	add	r2,r2,sp
  801768:	10ffff17 	ldw	r3,-4(r2)
  80176c:	1807d23a 	srai	r3,r3,8
  801770:	d8c05415 	stw	r3,336(sp)
  801774:	003ee006 	br	8012f8 <__kernel_rem_pio2f+0x2c0>
  801778:	b705c83a 	sub	r2,r22,fp
  80177c:	1085883a 	add	r2,r2,r2
  801780:	1085883a 	add	r2,r2,r2
  801784:	16c5883a 	add	r2,r2,sp
  801788:	10c00017 	ldw	r3,0(r2)
  80178c:	18c01fcc 	andi	r3,r3,127
  801790:	10c00015 	stw	r3,0(r2)
  801794:	003ef906 	br	80137c <__kernel_rem_pio2f+0x344>
  801798:	b0bfffc4 	addi	r2,r22,-1
  80179c:	1085883a 	add	r2,r2,r2
  8017a0:	1085883a 	add	r2,r2,r2
  8017a4:	16c5883a 	add	r2,r2,sp
  8017a8:	10c00017 	ldw	r3,0(r2)
  8017ac:	18c00fcc 	andi	r3,r3,63
  8017b0:	10c00015 	stw	r3,0(r2)
  8017b4:	003ef106 	br	80137c <__kernel_rem_pio2f+0x344>
  8017b8:	1009883a 	mov	r4,r2
  8017bc:	014fc034 	movhi	r5,16128
  8017c0:	08025000 	call	802500 <__gesf2>
  8017c4:	1000190e 	bge	r2,zero,80182c <__kernel_rem_pio2f+0x7f4>
  8017c8:	d8005415 	stw	zero,336(sp)
  8017cc:	003eee06 	br	801388 <__kernel_rem_pio2f+0x350>
  8017d0:	01000044 	movi	r4,1
  8017d4:	b12b883a 	add	r21,r22,r4
  8017d8:	b4000044 	addi	r16,r22,1
  8017dc:	ac3f0816 	blt	r21,r16,801400 <__kernel_rem_pio2f+0x3c8>
  8017e0:	003f0906 	br	801408 <__kernel_rem_pio2f+0x3d0>
  8017e4:	0025883a 	mov	r18,zero
  8017e8:	9cc00044 	addi	r19,r19,1
  8017ec:	a4800015 	stw	r18,0(r20)
  8017f0:	a5000104 	addi	r20,r20,4
  8017f4:	9dbe4d1e 	bne	r19,r22,80112c <__kernel_rem_pio2f+0xf4>
  8017f8:	003e6306 	br	801188 <__kernel_rem_pio2f+0x150>
  8017fc:	a505883a 	add	r2,r20,r20
  801800:	1085883a 	add	r2,r2,r2
  801804:	16c5883a 	add	r2,r2,sp
  801808:	0027883a 	mov	r19,zero
  80180c:	14c02815 	stw	r19,160(r2)
  801810:	ad7fffc4 	addi	r21,r21,-1
  801814:	00bfffc4 	movi	r2,-1
  801818:	a5000044 	addi	r20,r20,1
  80181c:	a8bf7a1e 	bne	r21,r2,801608 <__kernel_rem_pio2f+0x5d0>
  801820:	003f9806 	br	801684 <__kernel_rem_pio2f+0x64c>
  801824:	0021883a 	mov	r16,zero
  801828:	003ece06 	br	801364 <__kernel_rem_pio2f+0x32c>
  80182c:	00800084 	movi	r2,2
  801830:	d8805415 	stw	r2,336(sp)
  801834:	003eb206 	br	801300 <__kernel_rem_pio2f+0x2c8>
  801838:	d9c06817 	ldw	r7,416(sp)
  80183c:	008000c4 	movi	r2,3
  801840:	38bfb81e 	bne	r7,r2,801724 <__kernel_rem_pio2f+0x6ec>
  801844:	0580190e 	bge	zero,r22,8018ac <__kernel_rem_pio2f+0x874>
  801848:	b021883a 	mov	r16,r22
  80184c:	00000106 	br	801854 <__kernel_rem_pio2f+0x81c>
  801850:	a821883a 	mov	r16,r21
  801854:	857fffc4 	addi	r21,r16,-1
  801858:	ad63883a 	add	r17,r21,r21
  80185c:	8421883a 	add	r16,r16,r16
  801860:	8c63883a 	add	r17,r17,r17
  801864:	8421883a 	add	r16,r16,r16
  801868:	8ee3883a 	add	r17,r17,sp
  80186c:	86e1883a 	add	r16,r16,sp
  801870:	8c802817 	ldw	r18,160(r17)
  801874:	84c02817 	ldw	r19,160(r16)
  801878:	9009883a 	mov	r4,r18
  80187c:	980b883a 	mov	r5,r19
  801880:	08020580 	call	802058 <__addsf3>
  801884:	100b883a 	mov	r5,r2
  801888:	9009883a 	mov	r4,r18
  80188c:	1029883a 	mov	r20,r2
  801890:	0801fe80 	call	801fe8 <__subsf3>
  801894:	100b883a 	mov	r5,r2
  801898:	9809883a 	mov	r4,r19
  80189c:	08020580 	call	802058 <__addsf3>
  8018a0:	80802815 	stw	r2,160(r16)
  8018a4:	8d002815 	stw	r20,160(r17)
  8018a8:	a83fe91e 	bne	r21,zero,801850 <__kernel_rem_pio2f+0x818>
  8018ac:	00800044 	movi	r2,1
  8018b0:	1580840e 	bge	r2,r22,801ac4 <__kernel_rem_pio2f+0xa8c>
  8018b4:	b007883a 	mov	r3,r22
  8018b8:	1cffffc4 	addi	r19,r3,-1
  8018bc:	18e1883a 	add	r16,r3,r3
  8018c0:	9ce3883a 	add	r17,r19,r19
  8018c4:	8c63883a 	add	r17,r17,r17
  8018c8:	8421883a 	add	r16,r16,r16
  8018cc:	8ee3883a 	add	r17,r17,sp
  8018d0:	86e1883a 	add	r16,r16,sp
  8018d4:	8c802817 	ldw	r18,160(r17)
  8018d8:	85002817 	ldw	r20,160(r16)
  8018dc:	9009883a 	mov	r4,r18
  8018e0:	a00b883a 	mov	r5,r20
  8018e4:	08020580 	call	802058 <__addsf3>
  8018e8:	100b883a 	mov	r5,r2
  8018ec:	9009883a 	mov	r4,r18
  8018f0:	102b883a 	mov	r21,r2
  8018f4:	0801fe80 	call	801fe8 <__subsf3>
  8018f8:	100b883a 	mov	r5,r2
  8018fc:	a009883a 	mov	r4,r20
  801900:	08020580 	call	802058 <__addsf3>
  801904:	80802815 	stw	r2,160(r16)
  801908:	01000044 	movi	r4,1
  80190c:	9807883a 	mov	r3,r19
  801910:	8d402815 	stw	r21,160(r17)
  801914:	993fe81e 	bne	r19,r4,8018b8 <__kernel_rem_pio2f+0x880>
  801918:	b585883a 	add	r2,r22,r22
  80191c:	1085883a 	add	r2,r2,r2
  801920:	16c5883a 	add	r2,r2,sp
  801924:	2025883a 	mov	r18,r4
  801928:	b021883a 	mov	r16,r22
  80192c:	14402804 	addi	r17,r2,160
  801930:	0009883a 	mov	r4,zero
  801934:	89400017 	ldw	r5,0(r17)
  801938:	843fffc4 	addi	r16,r16,-1
  80193c:	8c7fff04 	addi	r17,r17,-4
  801940:	08020580 	call	802058 <__addsf3>
  801944:	1009883a 	mov	r4,r2
  801948:	84bffa1e 	bne	r16,r18,801934 <__kernel_rem_pio2f+0x8fc>
  80194c:	d9405417 	ldw	r5,336(sp)
  801950:	2800501e 	bne	r5,zero,801a94 <__kernel_rem_pio2f+0xa5c>
  801954:	d8802817 	ldw	r2,160(sp)
  801958:	d8c02917 	ldw	r3,164(sp)
  80195c:	d9805817 	ldw	r6,352(sp)
  801960:	31000215 	stw	r4,8(r6)
  801964:	30800015 	stw	r2,0(r6)
  801968:	30c00115 	stw	r3,4(r6)
  80196c:	003f6d06 	br	801724 <__kernel_rem_pio2f+0x6ec>
  801970:	303f6c1e 	bne	r6,zero,801724 <__kernel_rem_pio2f+0x6ec>
  801974:	b0005516 	blt	r22,zero,801acc <__kernel_rem_pio2f+0xa94>
  801978:	b585883a 	add	r2,r22,r22
  80197c:	1085883a 	add	r2,r2,r2
  801980:	16c5883a 	add	r2,r2,sp
  801984:	14402804 	addi	r17,r2,160
  801988:	b021883a 	mov	r16,r22
  80198c:	0005883a 	mov	r2,zero
  801990:	04bfffc4 	movi	r18,-1
  801994:	89400017 	ldw	r5,0(r17)
  801998:	1009883a 	mov	r4,r2
  80199c:	843fffc4 	addi	r16,r16,-1
  8019a0:	08020580 	call	802058 <__addsf3>
  8019a4:	8c7fff04 	addi	r17,r17,-4
  8019a8:	84bffa1e 	bne	r16,r18,801994 <__kernel_rem_pio2f+0x95c>
  8019ac:	d8c05417 	ldw	r3,336(sp)
  8019b0:	18000126 	beq	r3,zero,8019b8 <__kernel_rem_pio2f+0x980>
  8019b4:	10a0003c 	xorhi	r2,r2,32768
  8019b8:	d9005817 	ldw	r4,352(sp)
  8019bc:	20800015 	stw	r2,0(r4)
  8019c0:	003f5806 	br	801724 <__kernel_rem_pio2f+0x6ec>
  8019c4:	30800104 	addi	r2,r6,4
  8019c8:	1005d0fa 	srai	r2,r2,3
  8019cc:	d8805015 	stw	r2,320(sp)
  8019d0:	103db60e 	bge	r2,zero,8010ac <__kernel_rem_pio2f+0x74>
  8019d4:	d8005015 	stw	zero,320(sp)
  8019d8:	003db406 	br	8010ac <__kernel_rem_pio2f+0x74>
  8019dc:	9809883a 	mov	r4,r19
  8019e0:	070bc83a 	sub	r5,zero,fp
  8019e4:	0801ca00 	call	801ca0 <scalbnf>
  8019e8:	1009883a 	mov	r4,r2
  8019ec:	0150e034 	movhi	r5,17280
  8019f0:	1027883a 	mov	r19,r2
  8019f4:	08025000 	call	802500 <__gesf2>
  8019f8:	10002016 	blt	r2,zero,801a7c <__kernel_rem_pio2f+0xa44>
  8019fc:	014ee034 	movhi	r5,15232
  801a00:	9809883a 	mov	r4,r19
  801a04:	08020bc0 	call	8020bc <__mulsf3>
  801a08:	1009883a 	mov	r4,r2
  801a0c:	08026100 	call	802610 <__fixsfsi>
  801a10:	1009883a 	mov	r4,r2
  801a14:	08025780 	call	802578 <__floatsisf>
  801a18:	1009883a 	mov	r4,r2
  801a1c:	0170e034 	movhi	r5,50048
  801a20:	1025883a 	mov	r18,r2
  801a24:	08020bc0 	call	8020bc <__mulsf3>
  801a28:	100b883a 	mov	r5,r2
  801a2c:	9809883a 	mov	r4,r19
  801a30:	08020580 	call	802058 <__addsf3>
  801a34:	1009883a 	mov	r4,r2
  801a38:	8c63883a 	add	r17,r17,r17
  801a3c:	b5800044 	addi	r22,r22,1
  801a40:	08026100 	call	802610 <__fixsfsi>
  801a44:	8ee3883a 	add	r17,r17,sp
  801a48:	b5a1883a 	add	r16,r22,r22
  801a4c:	8421883a 	add	r16,r16,r16
  801a50:	9009883a 	mov	r4,r18
  801a54:	88800015 	stw	r2,0(r17)
  801a58:	86e1883a 	add	r16,r16,sp
  801a5c:	08026100 	call	802610 <__fixsfsi>
  801a60:	e7000204 	addi	fp,fp,8
  801a64:	80800015 	stw	r2,0(r16)
  801a68:	003ecd06 	br	8015a0 <__kernel_rem_pio2f+0x568>
  801a6c:	10e0003c 	xorhi	r3,r2,32768
  801a70:	003f1906 	br	8016d8 <__kernel_rem_pio2f+0x6a0>
  801a74:	302d883a 	mov	r22,r6
  801a78:	003ec906 	br	8015a0 <__kernel_rem_pio2f+0x568>
  801a7c:	8c61883a 	add	r16,r17,r17
  801a80:	9809883a 	mov	r4,r19
  801a84:	86e1883a 	add	r16,r16,sp
  801a88:	08026100 	call	802610 <__fixsfsi>
  801a8c:	80800015 	stw	r2,0(r16)
  801a90:	003ec306 	br	8015a0 <__kernel_rem_pio2f+0x568>
  801a94:	d8c02817 	ldw	r3,160(sp)
  801a98:	d8802917 	ldw	r2,164(sp)
  801a9c:	d9c05817 	ldw	r7,352(sp)
  801aa0:	2120003c 	xorhi	r4,r4,32768
  801aa4:	18e0003c 	xorhi	r3,r3,32768
  801aa8:	10a0003c 	xorhi	r2,r2,32768
  801aac:	39000215 	stw	r4,8(r7)
  801ab0:	38c00015 	stw	r3,0(r7)
  801ab4:	38800115 	stw	r2,4(r7)
  801ab8:	003f1a06 	br	801724 <__kernel_rem_pio2f+0x6ec>
  801abc:	0005883a 	mov	r2,zero
  801ac0:	003f0206 	br	8016cc <__kernel_rem_pio2f+0x694>
  801ac4:	0009883a 	mov	r4,zero
  801ac8:	003fa006 	br	80194c <__kernel_rem_pio2f+0x914>
  801acc:	0005883a 	mov	r2,zero
  801ad0:	003fb606 	br	8019ac <__kernel_rem_pio2f+0x974>

00801ad4 <__kernel_sinf>:
  801ad4:	00e00034 	movhi	r3,32768
  801ad8:	18ffffc4 	addi	r3,r3,-1
  801adc:	defff904 	addi	sp,sp,-28
  801ae0:	1906703a 	and	r3,r3,r4
  801ae4:	008c8034 	movhi	r2,12800
  801ae8:	10bfffc4 	addi	r2,r2,-1
  801aec:	dd400515 	stw	r21,20(sp)
  801af0:	dc800215 	stw	r18,8(sp)
  801af4:	dc000015 	stw	r16,0(sp)
  801af8:	dfc00615 	stw	ra,24(sp)
  801afc:	dd000415 	stw	r20,16(sp)
  801b00:	dcc00315 	stw	r19,12(sp)
  801b04:	dc400115 	stw	r17,4(sp)
  801b08:	2025883a 	mov	r18,r4
  801b0c:	3021883a 	mov	r16,r6
  801b10:	282b883a 	mov	r21,r5
  801b14:	10c00216 	blt	r2,r3,801b20 <__kernel_sinf+0x4c>
  801b18:	08026100 	call	802610 <__fixsfsi>
  801b1c:	10004326 	beq	r2,zero,801c2c <__kernel_sinf+0x158>
  801b20:	9009883a 	mov	r4,r18
  801b24:	900b883a 	mov	r5,r18
  801b28:	08020bc0 	call	8020bc <__mulsf3>
  801b2c:	1023883a 	mov	r17,r2
  801b30:	9009883a 	mov	r4,r18
  801b34:	100b883a 	mov	r5,r2
  801b38:	08020bc0 	call	8020bc <__mulsf3>
  801b3c:	8809883a 	mov	r4,r17
  801b40:	014bcbf4 	movhi	r5,12079
  801b44:	297274c4 	addi	r5,r5,-13869
  801b48:	1029883a 	mov	r20,r2
  801b4c:	08020bc0 	call	8020bc <__mulsf3>
  801b50:	1009883a 	mov	r4,r2
  801b54:	014cb5f4 	movhi	r5,13015
  801b58:	294bcd04 	addi	r5,r5,12084
  801b5c:	0801fe80 	call	801fe8 <__subsf3>
  801b60:	100b883a 	mov	r5,r2
  801b64:	8809883a 	mov	r4,r17
  801b68:	08020bc0 	call	8020bc <__mulsf3>
  801b6c:	1009883a 	mov	r4,r2
  801b70:	014d8e74 	movhi	r5,13881
  801b74:	297bc6c4 	addi	r5,r5,-4325
  801b78:	08020580 	call	802058 <__addsf3>
  801b7c:	100b883a 	mov	r5,r2
  801b80:	8809883a 	mov	r4,r17
  801b84:	08020bc0 	call	8020bc <__mulsf3>
  801b88:	1009883a 	mov	r4,r2
  801b8c:	014e5434 	movhi	r5,14672
  801b90:	29434044 	addi	r5,r5,3329
  801b94:	0801fe80 	call	801fe8 <__subsf3>
  801b98:	100b883a 	mov	r5,r2
  801b9c:	8809883a 	mov	r4,r17
  801ba0:	08020bc0 	call	8020bc <__mulsf3>
  801ba4:	1009883a 	mov	r4,r2
  801ba8:	014f0274 	movhi	r5,15369
  801bac:	29622244 	addi	r5,r5,-30583
  801bb0:	08020580 	call	802058 <__addsf3>
  801bb4:	1027883a 	mov	r19,r2
  801bb8:	a809883a 	mov	r4,r21
  801bbc:	014fc034 	movhi	r5,16128
  801bc0:	80002426 	beq	r16,zero,801c54 <__kernel_sinf+0x180>
  801bc4:	08020bc0 	call	8020bc <__mulsf3>
  801bc8:	a009883a 	mov	r4,r20
  801bcc:	980b883a 	mov	r5,r19
  801bd0:	1021883a 	mov	r16,r2
  801bd4:	08020bc0 	call	8020bc <__mulsf3>
  801bd8:	100b883a 	mov	r5,r2
  801bdc:	8009883a 	mov	r4,r16
  801be0:	0801fe80 	call	801fe8 <__subsf3>
  801be4:	100b883a 	mov	r5,r2
  801be8:	8809883a 	mov	r4,r17
  801bec:	08020bc0 	call	8020bc <__mulsf3>
  801bf0:	1009883a 	mov	r4,r2
  801bf4:	a80b883a 	mov	r5,r21
  801bf8:	0801fe80 	call	801fe8 <__subsf3>
  801bfc:	a009883a 	mov	r4,r20
  801c00:	014f8af4 	movhi	r5,15915
  801c04:	296aaac4 	addi	r5,r5,-21845
  801c08:	1021883a 	mov	r16,r2
  801c0c:	08020bc0 	call	8020bc <__mulsf3>
  801c10:	100b883a 	mov	r5,r2
  801c14:	8009883a 	mov	r4,r16
  801c18:	08020580 	call	802058 <__addsf3>
  801c1c:	100b883a 	mov	r5,r2
  801c20:	9009883a 	mov	r4,r18
  801c24:	0801fe80 	call	801fe8 <__subsf3>
  801c28:	1025883a 	mov	r18,r2
  801c2c:	9005883a 	mov	r2,r18
  801c30:	dfc00617 	ldw	ra,24(sp)
  801c34:	dd400517 	ldw	r21,20(sp)
  801c38:	dd000417 	ldw	r20,16(sp)
  801c3c:	dcc00317 	ldw	r19,12(sp)
  801c40:	dc800217 	ldw	r18,8(sp)
  801c44:	dc400117 	ldw	r17,4(sp)
  801c48:	dc000017 	ldw	r16,0(sp)
  801c4c:	dec00704 	addi	sp,sp,28
  801c50:	f800283a 	ret
  801c54:	100b883a 	mov	r5,r2
  801c58:	8809883a 	mov	r4,r17
  801c5c:	08020bc0 	call	8020bc <__mulsf3>
  801c60:	1009883a 	mov	r4,r2
  801c64:	014f8af4 	movhi	r5,15915
  801c68:	296aaac4 	addi	r5,r5,-21845
  801c6c:	0801fe80 	call	801fe8 <__subsf3>
  801c70:	100b883a 	mov	r5,r2
  801c74:	a009883a 	mov	r4,r20
  801c78:	08020bc0 	call	8020bc <__mulsf3>
  801c7c:	100b883a 	mov	r5,r2
  801c80:	9009883a 	mov	r4,r18
  801c84:	08020580 	call	802058 <__addsf3>
  801c88:	1025883a 	mov	r18,r2
  801c8c:	003fe706 	br	801c2c <__kernel_sinf+0x158>

00801c90 <fabsf>:
  801c90:	00a00034 	movhi	r2,32768
  801c94:	10bfffc4 	addi	r2,r2,-1
  801c98:	2084703a 	and	r2,r4,r2
  801c9c:	f800283a 	ret

00801ca0 <scalbnf>:
  801ca0:	00a00034 	movhi	r2,32768
  801ca4:	10bfffc4 	addi	r2,r2,-1
  801ca8:	defffe04 	addi	sp,sp,-8
  801cac:	2086703a 	and	r3,r4,r2
  801cb0:	dc000015 	stw	r16,0(sp)
  801cb4:	dfc00115 	stw	ra,4(sp)
  801cb8:	200d883a 	mov	r6,r4
  801cbc:	200f883a 	mov	r7,r4
  801cc0:	2821883a 	mov	r16,r5
  801cc4:	18001a26 	beq	r3,zero,801d30 <scalbnf+0x90>
  801cc8:	009fe034 	movhi	r2,32640
  801ccc:	10bfffc4 	addi	r2,r2,-1
  801cd0:	10c01c36 	bltu	r2,r3,801d44 <scalbnf+0xa4>
  801cd4:	00802034 	movhi	r2,128
  801cd8:	10bfffc4 	addi	r2,r2,-1
  801cdc:	10c02136 	bltu	r2,r3,801d64 <scalbnf+0xc4>
  801ce0:	01530034 	movhi	r5,19456
  801ce4:	08020bc0 	call	8020bc <__mulsf3>
  801ce8:	1009883a 	mov	r4,r2
  801cec:	100d883a 	mov	r6,r2
  801cf0:	00bffff4 	movhi	r2,65535
  801cf4:	108f2c04 	addi	r2,r2,15536
  801cf8:	80802616 	blt	r16,r2,801d94 <scalbnf+0xf4>
  801cfc:	209fe02c 	andhi	r2,r4,32640
  801d00:	1005d5fa 	srai	r2,r2,23
  801d04:	200f883a 	mov	r7,r4
  801d08:	10bff9c4 	addi	r2,r2,-25
  801d0c:	1407883a 	add	r3,r2,r16
  801d10:	00803f84 	movi	r2,254
  801d14:	10c01516 	blt	r2,r3,801d6c <scalbnf+0xcc>
  801d18:	00c0230e 	bge	zero,r3,801da8 <scalbnf+0x108>
  801d1c:	180695fa 	slli	r3,r3,23
  801d20:	00a02034 	movhi	r2,32896
  801d24:	10bfffc4 	addi	r2,r2,-1
  801d28:	3884703a 	and	r2,r7,r2
  801d2c:	10ccb03a 	or	r6,r2,r3
  801d30:	3005883a 	mov	r2,r6
  801d34:	dfc00117 	ldw	ra,4(sp)
  801d38:	dc000017 	ldw	r16,0(sp)
  801d3c:	dec00204 	addi	sp,sp,8
  801d40:	f800283a 	ret
  801d44:	200b883a 	mov	r5,r4
  801d48:	08020580 	call	802058 <__addsf3>
  801d4c:	100d883a 	mov	r6,r2
  801d50:	3005883a 	mov	r2,r6
  801d54:	dfc00117 	ldw	ra,4(sp)
  801d58:	dc000017 	ldw	r16,0(sp)
  801d5c:	dec00204 	addi	sp,sp,8
  801d60:	f800283a 	ret
  801d64:	1804d5fa 	srli	r2,r3,23
  801d68:	003fe806 	br	801d0c <scalbnf+0x6c>
  801d6c:	041c52b4 	movhi	r16,29002
  801d70:	843cb284 	addi	r16,r16,-3382
  801d74:	300b883a 	mov	r5,r6
  801d78:	8009883a 	mov	r4,r16
  801d7c:	0801dec0 	call	801dec <copysignf>
  801d80:	1009883a 	mov	r4,r2
  801d84:	800b883a 	mov	r5,r16
  801d88:	08020bc0 	call	8020bc <__mulsf3>
  801d8c:	100d883a 	mov	r6,r2
  801d90:	003fe706 	br	801d30 <scalbnf+0x90>
  801d94:	014368b4 	movhi	r5,3490
  801d98:	29509804 	addi	r5,r5,16992
  801d9c:	08020bc0 	call	8020bc <__mulsf3>
  801da0:	100d883a 	mov	r6,r2
  801da4:	003fe206 	br	801d30 <scalbnf+0x90>
  801da8:	00bffa84 	movi	r2,-22
  801dac:	1880050e 	bge	r3,r2,801dc4 <scalbnf+0x124>
  801db0:	00b0d414 	movui	r2,50000
  801db4:	143fed16 	blt	r2,r16,801d6c <scalbnf+0xcc>
  801db8:	040368b4 	movhi	r16,3490
  801dbc:	84109804 	addi	r16,r16,16992
  801dc0:	003fec06 	br	801d74 <scalbnf+0xd4>
  801dc4:	18800644 	addi	r2,r3,25
  801dc8:	100495fa 	slli	r2,r2,23
  801dcc:	01202034 	movhi	r4,32896
  801dd0:	213fffc4 	addi	r4,r4,-1
  801dd4:	3908703a 	and	r4,r7,r4
  801dd8:	2088b03a 	or	r4,r4,r2
  801ddc:	014cc034 	movhi	r5,13056
  801de0:	08020bc0 	call	8020bc <__mulsf3>
  801de4:	100d883a 	mov	r6,r2
  801de8:	003fd106 	br	801d30 <scalbnf+0x90>

00801dec <copysignf>:
  801dec:	00a00034 	movhi	r2,32768
  801df0:	10bfffc4 	addi	r2,r2,-1
  801df4:	2088703a 	and	r4,r4,r2
  801df8:	28a0002c 	andhi	r2,r5,32768
  801dfc:	2084b03a 	or	r2,r4,r2
  801e00:	f800283a 	ret

00801e04 <_fpadd_parts>:
  801e04:	21c00017 	ldw	r7,0(r4)
  801e08:	02000044 	movi	r8,1
  801e0c:	41c0332e 	bgeu	r8,r7,801edc <_fpadd_parts+0xd8>
  801e10:	28800017 	ldw	r2,0(r5)
  801e14:	4080462e 	bgeu	r8,r2,801f30 <_fpadd_parts+0x12c>
  801e18:	00c00104 	movi	r3,4
  801e1c:	38c06b26 	beq	r7,r3,801fcc <_fpadd_parts+0x1c8>
  801e20:	10c04326 	beq	r2,r3,801f30 <_fpadd_parts+0x12c>
  801e24:	00c00084 	movi	r3,2
  801e28:	10c02e26 	beq	r2,r3,801ee4 <_fpadd_parts+0xe0>
  801e2c:	38c04026 	beq	r7,r3,801f30 <_fpadd_parts+0x12c>
  801e30:	22800217 	ldw	r10,8(r4)
  801e34:	28c00217 	ldw	r3,8(r5)
  801e38:	23000317 	ldw	r12,12(r4)
  801e3c:	2a400317 	ldw	r9,12(r5)
  801e40:	50cfc83a 	sub	r7,r10,r3
  801e44:	3817883a 	mov	r11,r7
  801e48:	38004f16 	blt	r7,zero,801f88 <_fpadd_parts+0x184>
  801e4c:	008007c4 	movi	r2,31
  801e50:	11c03316 	blt	r2,r7,801f20 <_fpadd_parts+0x11c>
  801e54:	02c0540e 	bge	zero,r11,801fa8 <_fpadd_parts+0x1a4>
  801e58:	41c4983a 	sll	r2,r8,r7
  801e5c:	49c6d83a 	srl	r3,r9,r7
  801e60:	10bfffc4 	addi	r2,r2,-1
  801e64:	4884703a 	and	r2,r9,r2
  801e68:	1004c03a 	cmpne	r2,r2,zero
  801e6c:	1892b03a 	or	r9,r3,r2
  801e70:	20c00117 	ldw	r3,4(r4)
  801e74:	28800117 	ldw	r2,4(r5)
  801e78:	18803c26 	beq	r3,r2,801f6c <_fpadd_parts+0x168>
  801e7c:	18002f26 	beq	r3,zero,801f3c <_fpadd_parts+0x138>
  801e80:	4b05c83a 	sub	r2,r9,r12
  801e84:	10004216 	blt	r2,zero,801f90 <_fpadd_parts+0x18c>
  801e88:	32800215 	stw	r10,8(r6)
  801e8c:	30800315 	stw	r2,12(r6)
  801e90:	30000115 	stw	zero,4(r6)
  801e94:	31000317 	ldw	r4,12(r6)
  801e98:	01d00034 	movhi	r7,16384
  801e9c:	39ffff84 	addi	r7,r7,-2
  801ea0:	20bfffc4 	addi	r2,r4,-1
  801ea4:	2007883a 	mov	r3,r4
  801ea8:	38800836 	bltu	r7,r2,801ecc <_fpadd_parts+0xc8>
  801eac:	31400217 	ldw	r5,8(r6)
  801eb0:	18c9883a 	add	r4,r3,r3
  801eb4:	20bfffc4 	addi	r2,r4,-1
  801eb8:	297fffc4 	addi	r5,r5,-1
  801ebc:	2007883a 	mov	r3,r4
  801ec0:	38bffb2e 	bgeu	r7,r2,801eb0 <_fpadd_parts+0xac>
  801ec4:	31400215 	stw	r5,8(r6)
  801ec8:	31000315 	stw	r4,12(r6)
  801ecc:	008000c4 	movi	r2,3
  801ed0:	30800015 	stw	r2,0(r6)
  801ed4:	20001b16 	blt	r4,zero,801f44 <_fpadd_parts+0x140>
  801ed8:	3009883a 	mov	r4,r6
  801edc:	2005883a 	mov	r2,r4
  801ee0:	f800283a 	ret
  801ee4:	38fffd1e 	bne	r7,r3,801edc <_fpadd_parts+0xd8>
  801ee8:	31c00015 	stw	r7,0(r6)
  801eec:	20800117 	ldw	r2,4(r4)
  801ef0:	30800115 	stw	r2,4(r6)
  801ef4:	20c00217 	ldw	r3,8(r4)
  801ef8:	30c00215 	stw	r3,8(r6)
  801efc:	20800317 	ldw	r2,12(r4)
  801f00:	30800315 	stw	r2,12(r6)
  801f04:	20c00117 	ldw	r3,4(r4)
  801f08:	28800117 	ldw	r2,4(r5)
  801f0c:	3009883a 	mov	r4,r6
  801f10:	1886703a 	and	r3,r3,r2
  801f14:	2005883a 	mov	r2,r4
  801f18:	30c00115 	stw	r3,4(r6)
  801f1c:	f800283a 	ret
  801f20:	1a801716 	blt	r3,r10,801f80 <_fpadd_parts+0x17c>
  801f24:	1815883a 	mov	r10,r3
  801f28:	0019883a 	mov	r12,zero
  801f2c:	003fd006 	br	801e70 <_fpadd_parts+0x6c>
  801f30:	2809883a 	mov	r4,r5
  801f34:	2005883a 	mov	r2,r4
  801f38:	f800283a 	ret
  801f3c:	6245c83a 	sub	r2,r12,r9
  801f40:	003fd006 	br	801e84 <_fpadd_parts+0x80>
  801f44:	30800217 	ldw	r2,8(r6)
  801f48:	2006d07a 	srli	r3,r4,1
  801f4c:	2100004c 	andi	r4,r4,1
  801f50:	10800044 	addi	r2,r2,1
  801f54:	1906b03a 	or	r3,r3,r4
  801f58:	3009883a 	mov	r4,r6
  801f5c:	30800215 	stw	r2,8(r6)
  801f60:	2005883a 	mov	r2,r4
  801f64:	30c00315 	stw	r3,12(r6)
  801f68:	f800283a 	ret
  801f6c:	4b09883a 	add	r4,r9,r12
  801f70:	30c00115 	stw	r3,4(r6)
  801f74:	32800215 	stw	r10,8(r6)
  801f78:	31000315 	stw	r4,12(r6)
  801f7c:	003fd306 	br	801ecc <_fpadd_parts+0xc8>
  801f80:	0013883a 	mov	r9,zero
  801f84:	003fba06 	br	801e70 <_fpadd_parts+0x6c>
  801f88:	01cfc83a 	sub	r7,zero,r7
  801f8c:	003faf06 	br	801e4c <_fpadd_parts+0x48>
  801f90:	0089c83a 	sub	r4,zero,r2
  801f94:	00800044 	movi	r2,1
  801f98:	30800115 	stw	r2,4(r6)
  801f9c:	32800215 	stw	r10,8(r6)
  801fa0:	31000315 	stw	r4,12(r6)
  801fa4:	003fbb06 	br	801e94 <_fpadd_parts+0x90>
  801fa8:	583fb126 	beq	r11,zero,801e70 <_fpadd_parts+0x6c>
  801fac:	41c4983a 	sll	r2,r8,r7
  801fb0:	61c6d83a 	srl	r3,r12,r7
  801fb4:	51d5883a 	add	r10,r10,r7
  801fb8:	10bfffc4 	addi	r2,r2,-1
  801fbc:	6084703a 	and	r2,r12,r2
  801fc0:	1004c03a 	cmpne	r2,r2,zero
  801fc4:	1898b03a 	or	r12,r3,r2
  801fc8:	003fa906 	br	801e70 <_fpadd_parts+0x6c>
  801fcc:	11ffc31e 	bne	r2,r7,801edc <_fpadd_parts+0xd8>
  801fd0:	28c00117 	ldw	r3,4(r5)
  801fd4:	20800117 	ldw	r2,4(r4)
  801fd8:	10ffc026 	beq	r2,r3,801edc <_fpadd_parts+0xd8>
  801fdc:	01002074 	movhi	r4,129
  801fe0:	2100e804 	addi	r4,r4,928
  801fe4:	003fbd06 	br	801edc <_fpadd_parts+0xd8>

00801fe8 <__subsf3>:
  801fe8:	deffef04 	addi	sp,sp,-68
  801fec:	dcc00f15 	stw	r19,60(sp)
  801ff0:	dcc00204 	addi	r19,sp,8
  801ff4:	dc400e15 	stw	r17,56(sp)
  801ff8:	d9000015 	stw	r4,0(sp)
  801ffc:	d9400115 	stw	r5,4(sp)
  802000:	d809883a 	mov	r4,sp
  802004:	980b883a 	mov	r5,r19
  802008:	dc400604 	addi	r17,sp,24
  80200c:	dfc01015 	stw	ra,64(sp)
  802010:	080353c0 	call	80353c <__unpack_f>
  802014:	d9000104 	addi	r4,sp,4
  802018:	880b883a 	mov	r5,r17
  80201c:	080353c0 	call	80353c <__unpack_f>
  802020:	d8800717 	ldw	r2,28(sp)
  802024:	9809883a 	mov	r4,r19
  802028:	880b883a 	mov	r5,r17
  80202c:	d9800a04 	addi	r6,sp,40
  802030:	1080005c 	xori	r2,r2,1
  802034:	d8800715 	stw	r2,28(sp)
  802038:	0801e040 	call	801e04 <_fpadd_parts>
  80203c:	1009883a 	mov	r4,r2
  802040:	08033dc0 	call	8033dc <__pack_f>
  802044:	dfc01017 	ldw	ra,64(sp)
  802048:	dcc00f17 	ldw	r19,60(sp)
  80204c:	dc400e17 	ldw	r17,56(sp)
  802050:	dec01104 	addi	sp,sp,68
  802054:	f800283a 	ret

00802058 <__addsf3>:
  802058:	deffef04 	addi	sp,sp,-68
  80205c:	dcc00f15 	stw	r19,60(sp)
  802060:	dcc00204 	addi	r19,sp,8
  802064:	dc400e15 	stw	r17,56(sp)
  802068:	d9000015 	stw	r4,0(sp)
  80206c:	d9400115 	stw	r5,4(sp)
  802070:	d809883a 	mov	r4,sp
  802074:	980b883a 	mov	r5,r19
  802078:	dc400604 	addi	r17,sp,24
  80207c:	dfc01015 	stw	ra,64(sp)
  802080:	080353c0 	call	80353c <__unpack_f>
  802084:	d9000104 	addi	r4,sp,4
  802088:	880b883a 	mov	r5,r17
  80208c:	080353c0 	call	80353c <__unpack_f>
  802090:	d9800a04 	addi	r6,sp,40
  802094:	9809883a 	mov	r4,r19
  802098:	880b883a 	mov	r5,r17
  80209c:	0801e040 	call	801e04 <_fpadd_parts>
  8020a0:	1009883a 	mov	r4,r2
  8020a4:	08033dc0 	call	8033dc <__pack_f>
  8020a8:	dfc01017 	ldw	ra,64(sp)
  8020ac:	dcc00f17 	ldw	r19,60(sp)
  8020b0:	dc400e17 	ldw	r17,56(sp)
  8020b4:	dec01104 	addi	sp,sp,68
  8020b8:	f800283a 	ret

008020bc <__mulsf3>:
  8020bc:	deffef04 	addi	sp,sp,-68
  8020c0:	dc400f15 	stw	r17,60(sp)
  8020c4:	dc400204 	addi	r17,sp,8
  8020c8:	dc000e15 	stw	r16,56(sp)
  8020cc:	d9000015 	stw	r4,0(sp)
  8020d0:	d9400115 	stw	r5,4(sp)
  8020d4:	d809883a 	mov	r4,sp
  8020d8:	880b883a 	mov	r5,r17
  8020dc:	dc000604 	addi	r16,sp,24
  8020e0:	dfc01015 	stw	ra,64(sp)
  8020e4:	080353c0 	call	80353c <__unpack_f>
  8020e8:	d9000104 	addi	r4,sp,4
  8020ec:	800b883a 	mov	r5,r16
  8020f0:	080353c0 	call	80353c <__unpack_f>
  8020f4:	d9000217 	ldw	r4,8(sp)
  8020f8:	00800044 	movi	r2,1
  8020fc:	01400104 	movi	r5,4
  802100:	1100142e 	bgeu	r2,r4,802154 <__mulsf3+0x98>
  802104:	d8c00617 	ldw	r3,24(sp)
  802108:	10c0052e 	bgeu	r2,r3,802120 <__mulsf3+0x64>
  80210c:	21400f26 	beq	r4,r5,80214c <__mulsf3+0x90>
  802110:	19405d26 	beq	r3,r5,802288 <__mulsf3+0x1cc>
  802114:	00800084 	movi	r2,2
  802118:	20800e26 	beq	r4,r2,802154 <__mulsf3+0x98>
  80211c:	1880181e 	bne	r3,r2,802180 <__mulsf3+0xc4>
  802120:	d8c00717 	ldw	r3,28(sp)
  802124:	d8800317 	ldw	r2,12(sp)
  802128:	8009883a 	mov	r4,r16
  80212c:	10c4c03a 	cmpne	r2,r2,r3
  802130:	d8800715 	stw	r2,28(sp)
  802134:	08033dc0 	call	8033dc <__pack_f>
  802138:	dfc01017 	ldw	ra,64(sp)
  80213c:	dc400f17 	ldw	r17,60(sp)
  802140:	dc000e17 	ldw	r16,56(sp)
  802144:	dec01104 	addi	sp,sp,68
  802148:	f800283a 	ret
  80214c:	00800084 	movi	r2,2
  802150:	18804f26 	beq	r3,r2,802290 <__mulsf3+0x1d4>
  802154:	d8800317 	ldw	r2,12(sp)
  802158:	d8c00717 	ldw	r3,28(sp)
  80215c:	8809883a 	mov	r4,r17
  802160:	10c4c03a 	cmpne	r2,r2,r3
  802164:	d8800315 	stw	r2,12(sp)
  802168:	08033dc0 	call	8033dc <__pack_f>
  80216c:	dfc01017 	ldw	ra,64(sp)
  802170:	dc400f17 	ldw	r17,60(sp)
  802174:	dc000e17 	ldw	r16,56(sp)
  802178:	dec01104 	addi	sp,sp,68
  80217c:	f800283a 	ret
  802180:	d8800517 	ldw	r2,20(sp)
  802184:	da000917 	ldw	r8,36(sp)
  802188:	0013883a 	mov	r9,zero
  80218c:	0007883a 	mov	r3,zero
  802190:	480f883a 	mov	r7,r9
  802194:	180b883a 	mov	r5,r3
  802198:	400d883a 	mov	r6,r8
  80219c:	1009883a 	mov	r4,r2
  8021a0:	08032380 	call	803238 <__muldi3>
  8021a4:	da800417 	ldw	r10,16(sp)
  8021a8:	d9800817 	ldw	r6,32(sp)
  8021ac:	da400317 	ldw	r9,12(sp)
  8021b0:	52800084 	addi	r10,r10,2
  8021b4:	3295883a 	add	r10,r6,r10
  8021b8:	d9800717 	ldw	r6,28(sp)
  8021bc:	180b883a 	mov	r5,r3
  8021c0:	180f883a 	mov	r7,r3
  8021c4:	4992c03a 	cmpne	r9,r9,r6
  8021c8:	da400b15 	stw	r9,44(sp)
  8021cc:	1007883a 	mov	r3,r2
  8021d0:	da800c15 	stw	r10,48(sp)
  8021d4:	2800070e 	bge	r5,zero,8021f4 <__mulsf3+0x138>
  8021d8:	2880004c 	andi	r2,r5,1
  8021dc:	1005003a 	cmpeq	r2,r2,zero
  8021e0:	500d883a 	mov	r6,r10
  8021e4:	10001e26 	beq	r2,zero,802260 <__mulsf3+0x1a4>
  8021e8:	380ed07a 	srli	r7,r7,1
  8021ec:	31800044 	addi	r6,r6,1
  8021f0:	d9800c15 	stw	r6,48(sp)
  8021f4:	01100034 	movhi	r4,16384
  8021f8:	213fffc4 	addi	r4,r4,-1
  8021fc:	21c00b36 	bltu	r4,r7,80222c <__mulsf3+0x170>
  802200:	d8800c17 	ldw	r2,48(sp)
  802204:	00000206 	br	802210 <__mulsf3+0x154>
  802208:	18c7883a 	add	r3,r3,r3
  80220c:	21c00636 	bltu	r4,r7,802228 <__mulsf3+0x16c>
  802210:	10bfffc4 	addi	r2,r2,-1
  802214:	39cf883a 	add	r7,r7,r7
  802218:	183ffb0e 	bge	r3,zero,802208 <__mulsf3+0x14c>
  80221c:	39c00054 	ori	r7,r7,1
  802220:	18c7883a 	add	r3,r3,r3
  802224:	21fffa2e 	bgeu	r4,r7,802210 <__mulsf3+0x154>
  802228:	d8800c15 	stw	r2,48(sp)
  80222c:	39001fcc 	andi	r4,r7,127
  802230:	00801004 	movi	r2,64
  802234:	20800d26 	beq	r4,r2,80226c <__mulsf3+0x1b0>
  802238:	008000c4 	movi	r2,3
  80223c:	d9000a04 	addi	r4,sp,40
  802240:	d9c00d15 	stw	r7,52(sp)
  802244:	d8800a15 	stw	r2,40(sp)
  802248:	08033dc0 	call	8033dc <__pack_f>
  80224c:	dfc01017 	ldw	ra,64(sp)
  802250:	dc400f17 	ldw	r17,60(sp)
  802254:	dc000e17 	ldw	r16,56(sp)
  802258:	dec01104 	addi	sp,sp,68
  80225c:	f800283a 	ret
  802260:	1804d07a 	srli	r2,r3,1
  802264:	10e00034 	orhi	r3,r2,32768
  802268:	003fdf06 	br	8021e8 <__mulsf3+0x12c>
  80226c:	3880200c 	andi	r2,r7,128
  802270:	103ff11e 	bne	r2,zero,802238 <__mulsf3+0x17c>
  802274:	183ff026 	beq	r3,zero,802238 <__mulsf3+0x17c>
  802278:	3907883a 	add	r3,r7,r4
  80227c:	00bfe004 	movi	r2,-128
  802280:	188e703a 	and	r7,r3,r2
  802284:	003fec06 	br	802238 <__mulsf3+0x17c>
  802288:	00800084 	movi	r2,2
  80228c:	20bfa41e 	bne	r4,r2,802120 <__mulsf3+0x64>
  802290:	01002074 	movhi	r4,129
  802294:	2100e804 	addi	r4,r4,928
  802298:	003fb306 	br	802168 <__mulsf3+0xac>

0080229c <__divsf3>:
  80229c:	defff304 	addi	sp,sp,-52
  8022a0:	dc400b15 	stw	r17,44(sp)
  8022a4:	dc400204 	addi	r17,sp,8
  8022a8:	dc000a15 	stw	r16,40(sp)
  8022ac:	d9000015 	stw	r4,0(sp)
  8022b0:	d9400115 	stw	r5,4(sp)
  8022b4:	d809883a 	mov	r4,sp
  8022b8:	880b883a 	mov	r5,r17
  8022bc:	dc000604 	addi	r16,sp,24
  8022c0:	dfc00c15 	stw	ra,48(sp)
  8022c4:	080353c0 	call	80353c <__unpack_f>
  8022c8:	d9000104 	addi	r4,sp,4
  8022cc:	800b883a 	mov	r5,r16
  8022d0:	080353c0 	call	80353c <__unpack_f>
  8022d4:	d9000217 	ldw	r4,8(sp)
  8022d8:	00800044 	movi	r2,1
  8022dc:	01800104 	movi	r6,4
  8022e0:	11000a2e 	bgeu	r2,r4,80230c <__divsf3+0x70>
  8022e4:	d9400617 	ldw	r5,24(sp)
  8022e8:	1140432e 	bgeu	r2,r5,8023f8 <__divsf3+0x15c>
  8022ec:	d8800317 	ldw	r2,12(sp)
  8022f0:	d8c00717 	ldw	r3,28(sp)
  8022f4:	10c4f03a 	xor	r2,r2,r3
  8022f8:	d8800315 	stw	r2,12(sp)
  8022fc:	21800226 	beq	r4,r6,802308 <__divsf3+0x6c>
  802300:	00800084 	movi	r2,2
  802304:	2080101e 	bne	r4,r2,802348 <__divsf3+0xac>
  802308:	29000726 	beq	r5,r4,802328 <__divsf3+0x8c>
  80230c:	8809883a 	mov	r4,r17
  802310:	08033dc0 	call	8033dc <__pack_f>
  802314:	dfc00c17 	ldw	ra,48(sp)
  802318:	dc400b17 	ldw	r17,44(sp)
  80231c:	dc000a17 	ldw	r16,40(sp)
  802320:	dec00d04 	addi	sp,sp,52
  802324:	f800283a 	ret
  802328:	01002074 	movhi	r4,129
  80232c:	2100e804 	addi	r4,r4,928
  802330:	08033dc0 	call	8033dc <__pack_f>
  802334:	dfc00c17 	ldw	ra,48(sp)
  802338:	dc400b17 	ldw	r17,44(sp)
  80233c:	dc000a17 	ldw	r16,40(sp)
  802340:	dec00d04 	addi	sp,sp,52
  802344:	f800283a 	ret
  802348:	29802d26 	beq	r5,r6,802400 <__divsf3+0x164>
  80234c:	28801a26 	beq	r5,r2,8023b8 <__divsf3+0x11c>
  802350:	d8c00417 	ldw	r3,16(sp)
  802354:	d8800817 	ldw	r2,32(sp)
  802358:	d9000517 	ldw	r4,20(sp)
  80235c:	d9800917 	ldw	r6,36(sp)
  802360:	1885c83a 	sub	r2,r3,r2
  802364:	d8800415 	stw	r2,16(sp)
  802368:	2180032e 	bgeu	r4,r6,802378 <__divsf3+0xdc>
  80236c:	10bfffc4 	addi	r2,r2,-1
  802370:	d8800415 	stw	r2,16(sp)
  802374:	2109883a 	add	r4,r4,r4
  802378:	01500034 	movhi	r5,16384
  80237c:	0007883a 	mov	r3,zero
  802380:	0005883a 	mov	r2,zero
  802384:	01c007c4 	movi	r7,31
  802388:	10800044 	addi	r2,r2,1
  80238c:	21800236 	bltu	r4,r6,802398 <__divsf3+0xfc>
  802390:	1946b03a 	or	r3,r3,r5
  802394:	2189c83a 	sub	r4,r4,r6
  802398:	280ad07a 	srli	r5,r5,1
  80239c:	2109883a 	add	r4,r4,r4
  8023a0:	11fff91e 	bne	r2,r7,802388 <__divsf3+0xec>
  8023a4:	19401fcc 	andi	r5,r3,127
  8023a8:	00801004 	movi	r2,64
  8023ac:	28800a26 	beq	r5,r2,8023d8 <__divsf3+0x13c>
  8023b0:	d8c00515 	stw	r3,20(sp)
  8023b4:	003fd506 	br	80230c <__divsf3+0x70>
  8023b8:	8809883a 	mov	r4,r17
  8023bc:	d9800215 	stw	r6,8(sp)
  8023c0:	08033dc0 	call	8033dc <__pack_f>
  8023c4:	dfc00c17 	ldw	ra,48(sp)
  8023c8:	dc400b17 	ldw	r17,44(sp)
  8023cc:	dc000a17 	ldw	r16,40(sp)
  8023d0:	dec00d04 	addi	sp,sp,52
  8023d4:	f800283a 	ret
  8023d8:	1880200c 	andi	r2,r3,128
  8023dc:	103ff41e 	bne	r2,zero,8023b0 <__divsf3+0x114>
  8023e0:	203ff326 	beq	r4,zero,8023b0 <__divsf3+0x114>
  8023e4:	1947883a 	add	r3,r3,r5
  8023e8:	00bfe004 	movi	r2,-128
  8023ec:	1886703a 	and	r3,r3,r2
  8023f0:	d8c00515 	stw	r3,20(sp)
  8023f4:	003fc506 	br	80230c <__divsf3+0x70>
  8023f8:	8009883a 	mov	r4,r16
  8023fc:	003fc406 	br	802310 <__divsf3+0x74>
  802400:	8809883a 	mov	r4,r17
  802404:	d8000515 	stw	zero,20(sp)
  802408:	d8000415 	stw	zero,16(sp)
  80240c:	003fc006 	br	802310 <__divsf3+0x74>

00802410 <__eqsf2>:
  802410:	defff304 	addi	sp,sp,-52
  802414:	dc400b15 	stw	r17,44(sp)
  802418:	dc400204 	addi	r17,sp,8
  80241c:	dc000a15 	stw	r16,40(sp)
  802420:	d9000015 	stw	r4,0(sp)
  802424:	d9400115 	stw	r5,4(sp)
  802428:	d809883a 	mov	r4,sp
  80242c:	880b883a 	mov	r5,r17
  802430:	dc000604 	addi	r16,sp,24
  802434:	dfc00c15 	stw	ra,48(sp)
  802438:	080353c0 	call	80353c <__unpack_f>
  80243c:	d9000104 	addi	r4,sp,4
  802440:	800b883a 	mov	r5,r16
  802444:	080353c0 	call	80353c <__unpack_f>
  802448:	d8800217 	ldw	r2,8(sp)
  80244c:	00c00044 	movi	r3,1
  802450:	180d883a 	mov	r6,r3
  802454:	1880062e 	bgeu	r3,r2,802470 <__eqsf2+0x60>
  802458:	d8800617 	ldw	r2,24(sp)
  80245c:	8809883a 	mov	r4,r17
  802460:	800b883a 	mov	r5,r16
  802464:	1880022e 	bgeu	r3,r2,802470 <__eqsf2+0x60>
  802468:	08036040 	call	803604 <__fpcmp_parts_f>
  80246c:	100d883a 	mov	r6,r2
  802470:	3005883a 	mov	r2,r6
  802474:	dfc00c17 	ldw	ra,48(sp)
  802478:	dc400b17 	ldw	r17,44(sp)
  80247c:	dc000a17 	ldw	r16,40(sp)
  802480:	dec00d04 	addi	sp,sp,52
  802484:	f800283a 	ret

00802488 <__gtsf2>:
  802488:	defff304 	addi	sp,sp,-52
  80248c:	dc400b15 	stw	r17,44(sp)
  802490:	dc400204 	addi	r17,sp,8
  802494:	dc000a15 	stw	r16,40(sp)
  802498:	d9000015 	stw	r4,0(sp)
  80249c:	d9400115 	stw	r5,4(sp)
  8024a0:	d809883a 	mov	r4,sp
  8024a4:	880b883a 	mov	r5,r17
  8024a8:	dc000604 	addi	r16,sp,24
  8024ac:	dfc00c15 	stw	ra,48(sp)
  8024b0:	080353c0 	call	80353c <__unpack_f>
  8024b4:	d9000104 	addi	r4,sp,4
  8024b8:	800b883a 	mov	r5,r16
  8024bc:	080353c0 	call	80353c <__unpack_f>
  8024c0:	d8800217 	ldw	r2,8(sp)
  8024c4:	00c00044 	movi	r3,1
  8024c8:	01bfffc4 	movi	r6,-1
  8024cc:	1880062e 	bgeu	r3,r2,8024e8 <__gtsf2+0x60>
  8024d0:	d8800617 	ldw	r2,24(sp)
  8024d4:	8809883a 	mov	r4,r17
  8024d8:	800b883a 	mov	r5,r16
  8024dc:	1880022e 	bgeu	r3,r2,8024e8 <__gtsf2+0x60>
  8024e0:	08036040 	call	803604 <__fpcmp_parts_f>
  8024e4:	100d883a 	mov	r6,r2
  8024e8:	3005883a 	mov	r2,r6
  8024ec:	dfc00c17 	ldw	ra,48(sp)
  8024f0:	dc400b17 	ldw	r17,44(sp)
  8024f4:	dc000a17 	ldw	r16,40(sp)
  8024f8:	dec00d04 	addi	sp,sp,52
  8024fc:	f800283a 	ret

00802500 <__gesf2>:
  802500:	defff304 	addi	sp,sp,-52
  802504:	dc400b15 	stw	r17,44(sp)
  802508:	dc400204 	addi	r17,sp,8
  80250c:	dc000a15 	stw	r16,40(sp)
  802510:	d9000015 	stw	r4,0(sp)
  802514:	d9400115 	stw	r5,4(sp)
  802518:	d809883a 	mov	r4,sp
  80251c:	880b883a 	mov	r5,r17
  802520:	dc000604 	addi	r16,sp,24
  802524:	dfc00c15 	stw	ra,48(sp)
  802528:	080353c0 	call	80353c <__unpack_f>
  80252c:	d9000104 	addi	r4,sp,4
  802530:	800b883a 	mov	r5,r16
  802534:	080353c0 	call	80353c <__unpack_f>
  802538:	d8800217 	ldw	r2,8(sp)
  80253c:	00c00044 	movi	r3,1
  802540:	01bfffc4 	movi	r6,-1
  802544:	1880062e 	bgeu	r3,r2,802560 <__gesf2+0x60>
  802548:	d8800617 	ldw	r2,24(sp)
  80254c:	8809883a 	mov	r4,r17
  802550:	800b883a 	mov	r5,r16
  802554:	1880022e 	bgeu	r3,r2,802560 <__gesf2+0x60>
  802558:	08036040 	call	803604 <__fpcmp_parts_f>
  80255c:	100d883a 	mov	r6,r2
  802560:	3005883a 	mov	r2,r6
  802564:	dfc00c17 	ldw	ra,48(sp)
  802568:	dc400b17 	ldw	r17,44(sp)
  80256c:	dc000a17 	ldw	r16,40(sp)
  802570:	dec00d04 	addi	sp,sp,52
  802574:	f800283a 	ret

00802578 <__floatsisf>:
  802578:	2006d7fa 	srli	r3,r4,31
  80257c:	defffa04 	addi	sp,sp,-24
  802580:	008000c4 	movi	r2,3
  802584:	dfc00515 	stw	ra,20(sp)
  802588:	dc000415 	stw	r16,16(sp)
  80258c:	d8800015 	stw	r2,0(sp)
  802590:	d8c00115 	stw	r3,4(sp)
  802594:	2000081e 	bne	r4,zero,8025b8 <__floatsisf+0x40>
  802598:	00800084 	movi	r2,2
  80259c:	d8800015 	stw	r2,0(sp)
  8025a0:	d809883a 	mov	r4,sp
  8025a4:	08033dc0 	call	8033dc <__pack_f>
  8025a8:	dfc00517 	ldw	ra,20(sp)
  8025ac:	dc000417 	ldw	r16,16(sp)
  8025b0:	dec00604 	addi	sp,sp,24
  8025b4:	f800283a 	ret
  8025b8:	00800784 	movi	r2,30
  8025bc:	1807003a 	cmpeq	r3,r3,zero
  8025c0:	d8800215 	stw	r2,8(sp)
  8025c4:	18000e1e 	bne	r3,zero,802600 <__floatsisf+0x88>
  8025c8:	00a00034 	movhi	r2,32768
  8025cc:	20800e26 	beq	r4,r2,802608 <__floatsisf+0x90>
  8025d0:	0121c83a 	sub	r16,zero,r4
  8025d4:	8009883a 	mov	r4,r16
  8025d8:	dc000315 	stw	r16,12(sp)
  8025dc:	080335c0 	call	80335c <__clzsi2>
  8025e0:	117fffc4 	addi	r5,r2,-1
  8025e4:	017fee0e 	bge	zero,r5,8025a0 <__floatsisf+0x28>
  8025e8:	d8800217 	ldw	r2,8(sp)
  8025ec:	8146983a 	sll	r3,r16,r5
  8025f0:	1145c83a 	sub	r2,r2,r5
  8025f4:	d8c00315 	stw	r3,12(sp)
  8025f8:	d8800215 	stw	r2,8(sp)
  8025fc:	003fe806 	br	8025a0 <__floatsisf+0x28>
  802600:	2021883a 	mov	r16,r4
  802604:	003ff306 	br	8025d4 <__floatsisf+0x5c>
  802608:	00b3c034 	movhi	r2,52992
  80260c:	003fe606 	br	8025a8 <__floatsisf+0x30>

00802610 <__fixsfsi>:
  802610:	defffa04 	addi	sp,sp,-24
  802614:	d9000015 	stw	r4,0(sp)
  802618:	d9400104 	addi	r5,sp,4
  80261c:	d809883a 	mov	r4,sp
  802620:	dfc00515 	stw	ra,20(sp)
  802624:	080353c0 	call	80353c <__unpack_f>
  802628:	d8c00117 	ldw	r3,4(sp)
  80262c:	00800084 	movi	r2,2
  802630:	1880041e 	bne	r3,r2,802644 <__fixsfsi+0x34>
  802634:	0005883a 	mov	r2,zero
  802638:	dfc00517 	ldw	ra,20(sp)
  80263c:	dec00604 	addi	sp,sp,24
  802640:	f800283a 	ret
  802644:	00800044 	movi	r2,1
  802648:	10fffa2e 	bgeu	r2,r3,802634 <__fixsfsi+0x24>
  80264c:	00800104 	movi	r2,4
  802650:	18800426 	beq	r3,r2,802664 <__fixsfsi+0x54>
  802654:	d8800317 	ldw	r2,12(sp)
  802658:	103ff616 	blt	r2,zero,802634 <__fixsfsi+0x24>
  80265c:	00c00784 	movi	r3,30
  802660:	1880070e 	bge	r3,r2,802680 <__fixsfsi+0x70>
  802664:	d8800217 	ldw	r2,8(sp)
  802668:	10000c1e 	bne	r2,zero,80269c <__fixsfsi+0x8c>
  80266c:	00a00034 	movhi	r2,32768
  802670:	10bfffc4 	addi	r2,r2,-1
  802674:	dfc00517 	ldw	ra,20(sp)
  802678:	dec00604 	addi	sp,sp,24
  80267c:	f800283a 	ret
  802680:	1885c83a 	sub	r2,r3,r2
  802684:	d9000217 	ldw	r4,8(sp)
  802688:	d8c00417 	ldw	r3,16(sp)
  80268c:	1884d83a 	srl	r2,r3,r2
  802690:	203fe926 	beq	r4,zero,802638 <__fixsfsi+0x28>
  802694:	0085c83a 	sub	r2,zero,r2
  802698:	003fe706 	br	802638 <__fixsfsi+0x28>
  80269c:	00a00034 	movhi	r2,32768
  8026a0:	003fe506 	br	802638 <__fixsfsi+0x28>

008026a4 <__extendsfdf2>:
  8026a4:	defff904 	addi	sp,sp,-28
  8026a8:	d9000115 	stw	r4,4(sp)
  8026ac:	d9400204 	addi	r5,sp,8
  8026b0:	d9000104 	addi	r4,sp,4
  8026b4:	dfc00615 	stw	ra,24(sp)
  8026b8:	080353c0 	call	80353c <__unpack_f>
  8026bc:	d9c00517 	ldw	r7,20(sp)
  8026c0:	0011883a 	mov	r8,zero
  8026c4:	400697ba 	slli	r3,r8,30
  8026c8:	3812d0ba 	srli	r9,r7,2
  8026cc:	380497ba 	slli	r2,r7,30
  8026d0:	d9000217 	ldw	r4,8(sp)
  8026d4:	d9400317 	ldw	r5,12(sp)
  8026d8:	d9800417 	ldw	r6,16(sp)
  8026dc:	48c6b03a 	or	r3,r9,r3
  8026e0:	100f883a 	mov	r7,r2
  8026e4:	d8c00015 	stw	r3,0(sp)
  8026e8:	0802fc00 	call	802fc0 <__make_dp>
  8026ec:	dfc00617 	ldw	ra,24(sp)
  8026f0:	dec00704 	addi	sp,sp,28
  8026f4:	f800283a 	ret

008026f8 <_fpadd_parts>:
  8026f8:	defff804 	addi	sp,sp,-32
  8026fc:	dcc00315 	stw	r19,12(sp)
  802700:	2027883a 	mov	r19,r4
  802704:	21000017 	ldw	r4,0(r4)
  802708:	00c00044 	movi	r3,1
  80270c:	dd400515 	stw	r21,20(sp)
  802710:	dd000415 	stw	r20,16(sp)
  802714:	ddc00715 	stw	r23,28(sp)
  802718:	dd800615 	stw	r22,24(sp)
  80271c:	dc800215 	stw	r18,8(sp)
  802720:	dc400115 	stw	r17,4(sp)
  802724:	dc000015 	stw	r16,0(sp)
  802728:	282b883a 	mov	r21,r5
  80272c:	3029883a 	mov	r20,r6
  802730:	1900632e 	bgeu	r3,r4,8028c0 <_fpadd_parts+0x1c8>
  802734:	28800017 	ldw	r2,0(r5)
  802738:	1880812e 	bgeu	r3,r2,802940 <_fpadd_parts+0x248>
  80273c:	00c00104 	movi	r3,4
  802740:	20c0dc26 	beq	r4,r3,802ab4 <_fpadd_parts+0x3bc>
  802744:	10c07e26 	beq	r2,r3,802940 <_fpadd_parts+0x248>
  802748:	00c00084 	movi	r3,2
  80274c:	10c06726 	beq	r2,r3,8028ec <_fpadd_parts+0x1f4>
  802750:	20c07b26 	beq	r4,r3,802940 <_fpadd_parts+0x248>
  802754:	9dc00217 	ldw	r23,8(r19)
  802758:	28c00217 	ldw	r3,8(r5)
  80275c:	9c400317 	ldw	r17,12(r19)
  802760:	2bc00317 	ldw	r15,12(r5)
  802764:	b8cdc83a 	sub	r6,r23,r3
  802768:	9c800417 	ldw	r18,16(r19)
  80276c:	2c000417 	ldw	r16,16(r5)
  802770:	3009883a 	mov	r4,r6
  802774:	30009716 	blt	r6,zero,8029d4 <_fpadd_parts+0x2dc>
  802778:	00800fc4 	movi	r2,63
  80277c:	11806b16 	blt	r2,r6,80292c <_fpadd_parts+0x234>
  802780:	0100a40e 	bge	zero,r4,802a14 <_fpadd_parts+0x31c>
  802784:	35bff804 	addi	r22,r6,-32
  802788:	b000bc16 	blt	r22,zero,802a7c <_fpadd_parts+0x384>
  80278c:	8596d83a 	srl	r11,r16,r22
  802790:	0019883a 	mov	r12,zero
  802794:	0013883a 	mov	r9,zero
  802798:	01000044 	movi	r4,1
  80279c:	0015883a 	mov	r10,zero
  8027a0:	b000be16 	blt	r22,zero,802a9c <_fpadd_parts+0x3a4>
  8027a4:	2590983a 	sll	r8,r4,r22
  8027a8:	000f883a 	mov	r7,zero
  8027ac:	00bfffc4 	movi	r2,-1
  8027b0:	3889883a 	add	r4,r7,r2
  8027b4:	408b883a 	add	r5,r8,r2
  8027b8:	21cd803a 	cmpltu	r6,r4,r7
  8027bc:	314b883a 	add	r5,r6,r5
  8027c0:	7904703a 	and	r2,r15,r4
  8027c4:	8146703a 	and	r3,r16,r5
  8027c8:	10c4b03a 	or	r2,r2,r3
  8027cc:	10000226 	beq	r2,zero,8027d8 <_fpadd_parts+0xe0>
  8027d0:	02400044 	movi	r9,1
  8027d4:	0015883a 	mov	r10,zero
  8027d8:	5a5eb03a 	or	r15,r11,r9
  8027dc:	62a0b03a 	or	r16,r12,r10
  8027e0:	99400117 	ldw	r5,4(r19)
  8027e4:	a8800117 	ldw	r2,4(r21)
  8027e8:	28806e26 	beq	r5,r2,8029a4 <_fpadd_parts+0x2ac>
  8027ec:	28006626 	beq	r5,zero,802988 <_fpadd_parts+0x290>
  8027f0:	7c45c83a 	sub	r2,r15,r17
  8027f4:	7889803a 	cmpltu	r4,r15,r2
  8027f8:	8487c83a 	sub	r3,r16,r18
  8027fc:	1909c83a 	sub	r4,r3,r4
  802800:	100d883a 	mov	r6,r2
  802804:	200f883a 	mov	r7,r4
  802808:	38007716 	blt	r7,zero,8029e8 <_fpadd_parts+0x2f0>
  80280c:	a5c00215 	stw	r23,8(r20)
  802810:	a1c00415 	stw	r7,16(r20)
  802814:	a0000115 	stw	zero,4(r20)
  802818:	a1800315 	stw	r6,12(r20)
  80281c:	a2000317 	ldw	r8,12(r20)
  802820:	a2400417 	ldw	r9,16(r20)
  802824:	00bfffc4 	movi	r2,-1
  802828:	408b883a 	add	r5,r8,r2
  80282c:	2a09803a 	cmpltu	r4,r5,r8
  802830:	488d883a 	add	r6,r9,r2
  802834:	01c40034 	movhi	r7,4096
  802838:	39ffffc4 	addi	r7,r7,-1
  80283c:	218d883a 	add	r6,r4,r6
  802840:	39801736 	bltu	r7,r6,8028a0 <_fpadd_parts+0x1a8>
  802844:	31c06526 	beq	r6,r7,8029dc <_fpadd_parts+0x2e4>
  802848:	a3000217 	ldw	r12,8(r20)
  80284c:	4209883a 	add	r4,r8,r8
  802850:	00bfffc4 	movi	r2,-1
  802854:	220f803a 	cmpltu	r7,r4,r8
  802858:	4a4b883a 	add	r5,r9,r9
  80285c:	394f883a 	add	r7,r7,r5
  802860:	2095883a 	add	r10,r4,r2
  802864:	3897883a 	add	r11,r7,r2
  802868:	510d803a 	cmpltu	r6,r10,r4
  80286c:	6099883a 	add	r12,r12,r2
  802870:	32d7883a 	add	r11,r6,r11
  802874:	00840034 	movhi	r2,4096
  802878:	10bfffc4 	addi	r2,r2,-1
  80287c:	2011883a 	mov	r8,r4
  802880:	3813883a 	mov	r9,r7
  802884:	a1000315 	stw	r4,12(r20)
  802888:	a1c00415 	stw	r7,16(r20)
  80288c:	a3000215 	stw	r12,8(r20)
  802890:	12c00336 	bltu	r2,r11,8028a0 <_fpadd_parts+0x1a8>
  802894:	58bfed1e 	bne	r11,r2,80284c <_fpadd_parts+0x154>
  802898:	00bfff84 	movi	r2,-2
  80289c:	12bfeb2e 	bgeu	r2,r10,80284c <_fpadd_parts+0x154>
  8028a0:	a2800417 	ldw	r10,16(r20)
  8028a4:	008000c4 	movi	r2,3
  8028a8:	00c80034 	movhi	r3,8192
  8028ac:	18ffffc4 	addi	r3,r3,-1
  8028b0:	a2400317 	ldw	r9,12(r20)
  8028b4:	a0800015 	stw	r2,0(r20)
  8028b8:	1a802336 	bltu	r3,r10,802948 <_fpadd_parts+0x250>
  8028bc:	a027883a 	mov	r19,r20
  8028c0:	9805883a 	mov	r2,r19
  8028c4:	ddc00717 	ldw	r23,28(sp)
  8028c8:	dd800617 	ldw	r22,24(sp)
  8028cc:	dd400517 	ldw	r21,20(sp)
  8028d0:	dd000417 	ldw	r20,16(sp)
  8028d4:	dcc00317 	ldw	r19,12(sp)
  8028d8:	dc800217 	ldw	r18,8(sp)
  8028dc:	dc400117 	ldw	r17,4(sp)
  8028e0:	dc000017 	ldw	r16,0(sp)
  8028e4:	dec00804 	addi	sp,sp,32
  8028e8:	f800283a 	ret
  8028ec:	20fff41e 	bne	r4,r3,8028c0 <_fpadd_parts+0x1c8>
  8028f0:	31000015 	stw	r4,0(r6)
  8028f4:	98800117 	ldw	r2,4(r19)
  8028f8:	30800115 	stw	r2,4(r6)
  8028fc:	98c00217 	ldw	r3,8(r19)
  802900:	30c00215 	stw	r3,8(r6)
  802904:	98800317 	ldw	r2,12(r19)
  802908:	30800315 	stw	r2,12(r6)
  80290c:	98c00417 	ldw	r3,16(r19)
  802910:	30c00415 	stw	r3,16(r6)
  802914:	98800117 	ldw	r2,4(r19)
  802918:	28c00117 	ldw	r3,4(r5)
  80291c:	3027883a 	mov	r19,r6
  802920:	10c4703a 	and	r2,r2,r3
  802924:	30800115 	stw	r2,4(r6)
  802928:	003fe506 	br	8028c0 <_fpadd_parts+0x1c8>
  80292c:	1dc02616 	blt	r3,r23,8029c8 <_fpadd_parts+0x2d0>
  802930:	0023883a 	mov	r17,zero
  802934:	182f883a 	mov	r23,r3
  802938:	0025883a 	mov	r18,zero
  80293c:	003fa806 	br	8027e0 <_fpadd_parts+0xe8>
  802940:	a827883a 	mov	r19,r21
  802944:	003fde06 	br	8028c0 <_fpadd_parts+0x1c8>
  802948:	01800044 	movi	r6,1
  80294c:	500497fa 	slli	r2,r10,31
  802950:	4808d07a 	srli	r4,r9,1
  802954:	518ad83a 	srl	r5,r10,r6
  802958:	a2000217 	ldw	r8,8(r20)
  80295c:	1108b03a 	or	r4,r2,r4
  802960:	0007883a 	mov	r3,zero
  802964:	4984703a 	and	r2,r9,r6
  802968:	208cb03a 	or	r6,r4,r2
  80296c:	28ceb03a 	or	r7,r5,r3
  802970:	42000044 	addi	r8,r8,1
  802974:	a027883a 	mov	r19,r20
  802978:	a1c00415 	stw	r7,16(r20)
  80297c:	a2000215 	stw	r8,8(r20)
  802980:	a1800315 	stw	r6,12(r20)
  802984:	003fce06 	br	8028c0 <_fpadd_parts+0x1c8>
  802988:	8bc5c83a 	sub	r2,r17,r15
  80298c:	8889803a 	cmpltu	r4,r17,r2
  802990:	9407c83a 	sub	r3,r18,r16
  802994:	1909c83a 	sub	r4,r3,r4
  802998:	100d883a 	mov	r6,r2
  80299c:	200f883a 	mov	r7,r4
  8029a0:	003f9906 	br	802808 <_fpadd_parts+0x110>
  8029a4:	7c45883a 	add	r2,r15,r17
  8029a8:	13c9803a 	cmpltu	r4,r2,r15
  8029ac:	8487883a 	add	r3,r16,r18
  8029b0:	20c9883a 	add	r4,r4,r3
  8029b4:	a1400115 	stw	r5,4(r20)
  8029b8:	a5c00215 	stw	r23,8(r20)
  8029bc:	a0800315 	stw	r2,12(r20)
  8029c0:	a1000415 	stw	r4,16(r20)
  8029c4:	003fb606 	br	8028a0 <_fpadd_parts+0x1a8>
  8029c8:	001f883a 	mov	r15,zero
  8029cc:	0021883a 	mov	r16,zero
  8029d0:	003f8306 	br	8027e0 <_fpadd_parts+0xe8>
  8029d4:	018dc83a 	sub	r6,zero,r6
  8029d8:	003f6706 	br	802778 <_fpadd_parts+0x80>
  8029dc:	00bfff84 	movi	r2,-2
  8029e0:	117faf36 	bltu	r2,r5,8028a0 <_fpadd_parts+0x1a8>
  8029e4:	003f9806 	br	802848 <_fpadd_parts+0x150>
  8029e8:	0005883a 	mov	r2,zero
  8029ec:	1189c83a 	sub	r4,r2,r6
  8029f0:	1105803a 	cmpltu	r2,r2,r4
  8029f4:	01cbc83a 	sub	r5,zero,r7
  8029f8:	2885c83a 	sub	r2,r5,r2
  8029fc:	01800044 	movi	r6,1
  802a00:	a1800115 	stw	r6,4(r20)
  802a04:	a5c00215 	stw	r23,8(r20)
  802a08:	a1000315 	stw	r4,12(r20)
  802a0c:	a0800415 	stw	r2,16(r20)
  802a10:	003f8206 	br	80281c <_fpadd_parts+0x124>
  802a14:	203f7226 	beq	r4,zero,8027e0 <_fpadd_parts+0xe8>
  802a18:	35bff804 	addi	r22,r6,-32
  802a1c:	b9af883a 	add	r23,r23,r6
  802a20:	b0003116 	blt	r22,zero,802ae8 <_fpadd_parts+0x3f0>
  802a24:	959ad83a 	srl	r13,r18,r22
  802a28:	001d883a 	mov	r14,zero
  802a2c:	000f883a 	mov	r7,zero
  802a30:	01000044 	movi	r4,1
  802a34:	0011883a 	mov	r8,zero
  802a38:	b0002516 	blt	r22,zero,802ad0 <_fpadd_parts+0x3d8>
  802a3c:	2594983a 	sll	r10,r4,r22
  802a40:	0013883a 	mov	r9,zero
  802a44:	00bfffc4 	movi	r2,-1
  802a48:	4889883a 	add	r4,r9,r2
  802a4c:	508b883a 	add	r5,r10,r2
  802a50:	224d803a 	cmpltu	r6,r4,r9
  802a54:	314b883a 	add	r5,r6,r5
  802a58:	8904703a 	and	r2,r17,r4
  802a5c:	9146703a 	and	r3,r18,r5
  802a60:	10c4b03a 	or	r2,r2,r3
  802a64:	10000226 	beq	r2,zero,802a70 <_fpadd_parts+0x378>
  802a68:	01c00044 	movi	r7,1
  802a6c:	0011883a 	mov	r8,zero
  802a70:	69e2b03a 	or	r17,r13,r7
  802a74:	7224b03a 	or	r18,r14,r8
  802a78:	003f5906 	br	8027e0 <_fpadd_parts+0xe8>
  802a7c:	8407883a 	add	r3,r16,r16
  802a80:	008007c4 	movi	r2,31
  802a84:	1185c83a 	sub	r2,r2,r6
  802a88:	1886983a 	sll	r3,r3,r2
  802a8c:	7996d83a 	srl	r11,r15,r6
  802a90:	8198d83a 	srl	r12,r16,r6
  802a94:	1ad6b03a 	or	r11,r3,r11
  802a98:	003f3e06 	br	802794 <_fpadd_parts+0x9c>
  802a9c:	2006d07a 	srli	r3,r4,1
  802aa0:	008007c4 	movi	r2,31
  802aa4:	1185c83a 	sub	r2,r2,r6
  802aa8:	1890d83a 	srl	r8,r3,r2
  802aac:	218e983a 	sll	r7,r4,r6
  802ab0:	003f3e06 	br	8027ac <_fpadd_parts+0xb4>
  802ab4:	113f821e 	bne	r2,r4,8028c0 <_fpadd_parts+0x1c8>
  802ab8:	28c00117 	ldw	r3,4(r5)
  802abc:	98800117 	ldw	r2,4(r19)
  802ac0:	10ff7f26 	beq	r2,r3,8028c0 <_fpadd_parts+0x1c8>
  802ac4:	04c02074 	movhi	r19,129
  802ac8:	9cc0ec04 	addi	r19,r19,944
  802acc:	003f7c06 	br	8028c0 <_fpadd_parts+0x1c8>
  802ad0:	2006d07a 	srli	r3,r4,1
  802ad4:	008007c4 	movi	r2,31
  802ad8:	1185c83a 	sub	r2,r2,r6
  802adc:	1894d83a 	srl	r10,r3,r2
  802ae0:	2192983a 	sll	r9,r4,r6
  802ae4:	003fd706 	br	802a44 <_fpadd_parts+0x34c>
  802ae8:	9487883a 	add	r3,r18,r18
  802aec:	008007c4 	movi	r2,31
  802af0:	1185c83a 	sub	r2,r2,r6
  802af4:	1886983a 	sll	r3,r3,r2
  802af8:	899ad83a 	srl	r13,r17,r6
  802afc:	919cd83a 	srl	r14,r18,r6
  802b00:	1b5ab03a 	or	r13,r3,r13
  802b04:	003fc906 	br	802a2c <_fpadd_parts+0x334>

00802b08 <__subdf3>:
  802b08:	deffea04 	addi	sp,sp,-88
  802b0c:	dcc01415 	stw	r19,80(sp)
  802b10:	dcc00404 	addi	r19,sp,16
  802b14:	2011883a 	mov	r8,r4
  802b18:	2813883a 	mov	r9,r5
  802b1c:	dc401315 	stw	r17,76(sp)
  802b20:	d809883a 	mov	r4,sp
  802b24:	980b883a 	mov	r5,r19
  802b28:	dc400904 	addi	r17,sp,36
  802b2c:	dfc01515 	stw	ra,84(sp)
  802b30:	da400115 	stw	r9,4(sp)
  802b34:	d9c00315 	stw	r7,12(sp)
  802b38:	da000015 	stw	r8,0(sp)
  802b3c:	d9800215 	stw	r6,8(sp)
  802b40:	08039ec0 	call	8039ec <__unpack_d>
  802b44:	d9000204 	addi	r4,sp,8
  802b48:	880b883a 	mov	r5,r17
  802b4c:	08039ec0 	call	8039ec <__unpack_d>
  802b50:	d8800a17 	ldw	r2,40(sp)
  802b54:	880b883a 	mov	r5,r17
  802b58:	9809883a 	mov	r4,r19
  802b5c:	d9800e04 	addi	r6,sp,56
  802b60:	1080005c 	xori	r2,r2,1
  802b64:	d8800a15 	stw	r2,40(sp)
  802b68:	08026f80 	call	8026f8 <_fpadd_parts>
  802b6c:	1009883a 	mov	r4,r2
  802b70:	08036d80 	call	8036d8 <__pack_d>
  802b74:	dfc01517 	ldw	ra,84(sp)
  802b78:	dcc01417 	ldw	r19,80(sp)
  802b7c:	dc401317 	ldw	r17,76(sp)
  802b80:	dec01604 	addi	sp,sp,88
  802b84:	f800283a 	ret

00802b88 <__adddf3>:
  802b88:	deffea04 	addi	sp,sp,-88
  802b8c:	dcc01415 	stw	r19,80(sp)
  802b90:	dcc00404 	addi	r19,sp,16
  802b94:	2011883a 	mov	r8,r4
  802b98:	2813883a 	mov	r9,r5
  802b9c:	dc401315 	stw	r17,76(sp)
  802ba0:	d809883a 	mov	r4,sp
  802ba4:	980b883a 	mov	r5,r19
  802ba8:	dc400904 	addi	r17,sp,36
  802bac:	dfc01515 	stw	ra,84(sp)
  802bb0:	da400115 	stw	r9,4(sp)
  802bb4:	d9c00315 	stw	r7,12(sp)
  802bb8:	da000015 	stw	r8,0(sp)
  802bbc:	d9800215 	stw	r6,8(sp)
  802bc0:	08039ec0 	call	8039ec <__unpack_d>
  802bc4:	d9000204 	addi	r4,sp,8
  802bc8:	880b883a 	mov	r5,r17
  802bcc:	08039ec0 	call	8039ec <__unpack_d>
  802bd0:	d9800e04 	addi	r6,sp,56
  802bd4:	9809883a 	mov	r4,r19
  802bd8:	880b883a 	mov	r5,r17
  802bdc:	08026f80 	call	8026f8 <_fpadd_parts>
  802be0:	1009883a 	mov	r4,r2
  802be4:	08036d80 	call	8036d8 <__pack_d>
  802be8:	dfc01517 	ldw	ra,84(sp)
  802bec:	dcc01417 	ldw	r19,80(sp)
  802bf0:	dc401317 	ldw	r17,76(sp)
  802bf4:	dec01604 	addi	sp,sp,88
  802bf8:	f800283a 	ret

00802bfc <__muldf3>:
  802bfc:	deffe004 	addi	sp,sp,-128
  802c00:	dc401815 	stw	r17,96(sp)
  802c04:	dc400404 	addi	r17,sp,16
  802c08:	2011883a 	mov	r8,r4
  802c0c:	2813883a 	mov	r9,r5
  802c10:	dc001715 	stw	r16,92(sp)
  802c14:	d809883a 	mov	r4,sp
  802c18:	880b883a 	mov	r5,r17
  802c1c:	dc000904 	addi	r16,sp,36
  802c20:	dfc01f15 	stw	ra,124(sp)
  802c24:	da400115 	stw	r9,4(sp)
  802c28:	d9c00315 	stw	r7,12(sp)
  802c2c:	da000015 	stw	r8,0(sp)
  802c30:	d9800215 	stw	r6,8(sp)
  802c34:	ddc01e15 	stw	r23,120(sp)
  802c38:	dd801d15 	stw	r22,116(sp)
  802c3c:	dd401c15 	stw	r21,112(sp)
  802c40:	dd001b15 	stw	r20,108(sp)
  802c44:	dcc01a15 	stw	r19,104(sp)
  802c48:	dc801915 	stw	r18,100(sp)
  802c4c:	08039ec0 	call	8039ec <__unpack_d>
  802c50:	d9000204 	addi	r4,sp,8
  802c54:	800b883a 	mov	r5,r16
  802c58:	08039ec0 	call	8039ec <__unpack_d>
  802c5c:	d9000417 	ldw	r4,16(sp)
  802c60:	00800044 	movi	r2,1
  802c64:	1100102e 	bgeu	r2,r4,802ca8 <__muldf3+0xac>
  802c68:	d8c00917 	ldw	r3,36(sp)
  802c6c:	10c0062e 	bgeu	r2,r3,802c88 <__muldf3+0x8c>
  802c70:	00800104 	movi	r2,4
  802c74:	20800a26 	beq	r4,r2,802ca0 <__muldf3+0xa4>
  802c78:	1880cc26 	beq	r3,r2,802fac <__muldf3+0x3b0>
  802c7c:	00800084 	movi	r2,2
  802c80:	20800926 	beq	r4,r2,802ca8 <__muldf3+0xac>
  802c84:	1880191e 	bne	r3,r2,802cec <__muldf3+0xf0>
  802c88:	d8c00a17 	ldw	r3,40(sp)
  802c8c:	d8800517 	ldw	r2,20(sp)
  802c90:	8009883a 	mov	r4,r16
  802c94:	10c4c03a 	cmpne	r2,r2,r3
  802c98:	d8800a15 	stw	r2,40(sp)
  802c9c:	00000706 	br	802cbc <__muldf3+0xc0>
  802ca0:	00800084 	movi	r2,2
  802ca4:	1880c326 	beq	r3,r2,802fb4 <__muldf3+0x3b8>
  802ca8:	d8800517 	ldw	r2,20(sp)
  802cac:	d8c00a17 	ldw	r3,40(sp)
  802cb0:	8809883a 	mov	r4,r17
  802cb4:	10c4c03a 	cmpne	r2,r2,r3
  802cb8:	d8800515 	stw	r2,20(sp)
  802cbc:	08036d80 	call	8036d8 <__pack_d>
  802cc0:	dfc01f17 	ldw	ra,124(sp)
  802cc4:	ddc01e17 	ldw	r23,120(sp)
  802cc8:	dd801d17 	ldw	r22,116(sp)
  802ccc:	dd401c17 	ldw	r21,112(sp)
  802cd0:	dd001b17 	ldw	r20,108(sp)
  802cd4:	dcc01a17 	ldw	r19,104(sp)
  802cd8:	dc801917 	ldw	r18,100(sp)
  802cdc:	dc401817 	ldw	r17,96(sp)
  802ce0:	dc001717 	ldw	r16,92(sp)
  802ce4:	dec02004 	addi	sp,sp,128
  802ce8:	f800283a 	ret
  802cec:	dd800717 	ldw	r22,28(sp)
  802cf0:	dc800c17 	ldw	r18,48(sp)
  802cf4:	002b883a 	mov	r21,zero
  802cf8:	0023883a 	mov	r17,zero
  802cfc:	a80b883a 	mov	r5,r21
  802d00:	b00d883a 	mov	r6,r22
  802d04:	880f883a 	mov	r7,r17
  802d08:	ddc00817 	ldw	r23,32(sp)
  802d0c:	dcc00d17 	ldw	r19,52(sp)
  802d10:	9009883a 	mov	r4,r18
  802d14:	08032380 	call	803238 <__muldi3>
  802d18:	001b883a 	mov	r13,zero
  802d1c:	680f883a 	mov	r7,r13
  802d20:	b009883a 	mov	r4,r22
  802d24:	000b883a 	mov	r5,zero
  802d28:	980d883a 	mov	r6,r19
  802d2c:	b82d883a 	mov	r22,r23
  802d30:	002f883a 	mov	r23,zero
  802d34:	db401615 	stw	r13,88(sp)
  802d38:	d8801315 	stw	r2,76(sp)
  802d3c:	d8c01415 	stw	r3,80(sp)
  802d40:	dcc01515 	stw	r19,84(sp)
  802d44:	08032380 	call	803238 <__muldi3>
  802d48:	b00d883a 	mov	r6,r22
  802d4c:	000b883a 	mov	r5,zero
  802d50:	9009883a 	mov	r4,r18
  802d54:	b80f883a 	mov	r7,r23
  802d58:	1021883a 	mov	r16,r2
  802d5c:	1823883a 	mov	r17,r3
  802d60:	08032380 	call	803238 <__muldi3>
  802d64:	8085883a 	add	r2,r16,r2
  802d68:	140d803a 	cmpltu	r6,r2,r16
  802d6c:	88c7883a 	add	r3,r17,r3
  802d70:	30cd883a 	add	r6,r6,r3
  802d74:	1029883a 	mov	r20,r2
  802d78:	302b883a 	mov	r21,r6
  802d7c:	da801317 	ldw	r10,76(sp)
  802d80:	dac01417 	ldw	r11,80(sp)
  802d84:	db001517 	ldw	r12,84(sp)
  802d88:	db401617 	ldw	r13,88(sp)
  802d8c:	3440612e 	bgeu	r6,r17,802f14 <__muldf3+0x318>
  802d90:	0009883a 	mov	r4,zero
  802d94:	5105883a 	add	r2,r10,r4
  802d98:	128d803a 	cmpltu	r6,r2,r10
  802d9c:	5d07883a 	add	r3,r11,r20
  802da0:	30cd883a 	add	r6,r6,r3
  802da4:	0021883a 	mov	r16,zero
  802da8:	04400044 	movi	r17,1
  802dac:	1025883a 	mov	r18,r2
  802db0:	3027883a 	mov	r19,r6
  802db4:	32c06236 	bltu	r6,r11,802f40 <__muldf3+0x344>
  802db8:	59807a26 	beq	r11,r6,802fa4 <__muldf3+0x3a8>
  802dbc:	680b883a 	mov	r5,r13
  802dc0:	b80f883a 	mov	r7,r23
  802dc4:	6009883a 	mov	r4,r12
  802dc8:	b00d883a 	mov	r6,r22
  802dcc:	08032380 	call	803238 <__muldi3>
  802dd0:	1009883a 	mov	r4,r2
  802dd4:	000f883a 	mov	r7,zero
  802dd8:	1545883a 	add	r2,r2,r21
  802ddc:	1111803a 	cmpltu	r8,r2,r4
  802de0:	19c7883a 	add	r3,r3,r7
  802de4:	40c7883a 	add	r3,r8,r3
  802de8:	88cb883a 	add	r5,r17,r3
  802dec:	d8c00617 	ldw	r3,24(sp)
  802df0:	8089883a 	add	r4,r16,r2
  802df4:	d8800b17 	ldw	r2,44(sp)
  802df8:	18c00104 	addi	r3,r3,4
  802dfc:	240d803a 	cmpltu	r6,r4,r16
  802e00:	10c7883a 	add	r3,r2,r3
  802e04:	2013883a 	mov	r9,r4
  802e08:	d8800a17 	ldw	r2,40(sp)
  802e0c:	d9000517 	ldw	r4,20(sp)
  802e10:	314d883a 	add	r6,r6,r5
  802e14:	3015883a 	mov	r10,r6
  802e18:	2088c03a 	cmpne	r4,r4,r2
  802e1c:	00880034 	movhi	r2,8192
  802e20:	10bfffc4 	addi	r2,r2,-1
  802e24:	d9000f15 	stw	r4,60(sp)
  802e28:	d8c01015 	stw	r3,64(sp)
  802e2c:	1180162e 	bgeu	r2,r6,802e88 <__muldf3+0x28c>
  802e30:	1811883a 	mov	r8,r3
  802e34:	101f883a 	mov	r15,r2
  802e38:	980497fa 	slli	r2,r19,31
  802e3c:	9016d07a 	srli	r11,r18,1
  802e40:	500697fa 	slli	r3,r10,31
  802e44:	480cd07a 	srli	r6,r9,1
  802e48:	500ed07a 	srli	r7,r10,1
  802e4c:	12d6b03a 	or	r11,r2,r11
  802e50:	00800044 	movi	r2,1
  802e54:	198cb03a 	or	r6,r3,r6
  802e58:	4888703a 	and	r4,r9,r2
  802e5c:	9818d07a 	srli	r12,r19,1
  802e60:	001b883a 	mov	r13,zero
  802e64:	03a00034 	movhi	r14,32768
  802e68:	3013883a 	mov	r9,r6
  802e6c:	3815883a 	mov	r10,r7
  802e70:	4091883a 	add	r8,r8,r2
  802e74:	20000226 	beq	r4,zero,802e80 <__muldf3+0x284>
  802e78:	5b64b03a 	or	r18,r11,r13
  802e7c:	63a6b03a 	or	r19,r12,r14
  802e80:	7abfed36 	bltu	r15,r10,802e38 <__muldf3+0x23c>
  802e84:	da001015 	stw	r8,64(sp)
  802e88:	00840034 	movhi	r2,4096
  802e8c:	10bfffc4 	addi	r2,r2,-1
  802e90:	12801436 	bltu	r2,r10,802ee4 <__muldf3+0x2e8>
  802e94:	da001017 	ldw	r8,64(sp)
  802e98:	101f883a 	mov	r15,r2
  802e9c:	4a45883a 	add	r2,r9,r9
  802ea0:	124d803a 	cmpltu	r6,r2,r9
  802ea4:	5287883a 	add	r3,r10,r10
  802ea8:	9497883a 	add	r11,r18,r18
  802eac:	5c8f803a 	cmpltu	r7,r11,r18
  802eb0:	9cd9883a 	add	r12,r19,r19
  802eb4:	01000044 	movi	r4,1
  802eb8:	30cd883a 	add	r6,r6,r3
  802ebc:	3b0f883a 	add	r7,r7,r12
  802ec0:	423fffc4 	addi	r8,r8,-1
  802ec4:	1013883a 	mov	r9,r2
  802ec8:	3015883a 	mov	r10,r6
  802ecc:	111ab03a 	or	r13,r2,r4
  802ed0:	98003016 	blt	r19,zero,802f94 <__muldf3+0x398>
  802ed4:	5825883a 	mov	r18,r11
  802ed8:	3827883a 	mov	r19,r7
  802edc:	7abfef2e 	bgeu	r15,r10,802e9c <__muldf3+0x2a0>
  802ee0:	da001015 	stw	r8,64(sp)
  802ee4:	00803fc4 	movi	r2,255
  802ee8:	488e703a 	and	r7,r9,r2
  802eec:	00802004 	movi	r2,128
  802ef0:	0007883a 	mov	r3,zero
  802ef4:	0011883a 	mov	r8,zero
  802ef8:	38801826 	beq	r7,r2,802f5c <__muldf3+0x360>
  802efc:	008000c4 	movi	r2,3
  802f00:	d9000e04 	addi	r4,sp,56
  802f04:	da801215 	stw	r10,72(sp)
  802f08:	d8800e15 	stw	r2,56(sp)
  802f0c:	da401115 	stw	r9,68(sp)
  802f10:	003f6a06 	br	802cbc <__muldf3+0xc0>
  802f14:	89802126 	beq	r17,r6,802f9c <__muldf3+0x3a0>
  802f18:	0009883a 	mov	r4,zero
  802f1c:	5105883a 	add	r2,r10,r4
  802f20:	128d803a 	cmpltu	r6,r2,r10
  802f24:	5d07883a 	add	r3,r11,r20
  802f28:	30cd883a 	add	r6,r6,r3
  802f2c:	0021883a 	mov	r16,zero
  802f30:	0023883a 	mov	r17,zero
  802f34:	1025883a 	mov	r18,r2
  802f38:	3027883a 	mov	r19,r6
  802f3c:	32ff9e2e 	bgeu	r6,r11,802db8 <__muldf3+0x1bc>
  802f40:	00800044 	movi	r2,1
  802f44:	8089883a 	add	r4,r16,r2
  802f48:	240d803a 	cmpltu	r6,r4,r16
  802f4c:	344d883a 	add	r6,r6,r17
  802f50:	2021883a 	mov	r16,r4
  802f54:	3023883a 	mov	r17,r6
  802f58:	003f9806 	br	802dbc <__muldf3+0x1c0>
  802f5c:	403fe71e 	bne	r8,zero,802efc <__muldf3+0x300>
  802f60:	01004004 	movi	r4,256
  802f64:	4904703a 	and	r2,r9,r4
  802f68:	10c4b03a 	or	r2,r2,r3
  802f6c:	103fe31e 	bne	r2,zero,802efc <__muldf3+0x300>
  802f70:	94c4b03a 	or	r2,r18,r19
  802f74:	103fe126 	beq	r2,zero,802efc <__muldf3+0x300>
  802f78:	49c5883a 	add	r2,r9,r7
  802f7c:	1251803a 	cmpltu	r8,r2,r9
  802f80:	4291883a 	add	r8,r8,r10
  802f84:	013fc004 	movi	r4,-256
  802f88:	1112703a 	and	r9,r2,r4
  802f8c:	4015883a 	mov	r10,r8
  802f90:	003fda06 	br	802efc <__muldf3+0x300>
  802f94:	6813883a 	mov	r9,r13
  802f98:	003fce06 	br	802ed4 <__muldf3+0x2d8>
  802f9c:	143f7c36 	bltu	r2,r16,802d90 <__muldf3+0x194>
  802fa0:	003fdd06 	br	802f18 <__muldf3+0x31c>
  802fa4:	12bf852e 	bgeu	r2,r10,802dbc <__muldf3+0x1c0>
  802fa8:	003fe506 	br	802f40 <__muldf3+0x344>
  802fac:	00800084 	movi	r2,2
  802fb0:	20bf351e 	bne	r4,r2,802c88 <__muldf3+0x8c>
  802fb4:	01002074 	movhi	r4,129
  802fb8:	2100ec04 	addi	r4,r4,944
  802fbc:	003f3f06 	br	802cbc <__muldf3+0xc0>

00802fc0 <__make_dp>:
  802fc0:	defff904 	addi	sp,sp,-28
  802fc4:	d8c00717 	ldw	r3,28(sp)
  802fc8:	d9000015 	stw	r4,0(sp)
  802fcc:	d809883a 	mov	r4,sp
  802fd0:	dfc00515 	stw	ra,20(sp)
  802fd4:	d9c00615 	stw	r7,24(sp)
  802fd8:	d9400115 	stw	r5,4(sp)
  802fdc:	d9800215 	stw	r6,8(sp)
  802fe0:	d8c00415 	stw	r3,16(sp)
  802fe4:	d9c00315 	stw	r7,12(sp)
  802fe8:	08036d80 	call	8036d8 <__pack_d>
  802fec:	dfc00517 	ldw	ra,20(sp)
  802ff0:	dec00704 	addi	sp,sp,28
  802ff4:	f800283a 	ret

00802ff8 <__truncdfsf2>:
  802ff8:	defff804 	addi	sp,sp,-32
  802ffc:	2005883a 	mov	r2,r4
  803000:	2807883a 	mov	r3,r5
  803004:	d809883a 	mov	r4,sp
  803008:	d9400204 	addi	r5,sp,8
  80300c:	d8c00115 	stw	r3,4(sp)
  803010:	d8800015 	stw	r2,0(sp)
  803014:	dfc00715 	stw	ra,28(sp)
  803018:	08039ec0 	call	8039ec <__unpack_d>
  80301c:	d9c00517 	ldw	r7,20(sp)
  803020:	da000617 	ldw	r8,24(sp)
  803024:	02d00034 	movhi	r11,16384
  803028:	5affffc4 	addi	r11,r11,-1
  80302c:	3812d7ba 	srli	r9,r7,30
  803030:	401a90ba 	slli	r13,r8,2
  803034:	3ac4703a 	and	r2,r7,r11
  803038:	0007883a 	mov	r3,zero
  80303c:	6a52b03a 	or	r9,r13,r9
  803040:	10c4b03a 	or	r2,r2,r3
  803044:	d9000217 	ldw	r4,8(sp)
  803048:	d9400317 	ldw	r5,12(sp)
  80304c:	d9800417 	ldw	r6,16(sp)
  803050:	480f883a 	mov	r7,r9
  803054:	10000126 	beq	r2,zero,80305c <__truncdfsf2+0x64>
  803058:	49c00054 	ori	r7,r9,1
  80305c:	08036ac0 	call	8036ac <__make_fp>
  803060:	dfc00717 	ldw	ra,28(sp)
  803064:	dec00804 	addi	sp,sp,32
  803068:	f800283a 	ret

0080306c <__floatunsidf>:
  80306c:	defff204 	addi	sp,sp,-56
  803070:	dfc00d15 	stw	ra,52(sp)
  803074:	ddc00c15 	stw	r23,48(sp)
  803078:	dd800b15 	stw	r22,44(sp)
  80307c:	dd400a15 	stw	r21,40(sp)
  803080:	dd000915 	stw	r20,36(sp)
  803084:	dcc00815 	stw	r19,32(sp)
  803088:	dc800715 	stw	r18,28(sp)
  80308c:	dc400615 	stw	r17,24(sp)
  803090:	dc000515 	stw	r16,20(sp)
  803094:	d8000115 	stw	zero,4(sp)
  803098:	20000f1e 	bne	r4,zero,8030d8 <__floatunsidf+0x6c>
  80309c:	00800084 	movi	r2,2
  8030a0:	d8800015 	stw	r2,0(sp)
  8030a4:	d809883a 	mov	r4,sp
  8030a8:	08036d80 	call	8036d8 <__pack_d>
  8030ac:	dfc00d17 	ldw	ra,52(sp)
  8030b0:	ddc00c17 	ldw	r23,48(sp)
  8030b4:	dd800b17 	ldw	r22,44(sp)
  8030b8:	dd400a17 	ldw	r21,40(sp)
  8030bc:	dd000917 	ldw	r20,36(sp)
  8030c0:	dcc00817 	ldw	r19,32(sp)
  8030c4:	dc800717 	ldw	r18,28(sp)
  8030c8:	dc400617 	ldw	r17,24(sp)
  8030cc:	dc000517 	ldw	r16,20(sp)
  8030d0:	dec00e04 	addi	sp,sp,56
  8030d4:	f800283a 	ret
  8030d8:	008000c4 	movi	r2,3
  8030dc:	00c00f04 	movi	r3,60
  8030e0:	002f883a 	mov	r23,zero
  8030e4:	202d883a 	mov	r22,r4
  8030e8:	d8800015 	stw	r2,0(sp)
  8030ec:	d8c00215 	stw	r3,8(sp)
  8030f0:	d9000315 	stw	r4,12(sp)
  8030f4:	ddc00415 	stw	r23,16(sp)
  8030f8:	080335c0 	call	80335c <__clzsi2>
  8030fc:	12400744 	addi	r9,r2,29
  803100:	48000b16 	blt	r9,zero,803130 <__floatunsidf+0xc4>
  803104:	483fe726 	beq	r9,zero,8030a4 <__floatunsidf+0x38>
  803108:	10bfff44 	addi	r2,r2,-3
  80310c:	10002e16 	blt	r2,zero,8031c8 <__floatunsidf+0x15c>
  803110:	b0a2983a 	sll	r17,r22,r2
  803114:	0021883a 	mov	r16,zero
  803118:	d8800217 	ldw	r2,8(sp)
  80311c:	dc400415 	stw	r17,16(sp)
  803120:	dc000315 	stw	r16,12(sp)
  803124:	1245c83a 	sub	r2,r2,r9
  803128:	d8800215 	stw	r2,8(sp)
  80312c:	003fdd06 	br	8030a4 <__floatunsidf+0x38>
  803130:	0255c83a 	sub	r10,zero,r9
  803134:	51bff804 	addi	r6,r10,-32
  803138:	30001b16 	blt	r6,zero,8031a8 <__floatunsidf+0x13c>
  80313c:	b9a8d83a 	srl	r20,r23,r6
  803140:	002b883a 	mov	r21,zero
  803144:	000f883a 	mov	r7,zero
  803148:	01000044 	movi	r4,1
  80314c:	0011883a 	mov	r8,zero
  803150:	30002516 	blt	r6,zero,8031e8 <__floatunsidf+0x17c>
  803154:	21a6983a 	sll	r19,r4,r6
  803158:	0025883a 	mov	r18,zero
  80315c:	00bfffc4 	movi	r2,-1
  803160:	9089883a 	add	r4,r18,r2
  803164:	988b883a 	add	r5,r19,r2
  803168:	248d803a 	cmpltu	r6,r4,r18
  80316c:	314b883a 	add	r5,r6,r5
  803170:	b104703a 	and	r2,r22,r4
  803174:	b946703a 	and	r3,r23,r5
  803178:	10c4b03a 	or	r2,r2,r3
  80317c:	10000226 	beq	r2,zero,803188 <__floatunsidf+0x11c>
  803180:	01c00044 	movi	r7,1
  803184:	0011883a 	mov	r8,zero
  803188:	d9000217 	ldw	r4,8(sp)
  80318c:	a1c4b03a 	or	r2,r20,r7
  803190:	aa06b03a 	or	r3,r21,r8
  803194:	2249c83a 	sub	r4,r4,r9
  803198:	d8c00415 	stw	r3,16(sp)
  80319c:	d9000215 	stw	r4,8(sp)
  8031a0:	d8800315 	stw	r2,12(sp)
  8031a4:	003fbf06 	br	8030a4 <__floatunsidf+0x38>
  8031a8:	bdc7883a 	add	r3,r23,r23
  8031ac:	008007c4 	movi	r2,31
  8031b0:	1285c83a 	sub	r2,r2,r10
  8031b4:	1886983a 	sll	r3,r3,r2
  8031b8:	b2a8d83a 	srl	r20,r22,r10
  8031bc:	baaad83a 	srl	r21,r23,r10
  8031c0:	1d28b03a 	or	r20,r3,r20
  8031c4:	003fdf06 	br	803144 <__floatunsidf+0xd8>
  8031c8:	b006d07a 	srli	r3,r22,1
  8031cc:	008007c4 	movi	r2,31
  8031d0:	1245c83a 	sub	r2,r2,r9
  8031d4:	1886d83a 	srl	r3,r3,r2
  8031d8:	ba62983a 	sll	r17,r23,r9
  8031dc:	b260983a 	sll	r16,r22,r9
  8031e0:	1c62b03a 	or	r17,r3,r17
  8031e4:	003fcc06 	br	803118 <__floatunsidf+0xac>
  8031e8:	2006d07a 	srli	r3,r4,1
  8031ec:	008007c4 	movi	r2,31
  8031f0:	1285c83a 	sub	r2,r2,r10
  8031f4:	18a6d83a 	srl	r19,r3,r2
  8031f8:	22a4983a 	sll	r18,r4,r10
  8031fc:	003fd706 	br	80315c <__floatunsidf+0xf0>

00803200 <__mulsi3>:
  803200:	20000a26 	beq	r4,zero,80322c <__mulsi3+0x2c>
  803204:	0007883a 	mov	r3,zero
  803208:	2080004c 	andi	r2,r4,1
  80320c:	1005003a 	cmpeq	r2,r2,zero
  803210:	2008d07a 	srli	r4,r4,1
  803214:	1000011e 	bne	r2,zero,80321c <__mulsi3+0x1c>
  803218:	1947883a 	add	r3,r3,r5
  80321c:	294b883a 	add	r5,r5,r5
  803220:	203ff91e 	bne	r4,zero,803208 <__mulsi3+0x8>
  803224:	1805883a 	mov	r2,r3
  803228:	f800283a 	ret
  80322c:	0007883a 	mov	r3,zero
  803230:	1805883a 	mov	r2,r3
  803234:	f800283a 	ret

00803238 <__muldi3>:
  803238:	defff204 	addi	sp,sp,-56
  80323c:	df000c15 	stw	fp,48(sp)
  803240:	3038d43a 	srli	fp,r6,16
  803244:	dd000815 	stw	r20,32(sp)
  803248:	dc400515 	stw	r17,20(sp)
  80324c:	2028d43a 	srli	r20,r4,16
  803250:	247fffcc 	andi	r17,r4,65535
  803254:	dc000415 	stw	r16,16(sp)
  803258:	343fffcc 	andi	r16,r6,65535
  80325c:	dcc00715 	stw	r19,28(sp)
  803260:	d9000015 	stw	r4,0(sp)
  803264:	2827883a 	mov	r19,r5
  803268:	8809883a 	mov	r4,r17
  80326c:	d9400115 	stw	r5,4(sp)
  803270:	800b883a 	mov	r5,r16
  803274:	d9800215 	stw	r6,8(sp)
  803278:	dfc00d15 	stw	ra,52(sp)
  80327c:	d9c00315 	stw	r7,12(sp)
  803280:	dd800a15 	stw	r22,40(sp)
  803284:	dd400915 	stw	r21,36(sp)
  803288:	302d883a 	mov	r22,r6
  80328c:	ddc00b15 	stw	r23,44(sp)
  803290:	dc800615 	stw	r18,24(sp)
  803294:	08032000 	call	803200 <__mulsi3>
  803298:	8809883a 	mov	r4,r17
  80329c:	e00b883a 	mov	r5,fp
  8032a0:	102b883a 	mov	r21,r2
  8032a4:	08032000 	call	803200 <__mulsi3>
  8032a8:	800b883a 	mov	r5,r16
  8032ac:	a009883a 	mov	r4,r20
  8032b0:	1023883a 	mov	r17,r2
  8032b4:	08032000 	call	803200 <__mulsi3>
  8032b8:	a009883a 	mov	r4,r20
  8032bc:	e00b883a 	mov	r5,fp
  8032c0:	1021883a 	mov	r16,r2
  8032c4:	08032000 	call	803200 <__mulsi3>
  8032c8:	a8ffffcc 	andi	r3,r21,65535
  8032cc:	a82ad43a 	srli	r21,r21,16
  8032d0:	8c23883a 	add	r17,r17,r16
  8032d4:	1011883a 	mov	r8,r2
  8032d8:	ac6b883a 	add	r21,r21,r17
  8032dc:	a804943a 	slli	r2,r21,16
  8032e0:	b009883a 	mov	r4,r22
  8032e4:	980b883a 	mov	r5,r19
  8032e8:	10c7883a 	add	r3,r2,r3
  8032ec:	a812d43a 	srli	r9,r21,16
  8032f0:	180d883a 	mov	r6,r3
  8032f4:	ac00022e 	bgeu	r21,r16,803300 <__muldi3+0xc8>
  8032f8:	00800074 	movhi	r2,1
  8032fc:	4091883a 	add	r8,r8,r2
  803300:	4267883a 	add	r19,r8,r9
  803304:	302d883a 	mov	r22,r6
  803308:	08032000 	call	803200 <__mulsi3>
  80330c:	d9400317 	ldw	r5,12(sp)
  803310:	d9000017 	ldw	r4,0(sp)
  803314:	1023883a 	mov	r17,r2
  803318:	08032000 	call	803200 <__mulsi3>
  80331c:	14cb883a 	add	r5,r2,r19
  803320:	894b883a 	add	r5,r17,r5
  803324:	b005883a 	mov	r2,r22
  803328:	2807883a 	mov	r3,r5
  80332c:	dfc00d17 	ldw	ra,52(sp)
  803330:	df000c17 	ldw	fp,48(sp)
  803334:	ddc00b17 	ldw	r23,44(sp)
  803338:	dd800a17 	ldw	r22,40(sp)
  80333c:	dd400917 	ldw	r21,36(sp)
  803340:	dd000817 	ldw	r20,32(sp)
  803344:	dcc00717 	ldw	r19,28(sp)
  803348:	dc800617 	ldw	r18,24(sp)
  80334c:	dc400517 	ldw	r17,20(sp)
  803350:	dc000417 	ldw	r16,16(sp)
  803354:	dec00e04 	addi	sp,sp,56
  803358:	f800283a 	ret

0080335c <__clzsi2>:
  80335c:	00bfffd4 	movui	r2,65535
  803360:	11000e36 	bltu	r2,r4,80339c <__clzsi2+0x40>
  803364:	00803fc4 	movi	r2,255
  803368:	01400204 	movi	r5,8
  80336c:	0007883a 	mov	r3,zero
  803370:	11001036 	bltu	r2,r4,8033b4 <__clzsi2+0x58>
  803374:	000b883a 	mov	r5,zero
  803378:	20c6d83a 	srl	r3,r4,r3
  80337c:	00802074 	movhi	r2,129
  803380:	1080f104 	addi	r2,r2,964
  803384:	1887883a 	add	r3,r3,r2
  803388:	18800003 	ldbu	r2,0(r3)
  80338c:	00c00804 	movi	r3,32
  803390:	2885883a 	add	r2,r5,r2
  803394:	1885c83a 	sub	r2,r3,r2
  803398:	f800283a 	ret
  80339c:	01400404 	movi	r5,16
  8033a0:	00804034 	movhi	r2,256
  8033a4:	10bfffc4 	addi	r2,r2,-1
  8033a8:	2807883a 	mov	r3,r5
  8033ac:	113ff22e 	bgeu	r2,r4,803378 <__clzsi2+0x1c>
  8033b0:	01400604 	movi	r5,24
  8033b4:	2807883a 	mov	r3,r5
  8033b8:	20c6d83a 	srl	r3,r4,r3
  8033bc:	00802074 	movhi	r2,129
  8033c0:	1080f104 	addi	r2,r2,964
  8033c4:	1887883a 	add	r3,r3,r2
  8033c8:	18800003 	ldbu	r2,0(r3)
  8033cc:	00c00804 	movi	r3,32
  8033d0:	2885883a 	add	r2,r5,r2
  8033d4:	1885c83a 	sub	r2,r3,r2
  8033d8:	f800283a 	ret

008033dc <__pack_f>:
  8033dc:	20c00017 	ldw	r3,0(r4)
  8033e0:	01c00044 	movi	r7,1
  8033e4:	21800317 	ldw	r6,12(r4)
  8033e8:	21400117 	ldw	r5,4(r4)
  8033ec:	38c02d2e 	bgeu	r7,r3,8034a4 <__pack_f+0xc8>
  8033f0:	00800104 	movi	r2,4
  8033f4:	18802826 	beq	r3,r2,803498 <__pack_f+0xbc>
  8033f8:	00800084 	movi	r2,2
  8033fc:	18800126 	beq	r3,r2,803404 <__pack_f+0x28>
  803400:	3000101e 	bne	r6,zero,803444 <__pack_f+0x68>
  803404:	000d883a 	mov	r6,zero
  803408:	0007883a 	mov	r3,zero
  80340c:	19003fcc 	andi	r4,r3,255
  803410:	200895fa 	slli	r4,r4,23
  803414:	00c02034 	movhi	r3,128
  803418:	18ffffc4 	addi	r3,r3,-1
  80341c:	30c6703a 	and	r3,r6,r3
  803420:	10a0002c 	andhi	r2,r2,32768
  803424:	10c4b03a 	or	r2,r2,r3
  803428:	280a97fa 	slli	r5,r5,31
  80342c:	1104b03a 	or	r2,r2,r4
  803430:	00e00034 	movhi	r3,32768
  803434:	18ffffc4 	addi	r3,r3,-1
  803438:	10c4703a 	and	r2,r2,r3
  80343c:	1144b03a 	or	r2,r2,r5
  803440:	f800283a 	ret
  803444:	21000217 	ldw	r4,8(r4)
  803448:	00bfe084 	movi	r2,-126
  80344c:	20801b16 	blt	r4,r2,8034bc <__pack_f+0xe0>
  803450:	00801fc4 	movi	r2,127
  803454:	11001016 	blt	r2,r4,803498 <__pack_f+0xbc>
  803458:	308e703a 	and	r7,r6,r2
  80345c:	2087883a 	add	r3,r4,r2
  803460:	00801004 	movi	r2,64
  803464:	38800526 	beq	r7,r2,80347c <__pack_f+0xa0>
  803468:	31800fc4 	addi	r6,r6,63
  80346c:	30000716 	blt	r6,zero,80348c <__pack_f+0xb0>
  803470:	300490ba 	slli	r2,r6,2
  803474:	100cd27a 	srli	r6,r2,9
  803478:	003fe406 	br	80340c <__pack_f+0x30>
  80347c:	3080200c 	andi	r2,r6,128
  803480:	103ffa26 	beq	r2,zero,80346c <__pack_f+0x90>
  803484:	31cd883a 	add	r6,r6,r7
  803488:	003ff806 	br	80346c <__pack_f+0x90>
  80348c:	300cd07a 	srli	r6,r6,1
  803490:	18c00044 	addi	r3,r3,1
  803494:	003ff606 	br	803470 <__pack_f+0x94>
  803498:	000d883a 	mov	r6,zero
  80349c:	00ffffc4 	movi	r3,-1
  8034a0:	003fda06 	br	80340c <__pack_f+0x30>
  8034a4:	31800434 	orhi	r6,r6,16
  8034a8:	00802034 	movhi	r2,128
  8034ac:	10bfffc4 	addi	r2,r2,-1
  8034b0:	308c703a 	and	r6,r6,r2
  8034b4:	00ffffc4 	movi	r3,-1
  8034b8:	003fd406 	br	80340c <__pack_f+0x30>
  8034bc:	1109c83a 	sub	r4,r2,r4
  8034c0:	00800644 	movi	r2,25
  8034c4:	11001216 	blt	r2,r4,803510 <__pack_f+0x134>
  8034c8:	3904983a 	sll	r2,r7,r4
  8034cc:	3106d83a 	srl	r3,r6,r4
  8034d0:	10bfffc4 	addi	r2,r2,-1
  8034d4:	3084703a 	and	r2,r6,r2
  8034d8:	1004c03a 	cmpne	r2,r2,zero
  8034dc:	1886b03a 	or	r3,r3,r2
  8034e0:	19001fcc 	andi	r4,r3,127
  8034e4:	00801004 	movi	r2,64
  8034e8:	20800c26 	beq	r4,r2,80351c <__pack_f+0x140>
  8034ec:	18c00fc4 	addi	r3,r3,63
  8034f0:	00900034 	movhi	r2,16384
  8034f4:	10bfffc4 	addi	r2,r2,-1
  8034f8:	180cd1fa 	srli	r6,r3,7
  8034fc:	10c7803a 	cmpltu	r3,r2,r3
  803500:	00802034 	movhi	r2,128
  803504:	10bfffc4 	addi	r2,r2,-1
  803508:	308c703a 	and	r6,r6,r2
  80350c:	003fbf06 	br	80340c <__pack_f+0x30>
  803510:	0007883a 	mov	r3,zero
  803514:	000d883a 	mov	r6,zero
  803518:	003ff906 	br	803500 <__pack_f+0x124>
  80351c:	1880200c 	andi	r2,r3,128
  803520:	10000126 	beq	r2,zero,803528 <__pack_f+0x14c>
  803524:	1907883a 	add	r3,r3,r4
  803528:	180cd1fa 	srli	r6,r3,7
  80352c:	00900034 	movhi	r2,16384
  803530:	10bfffc4 	addi	r2,r2,-1
  803534:	10c7803a 	cmpltu	r3,r2,r3
  803538:	003ff106 	br	803500 <__pack_f+0x124>

0080353c <__unpack_f>:
  80353c:	21800017 	ldw	r6,0(r4)
  803540:	00c02034 	movhi	r3,128
  803544:	18ffffc4 	addi	r3,r3,-1
  803548:	3004d5fa 	srli	r2,r6,23
  80354c:	3008d7fa 	srli	r4,r6,31
  803550:	30ce703a 	and	r7,r6,r3
  803554:	10c03fcc 	andi	r3,r2,255
  803558:	29000115 	stw	r4,4(r5)
  80355c:	1800131e 	bne	r3,zero,8035ac <__unpack_f+0x70>
  803560:	38000f26 	beq	r7,zero,8035a0 <__unpack_f+0x64>
  803564:	380691fa 	slli	r3,r7,7
  803568:	01bfe084 	movi	r6,-126
  80356c:	008000c4 	movi	r2,3
  803570:	01100034 	movhi	r4,16384
  803574:	213fffc4 	addi	r4,r4,-1
  803578:	28800015 	stw	r2,0(r5)
  80357c:	29800215 	stw	r6,8(r5)
  803580:	20c00536 	bltu	r4,r3,803598 <__unpack_f+0x5c>
  803584:	3005883a 	mov	r2,r6
  803588:	18c7883a 	add	r3,r3,r3
  80358c:	10bfffc4 	addi	r2,r2,-1
  803590:	20fffd2e 	bgeu	r4,r3,803588 <__unpack_f+0x4c>
  803594:	28800215 	stw	r2,8(r5)
  803598:	28c00315 	stw	r3,12(r5)
  80359c:	f800283a 	ret
  8035a0:	00800084 	movi	r2,2
  8035a4:	28800015 	stw	r2,0(r5)
  8035a8:	f800283a 	ret
  8035ac:	00803fc4 	movi	r2,255
  8035b0:	18800826 	beq	r3,r2,8035d4 <__unpack_f+0x98>
  8035b4:	380491fa 	slli	r2,r7,7
  8035b8:	18ffe044 	addi	r3,r3,-127
  8035bc:	28c00215 	stw	r3,8(r5)
  8035c0:	10900034 	orhi	r2,r2,16384
  8035c4:	28800315 	stw	r2,12(r5)
  8035c8:	008000c4 	movi	r2,3
  8035cc:	28800015 	stw	r2,0(r5)
  8035d0:	f800283a 	ret
  8035d4:	3800031e 	bne	r7,zero,8035e4 <__unpack_f+0xa8>
  8035d8:	00800104 	movi	r2,4
  8035dc:	28800015 	stw	r2,0(r5)
  8035e0:	f800283a 	ret
  8035e4:	3080042c 	andhi	r2,r6,16
  8035e8:	10000426 	beq	r2,zero,8035fc <__unpack_f+0xc0>
  8035ec:	00800044 	movi	r2,1
  8035f0:	28800015 	stw	r2,0(r5)
  8035f4:	29c00315 	stw	r7,12(r5)
  8035f8:	f800283a 	ret
  8035fc:	28000015 	stw	zero,0(r5)
  803600:	003ffc06 	br	8035f4 <__unpack_f+0xb8>

00803604 <__fpcmp_parts_f>:
  803604:	21800017 	ldw	r6,0(r4)
  803608:	00c00044 	movi	r3,1
  80360c:	19800a2e 	bgeu	r3,r6,803638 <__fpcmp_parts_f+0x34>
  803610:	28800017 	ldw	r2,0(r5)
  803614:	1880082e 	bgeu	r3,r2,803638 <__fpcmp_parts_f+0x34>
  803618:	00c00104 	movi	r3,4
  80361c:	30c01e26 	beq	r6,r3,803698 <__fpcmp_parts_f+0x94>
  803620:	10c01a26 	beq	r2,r3,80368c <__fpcmp_parts_f+0x88>
  803624:	00c00084 	movi	r3,2
  803628:	30c00526 	beq	r6,r3,803640 <__fpcmp_parts_f+0x3c>
  80362c:	10c0071e 	bne	r2,r3,80364c <__fpcmp_parts_f+0x48>
  803630:	20800117 	ldw	r2,4(r4)
  803634:	1000091e 	bne	r2,zero,80365c <__fpcmp_parts_f+0x58>
  803638:	00800044 	movi	r2,1
  80363c:	f800283a 	ret
  803640:	10c0121e 	bne	r2,r3,80368c <__fpcmp_parts_f+0x88>
  803644:	0005883a 	mov	r2,zero
  803648:	f800283a 	ret
  80364c:	20c00117 	ldw	r3,4(r4)
  803650:	28800117 	ldw	r2,4(r5)
  803654:	18800326 	beq	r3,r2,803664 <__fpcmp_parts_f+0x60>
  803658:	183ff726 	beq	r3,zero,803638 <__fpcmp_parts_f+0x34>
  80365c:	00bfffc4 	movi	r2,-1
  803660:	f800283a 	ret
  803664:	21800217 	ldw	r6,8(r4)
  803668:	28800217 	ldw	r2,8(r5)
  80366c:	11bffa16 	blt	r2,r6,803658 <__fpcmp_parts_f+0x54>
  803670:	30800416 	blt	r6,r2,803684 <__fpcmp_parts_f+0x80>
  803674:	21000317 	ldw	r4,12(r4)
  803678:	29400317 	ldw	r5,12(r5)
  80367c:	293ff636 	bltu	r5,r4,803658 <__fpcmp_parts_f+0x54>
  803680:	217ff02e 	bgeu	r4,r5,803644 <__fpcmp_parts_f+0x40>
  803684:	183fec1e 	bne	r3,zero,803638 <__fpcmp_parts_f+0x34>
  803688:	003ff406 	br	80365c <__fpcmp_parts_f+0x58>
  80368c:	28800117 	ldw	r2,4(r5)
  803690:	103fe91e 	bne	r2,zero,803638 <__fpcmp_parts_f+0x34>
  803694:	003ff106 	br	80365c <__fpcmp_parts_f+0x58>
  803698:	11bfe51e 	bne	r2,r6,803630 <__fpcmp_parts_f+0x2c>
  80369c:	28c00117 	ldw	r3,4(r5)
  8036a0:	20800117 	ldw	r2,4(r4)
  8036a4:	1885c83a 	sub	r2,r3,r2
  8036a8:	f800283a 	ret

008036ac <__make_fp>:
  8036ac:	defffb04 	addi	sp,sp,-20
  8036b0:	d9000015 	stw	r4,0(sp)
  8036b4:	d809883a 	mov	r4,sp
  8036b8:	dfc00415 	stw	ra,16(sp)
  8036bc:	d9400115 	stw	r5,4(sp)
  8036c0:	d9800215 	stw	r6,8(sp)
  8036c4:	d9c00315 	stw	r7,12(sp)
  8036c8:	08033dc0 	call	8033dc <__pack_f>
  8036cc:	dfc00417 	ldw	ra,16(sp)
  8036d0:	dec00504 	addi	sp,sp,20
  8036d4:	f800283a 	ret

008036d8 <__pack_d>:
  8036d8:	20c00017 	ldw	r3,0(r4)
  8036dc:	defffd04 	addi	sp,sp,-12
  8036e0:	dc000015 	stw	r16,0(sp)
  8036e4:	dc800215 	stw	r18,8(sp)
  8036e8:	dc400115 	stw	r17,4(sp)
  8036ec:	00800044 	movi	r2,1
  8036f0:	22000317 	ldw	r8,12(r4)
  8036f4:	001f883a 	mov	r15,zero
  8036f8:	22400417 	ldw	r9,16(r4)
  8036fc:	24000117 	ldw	r16,4(r4)
  803700:	10c0552e 	bgeu	r2,r3,803858 <__pack_d+0x180>
  803704:	00800104 	movi	r2,4
  803708:	18804f26 	beq	r3,r2,803848 <__pack_d+0x170>
  80370c:	00800084 	movi	r2,2
  803710:	18800226 	beq	r3,r2,80371c <__pack_d+0x44>
  803714:	4244b03a 	or	r2,r8,r9
  803718:	10001a1e 	bne	r2,zero,803784 <__pack_d+0xac>
  80371c:	000d883a 	mov	r6,zero
  803720:	000f883a 	mov	r7,zero
  803724:	0011883a 	mov	r8,zero
  803728:	00800434 	movhi	r2,16
  80372c:	10bfffc4 	addi	r2,r2,-1
  803730:	301d883a 	mov	r14,r6
  803734:	3884703a 	and	r2,r7,r2
  803738:	400a953a 	slli	r5,r8,20
  80373c:	79bffc2c 	andhi	r6,r15,65520
  803740:	308cb03a 	or	r6,r6,r2
  803744:	00e00434 	movhi	r3,32784
  803748:	18ffffc4 	addi	r3,r3,-1
  80374c:	800497fa 	slli	r2,r16,31
  803750:	30c6703a 	and	r3,r6,r3
  803754:	1946b03a 	or	r3,r3,r5
  803758:	01600034 	movhi	r5,32768
  80375c:	297fffc4 	addi	r5,r5,-1
  803760:	194a703a 	and	r5,r3,r5
  803764:	288ab03a 	or	r5,r5,r2
  803768:	2807883a 	mov	r3,r5
  80376c:	7005883a 	mov	r2,r14
  803770:	dc800217 	ldw	r18,8(sp)
  803774:	dc400117 	ldw	r17,4(sp)
  803778:	dc000017 	ldw	r16,0(sp)
  80377c:	dec00304 	addi	sp,sp,12
  803780:	f800283a 	ret
  803784:	21000217 	ldw	r4,8(r4)
  803788:	00bf0084 	movi	r2,-1022
  80378c:	20803f16 	blt	r4,r2,80388c <__pack_d+0x1b4>
  803790:	0080ffc4 	movi	r2,1023
  803794:	11002c16 	blt	r2,r4,803848 <__pack_d+0x170>
  803798:	00803fc4 	movi	r2,255
  80379c:	408c703a 	and	r6,r8,r2
  8037a0:	00802004 	movi	r2,128
  8037a4:	0007883a 	mov	r3,zero
  8037a8:	000f883a 	mov	r7,zero
  8037ac:	2280ffc4 	addi	r10,r4,1023
  8037b0:	30801e26 	beq	r6,r2,80382c <__pack_d+0x154>
  8037b4:	00801fc4 	movi	r2,127
  8037b8:	4089883a 	add	r4,r8,r2
  8037bc:	220d803a 	cmpltu	r6,r4,r8
  8037c0:	324d883a 	add	r6,r6,r9
  8037c4:	2011883a 	mov	r8,r4
  8037c8:	3013883a 	mov	r9,r6
  8037cc:	00880034 	movhi	r2,8192
  8037d0:	10bfffc4 	addi	r2,r2,-1
  8037d4:	12400d36 	bltu	r2,r9,80380c <__pack_d+0x134>
  8037d8:	4804963a 	slli	r2,r9,24
  8037dc:	400cd23a 	srli	r6,r8,8
  8037e0:	480ed23a 	srli	r7,r9,8
  8037e4:	013fffc4 	movi	r4,-1
  8037e8:	118cb03a 	or	r6,r2,r6
  8037ec:	01400434 	movhi	r5,16
  8037f0:	297fffc4 	addi	r5,r5,-1
  8037f4:	3104703a 	and	r2,r6,r4
  8037f8:	3946703a 	and	r3,r7,r5
  8037fc:	5201ffcc 	andi	r8,r10,2047
  803800:	100d883a 	mov	r6,r2
  803804:	180f883a 	mov	r7,r3
  803808:	003fc706 	br	803728 <__pack_d+0x50>
  80380c:	480897fa 	slli	r4,r9,31
  803810:	4004d07a 	srli	r2,r8,1
  803814:	4806d07a 	srli	r3,r9,1
  803818:	52800044 	addi	r10,r10,1
  80381c:	2084b03a 	or	r2,r4,r2
  803820:	1011883a 	mov	r8,r2
  803824:	1813883a 	mov	r9,r3
  803828:	003feb06 	br	8037d8 <__pack_d+0x100>
  80382c:	383fe11e 	bne	r7,zero,8037b4 <__pack_d+0xdc>
  803830:	01004004 	movi	r4,256
  803834:	4104703a 	and	r2,r8,r4
  803838:	10c4b03a 	or	r2,r2,r3
  80383c:	103fe326 	beq	r2,zero,8037cc <__pack_d+0xf4>
  803840:	3005883a 	mov	r2,r6
  803844:	003fdc06 	br	8037b8 <__pack_d+0xe0>
  803848:	000d883a 	mov	r6,zero
  80384c:	000f883a 	mov	r7,zero
  803850:	0201ffc4 	movi	r8,2047
  803854:	003fb406 	br	803728 <__pack_d+0x50>
  803858:	0005883a 	mov	r2,zero
  80385c:	00c00234 	movhi	r3,8
  803860:	408cb03a 	or	r6,r8,r2
  803864:	48ceb03a 	or	r7,r9,r3
  803868:	013fffc4 	movi	r4,-1
  80386c:	01400434 	movhi	r5,16
  803870:	297fffc4 	addi	r5,r5,-1
  803874:	3104703a 	and	r2,r6,r4
  803878:	3946703a 	and	r3,r7,r5
  80387c:	100d883a 	mov	r6,r2
  803880:	180f883a 	mov	r7,r3
  803884:	0201ffc4 	movi	r8,2047
  803888:	003fa706 	br	803728 <__pack_d+0x50>
  80388c:	1109c83a 	sub	r4,r2,r4
  803890:	00800e04 	movi	r2,56
  803894:	11004316 	blt	r2,r4,8039a4 <__pack_d+0x2cc>
  803898:	21fff804 	addi	r7,r4,-32
  80389c:	38004516 	blt	r7,zero,8039b4 <__pack_d+0x2dc>
  8038a0:	49d8d83a 	srl	r12,r9,r7
  8038a4:	001b883a 	mov	r13,zero
  8038a8:	0023883a 	mov	r17,zero
  8038ac:	01400044 	movi	r5,1
  8038b0:	0025883a 	mov	r18,zero
  8038b4:	38004716 	blt	r7,zero,8039d4 <__pack_d+0x2fc>
  8038b8:	29d6983a 	sll	r11,r5,r7
  8038bc:	0015883a 	mov	r10,zero
  8038c0:	00bfffc4 	movi	r2,-1
  8038c4:	5089883a 	add	r4,r10,r2
  8038c8:	588b883a 	add	r5,r11,r2
  8038cc:	228d803a 	cmpltu	r6,r4,r10
  8038d0:	314b883a 	add	r5,r6,r5
  8038d4:	4104703a 	and	r2,r8,r4
  8038d8:	4946703a 	and	r3,r9,r5
  8038dc:	10c4b03a 	or	r2,r2,r3
  8038e0:	10000226 	beq	r2,zero,8038ec <__pack_d+0x214>
  8038e4:	04400044 	movi	r17,1
  8038e8:	0025883a 	mov	r18,zero
  8038ec:	00803fc4 	movi	r2,255
  8038f0:	644eb03a 	or	r7,r12,r17
  8038f4:	3892703a 	and	r9,r7,r2
  8038f8:	00802004 	movi	r2,128
  8038fc:	6c90b03a 	or	r8,r13,r18
  803900:	0015883a 	mov	r10,zero
  803904:	48801626 	beq	r9,r2,803960 <__pack_d+0x288>
  803908:	01001fc4 	movi	r4,127
  80390c:	3905883a 	add	r2,r7,r4
  803910:	11cd803a 	cmpltu	r6,r2,r7
  803914:	320d883a 	add	r6,r6,r8
  803918:	100f883a 	mov	r7,r2
  80391c:	00840034 	movhi	r2,4096
  803920:	10bfffc4 	addi	r2,r2,-1
  803924:	3011883a 	mov	r8,r6
  803928:	0007883a 	mov	r3,zero
  80392c:	11801b36 	bltu	r2,r6,80399c <__pack_d+0x2c4>
  803930:	4004963a 	slli	r2,r8,24
  803934:	3808d23a 	srli	r4,r7,8
  803938:	400ad23a 	srli	r5,r8,8
  80393c:	1813883a 	mov	r9,r3
  803940:	1108b03a 	or	r4,r2,r4
  803944:	00bfffc4 	movi	r2,-1
  803948:	00c00434 	movhi	r3,16
  80394c:	18ffffc4 	addi	r3,r3,-1
  803950:	208c703a 	and	r6,r4,r2
  803954:	28ce703a 	and	r7,r5,r3
  803958:	4a01ffcc 	andi	r8,r9,2047
  80395c:	003f7206 	br	803728 <__pack_d+0x50>
  803960:	503fe91e 	bne	r10,zero,803908 <__pack_d+0x230>
  803964:	01004004 	movi	r4,256
  803968:	3904703a 	and	r2,r7,r4
  80396c:	0007883a 	mov	r3,zero
  803970:	10c4b03a 	or	r2,r2,r3
  803974:	10000626 	beq	r2,zero,803990 <__pack_d+0x2b8>
  803978:	3a45883a 	add	r2,r7,r9
  80397c:	11cd803a 	cmpltu	r6,r2,r7
  803980:	320d883a 	add	r6,r6,r8
  803984:	100f883a 	mov	r7,r2
  803988:	3011883a 	mov	r8,r6
  80398c:	0007883a 	mov	r3,zero
  803990:	00840034 	movhi	r2,4096
  803994:	10bfffc4 	addi	r2,r2,-1
  803998:	123fe52e 	bgeu	r2,r8,803930 <__pack_d+0x258>
  80399c:	00c00044 	movi	r3,1
  8039a0:	003fe306 	br	803930 <__pack_d+0x258>
  8039a4:	0009883a 	mov	r4,zero
  8039a8:	0013883a 	mov	r9,zero
  8039ac:	000b883a 	mov	r5,zero
  8039b0:	003fe406 	br	803944 <__pack_d+0x26c>
  8039b4:	4a47883a 	add	r3,r9,r9
  8039b8:	008007c4 	movi	r2,31
  8039bc:	1105c83a 	sub	r2,r2,r4
  8039c0:	1886983a 	sll	r3,r3,r2
  8039c4:	4118d83a 	srl	r12,r8,r4
  8039c8:	491ad83a 	srl	r13,r9,r4
  8039cc:	1b18b03a 	or	r12,r3,r12
  8039d0:	003fb506 	br	8038a8 <__pack_d+0x1d0>
  8039d4:	2806d07a 	srli	r3,r5,1
  8039d8:	008007c4 	movi	r2,31
  8039dc:	1105c83a 	sub	r2,r2,r4
  8039e0:	1896d83a 	srl	r11,r3,r2
  8039e4:	2914983a 	sll	r10,r5,r4
  8039e8:	003fb506 	br	8038c0 <__pack_d+0x1e8>

008039ec <__unpack_d>:
  8039ec:	20c00117 	ldw	r3,4(r4)
  8039f0:	22400017 	ldw	r9,0(r4)
  8039f4:	00800434 	movhi	r2,16
  8039f8:	10bfffc4 	addi	r2,r2,-1
  8039fc:	1808d53a 	srli	r4,r3,20
  803a00:	180cd7fa 	srli	r6,r3,31
  803a04:	1894703a 	and	r10,r3,r2
  803a08:	2201ffcc 	andi	r8,r4,2047
  803a0c:	281b883a 	mov	r13,r5
  803a10:	4817883a 	mov	r11,r9
  803a14:	29800115 	stw	r6,4(r5)
  803a18:	5019883a 	mov	r12,r10
  803a1c:	40001e1e 	bne	r8,zero,803a98 <__unpack_d+0xac>
  803a20:	4a84b03a 	or	r2,r9,r10
  803a24:	10001926 	beq	r2,zero,803a8c <__unpack_d+0xa0>
  803a28:	4804d63a 	srli	r2,r9,24
  803a2c:	500c923a 	slli	r6,r10,8
  803a30:	013f0084 	movi	r4,-1022
  803a34:	00c40034 	movhi	r3,4096
  803a38:	18ffffc4 	addi	r3,r3,-1
  803a3c:	118cb03a 	or	r6,r2,r6
  803a40:	008000c4 	movi	r2,3
  803a44:	480a923a 	slli	r5,r9,8
  803a48:	68800015 	stw	r2,0(r13)
  803a4c:	69000215 	stw	r4,8(r13)
  803a50:	19800b36 	bltu	r3,r6,803a80 <__unpack_d+0x94>
  803a54:	200f883a 	mov	r7,r4
  803a58:	1811883a 	mov	r8,r3
  803a5c:	2945883a 	add	r2,r5,r5
  803a60:	1149803a 	cmpltu	r4,r2,r5
  803a64:	3187883a 	add	r3,r6,r6
  803a68:	20c9883a 	add	r4,r4,r3
  803a6c:	100b883a 	mov	r5,r2
  803a70:	200d883a 	mov	r6,r4
  803a74:	39ffffc4 	addi	r7,r7,-1
  803a78:	413ff82e 	bgeu	r8,r4,803a5c <__unpack_d+0x70>
  803a7c:	69c00215 	stw	r7,8(r13)
  803a80:	69800415 	stw	r6,16(r13)
  803a84:	69400315 	stw	r5,12(r13)
  803a88:	f800283a 	ret
  803a8c:	00800084 	movi	r2,2
  803a90:	28800015 	stw	r2,0(r5)
  803a94:	f800283a 	ret
  803a98:	0081ffc4 	movi	r2,2047
  803a9c:	40800f26 	beq	r8,r2,803adc <__unpack_d+0xf0>
  803aa0:	480cd63a 	srli	r6,r9,24
  803aa4:	5006923a 	slli	r3,r10,8
  803aa8:	4804923a 	slli	r2,r9,8
  803aac:	0009883a 	mov	r4,zero
  803ab0:	30c6b03a 	or	r3,r6,r3
  803ab4:	01440034 	movhi	r5,4096
  803ab8:	110cb03a 	or	r6,r2,r4
  803abc:	423f0044 	addi	r8,r8,-1023
  803ac0:	194eb03a 	or	r7,r3,r5
  803ac4:	008000c4 	movi	r2,3
  803ac8:	69c00415 	stw	r7,16(r13)
  803acc:	6a000215 	stw	r8,8(r13)
  803ad0:	68800015 	stw	r2,0(r13)
  803ad4:	69800315 	stw	r6,12(r13)
  803ad8:	f800283a 	ret
  803adc:	4a84b03a 	or	r2,r9,r10
  803ae0:	1000031e 	bne	r2,zero,803af0 <__unpack_d+0x104>
  803ae4:	00800104 	movi	r2,4
  803ae8:	28800015 	stw	r2,0(r5)
  803aec:	f800283a 	ret
  803af0:	0009883a 	mov	r4,zero
  803af4:	01400234 	movhi	r5,8
  803af8:	4904703a 	and	r2,r9,r4
  803afc:	5146703a 	and	r3,r10,r5
  803b00:	10c4b03a 	or	r2,r2,r3
  803b04:	10000526 	beq	r2,zero,803b1c <__unpack_d+0x130>
  803b08:	00800044 	movi	r2,1
  803b0c:	68800015 	stw	r2,0(r13)
  803b10:	6b000415 	stw	r12,16(r13)
  803b14:	6ac00315 	stw	r11,12(r13)
  803b18:	f800283a 	ret
  803b1c:	68000015 	stw	zero,0(r13)
  803b20:	003ffb06 	br	803b10 <__unpack_d+0x124>

00803b24 <gcvt>:
  803b24:	defff804 	addi	sp,sp,-32
  803b28:	0005883a 	mov	r2,zero
  803b2c:	dcc00615 	stw	r19,24(sp)
  803b30:	dc800515 	stw	r18,20(sp)
  803b34:	3027883a 	mov	r19,r6
  803b38:	3825883a 	mov	r18,r7
  803b3c:	100d883a 	mov	r6,r2
  803b40:	000f883a 	mov	r7,zero
  803b44:	dc400415 	stw	r17,16(sp)
  803b48:	dc000315 	stw	r16,12(sp)
  803b4c:	dfc00715 	stw	ra,28(sp)
  803b50:	2021883a 	mov	r16,r4
  803b54:	2823883a 	mov	r17,r5
  803b58:	080cdf40 	call	80cdf4 <__ltdf2>
  803b5c:	9007883a 	mov	r3,r18
  803b60:	10001516 	blt	r2,zero,803bb8 <gcvt+0x94>
  803b64:	00802074 	movhi	r2,129
  803b68:	10884204 	addi	r2,r2,8456
  803b6c:	11000017 	ldw	r4,0(r2)
  803b70:	980f883a 	mov	r7,r19
  803b74:	008019c4 	movi	r2,103
  803b78:	880d883a 	mov	r6,r17
  803b7c:	800b883a 	mov	r5,r16
  803b80:	d8c00015 	stw	r3,0(sp)
  803b84:	d8800115 	stw	r2,4(sp)
  803b88:	d8000215 	stw	zero,8(sp)
  803b8c:	08079380 	call	807938 <_gcvt>
  803b90:	900f883a 	mov	r7,r18
  803b94:	10000d26 	beq	r2,zero,803bcc <gcvt+0xa8>
  803b98:	3805883a 	mov	r2,r7
  803b9c:	dfc00717 	ldw	ra,28(sp)
  803ba0:	dcc00617 	ldw	r19,24(sp)
  803ba4:	dc800517 	ldw	r18,20(sp)
  803ba8:	dc400417 	ldw	r17,16(sp)
  803bac:	dc000317 	ldw	r16,12(sp)
  803bb0:	dec00804 	addi	sp,sp,32
  803bb4:	f800283a 	ret
  803bb8:	00800b44 	movi	r2,45
  803bbc:	9cffffc4 	addi	r19,r19,-1
  803bc0:	90c00044 	addi	r3,r18,1
  803bc4:	90800005 	stb	r2,0(r18)
  803bc8:	003fe606 	br	803b64 <gcvt+0x40>
  803bcc:	000f883a 	mov	r7,zero
  803bd0:	3805883a 	mov	r2,r7
  803bd4:	dfc00717 	ldw	ra,28(sp)
  803bd8:	dcc00617 	ldw	r19,24(sp)
  803bdc:	dc800517 	ldw	r18,20(sp)
  803be0:	dc400417 	ldw	r17,16(sp)
  803be4:	dc000317 	ldw	r16,12(sp)
  803be8:	dec00804 	addi	sp,sp,32
  803bec:	f800283a 	ret

00803bf0 <gcvtf>:
  803bf0:	defffd04 	addi	sp,sp,-12
  803bf4:	dcc00115 	stw	r19,4(sp)
  803bf8:	dc400015 	stw	r17,0(sp)
  803bfc:	3027883a 	mov	r19,r6
  803c00:	2823883a 	mov	r17,r5
  803c04:	dfc00215 	stw	ra,8(sp)
  803c08:	08026a40 	call	8026a4 <__extendsfdf2>
  803c0c:	180b883a 	mov	r5,r3
  803c10:	880d883a 	mov	r6,r17
  803c14:	980f883a 	mov	r7,r19
  803c18:	1009883a 	mov	r4,r2
  803c1c:	dfc00217 	ldw	ra,8(sp)
  803c20:	dcc00117 	ldw	r19,4(sp)
  803c24:	dc400017 	ldw	r17,0(sp)
  803c28:	dec00304 	addi	sp,sp,12
  803c2c:	0803b241 	jmpi	803b24 <gcvt>

00803c30 <ecvt>:
  803c30:	defffd04 	addi	sp,sp,-12
  803c34:	da000317 	ldw	r8,12(sp)
  803c38:	dfc00215 	stw	ra,8(sp)
  803c3c:	d8000115 	stw	zero,4(sp)
  803c40:	da000015 	stw	r8,0(sp)
  803c44:	0807f100 	call	807f10 <ecvtbuf>
  803c48:	dfc00217 	ldw	ra,8(sp)
  803c4c:	dec00304 	addi	sp,sp,12
  803c50:	f800283a 	ret

00803c54 <ecvtf>:
  803c54:	defffb04 	addi	sp,sp,-20
  803c58:	dfc00415 	stw	ra,16(sp)
  803c5c:	dd400315 	stw	r21,12(sp)
  803c60:	dcc00215 	stw	r19,8(sp)
  803c64:	382b883a 	mov	r21,r7
  803c68:	3027883a 	mov	r19,r6
  803c6c:	dc400115 	stw	r17,4(sp)
  803c70:	2823883a 	mov	r17,r5
  803c74:	08026a40 	call	8026a4 <__extendsfdf2>
  803c78:	180b883a 	mov	r5,r3
  803c7c:	880d883a 	mov	r6,r17
  803c80:	980f883a 	mov	r7,r19
  803c84:	1009883a 	mov	r4,r2
  803c88:	dd400015 	stw	r21,0(sp)
  803c8c:	0803c300 	call	803c30 <ecvt>
  803c90:	dfc00417 	ldw	ra,16(sp)
  803c94:	dd400317 	ldw	r21,12(sp)
  803c98:	dcc00217 	ldw	r19,8(sp)
  803c9c:	dc400117 	ldw	r17,4(sp)
  803ca0:	dec00504 	addi	sp,sp,20
  803ca4:	f800283a 	ret

00803ca8 <fcvt>:
  803ca8:	defffd04 	addi	sp,sp,-12
  803cac:	da000317 	ldw	r8,12(sp)
  803cb0:	dfc00215 	stw	ra,8(sp)
  803cb4:	d8000115 	stw	zero,4(sp)
  803cb8:	da000015 	stw	r8,0(sp)
  803cbc:	08080580 	call	808058 <fcvtbuf>
  803cc0:	dfc00217 	ldw	ra,8(sp)
  803cc4:	dec00304 	addi	sp,sp,12
  803cc8:	f800283a 	ret

00803ccc <fcvtf>:
  803ccc:	defffb04 	addi	sp,sp,-20
  803cd0:	dfc00415 	stw	ra,16(sp)
  803cd4:	dd400315 	stw	r21,12(sp)
  803cd8:	dcc00215 	stw	r19,8(sp)
  803cdc:	382b883a 	mov	r21,r7
  803ce0:	3027883a 	mov	r19,r6
  803ce4:	dc400115 	stw	r17,4(sp)
  803ce8:	2823883a 	mov	r17,r5
  803cec:	08026a40 	call	8026a4 <__extendsfdf2>
  803cf0:	180b883a 	mov	r5,r3
  803cf4:	880d883a 	mov	r6,r17
  803cf8:	980f883a 	mov	r7,r19
  803cfc:	1009883a 	mov	r4,r2
  803d00:	dd400015 	stw	r21,0(sp)
  803d04:	0803ca80 	call	803ca8 <fcvt>
  803d08:	dfc00417 	ldw	ra,16(sp)
  803d0c:	dd400317 	ldw	r21,12(sp)
  803d10:	dcc00217 	ldw	r19,8(sp)
  803d14:	dc400117 	ldw	r17,4(sp)
  803d18:	dec00504 	addi	sp,sp,20
  803d1c:	f800283a 	ret

00803d20 <printf>:
  803d20:	defffb04 	addi	sp,sp,-20
  803d24:	dfc00115 	stw	ra,4(sp)
  803d28:	d9400215 	stw	r5,8(sp)
  803d2c:	d9800315 	stw	r6,12(sp)
  803d30:	d9c00415 	stw	r7,16(sp)
  803d34:	00802074 	movhi	r2,129
  803d38:	10884204 	addi	r2,r2,8456
  803d3c:	10c00017 	ldw	r3,0(r2)
  803d40:	200b883a 	mov	r5,r4
  803d44:	d8800204 	addi	r2,sp,8
  803d48:	19000217 	ldw	r4,8(r3)
  803d4c:	100d883a 	mov	r6,r2
  803d50:	d8800015 	stw	r2,0(sp)
  803d54:	0805ddc0 	call	805ddc <__vfprintf_internal>
  803d58:	dfc00117 	ldw	ra,4(sp)
  803d5c:	dec00504 	addi	sp,sp,20
  803d60:	f800283a 	ret

00803d64 <_printf_r>:
  803d64:	defffc04 	addi	sp,sp,-16
  803d68:	dfc00115 	stw	ra,4(sp)
  803d6c:	d9800215 	stw	r6,8(sp)
  803d70:	d9c00315 	stw	r7,12(sp)
  803d74:	280d883a 	mov	r6,r5
  803d78:	21400217 	ldw	r5,8(r4)
  803d7c:	d8c00204 	addi	r3,sp,8
  803d80:	180f883a 	mov	r7,r3
  803d84:	d8c00015 	stw	r3,0(sp)
  803d88:	0803f180 	call	803f18 <___vfprintf_internal_r>
  803d8c:	dfc00117 	ldw	ra,4(sp)
  803d90:	dec00404 	addi	sp,sp,16
  803d94:	f800283a 	ret

00803d98 <_puts_r>:
  803d98:	defff604 	addi	sp,sp,-40
  803d9c:	dc400715 	stw	r17,28(sp)
  803da0:	2023883a 	mov	r17,r4
  803da4:	2809883a 	mov	r4,r5
  803da8:	dfc00915 	stw	ra,36(sp)
  803dac:	dcc00815 	stw	r19,32(sp)
  803db0:	2827883a 	mov	r19,r5
  803db4:	0803e4c0 	call	803e4c <strlen>
  803db8:	89400217 	ldw	r5,8(r17)
  803dbc:	00c02074 	movhi	r3,129
  803dc0:	18c13204 	addi	r3,r3,1224
  803dc4:	01c00044 	movi	r7,1
  803dc8:	12000044 	addi	r8,r2,1
  803dcc:	d8c00515 	stw	r3,20(sp)
  803dd0:	d9c00615 	stw	r7,24(sp)
  803dd4:	d8c00304 	addi	r3,sp,12
  803dd8:	01c00084 	movi	r7,2
  803ddc:	8809883a 	mov	r4,r17
  803de0:	d80d883a 	mov	r6,sp
  803de4:	d8c00015 	stw	r3,0(sp)
  803de8:	dcc00315 	stw	r19,12(sp)
  803dec:	da000215 	stw	r8,8(sp)
  803df0:	d9c00115 	stw	r7,4(sp)
  803df4:	d8800415 	stw	r2,16(sp)
  803df8:	0808b640 	call	808b64 <__sfvwrite_r>
  803dfc:	00ffffc4 	movi	r3,-1
  803e00:	10000626 	beq	r2,zero,803e1c <_puts_r+0x84>
  803e04:	1805883a 	mov	r2,r3
  803e08:	dfc00917 	ldw	ra,36(sp)
  803e0c:	dcc00817 	ldw	r19,32(sp)
  803e10:	dc400717 	ldw	r17,28(sp)
  803e14:	dec00a04 	addi	sp,sp,40
  803e18:	f800283a 	ret
  803e1c:	00c00284 	movi	r3,10
  803e20:	1805883a 	mov	r2,r3
  803e24:	dfc00917 	ldw	ra,36(sp)
  803e28:	dcc00817 	ldw	r19,32(sp)
  803e2c:	dc400717 	ldw	r17,28(sp)
  803e30:	dec00a04 	addi	sp,sp,40
  803e34:	f800283a 	ret

00803e38 <puts>:
  803e38:	00802074 	movhi	r2,129
  803e3c:	10884204 	addi	r2,r2,8456
  803e40:	200b883a 	mov	r5,r4
  803e44:	11000017 	ldw	r4,0(r2)
  803e48:	0803d981 	jmpi	803d98 <_puts_r>

00803e4c <strlen>:
  803e4c:	208000cc 	andi	r2,r4,3
  803e50:	2011883a 	mov	r8,r4
  803e54:	1000161e 	bne	r2,zero,803eb0 <strlen+0x64>
  803e58:	20c00017 	ldw	r3,0(r4)
  803e5c:	017fbff4 	movhi	r5,65279
  803e60:	297fbfc4 	addi	r5,r5,-257
  803e64:	01e02074 	movhi	r7,32897
  803e68:	39e02004 	addi	r7,r7,-32640
  803e6c:	1945883a 	add	r2,r3,r5
  803e70:	11c4703a 	and	r2,r2,r7
  803e74:	00c6303a 	nor	r3,zero,r3
  803e78:	1886703a 	and	r3,r3,r2
  803e7c:	18000c1e 	bne	r3,zero,803eb0 <strlen+0x64>
  803e80:	280d883a 	mov	r6,r5
  803e84:	380b883a 	mov	r5,r7
  803e88:	21000104 	addi	r4,r4,4
  803e8c:	20800017 	ldw	r2,0(r4)
  803e90:	1187883a 	add	r3,r2,r6
  803e94:	1946703a 	and	r3,r3,r5
  803e98:	0084303a 	nor	r2,zero,r2
  803e9c:	10c4703a 	and	r2,r2,r3
  803ea0:	103ff926 	beq	r2,zero,803e88 <strlen+0x3c>
  803ea4:	20800007 	ldb	r2,0(r4)
  803ea8:	10000326 	beq	r2,zero,803eb8 <strlen+0x6c>
  803eac:	21000044 	addi	r4,r4,1
  803eb0:	20800007 	ldb	r2,0(r4)
  803eb4:	103ffd1e 	bne	r2,zero,803eac <strlen+0x60>
  803eb8:	2205c83a 	sub	r2,r4,r8
  803ebc:	f800283a 	ret

00803ec0 <__sprint_r>:
  803ec0:	30800217 	ldw	r2,8(r6)
  803ec4:	defffe04 	addi	sp,sp,-8
  803ec8:	dc000015 	stw	r16,0(sp)
  803ecc:	dfc00115 	stw	ra,4(sp)
  803ed0:	3021883a 	mov	r16,r6
  803ed4:	0007883a 	mov	r3,zero
  803ed8:	1000061e 	bne	r2,zero,803ef4 <__sprint_r+0x34>
  803edc:	1805883a 	mov	r2,r3
  803ee0:	30000115 	stw	zero,4(r6)
  803ee4:	dfc00117 	ldw	ra,4(sp)
  803ee8:	dc000017 	ldw	r16,0(sp)
  803eec:	dec00204 	addi	sp,sp,8
  803ef0:	f800283a 	ret
  803ef4:	0808b640 	call	808b64 <__sfvwrite_r>
  803ef8:	1007883a 	mov	r3,r2
  803efc:	1805883a 	mov	r2,r3
  803f00:	80000115 	stw	zero,4(r16)
  803f04:	80000215 	stw	zero,8(r16)
  803f08:	dfc00117 	ldw	ra,4(sp)
  803f0c:	dc000017 	ldw	r16,0(sp)
  803f10:	dec00204 	addi	sp,sp,8
  803f14:	f800283a 	ret

00803f18 <___vfprintf_internal_r>:
  803f18:	defea404 	addi	sp,sp,-1392
  803f1c:	dd815815 	stw	r22,1376(sp)
  803f20:	dc015215 	stw	r16,1352(sp)
  803f24:	d9c15115 	stw	r7,1348(sp)
  803f28:	dfc15b15 	stw	ra,1388(sp)
  803f2c:	df015a15 	stw	fp,1384(sp)
  803f30:	ddc15915 	stw	r23,1380(sp)
  803f34:	dd415715 	stw	r21,1372(sp)
  803f38:	dd015615 	stw	r20,1368(sp)
  803f3c:	dcc15515 	stw	r19,1364(sp)
  803f40:	dc815415 	stw	r18,1360(sp)
  803f44:	dc415315 	stw	r17,1356(sp)
  803f48:	282d883a 	mov	r22,r5
  803f4c:	3021883a 	mov	r16,r6
  803f50:	d9014f15 	stw	r4,1340(sp)
  803f54:	08091880 	call	809188 <_localeconv_r>
  803f58:	10800017 	ldw	r2,0(r2)
  803f5c:	d9c15117 	ldw	r7,1348(sp)
  803f60:	d8814915 	stw	r2,1316(sp)
  803f64:	d8814f17 	ldw	r2,1340(sp)
  803f68:	10000226 	beq	r2,zero,803f74 <___vfprintf_internal_r+0x5c>
  803f6c:	10800e17 	ldw	r2,56(r2)
  803f70:	10020d26 	beq	r2,zero,8047a8 <___vfprintf_internal_r+0x890>
  803f74:	b080030b 	ldhu	r2,12(r22)
  803f78:	1080020c 	andi	r2,r2,8
  803f7c:	10020e26 	beq	r2,zero,8047b8 <___vfprintf_internal_r+0x8a0>
  803f80:	b0800417 	ldw	r2,16(r22)
  803f84:	10020c26 	beq	r2,zero,8047b8 <___vfprintf_internal_r+0x8a0>
  803f88:	b200030b 	ldhu	r8,12(r22)
  803f8c:	00800284 	movi	r2,10
  803f90:	40c0068c 	andi	r3,r8,26
  803f94:	18802f1e 	bne	r3,r2,804054 <___vfprintf_internal_r+0x13c>
  803f98:	b080038f 	ldh	r2,14(r22)
  803f9c:	10002d16 	blt	r2,zero,804054 <___vfprintf_internal_r+0x13c>
  803fa0:	b240038b 	ldhu	r9,14(r22)
  803fa4:	b2800717 	ldw	r10,28(r22)
  803fa8:	b2c00917 	ldw	r11,36(r22)
  803fac:	d9014f17 	ldw	r4,1340(sp)
  803fb0:	dc402904 	addi	r17,sp,164
  803fb4:	d8804004 	addi	r2,sp,256
  803fb8:	00c10004 	movi	r3,1024
  803fbc:	423fff4c 	andi	r8,r8,65533
  803fc0:	800d883a 	mov	r6,r16
  803fc4:	880b883a 	mov	r5,r17
  803fc8:	da002c0d 	sth	r8,176(sp)
  803fcc:	da402c8d 	sth	r9,178(sp)
  803fd0:	da803015 	stw	r10,192(sp)
  803fd4:	dac03215 	stw	r11,200(sp)
  803fd8:	d8802d15 	stw	r2,180(sp)
  803fdc:	d8c02e15 	stw	r3,184(sp)
  803fe0:	d8802915 	stw	r2,164(sp)
  803fe4:	d8c02b15 	stw	r3,172(sp)
  803fe8:	d8002f15 	stw	zero,188(sp)
  803fec:	0803f180 	call	803f18 <___vfprintf_internal_r>
  803ff0:	d8814b15 	stw	r2,1324(sp)
  803ff4:	10000416 	blt	r2,zero,804008 <___vfprintf_internal_r+0xf0>
  803ff8:	d9014f17 	ldw	r4,1340(sp)
  803ffc:	880b883a 	mov	r5,r17
  804000:	08082000 	call	808200 <_fflush_r>
  804004:	1002321e 	bne	r2,zero,8048d0 <___vfprintf_internal_r+0x9b8>
  804008:	d8802c0b 	ldhu	r2,176(sp)
  80400c:	1080100c 	andi	r2,r2,64
  804010:	10000326 	beq	r2,zero,804020 <___vfprintf_internal_r+0x108>
  804014:	b080030b 	ldhu	r2,12(r22)
  804018:	10801014 	ori	r2,r2,64
  80401c:	b080030d 	sth	r2,12(r22)
  804020:	d8814b17 	ldw	r2,1324(sp)
  804024:	dfc15b17 	ldw	ra,1388(sp)
  804028:	df015a17 	ldw	fp,1384(sp)
  80402c:	ddc15917 	ldw	r23,1380(sp)
  804030:	dd815817 	ldw	r22,1376(sp)
  804034:	dd415717 	ldw	r21,1372(sp)
  804038:	dd015617 	ldw	r20,1368(sp)
  80403c:	dcc15517 	ldw	r19,1364(sp)
  804040:	dc815417 	ldw	r18,1360(sp)
  804044:	dc415317 	ldw	r17,1356(sp)
  804048:	dc015217 	ldw	r16,1352(sp)
  80404c:	dec15c04 	addi	sp,sp,1392
  804050:	f800283a 	ret
  804054:	0005883a 	mov	r2,zero
  804058:	0007883a 	mov	r3,zero
  80405c:	dd401904 	addi	r21,sp,100
  804060:	d8814215 	stw	r2,1288(sp)
  804064:	802f883a 	mov	r23,r16
  804068:	d8c14315 	stw	r3,1292(sp)
  80406c:	d8014b15 	stw	zero,1324(sp)
  804070:	d8014815 	stw	zero,1312(sp)
  804074:	d8014415 	stw	zero,1296(sp)
  804078:	d8014715 	stw	zero,1308(sp)
  80407c:	dd400c15 	stw	r21,48(sp)
  804080:	d8000e15 	stw	zero,56(sp)
  804084:	d8000d15 	stw	zero,52(sp)
  804088:	b8800007 	ldb	r2,0(r23)
  80408c:	10001926 	beq	r2,zero,8040f4 <___vfprintf_internal_r+0x1dc>
  804090:	00c00944 	movi	r3,37
  804094:	10c01726 	beq	r2,r3,8040f4 <___vfprintf_internal_r+0x1dc>
  804098:	b821883a 	mov	r16,r23
  80409c:	00000106 	br	8040a4 <___vfprintf_internal_r+0x18c>
  8040a0:	10c00326 	beq	r2,r3,8040b0 <___vfprintf_internal_r+0x198>
  8040a4:	84000044 	addi	r16,r16,1
  8040a8:	80800007 	ldb	r2,0(r16)
  8040ac:	103ffc1e 	bne	r2,zero,8040a0 <___vfprintf_internal_r+0x188>
  8040b0:	85e7c83a 	sub	r19,r16,r23
  8040b4:	98000e26 	beq	r19,zero,8040f0 <___vfprintf_internal_r+0x1d8>
  8040b8:	dc800e17 	ldw	r18,56(sp)
  8040bc:	dc400d17 	ldw	r17,52(sp)
  8040c0:	008001c4 	movi	r2,7
  8040c4:	94e5883a 	add	r18,r18,r19
  8040c8:	8c400044 	addi	r17,r17,1
  8040cc:	adc00015 	stw	r23,0(r21)
  8040d0:	dc800e15 	stw	r18,56(sp)
  8040d4:	acc00115 	stw	r19,4(r21)
  8040d8:	dc400d15 	stw	r17,52(sp)
  8040dc:	14428b16 	blt	r2,r17,804b0c <___vfprintf_internal_r+0xbf4>
  8040e0:	ad400204 	addi	r21,r21,8
  8040e4:	d9014b17 	ldw	r4,1324(sp)
  8040e8:	24c9883a 	add	r4,r4,r19
  8040ec:	d9014b15 	stw	r4,1324(sp)
  8040f0:	802f883a 	mov	r23,r16
  8040f4:	b8800007 	ldb	r2,0(r23)
  8040f8:	10013c26 	beq	r2,zero,8045ec <___vfprintf_internal_r+0x6d4>
  8040fc:	bdc00044 	addi	r23,r23,1
  804100:	d8000405 	stb	zero,16(sp)
  804104:	b8c00007 	ldb	r3,0(r23)
  804108:	04ffffc4 	movi	r19,-1
  80410c:	d8014c15 	stw	zero,1328(sp)
  804110:	d8014a15 	stw	zero,1320(sp)
  804114:	d8c14d15 	stw	r3,1332(sp)
  804118:	bdc00044 	addi	r23,r23,1
  80411c:	d9414d17 	ldw	r5,1332(sp)
  804120:	00801604 	movi	r2,88
  804124:	28fff804 	addi	r3,r5,-32
  804128:	10c06036 	bltu	r2,r3,8042ac <___vfprintf_internal_r+0x394>
  80412c:	18c5883a 	add	r2,r3,r3
  804130:	1085883a 	add	r2,r2,r2
  804134:	00c02034 	movhi	r3,128
  804138:	18d05204 	addi	r3,r3,16712
  80413c:	10c5883a 	add	r2,r2,r3
  804140:	11000017 	ldw	r4,0(r2)
  804144:	2000683a 	jmp	r4
  804148:	008050bc 	xorhi	r2,zero,322
  80414c:	008042ac 	andhi	r2,zero,266
  804150:	008042ac 	andhi	r2,zero,266
  804154:	008050a8 	cmpgeui	r2,zero,322
  804158:	008042ac 	andhi	r2,zero,266
  80415c:	008042ac 	andhi	r2,zero,266
  804160:	008042ac 	andhi	r2,zero,266
  804164:	008042ac 	andhi	r2,zero,266
  804168:	008042ac 	andhi	r2,zero,266
  80416c:	008042ac 	andhi	r2,zero,266
  804170:	00804e88 	cmpgei	r2,zero,314
  804174:	00805098 	cmpnei	r2,zero,322
  804178:	008042ac 	andhi	r2,zero,266
  80417c:	00804ea0 	cmpeqi	r2,zero,314
  804180:	00805140 	call	80514 <__alt_mem_sdram-0x77faec>
  804184:	008042ac 	andhi	r2,zero,266
  804188:	0080512c 	andhi	r2,zero,324
  80418c:	008050e8 	cmpgeui	r2,zero,323
  804190:	008050e8 	cmpgeui	r2,zero,323
  804194:	008050e8 	cmpgeui	r2,zero,323
  804198:	008050e8 	cmpgeui	r2,zero,323
  80419c:	008050e8 	cmpgeui	r2,zero,323
  8041a0:	008050e8 	cmpgeui	r2,zero,323
  8041a4:	008050e8 	cmpgeui	r2,zero,323
  8041a8:	008050e8 	cmpgeui	r2,zero,323
  8041ac:	008050e8 	cmpgeui	r2,zero,323
  8041b0:	008042ac 	andhi	r2,zero,266
  8041b4:	008042ac 	andhi	r2,zero,266
  8041b8:	008042ac 	andhi	r2,zero,266
  8041bc:	008042ac 	andhi	r2,zero,266
  8041c0:	008042ac 	andhi	r2,zero,266
  8041c4:	008042ac 	andhi	r2,zero,266
  8041c8:	008042ac 	andhi	r2,zero,266
  8041cc:	008042ac 	andhi	r2,zero,266
  8041d0:	008042ac 	andhi	r2,zero,266
  8041d4:	008042ac 	andhi	r2,zero,266
  8041d8:	00804904 	movi	r2,292
  8041dc:	00804f70 	cmpltui	r2,zero,317
  8041e0:	008042ac 	andhi	r2,zero,266
  8041e4:	00804f70 	cmpltui	r2,zero,317
  8041e8:	008042ac 	andhi	r2,zero,266
  8041ec:	008042ac 	andhi	r2,zero,266
  8041f0:	008042ac 	andhi	r2,zero,266
  8041f4:	008042ac 	andhi	r2,zero,266
  8041f8:	008050d4 	movui	r2,323
  8041fc:	008042ac 	andhi	r2,zero,266
  804200:	008042ac 	andhi	r2,zero,266
  804204:	008049b8 	rdprs	r2,zero,294
  804208:	008042ac 	andhi	r2,zero,266
  80420c:	008042ac 	andhi	r2,zero,266
  804210:	008042ac 	andhi	r2,zero,266
  804214:	008042ac 	andhi	r2,zero,266
  804218:	008042ac 	andhi	r2,zero,266
  80421c:	00804a04 	movi	r2,296
  804220:	008042ac 	andhi	r2,zero,266
  804224:	008042ac 	andhi	r2,zero,266
  804228:	00805024 	muli	r2,zero,320
  80422c:	008042ac 	andhi	r2,zero,266
  804230:	008042ac 	andhi	r2,zero,266
  804234:	008042ac 	andhi	r2,zero,266
  804238:	008042ac 	andhi	r2,zero,266
  80423c:	008042ac 	andhi	r2,zero,266
  804240:	008042ac 	andhi	r2,zero,266
  804244:	008042ac 	andhi	r2,zero,266
  804248:	008042ac 	andhi	r2,zero,266
  80424c:	008042ac 	andhi	r2,zero,266
  804250:	008042ac 	andhi	r2,zero,266
  804254:	00804ff8 	rdprs	r2,zero,319
  804258:	00804910 	cmplti	r2,zero,292
  80425c:	00804f70 	cmpltui	r2,zero,317
  804260:	00804f70 	cmpltui	r2,zero,317
  804264:	00804f70 	cmpltui	r2,zero,317
  804268:	00804f5c 	xori	r2,zero,317
  80426c:	00804910 	cmplti	r2,zero,292
  804270:	008042ac 	andhi	r2,zero,266
  804274:	008042ac 	andhi	r2,zero,266
  804278:	00804ee4 	muli	r2,zero,315
  80427c:	008042ac 	andhi	r2,zero,266
  804280:	00804eb4 	movhi	r2,314
  804284:	008049c4 	movi	r2,295
  804288:	00804f14 	movui	r2,316
  80428c:	00804f00 	call	804f0 <__alt_mem_sdram-0x77fb10>
  804290:	008042ac 	andhi	r2,zero,266
  804294:	008051a8 	cmpgeui	r2,zero,326
  804298:	008042ac 	andhi	r2,zero,266
  80429c:	00804a10 	cmplti	r2,zero,296
  8042a0:	008042ac 	andhi	r2,zero,266
  8042a4:	008042ac 	andhi	r2,zero,266
  8042a8:	00805088 	cmpgei	r2,zero,322
  8042ac:	d9014d17 	ldw	r4,1332(sp)
  8042b0:	2000ce26 	beq	r4,zero,8045ec <___vfprintf_internal_r+0x6d4>
  8042b4:	01400044 	movi	r5,1
  8042b8:	d9800f04 	addi	r6,sp,60
  8042bc:	d9c14015 	stw	r7,1280(sp)
  8042c0:	d9414515 	stw	r5,1300(sp)
  8042c4:	d9814115 	stw	r6,1284(sp)
  8042c8:	280f883a 	mov	r7,r5
  8042cc:	d9000f05 	stb	r4,60(sp)
  8042d0:	d8000405 	stb	zero,16(sp)
  8042d4:	d8014615 	stw	zero,1304(sp)
  8042d8:	d8c14c17 	ldw	r3,1328(sp)
  8042dc:	1880008c 	andi	r2,r3,2
  8042e0:	1005003a 	cmpeq	r2,r2,zero
  8042e4:	d8815015 	stw	r2,1344(sp)
  8042e8:	1000031e 	bne	r2,zero,8042f8 <___vfprintf_internal_r+0x3e0>
  8042ec:	d9014517 	ldw	r4,1300(sp)
  8042f0:	21000084 	addi	r4,r4,2
  8042f4:	d9014515 	stw	r4,1300(sp)
  8042f8:	d9414c17 	ldw	r5,1328(sp)
  8042fc:	2940210c 	andi	r5,r5,132
  804300:	d9414e15 	stw	r5,1336(sp)
  804304:	28002d1e 	bne	r5,zero,8043bc <___vfprintf_internal_r+0x4a4>
  804308:	d9814a17 	ldw	r6,1320(sp)
  80430c:	d8814517 	ldw	r2,1300(sp)
  804310:	30a1c83a 	sub	r16,r6,r2
  804314:	0400290e 	bge	zero,r16,8043bc <___vfprintf_internal_r+0x4a4>
  804318:	00800404 	movi	r2,16
  80431c:	14045e0e 	bge	r2,r16,805498 <___vfprintf_internal_r+0x1580>
  804320:	dc800e17 	ldw	r18,56(sp)
  804324:	dc400d17 	ldw	r17,52(sp)
  804328:	1027883a 	mov	r19,r2
  80432c:	07002074 	movhi	fp,129
  804330:	e7014e84 	addi	fp,fp,1338
  804334:	050001c4 	movi	r20,7
  804338:	00000306 	br	804348 <___vfprintf_internal_r+0x430>
  80433c:	843ffc04 	addi	r16,r16,-16
  804340:	ad400204 	addi	r21,r21,8
  804344:	9c00130e 	bge	r19,r16,804394 <___vfprintf_internal_r+0x47c>
  804348:	94800404 	addi	r18,r18,16
  80434c:	8c400044 	addi	r17,r17,1
  804350:	af000015 	stw	fp,0(r21)
  804354:	acc00115 	stw	r19,4(r21)
  804358:	dc800e15 	stw	r18,56(sp)
  80435c:	dc400d15 	stw	r17,52(sp)
  804360:	a47ff60e 	bge	r20,r17,80433c <___vfprintf_internal_r+0x424>
  804364:	d9014f17 	ldw	r4,1340(sp)
  804368:	b00b883a 	mov	r5,r22
  80436c:	d9800c04 	addi	r6,sp,48
  804370:	d9c15115 	stw	r7,1348(sp)
  804374:	0803ec00 	call	803ec0 <__sprint_r>
  804378:	d9c15117 	ldw	r7,1348(sp)
  80437c:	10009e1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804380:	843ffc04 	addi	r16,r16,-16
  804384:	dc800e17 	ldw	r18,56(sp)
  804388:	dc400d17 	ldw	r17,52(sp)
  80438c:	dd401904 	addi	r21,sp,100
  804390:	9c3fed16 	blt	r19,r16,804348 <___vfprintf_internal_r+0x430>
  804394:	9425883a 	add	r18,r18,r16
  804398:	8c400044 	addi	r17,r17,1
  80439c:	008001c4 	movi	r2,7
  8043a0:	af000015 	stw	fp,0(r21)
  8043a4:	ac000115 	stw	r16,4(r21)
  8043a8:	dc800e15 	stw	r18,56(sp)
  8043ac:	dc400d15 	stw	r17,52(sp)
  8043b0:	1441f516 	blt	r2,r17,804b88 <___vfprintf_internal_r+0xc70>
  8043b4:	ad400204 	addi	r21,r21,8
  8043b8:	00000206 	br	8043c4 <___vfprintf_internal_r+0x4ac>
  8043bc:	dc800e17 	ldw	r18,56(sp)
  8043c0:	dc400d17 	ldw	r17,52(sp)
  8043c4:	d8800407 	ldb	r2,16(sp)
  8043c8:	10000b26 	beq	r2,zero,8043f8 <___vfprintf_internal_r+0x4e0>
  8043cc:	00800044 	movi	r2,1
  8043d0:	94800044 	addi	r18,r18,1
  8043d4:	8c400044 	addi	r17,r17,1
  8043d8:	a8800115 	stw	r2,4(r21)
  8043dc:	d8c00404 	addi	r3,sp,16
  8043e0:	008001c4 	movi	r2,7
  8043e4:	a8c00015 	stw	r3,0(r21)
  8043e8:	dc800e15 	stw	r18,56(sp)
  8043ec:	dc400d15 	stw	r17,52(sp)
  8043f0:	1441da16 	blt	r2,r17,804b5c <___vfprintf_internal_r+0xc44>
  8043f4:	ad400204 	addi	r21,r21,8
  8043f8:	d9015017 	ldw	r4,1344(sp)
  8043fc:	20000b1e 	bne	r4,zero,80442c <___vfprintf_internal_r+0x514>
  804400:	d8800444 	addi	r2,sp,17
  804404:	94800084 	addi	r18,r18,2
  804408:	8c400044 	addi	r17,r17,1
  80440c:	a8800015 	stw	r2,0(r21)
  804410:	00c00084 	movi	r3,2
  804414:	008001c4 	movi	r2,7
  804418:	a8c00115 	stw	r3,4(r21)
  80441c:	dc800e15 	stw	r18,56(sp)
  804420:	dc400d15 	stw	r17,52(sp)
  804424:	1441c216 	blt	r2,r17,804b30 <___vfprintf_internal_r+0xc18>
  804428:	ad400204 	addi	r21,r21,8
  80442c:	d9414e17 	ldw	r5,1336(sp)
  804430:	00802004 	movi	r2,128
  804434:	2880b126 	beq	r5,r2,8046fc <___vfprintf_internal_r+0x7e4>
  804438:	d8c14617 	ldw	r3,1304(sp)
  80443c:	19e1c83a 	sub	r16,r3,r7
  804440:	0400260e 	bge	zero,r16,8044dc <___vfprintf_internal_r+0x5c4>
  804444:	00800404 	movi	r2,16
  804448:	1403cf0e 	bge	r2,r16,805388 <___vfprintf_internal_r+0x1470>
  80444c:	1027883a 	mov	r19,r2
  804450:	07002074 	movhi	fp,129
  804454:	e7014a84 	addi	fp,fp,1322
  804458:	050001c4 	movi	r20,7
  80445c:	00000306 	br	80446c <___vfprintf_internal_r+0x554>
  804460:	843ffc04 	addi	r16,r16,-16
  804464:	ad400204 	addi	r21,r21,8
  804468:	9c00130e 	bge	r19,r16,8044b8 <___vfprintf_internal_r+0x5a0>
  80446c:	94800404 	addi	r18,r18,16
  804470:	8c400044 	addi	r17,r17,1
  804474:	af000015 	stw	fp,0(r21)
  804478:	acc00115 	stw	r19,4(r21)
  80447c:	dc800e15 	stw	r18,56(sp)
  804480:	dc400d15 	stw	r17,52(sp)
  804484:	a47ff60e 	bge	r20,r17,804460 <___vfprintf_internal_r+0x548>
  804488:	d9014f17 	ldw	r4,1340(sp)
  80448c:	b00b883a 	mov	r5,r22
  804490:	d9800c04 	addi	r6,sp,48
  804494:	d9c15115 	stw	r7,1348(sp)
  804498:	0803ec00 	call	803ec0 <__sprint_r>
  80449c:	d9c15117 	ldw	r7,1348(sp)
  8044a0:	1000551e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8044a4:	843ffc04 	addi	r16,r16,-16
  8044a8:	dc800e17 	ldw	r18,56(sp)
  8044ac:	dc400d17 	ldw	r17,52(sp)
  8044b0:	dd401904 	addi	r21,sp,100
  8044b4:	9c3fed16 	blt	r19,r16,80446c <___vfprintf_internal_r+0x554>
  8044b8:	9425883a 	add	r18,r18,r16
  8044bc:	8c400044 	addi	r17,r17,1
  8044c0:	008001c4 	movi	r2,7
  8044c4:	af000015 	stw	fp,0(r21)
  8044c8:	ac000115 	stw	r16,4(r21)
  8044cc:	dc800e15 	stw	r18,56(sp)
  8044d0:	dc400d15 	stw	r17,52(sp)
  8044d4:	14418216 	blt	r2,r17,804ae0 <___vfprintf_internal_r+0xbc8>
  8044d8:	ad400204 	addi	r21,r21,8
  8044dc:	d9014c17 	ldw	r4,1328(sp)
  8044e0:	2080400c 	andi	r2,r4,256
  8044e4:	10004a1e 	bne	r2,zero,804610 <___vfprintf_internal_r+0x6f8>
  8044e8:	d9414117 	ldw	r5,1284(sp)
  8044ec:	91e5883a 	add	r18,r18,r7
  8044f0:	8c400044 	addi	r17,r17,1
  8044f4:	008001c4 	movi	r2,7
  8044f8:	a9400015 	stw	r5,0(r21)
  8044fc:	a9c00115 	stw	r7,4(r21)
  804500:	dc800e15 	stw	r18,56(sp)
  804504:	dc400d15 	stw	r17,52(sp)
  804508:	14416716 	blt	r2,r17,804aa8 <___vfprintf_internal_r+0xb90>
  80450c:	a8c00204 	addi	r3,r21,8
  804510:	d9814c17 	ldw	r6,1328(sp)
  804514:	3080010c 	andi	r2,r6,4
  804518:	10002826 	beq	r2,zero,8045bc <___vfprintf_internal_r+0x6a4>
  80451c:	d8814a17 	ldw	r2,1320(sp)
  804520:	d9014517 	ldw	r4,1300(sp)
  804524:	1121c83a 	sub	r16,r2,r4
  804528:	0400240e 	bge	zero,r16,8045bc <___vfprintf_internal_r+0x6a4>
  80452c:	00800404 	movi	r2,16
  804530:	1404550e 	bge	r2,r16,805688 <___vfprintf_internal_r+0x1770>
  804534:	dc400d17 	ldw	r17,52(sp)
  804538:	1027883a 	mov	r19,r2
  80453c:	07002074 	movhi	fp,129
  804540:	e7014e84 	addi	fp,fp,1338
  804544:	050001c4 	movi	r20,7
  804548:	00000306 	br	804558 <___vfprintf_internal_r+0x640>
  80454c:	843ffc04 	addi	r16,r16,-16
  804550:	18c00204 	addi	r3,r3,8
  804554:	9c00110e 	bge	r19,r16,80459c <___vfprintf_internal_r+0x684>
  804558:	94800404 	addi	r18,r18,16
  80455c:	8c400044 	addi	r17,r17,1
  804560:	1f000015 	stw	fp,0(r3)
  804564:	1cc00115 	stw	r19,4(r3)
  804568:	dc800e15 	stw	r18,56(sp)
  80456c:	dc400d15 	stw	r17,52(sp)
  804570:	a47ff60e 	bge	r20,r17,80454c <___vfprintf_internal_r+0x634>
  804574:	d9014f17 	ldw	r4,1340(sp)
  804578:	b00b883a 	mov	r5,r22
  80457c:	d9800c04 	addi	r6,sp,48
  804580:	0803ec00 	call	803ec0 <__sprint_r>
  804584:	10001c1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804588:	843ffc04 	addi	r16,r16,-16
  80458c:	dc800e17 	ldw	r18,56(sp)
  804590:	dc400d17 	ldw	r17,52(sp)
  804594:	d8c01904 	addi	r3,sp,100
  804598:	9c3fef16 	blt	r19,r16,804558 <___vfprintf_internal_r+0x640>
  80459c:	9425883a 	add	r18,r18,r16
  8045a0:	8c400044 	addi	r17,r17,1
  8045a4:	008001c4 	movi	r2,7
  8045a8:	1f000015 	stw	fp,0(r3)
  8045ac:	1c000115 	stw	r16,4(r3)
  8045b0:	dc800e15 	stw	r18,56(sp)
  8045b4:	dc400d15 	stw	r17,52(sp)
  8045b8:	1440cb16 	blt	r2,r17,8048e8 <___vfprintf_internal_r+0x9d0>
  8045bc:	d8814a17 	ldw	r2,1320(sp)
  8045c0:	d9414517 	ldw	r5,1300(sp)
  8045c4:	1140010e 	bge	r2,r5,8045cc <___vfprintf_internal_r+0x6b4>
  8045c8:	2805883a 	mov	r2,r5
  8045cc:	d9814b17 	ldw	r6,1324(sp)
  8045d0:	308d883a 	add	r6,r6,r2
  8045d4:	d9814b15 	stw	r6,1324(sp)
  8045d8:	90013b1e 	bne	r18,zero,804ac8 <___vfprintf_internal_r+0xbb0>
  8045dc:	d9c14017 	ldw	r7,1280(sp)
  8045e0:	dd401904 	addi	r21,sp,100
  8045e4:	d8000d15 	stw	zero,52(sp)
  8045e8:	003ea706 	br	804088 <___vfprintf_internal_r+0x170>
  8045ec:	d8800e17 	ldw	r2,56(sp)
  8045f0:	1005451e 	bne	r2,zero,805b08 <___vfprintf_internal_r+0x1bf0>
  8045f4:	d8000d15 	stw	zero,52(sp)
  8045f8:	b080030b 	ldhu	r2,12(r22)
  8045fc:	1080100c 	andi	r2,r2,64
  804600:	103e8726 	beq	r2,zero,804020 <___vfprintf_internal_r+0x108>
  804604:	00bfffc4 	movi	r2,-1
  804608:	d8814b15 	stw	r2,1324(sp)
  80460c:	003e8406 	br	804020 <___vfprintf_internal_r+0x108>
  804610:	d9814d17 	ldw	r6,1332(sp)
  804614:	00801944 	movi	r2,101
  804618:	11806e16 	blt	r2,r6,8047d4 <___vfprintf_internal_r+0x8bc>
  80461c:	d9414717 	ldw	r5,1308(sp)
  804620:	00c00044 	movi	r3,1
  804624:	1943490e 	bge	r3,r5,80534c <___vfprintf_internal_r+0x1434>
  804628:	d8814117 	ldw	r2,1284(sp)
  80462c:	94800044 	addi	r18,r18,1
  804630:	8c400044 	addi	r17,r17,1
  804634:	a8800015 	stw	r2,0(r21)
  804638:	008001c4 	movi	r2,7
  80463c:	a8c00115 	stw	r3,4(r21)
  804640:	dc800e15 	stw	r18,56(sp)
  804644:	dc400d15 	stw	r17,52(sp)
  804648:	1441ca16 	blt	r2,r17,804d74 <___vfprintf_internal_r+0xe5c>
  80464c:	a8c00204 	addi	r3,r21,8
  804650:	d9014917 	ldw	r4,1316(sp)
  804654:	00800044 	movi	r2,1
  804658:	94800044 	addi	r18,r18,1
  80465c:	8c400044 	addi	r17,r17,1
  804660:	18800115 	stw	r2,4(r3)
  804664:	008001c4 	movi	r2,7
  804668:	19000015 	stw	r4,0(r3)
  80466c:	dc800e15 	stw	r18,56(sp)
  804670:	dc400d15 	stw	r17,52(sp)
  804674:	1441b616 	blt	r2,r17,804d50 <___vfprintf_internal_r+0xe38>
  804678:	1cc00204 	addi	r19,r3,8
  80467c:	d9014217 	ldw	r4,1288(sp)
  804680:	d9414317 	ldw	r5,1292(sp)
  804684:	000d883a 	mov	r6,zero
  804688:	000f883a 	mov	r7,zero
  80468c:	080cc5c0 	call	80cc5c <__nedf2>
  804690:	10017426 	beq	r2,zero,804c64 <___vfprintf_internal_r+0xd4c>
  804694:	d9414717 	ldw	r5,1308(sp)
  804698:	d9814117 	ldw	r6,1284(sp)
  80469c:	8c400044 	addi	r17,r17,1
  8046a0:	2c85883a 	add	r2,r5,r18
  8046a4:	14bfffc4 	addi	r18,r2,-1
  8046a8:	28bfffc4 	addi	r2,r5,-1
  8046ac:	30c00044 	addi	r3,r6,1
  8046b0:	98800115 	stw	r2,4(r19)
  8046b4:	008001c4 	movi	r2,7
  8046b8:	98c00015 	stw	r3,0(r19)
  8046bc:	dc800e15 	stw	r18,56(sp)
  8046c0:	dc400d15 	stw	r17,52(sp)
  8046c4:	14418e16 	blt	r2,r17,804d00 <___vfprintf_internal_r+0xde8>
  8046c8:	9cc00204 	addi	r19,r19,8
  8046cc:	d9414817 	ldw	r5,1312(sp)
  8046d0:	d8800804 	addi	r2,sp,32
  8046d4:	8c400044 	addi	r17,r17,1
  8046d8:	9165883a 	add	r18,r18,r5
  8046dc:	98800015 	stw	r2,0(r19)
  8046e0:	008001c4 	movi	r2,7
  8046e4:	99400115 	stw	r5,4(r19)
  8046e8:	dc800e15 	stw	r18,56(sp)
  8046ec:	dc400d15 	stw	r17,52(sp)
  8046f0:	1440ed16 	blt	r2,r17,804aa8 <___vfprintf_internal_r+0xb90>
  8046f4:	98c00204 	addi	r3,r19,8
  8046f8:	003f8506 	br	804510 <___vfprintf_internal_r+0x5f8>
  8046fc:	d9814a17 	ldw	r6,1320(sp)
  804700:	d8814517 	ldw	r2,1300(sp)
  804704:	30a1c83a 	sub	r16,r6,r2
  804708:	043f4b0e 	bge	zero,r16,804438 <___vfprintf_internal_r+0x520>
  80470c:	00800404 	movi	r2,16
  804710:	14043a0e 	bge	r2,r16,8057fc <___vfprintf_internal_r+0x18e4>
  804714:	1027883a 	mov	r19,r2
  804718:	07002074 	movhi	fp,129
  80471c:	e7014a84 	addi	fp,fp,1322
  804720:	050001c4 	movi	r20,7
  804724:	00000306 	br	804734 <___vfprintf_internal_r+0x81c>
  804728:	843ffc04 	addi	r16,r16,-16
  80472c:	ad400204 	addi	r21,r21,8
  804730:	9c00130e 	bge	r19,r16,804780 <___vfprintf_internal_r+0x868>
  804734:	94800404 	addi	r18,r18,16
  804738:	8c400044 	addi	r17,r17,1
  80473c:	af000015 	stw	fp,0(r21)
  804740:	acc00115 	stw	r19,4(r21)
  804744:	dc800e15 	stw	r18,56(sp)
  804748:	dc400d15 	stw	r17,52(sp)
  80474c:	a47ff60e 	bge	r20,r17,804728 <___vfprintf_internal_r+0x810>
  804750:	d9014f17 	ldw	r4,1340(sp)
  804754:	b00b883a 	mov	r5,r22
  804758:	d9800c04 	addi	r6,sp,48
  80475c:	d9c15115 	stw	r7,1348(sp)
  804760:	0803ec00 	call	803ec0 <__sprint_r>
  804764:	d9c15117 	ldw	r7,1348(sp)
  804768:	103fa31e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  80476c:	843ffc04 	addi	r16,r16,-16
  804770:	dc800e17 	ldw	r18,56(sp)
  804774:	dc400d17 	ldw	r17,52(sp)
  804778:	dd401904 	addi	r21,sp,100
  80477c:	9c3fed16 	blt	r19,r16,804734 <___vfprintf_internal_r+0x81c>
  804780:	9425883a 	add	r18,r18,r16
  804784:	8c400044 	addi	r17,r17,1
  804788:	008001c4 	movi	r2,7
  80478c:	af000015 	stw	fp,0(r21)
  804790:	ac000115 	stw	r16,4(r21)
  804794:	dc800e15 	stw	r18,56(sp)
  804798:	dc400d15 	stw	r17,52(sp)
  80479c:	14416116 	blt	r2,r17,804d24 <___vfprintf_internal_r+0xe0c>
  8047a0:	ad400204 	addi	r21,r21,8
  8047a4:	003f2406 	br	804438 <___vfprintf_internal_r+0x520>
  8047a8:	d9014f17 	ldw	r4,1340(sp)
  8047ac:	08084980 	call	808498 <__sinit>
  8047b0:	d9c15117 	ldw	r7,1348(sp)
  8047b4:	003def06 	br	803f74 <___vfprintf_internal_r+0x5c>
  8047b8:	d9014f17 	ldw	r4,1340(sp)
  8047bc:	b00b883a 	mov	r5,r22
  8047c0:	d9c15115 	stw	r7,1348(sp)
  8047c4:	0805e000 	call	805e00 <__swsetup_r>
  8047c8:	d9c15117 	ldw	r7,1348(sp)
  8047cc:	103dee26 	beq	r2,zero,803f88 <___vfprintf_internal_r+0x70>
  8047d0:	003f8c06 	br	804604 <___vfprintf_internal_r+0x6ec>
  8047d4:	d9014217 	ldw	r4,1288(sp)
  8047d8:	d9414317 	ldw	r5,1292(sp)
  8047dc:	000d883a 	mov	r6,zero
  8047e0:	000f883a 	mov	r7,zero
  8047e4:	080cbd40 	call	80cbd4 <__eqdf2>
  8047e8:	1000f21e 	bne	r2,zero,804bb4 <___vfprintf_internal_r+0xc9c>
  8047ec:	00802074 	movhi	r2,129
  8047f0:	10814a04 	addi	r2,r2,1320
  8047f4:	94800044 	addi	r18,r18,1
  8047f8:	8c400044 	addi	r17,r17,1
  8047fc:	a8800015 	stw	r2,0(r21)
  804800:	00c00044 	movi	r3,1
  804804:	008001c4 	movi	r2,7
  804808:	a8c00115 	stw	r3,4(r21)
  80480c:	dc800e15 	stw	r18,56(sp)
  804810:	dc400d15 	stw	r17,52(sp)
  804814:	14430016 	blt	r2,r17,805418 <___vfprintf_internal_r+0x1500>
  804818:	a8c00204 	addi	r3,r21,8
  80481c:	d8800517 	ldw	r2,20(sp)
  804820:	d9014717 	ldw	r4,1308(sp)
  804824:	11015c0e 	bge	r2,r4,804d98 <___vfprintf_internal_r+0xe80>
  804828:	dc400d17 	ldw	r17,52(sp)
  80482c:	d9814917 	ldw	r6,1316(sp)
  804830:	00800044 	movi	r2,1
  804834:	94800044 	addi	r18,r18,1
  804838:	8c400044 	addi	r17,r17,1
  80483c:	18800115 	stw	r2,4(r3)
  804840:	008001c4 	movi	r2,7
  804844:	19800015 	stw	r6,0(r3)
  804848:	dc800e15 	stw	r18,56(sp)
  80484c:	dc400d15 	stw	r17,52(sp)
  804850:	14431616 	blt	r2,r17,8054ac <___vfprintf_internal_r+0x1594>
  804854:	18c00204 	addi	r3,r3,8
  804858:	d8814717 	ldw	r2,1308(sp)
  80485c:	143fffc4 	addi	r16,r2,-1
  804860:	043f2b0e 	bge	zero,r16,804510 <___vfprintf_internal_r+0x5f8>
  804864:	00800404 	movi	r2,16
  804868:	1402a80e 	bge	r2,r16,80530c <___vfprintf_internal_r+0x13f4>
  80486c:	dc400d17 	ldw	r17,52(sp)
  804870:	1027883a 	mov	r19,r2
  804874:	07002074 	movhi	fp,129
  804878:	e7014a84 	addi	fp,fp,1322
  80487c:	050001c4 	movi	r20,7
  804880:	00000306 	br	804890 <___vfprintf_internal_r+0x978>
  804884:	18c00204 	addi	r3,r3,8
  804888:	843ffc04 	addi	r16,r16,-16
  80488c:	9c02a20e 	bge	r19,r16,805318 <___vfprintf_internal_r+0x1400>
  804890:	94800404 	addi	r18,r18,16
  804894:	8c400044 	addi	r17,r17,1
  804898:	1f000015 	stw	fp,0(r3)
  80489c:	1cc00115 	stw	r19,4(r3)
  8048a0:	dc800e15 	stw	r18,56(sp)
  8048a4:	dc400d15 	stw	r17,52(sp)
  8048a8:	a47ff60e 	bge	r20,r17,804884 <___vfprintf_internal_r+0x96c>
  8048ac:	d9014f17 	ldw	r4,1340(sp)
  8048b0:	b00b883a 	mov	r5,r22
  8048b4:	d9800c04 	addi	r6,sp,48
  8048b8:	0803ec00 	call	803ec0 <__sprint_r>
  8048bc:	103f4e1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8048c0:	dc800e17 	ldw	r18,56(sp)
  8048c4:	dc400d17 	ldw	r17,52(sp)
  8048c8:	d8c01904 	addi	r3,sp,100
  8048cc:	003fee06 	br	804888 <___vfprintf_internal_r+0x970>
  8048d0:	d8802c0b 	ldhu	r2,176(sp)
  8048d4:	00ffffc4 	movi	r3,-1
  8048d8:	d8c14b15 	stw	r3,1324(sp)
  8048dc:	1080100c 	andi	r2,r2,64
  8048e0:	103dcc1e 	bne	r2,zero,804014 <___vfprintf_internal_r+0xfc>
  8048e4:	003dce06 	br	804020 <___vfprintf_internal_r+0x108>
  8048e8:	d9014f17 	ldw	r4,1340(sp)
  8048ec:	b00b883a 	mov	r5,r22
  8048f0:	d9800c04 	addi	r6,sp,48
  8048f4:	0803ec00 	call	803ec0 <__sprint_r>
  8048f8:	103f3f1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8048fc:	dc800e17 	ldw	r18,56(sp)
  804900:	003f2e06 	br	8045bc <___vfprintf_internal_r+0x6a4>
  804904:	d9414c17 	ldw	r5,1328(sp)
  804908:	29400414 	ori	r5,r5,16
  80490c:	d9414c15 	stw	r5,1328(sp)
  804910:	d9814c17 	ldw	r6,1328(sp)
  804914:	3080080c 	andi	r2,r6,32
  804918:	10014f1e 	bne	r2,zero,804e58 <___vfprintf_internal_r+0xf40>
  80491c:	d8c14c17 	ldw	r3,1328(sp)
  804920:	1880040c 	andi	r2,r3,16
  804924:	1002f01e 	bne	r2,zero,8054e8 <___vfprintf_internal_r+0x15d0>
  804928:	d9014c17 	ldw	r4,1328(sp)
  80492c:	2080100c 	andi	r2,r4,64
  804930:	1002ed26 	beq	r2,zero,8054e8 <___vfprintf_internal_r+0x15d0>
  804934:	3880000f 	ldh	r2,0(r7)
  804938:	39c00104 	addi	r7,r7,4
  80493c:	d9c14015 	stw	r7,1280(sp)
  804940:	1023d7fa 	srai	r17,r2,31
  804944:	1021883a 	mov	r16,r2
  804948:	88037816 	blt	r17,zero,80572c <___vfprintf_internal_r+0x1814>
  80494c:	01000044 	movi	r4,1
  804950:	98000416 	blt	r19,zero,804964 <___vfprintf_internal_r+0xa4c>
  804954:	d8c14c17 	ldw	r3,1328(sp)
  804958:	00bfdfc4 	movi	r2,-129
  80495c:	1886703a 	and	r3,r3,r2
  804960:	d8c14c15 	stw	r3,1328(sp)
  804964:	8444b03a 	or	r2,r16,r17
  804968:	10022c1e 	bne	r2,zero,80521c <___vfprintf_internal_r+0x1304>
  80496c:	98022b1e 	bne	r19,zero,80521c <___vfprintf_internal_r+0x1304>
  804970:	20803fcc 	andi	r2,r4,255
  804974:	1002a126 	beq	r2,zero,8053fc <___vfprintf_internal_r+0x14e4>
  804978:	d8c01904 	addi	r3,sp,100
  80497c:	dd000f04 	addi	r20,sp,60
  804980:	d8c14115 	stw	r3,1284(sp)
  804984:	d8c14117 	ldw	r3,1284(sp)
  804988:	dcc14515 	stw	r19,1300(sp)
  80498c:	a0c5c83a 	sub	r2,r20,r3
  804990:	11c00a04 	addi	r7,r2,40
  804994:	99c0010e 	bge	r19,r7,80499c <___vfprintf_internal_r+0xa84>
  804998:	d9c14515 	stw	r7,1300(sp)
  80499c:	dcc14615 	stw	r19,1304(sp)
  8049a0:	d8800407 	ldb	r2,16(sp)
  8049a4:	103e4c26 	beq	r2,zero,8042d8 <___vfprintf_internal_r+0x3c0>
  8049a8:	d8814517 	ldw	r2,1300(sp)
  8049ac:	10800044 	addi	r2,r2,1
  8049b0:	d8814515 	stw	r2,1300(sp)
  8049b4:	003e4806 	br	8042d8 <___vfprintf_internal_r+0x3c0>
  8049b8:	d9814c17 	ldw	r6,1328(sp)
  8049bc:	31800414 	ori	r6,r6,16
  8049c0:	d9814c15 	stw	r6,1328(sp)
  8049c4:	d8c14c17 	ldw	r3,1328(sp)
  8049c8:	1880080c 	andi	r2,r3,32
  8049cc:	1001271e 	bne	r2,zero,804e6c <___vfprintf_internal_r+0xf54>
  8049d0:	d9414c17 	ldw	r5,1328(sp)
  8049d4:	2880040c 	andi	r2,r5,16
  8049d8:	1002bc1e 	bne	r2,zero,8054cc <___vfprintf_internal_r+0x15b4>
  8049dc:	d9814c17 	ldw	r6,1328(sp)
  8049e0:	3080100c 	andi	r2,r6,64
  8049e4:	1002b926 	beq	r2,zero,8054cc <___vfprintf_internal_r+0x15b4>
  8049e8:	3c00000b 	ldhu	r16,0(r7)
  8049ec:	0009883a 	mov	r4,zero
  8049f0:	39c00104 	addi	r7,r7,4
  8049f4:	0023883a 	mov	r17,zero
  8049f8:	d9c14015 	stw	r7,1280(sp)
  8049fc:	d8000405 	stb	zero,16(sp)
  804a00:	003fd306 	br	804950 <___vfprintf_internal_r+0xa38>
  804a04:	d9014c17 	ldw	r4,1328(sp)
  804a08:	21000414 	ori	r4,r4,16
  804a0c:	d9014c15 	stw	r4,1328(sp)
  804a10:	d9414c17 	ldw	r5,1328(sp)
  804a14:	2880080c 	andi	r2,r5,32
  804a18:	1001081e 	bne	r2,zero,804e3c <___vfprintf_internal_r+0xf24>
  804a1c:	d8c14c17 	ldw	r3,1328(sp)
  804a20:	1880040c 	andi	r2,r3,16
  804a24:	1002b61e 	bne	r2,zero,805500 <___vfprintf_internal_r+0x15e8>
  804a28:	d9014c17 	ldw	r4,1328(sp)
  804a2c:	2080100c 	andi	r2,r4,64
  804a30:	1002b326 	beq	r2,zero,805500 <___vfprintf_internal_r+0x15e8>
  804a34:	3c00000b 	ldhu	r16,0(r7)
  804a38:	01000044 	movi	r4,1
  804a3c:	39c00104 	addi	r7,r7,4
  804a40:	0023883a 	mov	r17,zero
  804a44:	d9c14015 	stw	r7,1280(sp)
  804a48:	d8000405 	stb	zero,16(sp)
  804a4c:	003fc006 	br	804950 <___vfprintf_internal_r+0xa38>
  804a50:	d9014f17 	ldw	r4,1340(sp)
  804a54:	b00b883a 	mov	r5,r22
  804a58:	d9800c04 	addi	r6,sp,48
  804a5c:	0803ec00 	call	803ec0 <__sprint_r>
  804a60:	103ee51e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804a64:	dc800e17 	ldw	r18,56(sp)
  804a68:	d8c01904 	addi	r3,sp,100
  804a6c:	d9814c17 	ldw	r6,1328(sp)
  804a70:	3080004c 	andi	r2,r6,1
  804a74:	1005003a 	cmpeq	r2,r2,zero
  804a78:	103ea51e 	bne	r2,zero,804510 <___vfprintf_internal_r+0x5f8>
  804a7c:	00800044 	movi	r2,1
  804a80:	dc400d17 	ldw	r17,52(sp)
  804a84:	18800115 	stw	r2,4(r3)
  804a88:	d8814917 	ldw	r2,1316(sp)
  804a8c:	94800044 	addi	r18,r18,1
  804a90:	8c400044 	addi	r17,r17,1
  804a94:	18800015 	stw	r2,0(r3)
  804a98:	008001c4 	movi	r2,7
  804a9c:	dc800e15 	stw	r18,56(sp)
  804aa0:	dc400d15 	stw	r17,52(sp)
  804aa4:	1442240e 	bge	r2,r17,805338 <___vfprintf_internal_r+0x1420>
  804aa8:	d9014f17 	ldw	r4,1340(sp)
  804aac:	b00b883a 	mov	r5,r22
  804ab0:	d9800c04 	addi	r6,sp,48
  804ab4:	0803ec00 	call	803ec0 <__sprint_r>
  804ab8:	103ecf1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804abc:	dc800e17 	ldw	r18,56(sp)
  804ac0:	d8c01904 	addi	r3,sp,100
  804ac4:	003e9206 	br	804510 <___vfprintf_internal_r+0x5f8>
  804ac8:	d9014f17 	ldw	r4,1340(sp)
  804acc:	b00b883a 	mov	r5,r22
  804ad0:	d9800c04 	addi	r6,sp,48
  804ad4:	0803ec00 	call	803ec0 <__sprint_r>
  804ad8:	103ec026 	beq	r2,zero,8045dc <___vfprintf_internal_r+0x6c4>
  804adc:	003ec606 	br	8045f8 <___vfprintf_internal_r+0x6e0>
  804ae0:	d9014f17 	ldw	r4,1340(sp)
  804ae4:	b00b883a 	mov	r5,r22
  804ae8:	d9800c04 	addi	r6,sp,48
  804aec:	d9c15115 	stw	r7,1348(sp)
  804af0:	0803ec00 	call	803ec0 <__sprint_r>
  804af4:	d9c15117 	ldw	r7,1348(sp)
  804af8:	103ebf1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804afc:	dc800e17 	ldw	r18,56(sp)
  804b00:	dc400d17 	ldw	r17,52(sp)
  804b04:	dd401904 	addi	r21,sp,100
  804b08:	003e7406 	br	8044dc <___vfprintf_internal_r+0x5c4>
  804b0c:	d9014f17 	ldw	r4,1340(sp)
  804b10:	b00b883a 	mov	r5,r22
  804b14:	d9800c04 	addi	r6,sp,48
  804b18:	d9c15115 	stw	r7,1348(sp)
  804b1c:	0803ec00 	call	803ec0 <__sprint_r>
  804b20:	d9c15117 	ldw	r7,1348(sp)
  804b24:	103eb41e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804b28:	dd401904 	addi	r21,sp,100
  804b2c:	003d6d06 	br	8040e4 <___vfprintf_internal_r+0x1cc>
  804b30:	d9014f17 	ldw	r4,1340(sp)
  804b34:	b00b883a 	mov	r5,r22
  804b38:	d9800c04 	addi	r6,sp,48
  804b3c:	d9c15115 	stw	r7,1348(sp)
  804b40:	0803ec00 	call	803ec0 <__sprint_r>
  804b44:	d9c15117 	ldw	r7,1348(sp)
  804b48:	103eab1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804b4c:	dc800e17 	ldw	r18,56(sp)
  804b50:	dc400d17 	ldw	r17,52(sp)
  804b54:	dd401904 	addi	r21,sp,100
  804b58:	003e3406 	br	80442c <___vfprintf_internal_r+0x514>
  804b5c:	d9014f17 	ldw	r4,1340(sp)
  804b60:	b00b883a 	mov	r5,r22
  804b64:	d9800c04 	addi	r6,sp,48
  804b68:	d9c15115 	stw	r7,1348(sp)
  804b6c:	0803ec00 	call	803ec0 <__sprint_r>
  804b70:	d9c15117 	ldw	r7,1348(sp)
  804b74:	103ea01e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804b78:	dc800e17 	ldw	r18,56(sp)
  804b7c:	dc400d17 	ldw	r17,52(sp)
  804b80:	dd401904 	addi	r21,sp,100
  804b84:	003e1c06 	br	8043f8 <___vfprintf_internal_r+0x4e0>
  804b88:	d9014f17 	ldw	r4,1340(sp)
  804b8c:	b00b883a 	mov	r5,r22
  804b90:	d9800c04 	addi	r6,sp,48
  804b94:	d9c15115 	stw	r7,1348(sp)
  804b98:	0803ec00 	call	803ec0 <__sprint_r>
  804b9c:	d9c15117 	ldw	r7,1348(sp)
  804ba0:	103e951e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804ba4:	dc800e17 	ldw	r18,56(sp)
  804ba8:	dc400d17 	ldw	r17,52(sp)
  804bac:	dd401904 	addi	r21,sp,100
  804bb0:	003e0406 	br	8043c4 <___vfprintf_internal_r+0x4ac>
  804bb4:	d9000517 	ldw	r4,20(sp)
  804bb8:	0102580e 	bge	zero,r4,80551c <___vfprintf_internal_r+0x1604>
  804bbc:	d9814717 	ldw	r6,1308(sp)
  804bc0:	21807a16 	blt	r4,r6,804dac <___vfprintf_internal_r+0xe94>
  804bc4:	d8814117 	ldw	r2,1284(sp)
  804bc8:	91a5883a 	add	r18,r18,r6
  804bcc:	8c400044 	addi	r17,r17,1
  804bd0:	a8800015 	stw	r2,0(r21)
  804bd4:	008001c4 	movi	r2,7
  804bd8:	a9800115 	stw	r6,4(r21)
  804bdc:	dc800e15 	stw	r18,56(sp)
  804be0:	dc400d15 	stw	r17,52(sp)
  804be4:	1442fc16 	blt	r2,r17,8057d8 <___vfprintf_internal_r+0x18c0>
  804be8:	a8c00204 	addi	r3,r21,8
  804bec:	d9414717 	ldw	r5,1308(sp)
  804bf0:	2161c83a 	sub	r16,r4,r5
  804bf4:	043f9d0e 	bge	zero,r16,804a6c <___vfprintf_internal_r+0xb54>
  804bf8:	00800404 	movi	r2,16
  804bfc:	1402190e 	bge	r2,r16,805464 <___vfprintf_internal_r+0x154c>
  804c00:	dc400d17 	ldw	r17,52(sp)
  804c04:	1027883a 	mov	r19,r2
  804c08:	07002074 	movhi	fp,129
  804c0c:	e7014a84 	addi	fp,fp,1322
  804c10:	050001c4 	movi	r20,7
  804c14:	00000306 	br	804c24 <___vfprintf_internal_r+0xd0c>
  804c18:	18c00204 	addi	r3,r3,8
  804c1c:	843ffc04 	addi	r16,r16,-16
  804c20:	9c02130e 	bge	r19,r16,805470 <___vfprintf_internal_r+0x1558>
  804c24:	94800404 	addi	r18,r18,16
  804c28:	8c400044 	addi	r17,r17,1
  804c2c:	1f000015 	stw	fp,0(r3)
  804c30:	1cc00115 	stw	r19,4(r3)
  804c34:	dc800e15 	stw	r18,56(sp)
  804c38:	dc400d15 	stw	r17,52(sp)
  804c3c:	a47ff60e 	bge	r20,r17,804c18 <___vfprintf_internal_r+0xd00>
  804c40:	d9014f17 	ldw	r4,1340(sp)
  804c44:	b00b883a 	mov	r5,r22
  804c48:	d9800c04 	addi	r6,sp,48
  804c4c:	0803ec00 	call	803ec0 <__sprint_r>
  804c50:	103e691e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804c54:	dc800e17 	ldw	r18,56(sp)
  804c58:	dc400d17 	ldw	r17,52(sp)
  804c5c:	d8c01904 	addi	r3,sp,100
  804c60:	003fee06 	br	804c1c <___vfprintf_internal_r+0xd04>
  804c64:	d8814717 	ldw	r2,1308(sp)
  804c68:	143fffc4 	addi	r16,r2,-1
  804c6c:	043e970e 	bge	zero,r16,8046cc <___vfprintf_internal_r+0x7b4>
  804c70:	00800404 	movi	r2,16
  804c74:	1400180e 	bge	r2,r16,804cd8 <___vfprintf_internal_r+0xdc0>
  804c78:	1029883a 	mov	r20,r2
  804c7c:	07002074 	movhi	fp,129
  804c80:	e7014a84 	addi	fp,fp,1322
  804c84:	054001c4 	movi	r21,7
  804c88:	00000306 	br	804c98 <___vfprintf_internal_r+0xd80>
  804c8c:	9cc00204 	addi	r19,r19,8
  804c90:	843ffc04 	addi	r16,r16,-16
  804c94:	a400120e 	bge	r20,r16,804ce0 <___vfprintf_internal_r+0xdc8>
  804c98:	94800404 	addi	r18,r18,16
  804c9c:	8c400044 	addi	r17,r17,1
  804ca0:	9f000015 	stw	fp,0(r19)
  804ca4:	9d000115 	stw	r20,4(r19)
  804ca8:	dc800e15 	stw	r18,56(sp)
  804cac:	dc400d15 	stw	r17,52(sp)
  804cb0:	ac7ff60e 	bge	r21,r17,804c8c <___vfprintf_internal_r+0xd74>
  804cb4:	d9014f17 	ldw	r4,1340(sp)
  804cb8:	b00b883a 	mov	r5,r22
  804cbc:	d9800c04 	addi	r6,sp,48
  804cc0:	0803ec00 	call	803ec0 <__sprint_r>
  804cc4:	103e4c1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804cc8:	dc800e17 	ldw	r18,56(sp)
  804ccc:	dc400d17 	ldw	r17,52(sp)
  804cd0:	dcc01904 	addi	r19,sp,100
  804cd4:	003fee06 	br	804c90 <___vfprintf_internal_r+0xd78>
  804cd8:	07002074 	movhi	fp,129
  804cdc:	e7014a84 	addi	fp,fp,1322
  804ce0:	9425883a 	add	r18,r18,r16
  804ce4:	8c400044 	addi	r17,r17,1
  804ce8:	008001c4 	movi	r2,7
  804cec:	9f000015 	stw	fp,0(r19)
  804cf0:	9c000115 	stw	r16,4(r19)
  804cf4:	dc800e15 	stw	r18,56(sp)
  804cf8:	dc400d15 	stw	r17,52(sp)
  804cfc:	147e720e 	bge	r2,r17,8046c8 <___vfprintf_internal_r+0x7b0>
  804d00:	d9014f17 	ldw	r4,1340(sp)
  804d04:	b00b883a 	mov	r5,r22
  804d08:	d9800c04 	addi	r6,sp,48
  804d0c:	0803ec00 	call	803ec0 <__sprint_r>
  804d10:	103e391e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804d14:	dc800e17 	ldw	r18,56(sp)
  804d18:	dc400d17 	ldw	r17,52(sp)
  804d1c:	dcc01904 	addi	r19,sp,100
  804d20:	003e6a06 	br	8046cc <___vfprintf_internal_r+0x7b4>
  804d24:	d9014f17 	ldw	r4,1340(sp)
  804d28:	b00b883a 	mov	r5,r22
  804d2c:	d9800c04 	addi	r6,sp,48
  804d30:	d9c15115 	stw	r7,1348(sp)
  804d34:	0803ec00 	call	803ec0 <__sprint_r>
  804d38:	d9c15117 	ldw	r7,1348(sp)
  804d3c:	103e2e1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804d40:	dc800e17 	ldw	r18,56(sp)
  804d44:	dc400d17 	ldw	r17,52(sp)
  804d48:	dd401904 	addi	r21,sp,100
  804d4c:	003dba06 	br	804438 <___vfprintf_internal_r+0x520>
  804d50:	d9014f17 	ldw	r4,1340(sp)
  804d54:	b00b883a 	mov	r5,r22
  804d58:	d9800c04 	addi	r6,sp,48
  804d5c:	0803ec00 	call	803ec0 <__sprint_r>
  804d60:	103e251e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804d64:	dc800e17 	ldw	r18,56(sp)
  804d68:	dc400d17 	ldw	r17,52(sp)
  804d6c:	dcc01904 	addi	r19,sp,100
  804d70:	003e4206 	br	80467c <___vfprintf_internal_r+0x764>
  804d74:	d9014f17 	ldw	r4,1340(sp)
  804d78:	b00b883a 	mov	r5,r22
  804d7c:	d9800c04 	addi	r6,sp,48
  804d80:	0803ec00 	call	803ec0 <__sprint_r>
  804d84:	103e1c1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  804d88:	dc800e17 	ldw	r18,56(sp)
  804d8c:	dc400d17 	ldw	r17,52(sp)
  804d90:	d8c01904 	addi	r3,sp,100
  804d94:	003e2e06 	br	804650 <___vfprintf_internal_r+0x738>
  804d98:	d9414c17 	ldw	r5,1328(sp)
  804d9c:	2880004c 	andi	r2,r5,1
  804da0:	1005003a 	cmpeq	r2,r2,zero
  804da4:	103dda1e 	bne	r2,zero,804510 <___vfprintf_internal_r+0x5f8>
  804da8:	003e9f06 	br	804828 <___vfprintf_internal_r+0x910>
  804dac:	d8c14117 	ldw	r3,1284(sp)
  804db0:	9125883a 	add	r18,r18,r4
  804db4:	8c400044 	addi	r17,r17,1
  804db8:	008001c4 	movi	r2,7
  804dbc:	a8c00015 	stw	r3,0(r21)
  804dc0:	a9000115 	stw	r4,4(r21)
  804dc4:	dc800e15 	stw	r18,56(sp)
  804dc8:	dc400d15 	stw	r17,52(sp)
  804dcc:	14426c16 	blt	r2,r17,805780 <___vfprintf_internal_r+0x1868>
  804dd0:	a8c00204 	addi	r3,r21,8
  804dd4:	d9414917 	ldw	r5,1316(sp)
  804dd8:	00800044 	movi	r2,1
  804ddc:	94800044 	addi	r18,r18,1
  804de0:	8c400044 	addi	r17,r17,1
  804de4:	18800115 	stw	r2,4(r3)
  804de8:	008001c4 	movi	r2,7
  804dec:	19400015 	stw	r5,0(r3)
  804df0:	dc800e15 	stw	r18,56(sp)
  804df4:	dc400d15 	stw	r17,52(sp)
  804df8:	2021883a 	mov	r16,r4
  804dfc:	14425616 	blt	r2,r17,805758 <___vfprintf_internal_r+0x1840>
  804e00:	19400204 	addi	r5,r3,8
  804e04:	d9814717 	ldw	r6,1308(sp)
  804e08:	8c400044 	addi	r17,r17,1
  804e0c:	dc400d15 	stw	r17,52(sp)
  804e10:	3107c83a 	sub	r3,r6,r4
  804e14:	d9014117 	ldw	r4,1284(sp)
  804e18:	90e5883a 	add	r18,r18,r3
  804e1c:	28c00115 	stw	r3,4(r5)
  804e20:	8105883a 	add	r2,r16,r4
  804e24:	28800015 	stw	r2,0(r5)
  804e28:	008001c4 	movi	r2,7
  804e2c:	dc800e15 	stw	r18,56(sp)
  804e30:	147f1d16 	blt	r2,r17,804aa8 <___vfprintf_internal_r+0xb90>
  804e34:	28c00204 	addi	r3,r5,8
  804e38:	003db506 	br	804510 <___vfprintf_internal_r+0x5f8>
  804e3c:	3c000017 	ldw	r16,0(r7)
  804e40:	3c400117 	ldw	r17,4(r7)
  804e44:	39800204 	addi	r6,r7,8
  804e48:	01000044 	movi	r4,1
  804e4c:	d9814015 	stw	r6,1280(sp)
  804e50:	d8000405 	stb	zero,16(sp)
  804e54:	003ebe06 	br	804950 <___vfprintf_internal_r+0xa38>
  804e58:	3c000017 	ldw	r16,0(r7)
  804e5c:	3c400117 	ldw	r17,4(r7)
  804e60:	38800204 	addi	r2,r7,8
  804e64:	d8814015 	stw	r2,1280(sp)
  804e68:	003eb706 	br	804948 <___vfprintf_internal_r+0xa30>
  804e6c:	3c000017 	ldw	r16,0(r7)
  804e70:	3c400117 	ldw	r17,4(r7)
  804e74:	39000204 	addi	r4,r7,8
  804e78:	d9014015 	stw	r4,1280(sp)
  804e7c:	0009883a 	mov	r4,zero
  804e80:	d8000405 	stb	zero,16(sp)
  804e84:	003eb206 	br	804950 <___vfprintf_internal_r+0xa38>
  804e88:	38c00017 	ldw	r3,0(r7)
  804e8c:	39c00104 	addi	r7,r7,4
  804e90:	d8c14a15 	stw	r3,1320(sp)
  804e94:	1800d70e 	bge	r3,zero,8051f4 <___vfprintf_internal_r+0x12dc>
  804e98:	00c7c83a 	sub	r3,zero,r3
  804e9c:	d8c14a15 	stw	r3,1320(sp)
  804ea0:	d9014c17 	ldw	r4,1328(sp)
  804ea4:	b8c00007 	ldb	r3,0(r23)
  804ea8:	21000114 	ori	r4,r4,4
  804eac:	d9014c15 	stw	r4,1328(sp)
  804eb0:	003c9806 	br	804114 <___vfprintf_internal_r+0x1fc>
  804eb4:	d9814c17 	ldw	r6,1328(sp)
  804eb8:	3080080c 	andi	r2,r6,32
  804ebc:	1001f626 	beq	r2,zero,805698 <___vfprintf_internal_r+0x1780>
  804ec0:	d9014b17 	ldw	r4,1324(sp)
  804ec4:	38800017 	ldw	r2,0(r7)
  804ec8:	39c00104 	addi	r7,r7,4
  804ecc:	d9c14015 	stw	r7,1280(sp)
  804ed0:	2007d7fa 	srai	r3,r4,31
  804ed4:	d9c14017 	ldw	r7,1280(sp)
  804ed8:	11000015 	stw	r4,0(r2)
  804edc:	10c00115 	stw	r3,4(r2)
  804ee0:	003c6906 	br	804088 <___vfprintf_internal_r+0x170>
  804ee4:	b8c00007 	ldb	r3,0(r23)
  804ee8:	00801b04 	movi	r2,108
  804eec:	18825526 	beq	r3,r2,805844 <___vfprintf_internal_r+0x192c>
  804ef0:	d9414c17 	ldw	r5,1328(sp)
  804ef4:	29400414 	ori	r5,r5,16
  804ef8:	d9414c15 	stw	r5,1328(sp)
  804efc:	003c8506 	br	804114 <___vfprintf_internal_r+0x1fc>
  804f00:	d9814c17 	ldw	r6,1328(sp)
  804f04:	b8c00007 	ldb	r3,0(r23)
  804f08:	31800814 	ori	r6,r6,32
  804f0c:	d9814c15 	stw	r6,1328(sp)
  804f10:	003c8006 	br	804114 <___vfprintf_internal_r+0x1fc>
  804f14:	d8814c17 	ldw	r2,1328(sp)
  804f18:	3c000017 	ldw	r16,0(r7)
  804f1c:	00c01e04 	movi	r3,120
  804f20:	10800094 	ori	r2,r2,2
  804f24:	d8814c15 	stw	r2,1328(sp)
  804f28:	39c00104 	addi	r7,r7,4
  804f2c:	01402074 	movhi	r5,129
  804f30:	29413304 	addi	r5,r5,1228
  804f34:	00800c04 	movi	r2,48
  804f38:	0023883a 	mov	r17,zero
  804f3c:	01000084 	movi	r4,2
  804f40:	d9c14015 	stw	r7,1280(sp)
  804f44:	d8c14d15 	stw	r3,1332(sp)
  804f48:	d9414415 	stw	r5,1296(sp)
  804f4c:	d8800445 	stb	r2,17(sp)
  804f50:	d8c00485 	stb	r3,18(sp)
  804f54:	d8000405 	stb	zero,16(sp)
  804f58:	003e7d06 	br	804950 <___vfprintf_internal_r+0xa38>
  804f5c:	d8814c17 	ldw	r2,1328(sp)
  804f60:	b8c00007 	ldb	r3,0(r23)
  804f64:	10801014 	ori	r2,r2,64
  804f68:	d8814c15 	stw	r2,1328(sp)
  804f6c:	003c6906 	br	804114 <___vfprintf_internal_r+0x1fc>
  804f70:	d9414c17 	ldw	r5,1328(sp)
  804f74:	2880020c 	andi	r2,r5,8
  804f78:	1001e526 	beq	r2,zero,805710 <___vfprintf_internal_r+0x17f8>
  804f7c:	39800017 	ldw	r6,0(r7)
  804f80:	38800204 	addi	r2,r7,8
  804f84:	d8814015 	stw	r2,1280(sp)
  804f88:	d9814215 	stw	r6,1288(sp)
  804f8c:	39c00117 	ldw	r7,4(r7)
  804f90:	d9c14315 	stw	r7,1292(sp)
  804f94:	d9014217 	ldw	r4,1288(sp)
  804f98:	d9414317 	ldw	r5,1292(sp)
  804f9c:	080b4940 	call	80b494 <__isinfd>
  804fa0:	10021d26 	beq	r2,zero,805818 <___vfprintf_internal_r+0x1900>
  804fa4:	d9014217 	ldw	r4,1288(sp)
  804fa8:	d9414317 	ldw	r5,1292(sp)
  804fac:	000d883a 	mov	r6,zero
  804fb0:	000f883a 	mov	r7,zero
  804fb4:	080cdf40 	call	80cdf4 <__ltdf2>
  804fb8:	1002d016 	blt	r2,zero,805afc <___vfprintf_internal_r+0x1be4>
  804fbc:	d9414d17 	ldw	r5,1332(sp)
  804fc0:	008011c4 	movi	r2,71
  804fc4:	11421016 	blt	r2,r5,805808 <___vfprintf_internal_r+0x18f0>
  804fc8:	01802074 	movhi	r6,129
  804fcc:	31813804 	addi	r6,r6,1248
  804fd0:	d9814115 	stw	r6,1284(sp)
  804fd4:	d9014c17 	ldw	r4,1328(sp)
  804fd8:	00c000c4 	movi	r3,3
  804fdc:	00bfdfc4 	movi	r2,-129
  804fe0:	2088703a 	and	r4,r4,r2
  804fe4:	180f883a 	mov	r7,r3
  804fe8:	d8c14515 	stw	r3,1300(sp)
  804fec:	d9014c15 	stw	r4,1328(sp)
  804ff0:	d8014615 	stw	zero,1304(sp)
  804ff4:	003e6a06 	br	8049a0 <___vfprintf_internal_r+0xa88>
  804ff8:	38800017 	ldw	r2,0(r7)
  804ffc:	00c00044 	movi	r3,1
  805000:	39c00104 	addi	r7,r7,4
  805004:	d9c14015 	stw	r7,1280(sp)
  805008:	d9000f04 	addi	r4,sp,60
  80500c:	180f883a 	mov	r7,r3
  805010:	d8c14515 	stw	r3,1300(sp)
  805014:	d9014115 	stw	r4,1284(sp)
  805018:	d8800f05 	stb	r2,60(sp)
  80501c:	d8000405 	stb	zero,16(sp)
  805020:	003cac06 	br	8042d4 <___vfprintf_internal_r+0x3bc>
  805024:	01402074 	movhi	r5,129
  805028:	29413e04 	addi	r5,r5,1272
  80502c:	d9414415 	stw	r5,1296(sp)
  805030:	d9814c17 	ldw	r6,1328(sp)
  805034:	3080080c 	andi	r2,r6,32
  805038:	1000ff26 	beq	r2,zero,805438 <___vfprintf_internal_r+0x1520>
  80503c:	3c000017 	ldw	r16,0(r7)
  805040:	3c400117 	ldw	r17,4(r7)
  805044:	38800204 	addi	r2,r7,8
  805048:	d8814015 	stw	r2,1280(sp)
  80504c:	d9414c17 	ldw	r5,1328(sp)
  805050:	2880004c 	andi	r2,r5,1
  805054:	1005003a 	cmpeq	r2,r2,zero
  805058:	1000b91e 	bne	r2,zero,805340 <___vfprintf_internal_r+0x1428>
  80505c:	8444b03a 	or	r2,r16,r17
  805060:	1000b726 	beq	r2,zero,805340 <___vfprintf_internal_r+0x1428>
  805064:	d9814d17 	ldw	r6,1332(sp)
  805068:	29400094 	ori	r5,r5,2
  80506c:	00800c04 	movi	r2,48
  805070:	01000084 	movi	r4,2
  805074:	d9414c15 	stw	r5,1328(sp)
  805078:	d8800445 	stb	r2,17(sp)
  80507c:	d9800485 	stb	r6,18(sp)
  805080:	d8000405 	stb	zero,16(sp)
  805084:	003e3206 	br	804950 <___vfprintf_internal_r+0xa38>
  805088:	01802074 	movhi	r6,129
  80508c:	31813304 	addi	r6,r6,1228
  805090:	d9814415 	stw	r6,1296(sp)
  805094:	003fe606 	br	805030 <___vfprintf_internal_r+0x1118>
  805098:	00800ac4 	movi	r2,43
  80509c:	d8800405 	stb	r2,16(sp)
  8050a0:	b8c00007 	ldb	r3,0(r23)
  8050a4:	003c1b06 	br	804114 <___vfprintf_internal_r+0x1fc>
  8050a8:	d8814c17 	ldw	r2,1328(sp)
  8050ac:	b8c00007 	ldb	r3,0(r23)
  8050b0:	10800054 	ori	r2,r2,1
  8050b4:	d8814c15 	stw	r2,1328(sp)
  8050b8:	003c1606 	br	804114 <___vfprintf_internal_r+0x1fc>
  8050bc:	d8800407 	ldb	r2,16(sp)
  8050c0:	10004c1e 	bne	r2,zero,8051f4 <___vfprintf_internal_r+0x12dc>
  8050c4:	00800804 	movi	r2,32
  8050c8:	d8800405 	stb	r2,16(sp)
  8050cc:	b8c00007 	ldb	r3,0(r23)
  8050d0:	003c1006 	br	804114 <___vfprintf_internal_r+0x1fc>
  8050d4:	d9814c17 	ldw	r6,1328(sp)
  8050d8:	b8c00007 	ldb	r3,0(r23)
  8050dc:	31800214 	ori	r6,r6,8
  8050e0:	d9814c15 	stw	r6,1328(sp)
  8050e4:	003c0b06 	br	804114 <___vfprintf_internal_r+0x1fc>
  8050e8:	0009883a 	mov	r4,zero
  8050ec:	04000244 	movi	r16,9
  8050f0:	01400284 	movi	r5,10
  8050f4:	d9c15115 	stw	r7,1348(sp)
  8050f8:	08032000 	call	803200 <__mulsi3>
  8050fc:	b9000007 	ldb	r4,0(r23)
  805100:	d8c14d17 	ldw	r3,1332(sp)
  805104:	bdc00044 	addi	r23,r23,1
  805108:	d9014d15 	stw	r4,1332(sp)
  80510c:	d9414d17 	ldw	r5,1332(sp)
  805110:	1885883a 	add	r2,r3,r2
  805114:	113ff404 	addi	r4,r2,-48
  805118:	28bff404 	addi	r2,r5,-48
  80511c:	d9c15117 	ldw	r7,1348(sp)
  805120:	80bff32e 	bgeu	r16,r2,8050f0 <___vfprintf_internal_r+0x11d8>
  805124:	d9014a15 	stw	r4,1320(sp)
  805128:	003bfc06 	br	80411c <___vfprintf_internal_r+0x204>
  80512c:	d8814c17 	ldw	r2,1328(sp)
  805130:	b8c00007 	ldb	r3,0(r23)
  805134:	10802014 	ori	r2,r2,128
  805138:	d8814c15 	stw	r2,1328(sp)
  80513c:	003bf506 	br	804114 <___vfprintf_internal_r+0x1fc>
  805140:	b8c00007 	ldb	r3,0(r23)
  805144:	00800a84 	movi	r2,42
  805148:	bdc00044 	addi	r23,r23,1
  80514c:	18831826 	beq	r3,r2,805db0 <___vfprintf_internal_r+0x1e98>
  805150:	d8c14d15 	stw	r3,1332(sp)
  805154:	18bff404 	addi	r2,r3,-48
  805158:	00c00244 	movi	r3,9
  80515c:	18827b36 	bltu	r3,r2,805b4c <___vfprintf_internal_r+0x1c34>
  805160:	1821883a 	mov	r16,r3
  805164:	0009883a 	mov	r4,zero
  805168:	01400284 	movi	r5,10
  80516c:	d9c15115 	stw	r7,1348(sp)
  805170:	08032000 	call	803200 <__mulsi3>
  805174:	d9414d17 	ldw	r5,1332(sp)
  805178:	b9800007 	ldb	r6,0(r23)
  80517c:	d9c15117 	ldw	r7,1348(sp)
  805180:	1145883a 	add	r2,r2,r5
  805184:	113ff404 	addi	r4,r2,-48
  805188:	30bff404 	addi	r2,r6,-48
  80518c:	d9814d15 	stw	r6,1332(sp)
  805190:	bdc00044 	addi	r23,r23,1
  805194:	80bff42e 	bgeu	r16,r2,805168 <___vfprintf_internal_r+0x1250>
  805198:	2027883a 	mov	r19,r4
  80519c:	203bdf0e 	bge	r4,zero,80411c <___vfprintf_internal_r+0x204>
  8051a0:	04ffffc4 	movi	r19,-1
  8051a4:	003bdd06 	br	80411c <___vfprintf_internal_r+0x204>
  8051a8:	d8000405 	stb	zero,16(sp)
  8051ac:	39800017 	ldw	r6,0(r7)
  8051b0:	39c00104 	addi	r7,r7,4
  8051b4:	d9c14015 	stw	r7,1280(sp)
  8051b8:	d9814115 	stw	r6,1284(sp)
  8051bc:	3001c926 	beq	r6,zero,8058e4 <___vfprintf_internal_r+0x19cc>
  8051c0:	98000e16 	blt	r19,zero,8051fc <___vfprintf_internal_r+0x12e4>
  8051c4:	d9014117 	ldw	r4,1284(sp)
  8051c8:	000b883a 	mov	r5,zero
  8051cc:	980d883a 	mov	r6,r19
  8051d0:	0809b180 	call	809b18 <memchr>
  8051d4:	10025926 	beq	r2,zero,805b3c <___vfprintf_internal_r+0x1c24>
  8051d8:	d8c14117 	ldw	r3,1284(sp)
  8051dc:	10cfc83a 	sub	r7,r2,r3
  8051e0:	99c19e16 	blt	r19,r7,80585c <___vfprintf_internal_r+0x1944>
  8051e4:	d9c14515 	stw	r7,1300(sp)
  8051e8:	38000916 	blt	r7,zero,805210 <___vfprintf_internal_r+0x12f8>
  8051ec:	d8014615 	stw	zero,1304(sp)
  8051f0:	003deb06 	br	8049a0 <___vfprintf_internal_r+0xa88>
  8051f4:	b8c00007 	ldb	r3,0(r23)
  8051f8:	003bc606 	br	804114 <___vfprintf_internal_r+0x1fc>
  8051fc:	d9014117 	ldw	r4,1284(sp)
  805200:	0803e4c0 	call	803e4c <strlen>
  805204:	d8814515 	stw	r2,1300(sp)
  805208:	100f883a 	mov	r7,r2
  80520c:	103ff70e 	bge	r2,zero,8051ec <___vfprintf_internal_r+0x12d4>
  805210:	d8014515 	stw	zero,1300(sp)
  805214:	d8014615 	stw	zero,1304(sp)
  805218:	003de106 	br	8049a0 <___vfprintf_internal_r+0xa88>
  80521c:	20c03fcc 	andi	r3,r4,255
  805220:	00800044 	movi	r2,1
  805224:	18802d26 	beq	r3,r2,8052dc <___vfprintf_internal_r+0x13c4>
  805228:	18800e36 	bltu	r3,r2,805264 <___vfprintf_internal_r+0x134c>
  80522c:	00800084 	movi	r2,2
  805230:	1880fa26 	beq	r3,r2,80561c <___vfprintf_internal_r+0x1704>
  805234:	01002074 	movhi	r4,129
  805238:	21014304 	addi	r4,r4,1292
  80523c:	0803e4c0 	call	803e4c <strlen>
  805240:	100f883a 	mov	r7,r2
  805244:	dcc14515 	stw	r19,1300(sp)
  805248:	9880010e 	bge	r19,r2,805250 <___vfprintf_internal_r+0x1338>
  80524c:	d8814515 	stw	r2,1300(sp)
  805250:	00802074 	movhi	r2,129
  805254:	10814304 	addi	r2,r2,1292
  805258:	dcc14615 	stw	r19,1304(sp)
  80525c:	d8814115 	stw	r2,1284(sp)
  805260:	003dcf06 	br	8049a0 <___vfprintf_internal_r+0xa88>
  805264:	d9401904 	addi	r5,sp,100
  805268:	dd000f04 	addi	r20,sp,60
  80526c:	d9414115 	stw	r5,1284(sp)
  805270:	880a977a 	slli	r5,r17,29
  805274:	d9814117 	ldw	r6,1284(sp)
  805278:	8004d0fa 	srli	r2,r16,3
  80527c:	8806d0fa 	srli	r3,r17,3
  805280:	810001cc 	andi	r4,r16,7
  805284:	2884b03a 	or	r2,r5,r2
  805288:	31bfffc4 	addi	r6,r6,-1
  80528c:	21000c04 	addi	r4,r4,48
  805290:	d9814115 	stw	r6,1284(sp)
  805294:	10cab03a 	or	r5,r2,r3
  805298:	31000005 	stb	r4,0(r6)
  80529c:	1021883a 	mov	r16,r2
  8052a0:	1823883a 	mov	r17,r3
  8052a4:	283ff21e 	bne	r5,zero,805270 <___vfprintf_internal_r+0x1358>
  8052a8:	d8c14c17 	ldw	r3,1328(sp)
  8052ac:	1880004c 	andi	r2,r3,1
  8052b0:	1005003a 	cmpeq	r2,r2,zero
  8052b4:	103db31e 	bne	r2,zero,804984 <___vfprintf_internal_r+0xa6c>
  8052b8:	20803fcc 	andi	r2,r4,255
  8052bc:	1080201c 	xori	r2,r2,128
  8052c0:	10bfe004 	addi	r2,r2,-128
  8052c4:	00c00c04 	movi	r3,48
  8052c8:	10fdae26 	beq	r2,r3,804984 <___vfprintf_internal_r+0xa6c>
  8052cc:	31bfffc4 	addi	r6,r6,-1
  8052d0:	d9814115 	stw	r6,1284(sp)
  8052d4:	30c00005 	stb	r3,0(r6)
  8052d8:	003daa06 	br	804984 <___vfprintf_internal_r+0xa6c>
  8052dc:	88800068 	cmpgeui	r2,r17,1
  8052e0:	10002c1e 	bne	r2,zero,805394 <___vfprintf_internal_r+0x147c>
  8052e4:	8800021e 	bne	r17,zero,8052f0 <___vfprintf_internal_r+0x13d8>
  8052e8:	00800244 	movi	r2,9
  8052ec:	14002936 	bltu	r2,r16,805394 <___vfprintf_internal_r+0x147c>
  8052f0:	d90018c4 	addi	r4,sp,99
  8052f4:	dd000f04 	addi	r20,sp,60
  8052f8:	d9014115 	stw	r4,1284(sp)
  8052fc:	d9014117 	ldw	r4,1284(sp)
  805300:	80800c04 	addi	r2,r16,48
  805304:	20800005 	stb	r2,0(r4)
  805308:	003d9e06 	br	804984 <___vfprintf_internal_r+0xa6c>
  80530c:	dc400d17 	ldw	r17,52(sp)
  805310:	07002074 	movhi	fp,129
  805314:	e7014a84 	addi	fp,fp,1322
  805318:	9425883a 	add	r18,r18,r16
  80531c:	8c400044 	addi	r17,r17,1
  805320:	008001c4 	movi	r2,7
  805324:	1f000015 	stw	fp,0(r3)
  805328:	1c000115 	stw	r16,4(r3)
  80532c:	dc800e15 	stw	r18,56(sp)
  805330:	dc400d15 	stw	r17,52(sp)
  805334:	147ddc16 	blt	r2,r17,804aa8 <___vfprintf_internal_r+0xb90>
  805338:	18c00204 	addi	r3,r3,8
  80533c:	003c7406 	br	804510 <___vfprintf_internal_r+0x5f8>
  805340:	01000084 	movi	r4,2
  805344:	d8000405 	stb	zero,16(sp)
  805348:	003d8106 	br	804950 <___vfprintf_internal_r+0xa38>
  80534c:	d9814c17 	ldw	r6,1328(sp)
  805350:	30c4703a 	and	r2,r6,r3
  805354:	1005003a 	cmpeq	r2,r2,zero
  805358:	103cb326 	beq	r2,zero,804628 <___vfprintf_internal_r+0x710>
  80535c:	d9014117 	ldw	r4,1284(sp)
  805360:	94800044 	addi	r18,r18,1
  805364:	8c400044 	addi	r17,r17,1
  805368:	008001c4 	movi	r2,7
  80536c:	a9000015 	stw	r4,0(r21)
  805370:	a8c00115 	stw	r3,4(r21)
  805374:	dc800e15 	stw	r18,56(sp)
  805378:	dc400d15 	stw	r17,52(sp)
  80537c:	147e6016 	blt	r2,r17,804d00 <___vfprintf_internal_r+0xde8>
  805380:	acc00204 	addi	r19,r21,8
  805384:	003cd106 	br	8046cc <___vfprintf_internal_r+0x7b4>
  805388:	07002074 	movhi	fp,129
  80538c:	e7014a84 	addi	fp,fp,1322
  805390:	003c4906 	br	8044b8 <___vfprintf_internal_r+0x5a0>
  805394:	dd000f04 	addi	r20,sp,60
  805398:	dc801904 	addi	r18,sp,100
  80539c:	8009883a 	mov	r4,r16
  8053a0:	880b883a 	mov	r5,r17
  8053a4:	01800284 	movi	r6,10
  8053a8:	000f883a 	mov	r7,zero
  8053ac:	080c31c0 	call	80c31c <__umoddi3>
  8053b0:	12000c04 	addi	r8,r2,48
  8053b4:	94bfffc4 	addi	r18,r18,-1
  8053b8:	8009883a 	mov	r4,r16
  8053bc:	880b883a 	mov	r5,r17
  8053c0:	01800284 	movi	r6,10
  8053c4:	000f883a 	mov	r7,zero
  8053c8:	92000005 	stb	r8,0(r18)
  8053cc:	080bcb00 	call	80bcb0 <__udivdi3>
  8053d0:	1009883a 	mov	r4,r2
  8053d4:	1021883a 	mov	r16,r2
  8053d8:	18800068 	cmpgeui	r2,r3,1
  8053dc:	1823883a 	mov	r17,r3
  8053e0:	103fee1e 	bne	r2,zero,80539c <___vfprintf_internal_r+0x1484>
  8053e4:	1800021e 	bne	r3,zero,8053f0 <___vfprintf_internal_r+0x14d8>
  8053e8:	00800244 	movi	r2,9
  8053ec:	113feb36 	bltu	r2,r4,80539c <___vfprintf_internal_r+0x1484>
  8053f0:	94bfffc4 	addi	r18,r18,-1
  8053f4:	dc814115 	stw	r18,1284(sp)
  8053f8:	003fc006 	br	8052fc <___vfprintf_internal_r+0x13e4>
  8053fc:	d9014c17 	ldw	r4,1328(sp)
  805400:	2080004c 	andi	r2,r4,1
  805404:	10009a1e 	bne	r2,zero,805670 <___vfprintf_internal_r+0x1758>
  805408:	d9401904 	addi	r5,sp,100
  80540c:	dd000f04 	addi	r20,sp,60
  805410:	d9414115 	stw	r5,1284(sp)
  805414:	003d5b06 	br	804984 <___vfprintf_internal_r+0xa6c>
  805418:	d9014f17 	ldw	r4,1340(sp)
  80541c:	b00b883a 	mov	r5,r22
  805420:	d9800c04 	addi	r6,sp,48
  805424:	0803ec00 	call	803ec0 <__sprint_r>
  805428:	103c731e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  80542c:	dc800e17 	ldw	r18,56(sp)
  805430:	d8c01904 	addi	r3,sp,100
  805434:	003cf906 	br	80481c <___vfprintf_internal_r+0x904>
  805438:	d8c14c17 	ldw	r3,1328(sp)
  80543c:	1880040c 	andi	r2,r3,16
  805440:	1000711e 	bne	r2,zero,805608 <___vfprintf_internal_r+0x16f0>
  805444:	d9014c17 	ldw	r4,1328(sp)
  805448:	2080100c 	andi	r2,r4,64
  80544c:	10006e26 	beq	r2,zero,805608 <___vfprintf_internal_r+0x16f0>
  805450:	3c00000b 	ldhu	r16,0(r7)
  805454:	0023883a 	mov	r17,zero
  805458:	39c00104 	addi	r7,r7,4
  80545c:	d9c14015 	stw	r7,1280(sp)
  805460:	003efa06 	br	80504c <___vfprintf_internal_r+0x1134>
  805464:	dc400d17 	ldw	r17,52(sp)
  805468:	07002074 	movhi	fp,129
  80546c:	e7014a84 	addi	fp,fp,1322
  805470:	9425883a 	add	r18,r18,r16
  805474:	8c400044 	addi	r17,r17,1
  805478:	008001c4 	movi	r2,7
  80547c:	1f000015 	stw	fp,0(r3)
  805480:	1c000115 	stw	r16,4(r3)
  805484:	dc800e15 	stw	r18,56(sp)
  805488:	dc400d15 	stw	r17,52(sp)
  80548c:	147d7016 	blt	r2,r17,804a50 <___vfprintf_internal_r+0xb38>
  805490:	18c00204 	addi	r3,r3,8
  805494:	003d7506 	br	804a6c <___vfprintf_internal_r+0xb54>
  805498:	dc800e17 	ldw	r18,56(sp)
  80549c:	dc400d17 	ldw	r17,52(sp)
  8054a0:	07002074 	movhi	fp,129
  8054a4:	e7014e84 	addi	fp,fp,1338
  8054a8:	003bba06 	br	804394 <___vfprintf_internal_r+0x47c>
  8054ac:	d9014f17 	ldw	r4,1340(sp)
  8054b0:	b00b883a 	mov	r5,r22
  8054b4:	d9800c04 	addi	r6,sp,48
  8054b8:	0803ec00 	call	803ec0 <__sprint_r>
  8054bc:	103c4e1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8054c0:	dc800e17 	ldw	r18,56(sp)
  8054c4:	d8c01904 	addi	r3,sp,100
  8054c8:	003ce306 	br	804858 <___vfprintf_internal_r+0x940>
  8054cc:	3c000017 	ldw	r16,0(r7)
  8054d0:	0009883a 	mov	r4,zero
  8054d4:	39c00104 	addi	r7,r7,4
  8054d8:	0023883a 	mov	r17,zero
  8054dc:	d9c14015 	stw	r7,1280(sp)
  8054e0:	d8000405 	stb	zero,16(sp)
  8054e4:	003d1a06 	br	804950 <___vfprintf_internal_r+0xa38>
  8054e8:	38800017 	ldw	r2,0(r7)
  8054ec:	39c00104 	addi	r7,r7,4
  8054f0:	d9c14015 	stw	r7,1280(sp)
  8054f4:	1023d7fa 	srai	r17,r2,31
  8054f8:	1021883a 	mov	r16,r2
  8054fc:	003d1206 	br	804948 <___vfprintf_internal_r+0xa30>
  805500:	3c000017 	ldw	r16,0(r7)
  805504:	01000044 	movi	r4,1
  805508:	39c00104 	addi	r7,r7,4
  80550c:	0023883a 	mov	r17,zero
  805510:	d9c14015 	stw	r7,1280(sp)
  805514:	d8000405 	stb	zero,16(sp)
  805518:	003d0d06 	br	804950 <___vfprintf_internal_r+0xa38>
  80551c:	00802074 	movhi	r2,129
  805520:	10814a04 	addi	r2,r2,1320
  805524:	94800044 	addi	r18,r18,1
  805528:	8c400044 	addi	r17,r17,1
  80552c:	a8800015 	stw	r2,0(r21)
  805530:	00c00044 	movi	r3,1
  805534:	008001c4 	movi	r2,7
  805538:	a8c00115 	stw	r3,4(r21)
  80553c:	dc800e15 	stw	r18,56(sp)
  805540:	dc400d15 	stw	r17,52(sp)
  805544:	1440ca16 	blt	r2,r17,805870 <___vfprintf_internal_r+0x1958>
  805548:	a8c00204 	addi	r3,r21,8
  80554c:	2000061e 	bne	r4,zero,805568 <___vfprintf_internal_r+0x1650>
  805550:	d9414717 	ldw	r5,1308(sp)
  805554:	2800041e 	bne	r5,zero,805568 <___vfprintf_internal_r+0x1650>
  805558:	d9814c17 	ldw	r6,1328(sp)
  80555c:	3080004c 	andi	r2,r6,1
  805560:	1005003a 	cmpeq	r2,r2,zero
  805564:	103bea1e 	bne	r2,zero,804510 <___vfprintf_internal_r+0x5f8>
  805568:	00800044 	movi	r2,1
  80556c:	dc400d17 	ldw	r17,52(sp)
  805570:	18800115 	stw	r2,4(r3)
  805574:	d8814917 	ldw	r2,1316(sp)
  805578:	94800044 	addi	r18,r18,1
  80557c:	8c400044 	addi	r17,r17,1
  805580:	18800015 	stw	r2,0(r3)
  805584:	008001c4 	movi	r2,7
  805588:	dc800e15 	stw	r18,56(sp)
  80558c:	dc400d15 	stw	r17,52(sp)
  805590:	1440ca16 	blt	r2,r17,8058bc <___vfprintf_internal_r+0x19a4>
  805594:	18c00204 	addi	r3,r3,8
  805598:	0121c83a 	sub	r16,zero,r4
  80559c:	0400500e 	bge	zero,r16,8056e0 <___vfprintf_internal_r+0x17c8>
  8055a0:	00800404 	movi	r2,16
  8055a4:	1400800e 	bge	r2,r16,8057a8 <___vfprintf_internal_r+0x1890>
  8055a8:	1027883a 	mov	r19,r2
  8055ac:	07002074 	movhi	fp,129
  8055b0:	e7014a84 	addi	fp,fp,1322
  8055b4:	050001c4 	movi	r20,7
  8055b8:	00000306 	br	8055c8 <___vfprintf_internal_r+0x16b0>
  8055bc:	18c00204 	addi	r3,r3,8
  8055c0:	843ffc04 	addi	r16,r16,-16
  8055c4:	9c007a0e 	bge	r19,r16,8057b0 <___vfprintf_internal_r+0x1898>
  8055c8:	94800404 	addi	r18,r18,16
  8055cc:	8c400044 	addi	r17,r17,1
  8055d0:	1f000015 	stw	fp,0(r3)
  8055d4:	1cc00115 	stw	r19,4(r3)
  8055d8:	dc800e15 	stw	r18,56(sp)
  8055dc:	dc400d15 	stw	r17,52(sp)
  8055e0:	a47ff60e 	bge	r20,r17,8055bc <___vfprintf_internal_r+0x16a4>
  8055e4:	d9014f17 	ldw	r4,1340(sp)
  8055e8:	b00b883a 	mov	r5,r22
  8055ec:	d9800c04 	addi	r6,sp,48
  8055f0:	0803ec00 	call	803ec0 <__sprint_r>
  8055f4:	103c001e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8055f8:	dc800e17 	ldw	r18,56(sp)
  8055fc:	dc400d17 	ldw	r17,52(sp)
  805600:	d8c01904 	addi	r3,sp,100
  805604:	003fee06 	br	8055c0 <___vfprintf_internal_r+0x16a8>
  805608:	3c000017 	ldw	r16,0(r7)
  80560c:	0023883a 	mov	r17,zero
  805610:	39c00104 	addi	r7,r7,4
  805614:	d9c14015 	stw	r7,1280(sp)
  805618:	003e8c06 	br	80504c <___vfprintf_internal_r+0x1134>
  80561c:	d9401904 	addi	r5,sp,100
  805620:	dd000f04 	addi	r20,sp,60
  805624:	d9414115 	stw	r5,1284(sp)
  805628:	d9814417 	ldw	r6,1296(sp)
  80562c:	880a973a 	slli	r5,r17,28
  805630:	8004d13a 	srli	r2,r16,4
  805634:	810003cc 	andi	r4,r16,15
  805638:	3109883a 	add	r4,r6,r4
  80563c:	2884b03a 	or	r2,r5,r2
  805640:	21400003 	ldbu	r5,0(r4)
  805644:	d9014117 	ldw	r4,1284(sp)
  805648:	8806d13a 	srli	r3,r17,4
  80564c:	1021883a 	mov	r16,r2
  805650:	213fffc4 	addi	r4,r4,-1
  805654:	d9014115 	stw	r4,1284(sp)
  805658:	d9814117 	ldw	r6,1284(sp)
  80565c:	10c8b03a 	or	r4,r2,r3
  805660:	1823883a 	mov	r17,r3
  805664:	31400005 	stb	r5,0(r6)
  805668:	203fef1e 	bne	r4,zero,805628 <___vfprintf_internal_r+0x1710>
  80566c:	003cc506 	br	804984 <___vfprintf_internal_r+0xa6c>
  805670:	00800c04 	movi	r2,48
  805674:	d98018c4 	addi	r6,sp,99
  805678:	dd000f04 	addi	r20,sp,60
  80567c:	d88018c5 	stb	r2,99(sp)
  805680:	d9814115 	stw	r6,1284(sp)
  805684:	003cbf06 	br	804984 <___vfprintf_internal_r+0xa6c>
  805688:	dc400d17 	ldw	r17,52(sp)
  80568c:	07002074 	movhi	fp,129
  805690:	e7014e84 	addi	fp,fp,1338
  805694:	003bc106 	br	80459c <___vfprintf_internal_r+0x684>
  805698:	d9414c17 	ldw	r5,1328(sp)
  80569c:	2880040c 	andi	r2,r5,16
  8056a0:	10007c26 	beq	r2,zero,805894 <___vfprintf_internal_r+0x197c>
  8056a4:	38800017 	ldw	r2,0(r7)
  8056a8:	39c00104 	addi	r7,r7,4
  8056ac:	d9c14015 	stw	r7,1280(sp)
  8056b0:	d9814b17 	ldw	r6,1324(sp)
  8056b4:	d9c14017 	ldw	r7,1280(sp)
  8056b8:	11800015 	stw	r6,0(r2)
  8056bc:	003a7206 	br	804088 <___vfprintf_internal_r+0x170>
  8056c0:	d9014f17 	ldw	r4,1340(sp)
  8056c4:	b00b883a 	mov	r5,r22
  8056c8:	d9800c04 	addi	r6,sp,48
  8056cc:	0803ec00 	call	803ec0 <__sprint_r>
  8056d0:	103bc91e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8056d4:	dc800e17 	ldw	r18,56(sp)
  8056d8:	dc400d17 	ldw	r17,52(sp)
  8056dc:	d8c01904 	addi	r3,sp,100
  8056e0:	d9014717 	ldw	r4,1308(sp)
  8056e4:	d9414117 	ldw	r5,1284(sp)
  8056e8:	8c400044 	addi	r17,r17,1
  8056ec:	9125883a 	add	r18,r18,r4
  8056f0:	008001c4 	movi	r2,7
  8056f4:	19400015 	stw	r5,0(r3)
  8056f8:	19000115 	stw	r4,4(r3)
  8056fc:	dc800e15 	stw	r18,56(sp)
  805700:	dc400d15 	stw	r17,52(sp)
  805704:	147ce816 	blt	r2,r17,804aa8 <___vfprintf_internal_r+0xb90>
  805708:	18c00204 	addi	r3,r3,8
  80570c:	003b8006 	br	804510 <___vfprintf_internal_r+0x5f8>
  805710:	38c00017 	ldw	r3,0(r7)
  805714:	39000204 	addi	r4,r7,8
  805718:	d9014015 	stw	r4,1280(sp)
  80571c:	d8c14215 	stw	r3,1288(sp)
  805720:	39c00117 	ldw	r7,4(r7)
  805724:	d9c14315 	stw	r7,1292(sp)
  805728:	003e1a06 	br	804f94 <___vfprintf_internal_r+0x107c>
  80572c:	0005883a 	mov	r2,zero
  805730:	1409c83a 	sub	r4,r2,r16
  805734:	1105803a 	cmpltu	r2,r2,r4
  805738:	044bc83a 	sub	r5,zero,r17
  80573c:	2885c83a 	sub	r2,r5,r2
  805740:	2021883a 	mov	r16,r4
  805744:	1023883a 	mov	r17,r2
  805748:	01000044 	movi	r4,1
  80574c:	00800b44 	movi	r2,45
  805750:	d8800405 	stb	r2,16(sp)
  805754:	003c7e06 	br	804950 <___vfprintf_internal_r+0xa38>
  805758:	d9014f17 	ldw	r4,1340(sp)
  80575c:	b00b883a 	mov	r5,r22
  805760:	d9800c04 	addi	r6,sp,48
  805764:	0803ec00 	call	803ec0 <__sprint_r>
  805768:	103ba31e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  80576c:	dc800e17 	ldw	r18,56(sp)
  805770:	dc400d17 	ldw	r17,52(sp)
  805774:	d9000517 	ldw	r4,20(sp)
  805778:	d9401904 	addi	r5,sp,100
  80577c:	003da106 	br	804e04 <___vfprintf_internal_r+0xeec>
  805780:	d9014f17 	ldw	r4,1340(sp)
  805784:	b00b883a 	mov	r5,r22
  805788:	d9800c04 	addi	r6,sp,48
  80578c:	0803ec00 	call	803ec0 <__sprint_r>
  805790:	103b991e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  805794:	dc800e17 	ldw	r18,56(sp)
  805798:	dc400d17 	ldw	r17,52(sp)
  80579c:	d9000517 	ldw	r4,20(sp)
  8057a0:	d8c01904 	addi	r3,sp,100
  8057a4:	003d8b06 	br	804dd4 <___vfprintf_internal_r+0xebc>
  8057a8:	07002074 	movhi	fp,129
  8057ac:	e7014a84 	addi	fp,fp,1322
  8057b0:	9425883a 	add	r18,r18,r16
  8057b4:	8c400044 	addi	r17,r17,1
  8057b8:	008001c4 	movi	r2,7
  8057bc:	1f000015 	stw	fp,0(r3)
  8057c0:	1c000115 	stw	r16,4(r3)
  8057c4:	dc800e15 	stw	r18,56(sp)
  8057c8:	dc400d15 	stw	r17,52(sp)
  8057cc:	147fbc16 	blt	r2,r17,8056c0 <___vfprintf_internal_r+0x17a8>
  8057d0:	18c00204 	addi	r3,r3,8
  8057d4:	003fc206 	br	8056e0 <___vfprintf_internal_r+0x17c8>
  8057d8:	d9014f17 	ldw	r4,1340(sp)
  8057dc:	b00b883a 	mov	r5,r22
  8057e0:	d9800c04 	addi	r6,sp,48
  8057e4:	0803ec00 	call	803ec0 <__sprint_r>
  8057e8:	103b831e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8057ec:	dc800e17 	ldw	r18,56(sp)
  8057f0:	d9000517 	ldw	r4,20(sp)
  8057f4:	d8c01904 	addi	r3,sp,100
  8057f8:	003cfc06 	br	804bec <___vfprintf_internal_r+0xcd4>
  8057fc:	07002074 	movhi	fp,129
  805800:	e7014a84 	addi	fp,fp,1322
  805804:	003bde06 	br	804780 <___vfprintf_internal_r+0x868>
  805808:	00802074 	movhi	r2,129
  80580c:	10813904 	addi	r2,r2,1252
  805810:	d8814115 	stw	r2,1284(sp)
  805814:	003def06 	br	804fd4 <___vfprintf_internal_r+0x10bc>
  805818:	d9014217 	ldw	r4,1288(sp)
  80581c:	d9414317 	ldw	r5,1292(sp)
  805820:	080b4d40 	call	80b4d4 <__isnand>
  805824:	10003926 	beq	r2,zero,80590c <___vfprintf_internal_r+0x19f4>
  805828:	d9414d17 	ldw	r5,1332(sp)
  80582c:	008011c4 	movi	r2,71
  805830:	1140ce16 	blt	r2,r5,805b6c <___vfprintf_internal_r+0x1c54>
  805834:	01802074 	movhi	r6,129
  805838:	31813a04 	addi	r6,r6,1256
  80583c:	d9814115 	stw	r6,1284(sp)
  805840:	003de406 	br	804fd4 <___vfprintf_internal_r+0x10bc>
  805844:	d9014c17 	ldw	r4,1328(sp)
  805848:	bdc00044 	addi	r23,r23,1
  80584c:	b8c00007 	ldb	r3,0(r23)
  805850:	21000814 	ori	r4,r4,32
  805854:	d9014c15 	stw	r4,1328(sp)
  805858:	003a2e06 	br	804114 <___vfprintf_internal_r+0x1fc>
  80585c:	dcc14515 	stw	r19,1300(sp)
  805860:	98011016 	blt	r19,zero,805ca4 <___vfprintf_internal_r+0x1d8c>
  805864:	980f883a 	mov	r7,r19
  805868:	d8014615 	stw	zero,1304(sp)
  80586c:	003c4c06 	br	8049a0 <___vfprintf_internal_r+0xa88>
  805870:	d9014f17 	ldw	r4,1340(sp)
  805874:	b00b883a 	mov	r5,r22
  805878:	d9800c04 	addi	r6,sp,48
  80587c:	0803ec00 	call	803ec0 <__sprint_r>
  805880:	103b5d1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  805884:	dc800e17 	ldw	r18,56(sp)
  805888:	d9000517 	ldw	r4,20(sp)
  80588c:	d8c01904 	addi	r3,sp,100
  805890:	003f2e06 	br	80554c <___vfprintf_internal_r+0x1634>
  805894:	d8c14c17 	ldw	r3,1328(sp)
  805898:	1880100c 	andi	r2,r3,64
  80589c:	1000a026 	beq	r2,zero,805b20 <___vfprintf_internal_r+0x1c08>
  8058a0:	38800017 	ldw	r2,0(r7)
  8058a4:	39c00104 	addi	r7,r7,4
  8058a8:	d9c14015 	stw	r7,1280(sp)
  8058ac:	d9014b17 	ldw	r4,1324(sp)
  8058b0:	d9c14017 	ldw	r7,1280(sp)
  8058b4:	1100000d 	sth	r4,0(r2)
  8058b8:	0039f306 	br	804088 <___vfprintf_internal_r+0x170>
  8058bc:	d9014f17 	ldw	r4,1340(sp)
  8058c0:	b00b883a 	mov	r5,r22
  8058c4:	d9800c04 	addi	r6,sp,48
  8058c8:	0803ec00 	call	803ec0 <__sprint_r>
  8058cc:	103b4a1e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  8058d0:	dc800e17 	ldw	r18,56(sp)
  8058d4:	dc400d17 	ldw	r17,52(sp)
  8058d8:	d9000517 	ldw	r4,20(sp)
  8058dc:	d8c01904 	addi	r3,sp,100
  8058e0:	003f2d06 	br	805598 <___vfprintf_internal_r+0x1680>
  8058e4:	00800184 	movi	r2,6
  8058e8:	14c09a36 	bltu	r2,r19,805b54 <___vfprintf_internal_r+0x1c3c>
  8058ec:	dcc14515 	stw	r19,1300(sp)
  8058f0:	9800010e 	bge	r19,zero,8058f8 <___vfprintf_internal_r+0x19e0>
  8058f4:	d8014515 	stw	zero,1300(sp)
  8058f8:	00802074 	movhi	r2,129
  8058fc:	10813c04 	addi	r2,r2,1264
  805900:	980f883a 	mov	r7,r19
  805904:	d8814115 	stw	r2,1284(sp)
  805908:	003a7206 	br	8042d4 <___vfprintf_internal_r+0x3bc>
  80590c:	00bfffc4 	movi	r2,-1
  805910:	9880e226 	beq	r19,r2,805c9c <___vfprintf_internal_r+0x1d84>
  805914:	d9414d17 	ldw	r5,1332(sp)
  805918:	008019c4 	movi	r2,103
  80591c:	2880dc26 	beq	r5,r2,805c90 <___vfprintf_internal_r+0x1d78>
  805920:	008011c4 	movi	r2,71
  805924:	2880da26 	beq	r5,r2,805c90 <___vfprintf_internal_r+0x1d78>
  805928:	d9414c17 	ldw	r5,1328(sp)
  80592c:	d9014317 	ldw	r4,1292(sp)
  805930:	d9814217 	ldw	r6,1288(sp)
  805934:	29404014 	ori	r5,r5,256
  805938:	d9414c15 	stw	r5,1328(sp)
  80593c:	2000cc16 	blt	r4,zero,805c70 <___vfprintf_internal_r+0x1d58>
  805940:	3021883a 	mov	r16,r6
  805944:	2023883a 	mov	r17,r4
  805948:	0039883a 	mov	fp,zero
  80594c:	d9414d17 	ldw	r5,1332(sp)
  805950:	00801984 	movi	r2,102
  805954:	2880b726 	beq	r5,r2,805c34 <___vfprintf_internal_r+0x1d1c>
  805958:	00801184 	movi	r2,70
  80595c:	2880b526 	beq	r5,r2,805c34 <___vfprintf_internal_r+0x1d1c>
  805960:	00801944 	movi	r2,101
  805964:	2880c826 	beq	r5,r2,805c88 <___vfprintf_internal_r+0x1d70>
  805968:	00801144 	movi	r2,69
  80596c:	2880c626 	beq	r5,r2,805c88 <___vfprintf_internal_r+0x1d70>
  805970:	9829883a 	mov	r20,r19
  805974:	d9014f17 	ldw	r4,1340(sp)
  805978:	d8800504 	addi	r2,sp,20
  80597c:	880d883a 	mov	r6,r17
  805980:	d8800115 	stw	r2,4(sp)
  805984:	d8c00604 	addi	r3,sp,24
  805988:	d8800704 	addi	r2,sp,28
  80598c:	800b883a 	mov	r5,r16
  805990:	01c00084 	movi	r7,2
  805994:	d8c00215 	stw	r3,8(sp)
  805998:	d8800315 	stw	r2,12(sp)
  80599c:	dd000015 	stw	r20,0(sp)
  8059a0:	08061800 	call	806180 <_dtoa_r>
  8059a4:	d9814d17 	ldw	r6,1332(sp)
  8059a8:	d8814115 	stw	r2,1284(sp)
  8059ac:	008019c4 	movi	r2,103
  8059b0:	30809526 	beq	r6,r2,805c08 <___vfprintf_internal_r+0x1cf0>
  8059b4:	d8c14d17 	ldw	r3,1332(sp)
  8059b8:	008011c4 	movi	r2,71
  8059bc:	18809226 	beq	r3,r2,805c08 <___vfprintf_internal_r+0x1cf0>
  8059c0:	d9414117 	ldw	r5,1284(sp)
  8059c4:	d9814d17 	ldw	r6,1332(sp)
  8059c8:	00801984 	movi	r2,102
  8059cc:	2d25883a 	add	r18,r5,r20
  8059d0:	30808626 	beq	r6,r2,805bec <___vfprintf_internal_r+0x1cd4>
  8059d4:	00801184 	movi	r2,70
  8059d8:	30808426 	beq	r6,r2,805bec <___vfprintf_internal_r+0x1cd4>
  8059dc:	000d883a 	mov	r6,zero
  8059e0:	000f883a 	mov	r7,zero
  8059e4:	880b883a 	mov	r5,r17
  8059e8:	8009883a 	mov	r4,r16
  8059ec:	080cbd40 	call	80cbd4 <__eqdf2>
  8059f0:	1000751e 	bne	r2,zero,805bc8 <___vfprintf_internal_r+0x1cb0>
  8059f4:	9005883a 	mov	r2,r18
  8059f8:	dc800715 	stw	r18,28(sp)
  8059fc:	d9014117 	ldw	r4,1284(sp)
  805a00:	d9414d17 	ldw	r5,1332(sp)
  805a04:	00c019c4 	movi	r3,103
  805a08:	1125c83a 	sub	r18,r2,r4
  805a0c:	28c06826 	beq	r5,r3,805bb0 <___vfprintf_internal_r+0x1c98>
  805a10:	008011c4 	movi	r2,71
  805a14:	28806626 	beq	r5,r2,805bb0 <___vfprintf_internal_r+0x1c98>
  805a18:	d9000517 	ldw	r4,20(sp)
  805a1c:	d8c14d17 	ldw	r3,1332(sp)
  805a20:	00801944 	movi	r2,101
  805a24:	10c05516 	blt	r2,r3,805b7c <___vfprintf_internal_r+0x1c64>
  805a28:	213fffc4 	addi	r4,r4,-1
  805a2c:	d9000515 	stw	r4,20(sp)
  805a30:	d8c00805 	stb	r3,32(sp)
  805a34:	2021883a 	mov	r16,r4
  805a38:	2000c116 	blt	r4,zero,805d40 <___vfprintf_internal_r+0x1e28>
  805a3c:	00800ac4 	movi	r2,43
  805a40:	d8800845 	stb	r2,33(sp)
  805a44:	00800244 	movi	r2,9
  805a48:	1400af0e 	bge	r2,r16,805d08 <___vfprintf_internal_r+0x1df0>
  805a4c:	1027883a 	mov	r19,r2
  805a50:	dc400b84 	addi	r17,sp,46
  805a54:	8009883a 	mov	r4,r16
  805a58:	01400284 	movi	r5,10
  805a5c:	080d1b00 	call	80d1b0 <__modsi3>
  805a60:	10800c04 	addi	r2,r2,48
  805a64:	8c7fffc4 	addi	r17,r17,-1
  805a68:	8009883a 	mov	r4,r16
  805a6c:	01400284 	movi	r5,10
  805a70:	88800005 	stb	r2,0(r17)
  805a74:	080d1500 	call	80d150 <__divsi3>
  805a78:	1021883a 	mov	r16,r2
  805a7c:	98bff516 	blt	r19,r2,805a54 <___vfprintf_internal_r+0x1b3c>
  805a80:	10c00c04 	addi	r3,r2,48
  805a84:	d88009c4 	addi	r2,sp,39
  805a88:	108001c4 	addi	r2,r2,7
  805a8c:	897fffc4 	addi	r5,r17,-1
  805a90:	88ffffc5 	stb	r3,-1(r17)
  805a94:	2880a72e 	bgeu	r5,r2,805d34 <___vfprintf_internal_r+0x1e1c>
  805a98:	1009883a 	mov	r4,r2
  805a9c:	d9800804 	addi	r6,sp,32
  805aa0:	d8c00884 	addi	r3,sp,34
  805aa4:	28800003 	ldbu	r2,0(r5)
  805aa8:	29400044 	addi	r5,r5,1
  805aac:	18800005 	stb	r2,0(r3)
  805ab0:	18c00044 	addi	r3,r3,1
  805ab4:	293ffb36 	bltu	r5,r4,805aa4 <___vfprintf_internal_r+0x1b8c>
  805ab8:	1987c83a 	sub	r3,r3,r6
  805abc:	00800044 	movi	r2,1
  805ac0:	d8c14815 	stw	r3,1312(sp)
  805ac4:	90cf883a 	add	r7,r18,r3
  805ac8:	1480960e 	bge	r2,r18,805d24 <___vfprintf_internal_r+0x1e0c>
  805acc:	39c00044 	addi	r7,r7,1
  805ad0:	d9c14515 	stw	r7,1300(sp)
  805ad4:	38003416 	blt	r7,zero,805ba8 <___vfprintf_internal_r+0x1c90>
  805ad8:	e0803fcc 	andi	r2,fp,255
  805adc:	1080201c 	xori	r2,r2,128
  805ae0:	10bfe004 	addi	r2,r2,-128
  805ae4:	10004e26 	beq	r2,zero,805c20 <___vfprintf_internal_r+0x1d08>
  805ae8:	00800b44 	movi	r2,45
  805aec:	dc814715 	stw	r18,1308(sp)
  805af0:	d8014615 	stw	zero,1304(sp)
  805af4:	d8800405 	stb	r2,16(sp)
  805af8:	003bab06 	br	8049a8 <___vfprintf_internal_r+0xa90>
  805afc:	00800b44 	movi	r2,45
  805b00:	d8800405 	stb	r2,16(sp)
  805b04:	003d2d06 	br	804fbc <___vfprintf_internal_r+0x10a4>
  805b08:	d9014f17 	ldw	r4,1340(sp)
  805b0c:	b00b883a 	mov	r5,r22
  805b10:	d9800c04 	addi	r6,sp,48
  805b14:	0803ec00 	call	803ec0 <__sprint_r>
  805b18:	103ab71e 	bne	r2,zero,8045f8 <___vfprintf_internal_r+0x6e0>
  805b1c:	003ab506 	br	8045f4 <___vfprintf_internal_r+0x6dc>
  805b20:	38800017 	ldw	r2,0(r7)
  805b24:	39c00104 	addi	r7,r7,4
  805b28:	d9c14015 	stw	r7,1280(sp)
  805b2c:	d9414b17 	ldw	r5,1324(sp)
  805b30:	d9c14017 	ldw	r7,1280(sp)
  805b34:	11400015 	stw	r5,0(r2)
  805b38:	00395306 	br	804088 <___vfprintf_internal_r+0x170>
  805b3c:	980f883a 	mov	r7,r19
  805b40:	dcc14515 	stw	r19,1300(sp)
  805b44:	d8014615 	stw	zero,1304(sp)
  805b48:	003b9506 	br	8049a0 <___vfprintf_internal_r+0xa88>
  805b4c:	0027883a 	mov	r19,zero
  805b50:	00397206 	br	80411c <___vfprintf_internal_r+0x204>
  805b54:	00c02074 	movhi	r3,129
  805b58:	18c13c04 	addi	r3,r3,1264
  805b5c:	100f883a 	mov	r7,r2
  805b60:	d8814515 	stw	r2,1300(sp)
  805b64:	d8c14115 	stw	r3,1284(sp)
  805b68:	0039da06 	br	8042d4 <___vfprintf_internal_r+0x3bc>
  805b6c:	00802074 	movhi	r2,129
  805b70:	10813b04 	addi	r2,r2,1260
  805b74:	d8814115 	stw	r2,1284(sp)
  805b78:	003d1606 	br	804fd4 <___vfprintf_internal_r+0x10bc>
  805b7c:	d9414d17 	ldw	r5,1332(sp)
  805b80:	00801984 	movi	r2,102
  805b84:	28804926 	beq	r5,r2,805cac <___vfprintf_internal_r+0x1d94>
  805b88:	200f883a 	mov	r7,r4
  805b8c:	24805716 	blt	r4,r18,805cec <___vfprintf_internal_r+0x1dd4>
  805b90:	d9414c17 	ldw	r5,1328(sp)
  805b94:	2880004c 	andi	r2,r5,1
  805b98:	10000126 	beq	r2,zero,805ba0 <___vfprintf_internal_r+0x1c88>
  805b9c:	21c00044 	addi	r7,r4,1
  805ba0:	d9c14515 	stw	r7,1300(sp)
  805ba4:	383fcc0e 	bge	r7,zero,805ad8 <___vfprintf_internal_r+0x1bc0>
  805ba8:	d8014515 	stw	zero,1300(sp)
  805bac:	003fca06 	br	805ad8 <___vfprintf_internal_r+0x1bc0>
  805bb0:	d9000517 	ldw	r4,20(sp)
  805bb4:	00bfff04 	movi	r2,-4
  805bb8:	1100480e 	bge	r2,r4,805cdc <___vfprintf_internal_r+0x1dc4>
  805bbc:	99004716 	blt	r19,r4,805cdc <___vfprintf_internal_r+0x1dc4>
  805bc0:	d8c14d15 	stw	r3,1332(sp)
  805bc4:	003ff006 	br	805b88 <___vfprintf_internal_r+0x1c70>
  805bc8:	d8800717 	ldw	r2,28(sp)
  805bcc:	14bf8b2e 	bgeu	r2,r18,8059fc <___vfprintf_internal_r+0x1ae4>
  805bd0:	9007883a 	mov	r3,r18
  805bd4:	01000c04 	movi	r4,48
  805bd8:	11000005 	stb	r4,0(r2)
  805bdc:	10800044 	addi	r2,r2,1
  805be0:	d8800715 	stw	r2,28(sp)
  805be4:	18bffc1e 	bne	r3,r2,805bd8 <___vfprintf_internal_r+0x1cc0>
  805be8:	003f8406 	br	8059fc <___vfprintf_internal_r+0x1ae4>
  805bec:	d8814117 	ldw	r2,1284(sp)
  805bf0:	10c00007 	ldb	r3,0(r2)
  805bf4:	00800c04 	movi	r2,48
  805bf8:	18805b26 	beq	r3,r2,805d68 <___vfprintf_internal_r+0x1e50>
  805bfc:	d9000517 	ldw	r4,20(sp)
  805c00:	9125883a 	add	r18,r18,r4
  805c04:	003f7506 	br	8059dc <___vfprintf_internal_r+0x1ac4>
  805c08:	d9014c17 	ldw	r4,1328(sp)
  805c0c:	2080004c 	andi	r2,r4,1
  805c10:	1005003a 	cmpeq	r2,r2,zero
  805c14:	103f6a26 	beq	r2,zero,8059c0 <___vfprintf_internal_r+0x1aa8>
  805c18:	d8800717 	ldw	r2,28(sp)
  805c1c:	003f7706 	br	8059fc <___vfprintf_internal_r+0x1ae4>
  805c20:	d9c14515 	stw	r7,1300(sp)
  805c24:	38004d16 	blt	r7,zero,805d5c <___vfprintf_internal_r+0x1e44>
  805c28:	dc814715 	stw	r18,1308(sp)
  805c2c:	d8014615 	stw	zero,1304(sp)
  805c30:	003b5b06 	br	8049a0 <___vfprintf_internal_r+0xa88>
  805c34:	d9014f17 	ldw	r4,1340(sp)
  805c38:	d8800504 	addi	r2,sp,20
  805c3c:	d8800115 	stw	r2,4(sp)
  805c40:	d8c00604 	addi	r3,sp,24
  805c44:	d8800704 	addi	r2,sp,28
  805c48:	800b883a 	mov	r5,r16
  805c4c:	880d883a 	mov	r6,r17
  805c50:	01c000c4 	movi	r7,3
  805c54:	d8c00215 	stw	r3,8(sp)
  805c58:	d8800315 	stw	r2,12(sp)
  805c5c:	dcc00015 	stw	r19,0(sp)
  805c60:	9829883a 	mov	r20,r19
  805c64:	08061800 	call	806180 <_dtoa_r>
  805c68:	d8814115 	stw	r2,1284(sp)
  805c6c:	003f5106 	br	8059b4 <___vfprintf_internal_r+0x1a9c>
  805c70:	d8c14217 	ldw	r3,1288(sp)
  805c74:	d9014317 	ldw	r4,1292(sp)
  805c78:	07000b44 	movi	fp,45
  805c7c:	1821883a 	mov	r16,r3
  805c80:	2460003c 	xorhi	r17,r4,32768
  805c84:	003f3106 	br	80594c <___vfprintf_internal_r+0x1a34>
  805c88:	9d000044 	addi	r20,r19,1
  805c8c:	003f3906 	br	805974 <___vfprintf_internal_r+0x1a5c>
  805c90:	983f251e 	bne	r19,zero,805928 <___vfprintf_internal_r+0x1a10>
  805c94:	04c00044 	movi	r19,1
  805c98:	003f2306 	br	805928 <___vfprintf_internal_r+0x1a10>
  805c9c:	04c00184 	movi	r19,6
  805ca0:	003f2106 	br	805928 <___vfprintf_internal_r+0x1a10>
  805ca4:	d8014515 	stw	zero,1300(sp)
  805ca8:	003eee06 	br	805864 <___vfprintf_internal_r+0x194c>
  805cac:	200f883a 	mov	r7,r4
  805cb0:	0100370e 	bge	zero,r4,805d90 <___vfprintf_internal_r+0x1e78>
  805cb4:	9800031e 	bne	r19,zero,805cc4 <___vfprintf_internal_r+0x1dac>
  805cb8:	d9814c17 	ldw	r6,1328(sp)
  805cbc:	3080004c 	andi	r2,r6,1
  805cc0:	103fb726 	beq	r2,zero,805ba0 <___vfprintf_internal_r+0x1c88>
  805cc4:	20800044 	addi	r2,r4,1
  805cc8:	98a7883a 	add	r19,r19,r2
  805ccc:	dcc14515 	stw	r19,1300(sp)
  805cd0:	980f883a 	mov	r7,r19
  805cd4:	983f800e 	bge	r19,zero,805ad8 <___vfprintf_internal_r+0x1bc0>
  805cd8:	003fb306 	br	805ba8 <___vfprintf_internal_r+0x1c90>
  805cdc:	d9814d17 	ldw	r6,1332(sp)
  805ce0:	31bfff84 	addi	r6,r6,-2
  805ce4:	d9814d15 	stw	r6,1332(sp)
  805ce8:	003f4c06 	br	805a1c <___vfprintf_internal_r+0x1b04>
  805cec:	0100180e 	bge	zero,r4,805d50 <___vfprintf_internal_r+0x1e38>
  805cf0:	00800044 	movi	r2,1
  805cf4:	1485883a 	add	r2,r2,r18
  805cf8:	d8814515 	stw	r2,1300(sp)
  805cfc:	100f883a 	mov	r7,r2
  805d00:	103f750e 	bge	r2,zero,805ad8 <___vfprintf_internal_r+0x1bc0>
  805d04:	003fa806 	br	805ba8 <___vfprintf_internal_r+0x1c90>
  805d08:	80c00c04 	addi	r3,r16,48
  805d0c:	00800c04 	movi	r2,48
  805d10:	d8c008c5 	stb	r3,35(sp)
  805d14:	d9800804 	addi	r6,sp,32
  805d18:	d8c00904 	addi	r3,sp,36
  805d1c:	d8800885 	stb	r2,34(sp)
  805d20:	003f6506 	br	805ab8 <___vfprintf_internal_r+0x1ba0>
  805d24:	d9014c17 	ldw	r4,1328(sp)
  805d28:	2084703a 	and	r2,r4,r2
  805d2c:	103f9c26 	beq	r2,zero,805ba0 <___vfprintf_internal_r+0x1c88>
  805d30:	003f6606 	br	805acc <___vfprintf_internal_r+0x1bb4>
  805d34:	d9800804 	addi	r6,sp,32
  805d38:	d8c00884 	addi	r3,sp,34
  805d3c:	003f5e06 	br	805ab8 <___vfprintf_internal_r+0x1ba0>
  805d40:	00800b44 	movi	r2,45
  805d44:	0121c83a 	sub	r16,zero,r4
  805d48:	d8800845 	stb	r2,33(sp)
  805d4c:	003f3d06 	br	805a44 <___vfprintf_internal_r+0x1b2c>
  805d50:	00800084 	movi	r2,2
  805d54:	1105c83a 	sub	r2,r2,r4
  805d58:	003fe606 	br	805cf4 <___vfprintf_internal_r+0x1ddc>
  805d5c:	d8014515 	stw	zero,1300(sp)
  805d60:	dc814715 	stw	r18,1308(sp)
  805d64:	003fb106 	br	805c2c <___vfprintf_internal_r+0x1d14>
  805d68:	000d883a 	mov	r6,zero
  805d6c:	000f883a 	mov	r7,zero
  805d70:	8009883a 	mov	r4,r16
  805d74:	880b883a 	mov	r5,r17
  805d78:	080cc5c0 	call	80cc5c <__nedf2>
  805d7c:	103f9f26 	beq	r2,zero,805bfc <___vfprintf_internal_r+0x1ce4>
  805d80:	00800044 	movi	r2,1
  805d84:	1509c83a 	sub	r4,r2,r20
  805d88:	d9000515 	stw	r4,20(sp)
  805d8c:	003f9b06 	br	805bfc <___vfprintf_internal_r+0x1ce4>
  805d90:	98000d1e 	bne	r19,zero,805dc8 <___vfprintf_internal_r+0x1eb0>
  805d94:	d8c14c17 	ldw	r3,1328(sp)
  805d98:	1880004c 	andi	r2,r3,1
  805d9c:	10000a1e 	bne	r2,zero,805dc8 <___vfprintf_internal_r+0x1eb0>
  805da0:	01000044 	movi	r4,1
  805da4:	200f883a 	mov	r7,r4
  805da8:	d9014515 	stw	r4,1300(sp)
  805dac:	003f4a06 	br	805ad8 <___vfprintf_internal_r+0x1bc0>
  805db0:	3cc00017 	ldw	r19,0(r7)
  805db4:	39c00104 	addi	r7,r7,4
  805db8:	983d0e0e 	bge	r19,zero,8051f4 <___vfprintf_internal_r+0x12dc>
  805dbc:	b8c00007 	ldb	r3,0(r23)
  805dc0:	04ffffc4 	movi	r19,-1
  805dc4:	0038d306 	br	804114 <___vfprintf_internal_r+0x1fc>
  805dc8:	9cc00084 	addi	r19,r19,2
  805dcc:	dcc14515 	stw	r19,1300(sp)
  805dd0:	980f883a 	mov	r7,r19
  805dd4:	983f400e 	bge	r19,zero,805ad8 <___vfprintf_internal_r+0x1bc0>
  805dd8:	003f7306 	br	805ba8 <___vfprintf_internal_r+0x1c90>

00805ddc <__vfprintf_internal>:
  805ddc:	00802074 	movhi	r2,129
  805de0:	10884204 	addi	r2,r2,8456
  805de4:	2013883a 	mov	r9,r4
  805de8:	11000017 	ldw	r4,0(r2)
  805dec:	2805883a 	mov	r2,r5
  805df0:	300f883a 	mov	r7,r6
  805df4:	480b883a 	mov	r5,r9
  805df8:	100d883a 	mov	r6,r2
  805dfc:	0803f181 	jmpi	803f18 <___vfprintf_internal_r>

00805e00 <__swsetup_r>:
  805e00:	00802074 	movhi	r2,129
  805e04:	10884204 	addi	r2,r2,8456
  805e08:	10c00017 	ldw	r3,0(r2)
  805e0c:	defffd04 	addi	sp,sp,-12
  805e10:	dc400115 	stw	r17,4(sp)
  805e14:	dc000015 	stw	r16,0(sp)
  805e18:	dfc00215 	stw	ra,8(sp)
  805e1c:	2023883a 	mov	r17,r4
  805e20:	2821883a 	mov	r16,r5
  805e24:	18000226 	beq	r3,zero,805e30 <__swsetup_r+0x30>
  805e28:	18800e17 	ldw	r2,56(r3)
  805e2c:	10001f26 	beq	r2,zero,805eac <__swsetup_r+0xac>
  805e30:	8100030b 	ldhu	r4,12(r16)
  805e34:	2080020c 	andi	r2,r4,8
  805e38:	10002826 	beq	r2,zero,805edc <__swsetup_r+0xdc>
  805e3c:	81400417 	ldw	r5,16(r16)
  805e40:	28001d26 	beq	r5,zero,805eb8 <__swsetup_r+0xb8>
  805e44:	2080004c 	andi	r2,r4,1
  805e48:	1005003a 	cmpeq	r2,r2,zero
  805e4c:	10000b26 	beq	r2,zero,805e7c <__swsetup_r+0x7c>
  805e50:	2080008c 	andi	r2,r4,2
  805e54:	10001226 	beq	r2,zero,805ea0 <__swsetup_r+0xa0>
  805e58:	0005883a 	mov	r2,zero
  805e5c:	80800215 	stw	r2,8(r16)
  805e60:	28000b26 	beq	r5,zero,805e90 <__swsetup_r+0x90>
  805e64:	0005883a 	mov	r2,zero
  805e68:	dfc00217 	ldw	ra,8(sp)
  805e6c:	dc400117 	ldw	r17,4(sp)
  805e70:	dc000017 	ldw	r16,0(sp)
  805e74:	dec00304 	addi	sp,sp,12
  805e78:	f800283a 	ret
  805e7c:	80800517 	ldw	r2,20(r16)
  805e80:	80000215 	stw	zero,8(r16)
  805e84:	0085c83a 	sub	r2,zero,r2
  805e88:	80800615 	stw	r2,24(r16)
  805e8c:	283ff51e 	bne	r5,zero,805e64 <__swsetup_r+0x64>
  805e90:	2080200c 	andi	r2,r4,128
  805e94:	103ff326 	beq	r2,zero,805e64 <__swsetup_r+0x64>
  805e98:	00bfffc4 	movi	r2,-1
  805e9c:	003ff206 	br	805e68 <__swsetup_r+0x68>
  805ea0:	80800517 	ldw	r2,20(r16)
  805ea4:	80800215 	stw	r2,8(r16)
  805ea8:	003fed06 	br	805e60 <__swsetup_r+0x60>
  805eac:	1809883a 	mov	r4,r3
  805eb0:	08084980 	call	808498 <__sinit>
  805eb4:	003fde06 	br	805e30 <__swsetup_r+0x30>
  805eb8:	20c0a00c 	andi	r3,r4,640
  805ebc:	00808004 	movi	r2,512
  805ec0:	18bfe026 	beq	r3,r2,805e44 <__swsetup_r+0x44>
  805ec4:	8809883a 	mov	r4,r17
  805ec8:	800b883a 	mov	r5,r16
  805ecc:	08092440 	call	809244 <__smakebuf_r>
  805ed0:	8100030b 	ldhu	r4,12(r16)
  805ed4:	81400417 	ldw	r5,16(r16)
  805ed8:	003fda06 	br	805e44 <__swsetup_r+0x44>
  805edc:	2080040c 	andi	r2,r4,16
  805ee0:	103fed26 	beq	r2,zero,805e98 <__swsetup_r+0x98>
  805ee4:	2080010c 	andi	r2,r4,4
  805ee8:	10001226 	beq	r2,zero,805f34 <__swsetup_r+0x134>
  805eec:	81400c17 	ldw	r5,48(r16)
  805ef0:	28000526 	beq	r5,zero,805f08 <__swsetup_r+0x108>
  805ef4:	80801004 	addi	r2,r16,64
  805ef8:	28800226 	beq	r5,r2,805f04 <__swsetup_r+0x104>
  805efc:	8809883a 	mov	r4,r17
  805f00:	08088500 	call	808850 <_free_r>
  805f04:	80000c15 	stw	zero,48(r16)
  805f08:	8080030b 	ldhu	r2,12(r16)
  805f0c:	81400417 	ldw	r5,16(r16)
  805f10:	80000115 	stw	zero,4(r16)
  805f14:	10bff6cc 	andi	r2,r2,65499
  805f18:	8080030d 	sth	r2,12(r16)
  805f1c:	81400015 	stw	r5,0(r16)
  805f20:	8080030b 	ldhu	r2,12(r16)
  805f24:	10800214 	ori	r2,r2,8
  805f28:	113fffcc 	andi	r4,r2,65535
  805f2c:	8080030d 	sth	r2,12(r16)
  805f30:	003fc306 	br	805e40 <__swsetup_r+0x40>
  805f34:	81400417 	ldw	r5,16(r16)
  805f38:	003ff906 	br	805f20 <__swsetup_r+0x120>

00805f3c <quorem>:
  805f3c:	28c00417 	ldw	r3,16(r5)
  805f40:	20800417 	ldw	r2,16(r4)
  805f44:	defff104 	addi	sp,sp,-60
  805f48:	dfc00e15 	stw	ra,56(sp)
  805f4c:	df000d15 	stw	fp,52(sp)
  805f50:	ddc00c15 	stw	r23,48(sp)
  805f54:	dd800b15 	stw	r22,44(sp)
  805f58:	dd400a15 	stw	r21,40(sp)
  805f5c:	dd000915 	stw	r20,36(sp)
  805f60:	dcc00815 	stw	r19,32(sp)
  805f64:	dc800715 	stw	r18,28(sp)
  805f68:	dc400615 	stw	r17,24(sp)
  805f6c:	dc000515 	stw	r16,20(sp)
  805f70:	d9000315 	stw	r4,12(sp)
  805f74:	d9400415 	stw	r5,16(sp)
  805f78:	10c07f16 	blt	r2,r3,806178 <quorem+0x23c>
  805f7c:	1d3fffc4 	addi	r20,r3,-1
  805f80:	d8c00417 	ldw	r3,16(sp)
  805f84:	d9000317 	ldw	r4,12(sp)
  805f88:	a505883a 	add	r2,r20,r20
  805f8c:	1085883a 	add	r2,r2,r2
  805f90:	1cc00504 	addi	r19,r3,20
  805f94:	25c00504 	addi	r23,r4,20
  805f98:	98ad883a 	add	r22,r19,r2
  805f9c:	15c7883a 	add	r3,r2,r23
  805fa0:	b1400017 	ldw	r5,0(r22)
  805fa4:	19000017 	ldw	r4,0(r3)
  805fa8:	d8c00015 	stw	r3,0(sp)
  805fac:	29400044 	addi	r5,r5,1
  805fb0:	d9000215 	stw	r4,8(sp)
  805fb4:	080d2100 	call	80d210 <__udivsi3>
  805fb8:	1039883a 	mov	fp,r2
  805fbc:	10003d1e 	bne	r2,zero,8060b4 <quorem+0x178>
  805fc0:	d9400417 	ldw	r5,16(sp)
  805fc4:	d9000317 	ldw	r4,12(sp)
  805fc8:	0809f700 	call	809f70 <__mcmp>
  805fcc:	10002c16 	blt	r2,zero,806080 <quorem+0x144>
  805fd0:	e7000044 	addi	fp,fp,1
  805fd4:	b80f883a 	mov	r7,r23
  805fd8:	0011883a 	mov	r8,zero
  805fdc:	0009883a 	mov	r4,zero
  805fe0:	99400017 	ldw	r5,0(r19)
  805fe4:	38c00017 	ldw	r3,0(r7)
  805fe8:	9cc00104 	addi	r19,r19,4
  805fec:	28bfffcc 	andi	r2,r5,65535
  805ff0:	2085883a 	add	r2,r4,r2
  805ff4:	11bfffcc 	andi	r6,r2,65535
  805ff8:	193fffcc 	andi	r4,r3,65535
  805ffc:	1004d43a 	srli	r2,r2,16
  806000:	280ad43a 	srli	r5,r5,16
  806004:	2189c83a 	sub	r4,r4,r6
  806008:	2209883a 	add	r4,r4,r8
  80600c:	1806d43a 	srli	r3,r3,16
  806010:	288b883a 	add	r5,r5,r2
  806014:	200dd43a 	srai	r6,r4,16
  806018:	28bfffcc 	andi	r2,r5,65535
  80601c:	1887c83a 	sub	r3,r3,r2
  806020:	1987883a 	add	r3,r3,r6
  806024:	3900000d 	sth	r4,0(r7)
  806028:	38c0008d 	sth	r3,2(r7)
  80602c:	2808d43a 	srli	r4,r5,16
  806030:	39c00104 	addi	r7,r7,4
  806034:	1811d43a 	srai	r8,r3,16
  806038:	b4ffe92e 	bgeu	r22,r19,805fe0 <quorem+0xa4>
  80603c:	a505883a 	add	r2,r20,r20
  806040:	1085883a 	add	r2,r2,r2
  806044:	b885883a 	add	r2,r23,r2
  806048:	10c00017 	ldw	r3,0(r2)
  80604c:	18000c1e 	bne	r3,zero,806080 <quorem+0x144>
  806050:	113fff04 	addi	r4,r2,-4
  806054:	b900082e 	bgeu	r23,r4,806078 <quorem+0x13c>
  806058:	10bfff17 	ldw	r2,-4(r2)
  80605c:	10000326 	beq	r2,zero,80606c <quorem+0x130>
  806060:	00000506 	br	806078 <quorem+0x13c>
  806064:	20800017 	ldw	r2,0(r4)
  806068:	1000031e 	bne	r2,zero,806078 <quorem+0x13c>
  80606c:	213fff04 	addi	r4,r4,-4
  806070:	a53fffc4 	addi	r20,r20,-1
  806074:	b93ffb36 	bltu	r23,r4,806064 <quorem+0x128>
  806078:	d9000317 	ldw	r4,12(sp)
  80607c:	25000415 	stw	r20,16(r4)
  806080:	e005883a 	mov	r2,fp
  806084:	dfc00e17 	ldw	ra,56(sp)
  806088:	df000d17 	ldw	fp,52(sp)
  80608c:	ddc00c17 	ldw	r23,48(sp)
  806090:	dd800b17 	ldw	r22,44(sp)
  806094:	dd400a17 	ldw	r21,40(sp)
  806098:	dd000917 	ldw	r20,36(sp)
  80609c:	dcc00817 	ldw	r19,32(sp)
  8060a0:	dc800717 	ldw	r18,28(sp)
  8060a4:	dc400617 	ldw	r17,24(sp)
  8060a8:	dc000517 	ldw	r16,20(sp)
  8060ac:	dec00f04 	addi	sp,sp,60
  8060b0:	f800283a 	ret
  8060b4:	b823883a 	mov	r17,r23
  8060b8:	9825883a 	mov	r18,r19
  8060bc:	d8000115 	stw	zero,4(sp)
  8060c0:	002b883a 	mov	r21,zero
  8060c4:	94000017 	ldw	r16,0(r18)
  8060c8:	e009883a 	mov	r4,fp
  8060cc:	94800104 	addi	r18,r18,4
  8060d0:	817fffcc 	andi	r5,r16,65535
  8060d4:	08032000 	call	803200 <__mulsi3>
  8060d8:	800ad43a 	srli	r5,r16,16
  8060dc:	e009883a 	mov	r4,fp
  8060e0:	a8a1883a 	add	r16,r21,r2
  8060e4:	08032000 	call	803200 <__mulsi3>
  8060e8:	89000017 	ldw	r4,0(r17)
  8060ec:	80ffffcc 	andi	r3,r16,65535
  8060f0:	8020d43a 	srli	r16,r16,16
  8060f4:	217fffcc 	andi	r5,r4,65535
  8060f8:	28cbc83a 	sub	r5,r5,r3
  8060fc:	d8c00117 	ldw	r3,4(sp)
  806100:	2008d43a 	srli	r4,r4,16
  806104:	1405883a 	add	r2,r2,r16
  806108:	28cb883a 	add	r5,r5,r3
  80610c:	280dd43a 	srai	r6,r5,16
  806110:	10ffffcc 	andi	r3,r2,65535
  806114:	20c9c83a 	sub	r4,r4,r3
  806118:	2189883a 	add	r4,r4,r6
  80611c:	8900008d 	sth	r4,2(r17)
  806120:	2009d43a 	srai	r4,r4,16
  806124:	8940000d 	sth	r5,0(r17)
  806128:	102ad43a 	srli	r21,r2,16
  80612c:	8c400104 	addi	r17,r17,4
  806130:	d9000115 	stw	r4,4(sp)
  806134:	b4bfe32e 	bgeu	r22,r18,8060c4 <quorem+0x188>
  806138:	d9000217 	ldw	r4,8(sp)
  80613c:	203fa01e 	bne	r4,zero,805fc0 <quorem+0x84>
  806140:	d8800017 	ldw	r2,0(sp)
  806144:	10ffff04 	addi	r3,r2,-4
  806148:	b8c0082e 	bgeu	r23,r3,80616c <quorem+0x230>
  80614c:	10bfff17 	ldw	r2,-4(r2)
  806150:	10000326 	beq	r2,zero,806160 <quorem+0x224>
  806154:	00000506 	br	80616c <quorem+0x230>
  806158:	18800017 	ldw	r2,0(r3)
  80615c:	1000031e 	bne	r2,zero,80616c <quorem+0x230>
  806160:	18ffff04 	addi	r3,r3,-4
  806164:	a53fffc4 	addi	r20,r20,-1
  806168:	b8fffb36 	bltu	r23,r3,806158 <quorem+0x21c>
  80616c:	d8c00317 	ldw	r3,12(sp)
  806170:	1d000415 	stw	r20,16(r3)
  806174:	003f9206 	br	805fc0 <quorem+0x84>
  806178:	0005883a 	mov	r2,zero
  80617c:	003fc106 	br	806084 <quorem+0x148>

00806180 <_dtoa_r>:
  806180:	22001017 	ldw	r8,64(r4)
  806184:	deffda04 	addi	sp,sp,-152
  806188:	dd402115 	stw	r21,132(sp)
  80618c:	dd002015 	stw	r20,128(sp)
  806190:	dc801e15 	stw	r18,120(sp)
  806194:	dc401d15 	stw	r17,116(sp)
  806198:	dfc02515 	stw	ra,148(sp)
  80619c:	df002415 	stw	fp,144(sp)
  8061a0:	ddc02315 	stw	r23,140(sp)
  8061a4:	dd802215 	stw	r22,136(sp)
  8061a8:	dcc01f15 	stw	r19,124(sp)
  8061ac:	dc001c15 	stw	r16,112(sp)
  8061b0:	d9001615 	stw	r4,88(sp)
  8061b4:	3023883a 	mov	r17,r6
  8061b8:	2829883a 	mov	r20,r5
  8061bc:	d9c01715 	stw	r7,92(sp)
  8061c0:	dc802817 	ldw	r18,160(sp)
  8061c4:	302b883a 	mov	r21,r6
  8061c8:	40000a26 	beq	r8,zero,8061f4 <_dtoa_r+0x74>
  8061cc:	20801117 	ldw	r2,68(r4)
  8061d0:	400b883a 	mov	r5,r8
  8061d4:	40800115 	stw	r2,4(r8)
  8061d8:	20c01117 	ldw	r3,68(r4)
  8061dc:	00800044 	movi	r2,1
  8061e0:	10c4983a 	sll	r2,r2,r3
  8061e4:	40800215 	stw	r2,8(r8)
  8061e8:	0809e140 	call	809e14 <_Bfree>
  8061ec:	d8c01617 	ldw	r3,88(sp)
  8061f0:	18001015 	stw	zero,64(r3)
  8061f4:	8800a316 	blt	r17,zero,806484 <_dtoa_r+0x304>
  8061f8:	90000015 	stw	zero,0(r18)
  8061fc:	a8dffc2c 	andhi	r3,r21,32752
  806200:	009ffc34 	movhi	r2,32752
  806204:	18809126 	beq	r3,r2,80644c <_dtoa_r+0x2cc>
  806208:	000d883a 	mov	r6,zero
  80620c:	000f883a 	mov	r7,zero
  806210:	a009883a 	mov	r4,r20
  806214:	a80b883a 	mov	r5,r21
  806218:	dd001215 	stw	r20,72(sp)
  80621c:	dd401315 	stw	r21,76(sp)
  806220:	080cc5c0 	call	80cc5c <__nedf2>
  806224:	1000171e 	bne	r2,zero,806284 <_dtoa_r+0x104>
  806228:	d9802717 	ldw	r6,156(sp)
  80622c:	00800044 	movi	r2,1
  806230:	30800015 	stw	r2,0(r6)
  806234:	d8802917 	ldw	r2,164(sp)
  806238:	10029b26 	beq	r2,zero,806ca8 <_dtoa_r+0xb28>
  80623c:	d9002917 	ldw	r4,164(sp)
  806240:	00802074 	movhi	r2,129
  806244:	10814a44 	addi	r2,r2,1321
  806248:	10ffffc4 	addi	r3,r2,-1
  80624c:	20800015 	stw	r2,0(r4)
  806250:	1805883a 	mov	r2,r3
  806254:	dfc02517 	ldw	ra,148(sp)
  806258:	df002417 	ldw	fp,144(sp)
  80625c:	ddc02317 	ldw	r23,140(sp)
  806260:	dd802217 	ldw	r22,136(sp)
  806264:	dd402117 	ldw	r21,132(sp)
  806268:	dd002017 	ldw	r20,128(sp)
  80626c:	dcc01f17 	ldw	r19,124(sp)
  806270:	dc801e17 	ldw	r18,120(sp)
  806274:	dc401d17 	ldw	r17,116(sp)
  806278:	dc001c17 	ldw	r16,112(sp)
  80627c:	dec02604 	addi	sp,sp,152
  806280:	f800283a 	ret
  806284:	d9001617 	ldw	r4,88(sp)
  806288:	d9401217 	ldw	r5,72(sp)
  80628c:	d8800104 	addi	r2,sp,4
  806290:	a80d883a 	mov	r6,r21
  806294:	d9c00204 	addi	r7,sp,8
  806298:	d8800015 	stw	r2,0(sp)
  80629c:	080a4500 	call	80a450 <__d2b>
  8062a0:	d8800715 	stw	r2,28(sp)
  8062a4:	a804d53a 	srli	r2,r21,20
  8062a8:	1101ffcc 	andi	r4,r2,2047
  8062ac:	20008626 	beq	r4,zero,8064c8 <_dtoa_r+0x348>
  8062b0:	d8c01217 	ldw	r3,72(sp)
  8062b4:	00800434 	movhi	r2,16
  8062b8:	10bfffc4 	addi	r2,r2,-1
  8062bc:	ddc00117 	ldw	r23,4(sp)
  8062c0:	a884703a 	and	r2,r21,r2
  8062c4:	1811883a 	mov	r8,r3
  8062c8:	124ffc34 	orhi	r9,r2,16368
  8062cc:	25bf0044 	addi	r22,r4,-1023
  8062d0:	d8000815 	stw	zero,32(sp)
  8062d4:	0005883a 	mov	r2,zero
  8062d8:	00cffe34 	movhi	r3,16376
  8062dc:	480b883a 	mov	r5,r9
  8062e0:	4009883a 	mov	r4,r8
  8062e4:	180f883a 	mov	r7,r3
  8062e8:	100d883a 	mov	r6,r2
  8062ec:	0802b080 	call	802b08 <__subdf3>
  8062f0:	0218dbf4 	movhi	r8,25455
  8062f4:	4210d844 	addi	r8,r8,17249
  8062f8:	024ff4f4 	movhi	r9,16339
  8062fc:	4a61e9c4 	addi	r9,r9,-30809
  806300:	480f883a 	mov	r7,r9
  806304:	400d883a 	mov	r6,r8
  806308:	180b883a 	mov	r5,r3
  80630c:	1009883a 	mov	r4,r2
  806310:	0802bfc0 	call	802bfc <__muldf3>
  806314:	0222d874 	movhi	r8,35681
  806318:	42322cc4 	addi	r8,r8,-14157
  80631c:	024ff1f4 	movhi	r9,16327
  806320:	4a628a04 	addi	r9,r9,-30168
  806324:	480f883a 	mov	r7,r9
  806328:	400d883a 	mov	r6,r8
  80632c:	180b883a 	mov	r5,r3
  806330:	1009883a 	mov	r4,r2
  806334:	0802b880 	call	802b88 <__adddf3>
  806338:	b009883a 	mov	r4,r22
  80633c:	1021883a 	mov	r16,r2
  806340:	1823883a 	mov	r17,r3
  806344:	080cf040 	call	80cf04 <__floatsidf>
  806348:	021427f4 	movhi	r8,20639
  80634c:	421e7ec4 	addi	r8,r8,31227
  806350:	024ff4f4 	movhi	r9,16339
  806354:	4a5104c4 	addi	r9,r9,17427
  806358:	480f883a 	mov	r7,r9
  80635c:	400d883a 	mov	r6,r8
  806360:	180b883a 	mov	r5,r3
  806364:	1009883a 	mov	r4,r2
  806368:	0802bfc0 	call	802bfc <__muldf3>
  80636c:	180f883a 	mov	r7,r3
  806370:	880b883a 	mov	r5,r17
  806374:	100d883a 	mov	r6,r2
  806378:	8009883a 	mov	r4,r16
  80637c:	0802b880 	call	802b88 <__adddf3>
  806380:	1009883a 	mov	r4,r2
  806384:	180b883a 	mov	r5,r3
  806388:	1021883a 	mov	r16,r2
  80638c:	1823883a 	mov	r17,r3
  806390:	080cffc0 	call	80cffc <__fixdfsi>
  806394:	000d883a 	mov	r6,zero
  806398:	000f883a 	mov	r7,zero
  80639c:	8009883a 	mov	r4,r16
  8063a0:	880b883a 	mov	r5,r17
  8063a4:	d8800d15 	stw	r2,52(sp)
  8063a8:	080cdf40 	call	80cdf4 <__ltdf2>
  8063ac:	10031716 	blt	r2,zero,80700c <_dtoa_r+0xe8c>
  8063b0:	d8c00d17 	ldw	r3,52(sp)
  8063b4:	00800584 	movi	r2,22
  8063b8:	10c1482e 	bgeu	r2,r3,8068dc <_dtoa_r+0x75c>
  8063bc:	01000044 	movi	r4,1
  8063c0:	d9000c15 	stw	r4,48(sp)
  8063c4:	bd85c83a 	sub	r2,r23,r22
  8063c8:	11bfffc4 	addi	r6,r2,-1
  8063cc:	30030b16 	blt	r6,zero,806ffc <_dtoa_r+0xe7c>
  8063d0:	d9800a15 	stw	r6,40(sp)
  8063d4:	d8001115 	stw	zero,68(sp)
  8063d8:	d8c00d17 	ldw	r3,52(sp)
  8063dc:	1802ff16 	blt	r3,zero,806fdc <_dtoa_r+0xe5c>
  8063e0:	d9000a17 	ldw	r4,40(sp)
  8063e4:	d8c00915 	stw	r3,36(sp)
  8063e8:	d8001015 	stw	zero,64(sp)
  8063ec:	20c9883a 	add	r4,r4,r3
  8063f0:	d9000a15 	stw	r4,40(sp)
  8063f4:	d9001717 	ldw	r4,92(sp)
  8063f8:	00800244 	movi	r2,9
  8063fc:	11004636 	bltu	r2,r4,806518 <_dtoa_r+0x398>
  806400:	00800144 	movi	r2,5
  806404:	11020416 	blt	r2,r4,806c18 <_dtoa_r+0xa98>
  806408:	04400044 	movi	r17,1
  80640c:	d8c01717 	ldw	r3,92(sp)
  806410:	00800144 	movi	r2,5
  806414:	10c1ed36 	bltu	r2,r3,806bcc <_dtoa_r+0xa4c>
  806418:	18c5883a 	add	r2,r3,r3
  80641c:	1085883a 	add	r2,r2,r2
  806420:	00c02034 	movhi	r3,128
  806424:	18d90d04 	addi	r3,r3,25652
  806428:	10c5883a 	add	r2,r2,r3
  80642c:	11000017 	ldw	r4,0(r2)
  806430:	2000683a 	jmp	r4
  806434:	00806520 	cmpeqi	r2,zero,404
  806438:	00806520 	cmpeqi	r2,zero,404
  80643c:	00806f20 	cmpeqi	r2,zero,444
  806440:	00806ef8 	rdprs	r2,zero,443
  806444:	00806f3c 	xorhi	r2,zero,444
  806448:	00806f48 	cmpgei	r2,zero,445
  80644c:	d9002717 	ldw	r4,156(sp)
  806450:	0089c3c4 	movi	r2,9999
  806454:	20800015 	stw	r2,0(r4)
  806458:	a0001026 	beq	r20,zero,80649c <_dtoa_r+0x31c>
  80645c:	00c02074 	movhi	r3,129
  806460:	18c15604 	addi	r3,r3,1368
  806464:	d9802917 	ldw	r6,164(sp)
  806468:	303f7926 	beq	r6,zero,806250 <_dtoa_r+0xd0>
  80646c:	188000c7 	ldb	r2,3(r3)
  806470:	190000c4 	addi	r4,r3,3
  806474:	1000101e 	bne	r2,zero,8064b8 <_dtoa_r+0x338>
  806478:	d8802917 	ldw	r2,164(sp)
  80647c:	11000015 	stw	r4,0(r2)
  806480:	003f7306 	br	806250 <_dtoa_r+0xd0>
  806484:	00a00034 	movhi	r2,32768
  806488:	10bfffc4 	addi	r2,r2,-1
  80648c:	00c00044 	movi	r3,1
  806490:	88aa703a 	and	r21,r17,r2
  806494:	90c00015 	stw	r3,0(r18)
  806498:	003f5806 	br	8061fc <_dtoa_r+0x7c>
  80649c:	00800434 	movhi	r2,16
  8064a0:	10bfffc4 	addi	r2,r2,-1
  8064a4:	a884703a 	and	r2,r21,r2
  8064a8:	103fec1e 	bne	r2,zero,80645c <_dtoa_r+0x2dc>
  8064ac:	00c02074 	movhi	r3,129
  8064b0:	18c15304 	addi	r3,r3,1356
  8064b4:	003feb06 	br	806464 <_dtoa_r+0x2e4>
  8064b8:	d8802917 	ldw	r2,164(sp)
  8064bc:	19000204 	addi	r4,r3,8
  8064c0:	11000015 	stw	r4,0(r2)
  8064c4:	003f6206 	br	806250 <_dtoa_r+0xd0>
  8064c8:	ddc00117 	ldw	r23,4(sp)
  8064cc:	d8800217 	ldw	r2,8(sp)
  8064d0:	01000804 	movi	r4,32
  8064d4:	b8c10c84 	addi	r3,r23,1074
  8064d8:	18a3883a 	add	r17,r3,r2
  8064dc:	2441b80e 	bge	r4,r17,806bc0 <_dtoa_r+0xa40>
  8064e0:	00c01004 	movi	r3,64
  8064e4:	1c47c83a 	sub	r3,r3,r17
  8064e8:	88bff804 	addi	r2,r17,-32
  8064ec:	a8c6983a 	sll	r3,r21,r3
  8064f0:	a084d83a 	srl	r2,r20,r2
  8064f4:	1888b03a 	or	r4,r3,r2
  8064f8:	080306c0 	call	80306c <__floatunsidf>
  8064fc:	1011883a 	mov	r8,r2
  806500:	00bf8434 	movhi	r2,65040
  806504:	01000044 	movi	r4,1
  806508:	10d3883a 	add	r9,r2,r3
  80650c:	8dbef344 	addi	r22,r17,-1075
  806510:	d9000815 	stw	r4,32(sp)
  806514:	003f6f06 	br	8062d4 <_dtoa_r+0x154>
  806518:	d8001715 	stw	zero,92(sp)
  80651c:	04400044 	movi	r17,1
  806520:	00bfffc4 	movi	r2,-1
  806524:	00c00044 	movi	r3,1
  806528:	d8800e15 	stw	r2,56(sp)
  80652c:	d8002615 	stw	zero,152(sp)
  806530:	d8800f15 	stw	r2,60(sp)
  806534:	d8c00b15 	stw	r3,44(sp)
  806538:	1021883a 	mov	r16,r2
  80653c:	d8801617 	ldw	r2,88(sp)
  806540:	10001115 	stw	zero,68(r2)
  806544:	d8801617 	ldw	r2,88(sp)
  806548:	11401117 	ldw	r5,68(r2)
  80654c:	1009883a 	mov	r4,r2
  806550:	080a3940 	call	80a394 <_Balloc>
  806554:	d8c01617 	ldw	r3,88(sp)
  806558:	d8800515 	stw	r2,20(sp)
  80655c:	18801015 	stw	r2,64(r3)
  806560:	00800384 	movi	r2,14
  806564:	14006836 	bltu	r2,r16,806708 <_dtoa_r+0x588>
  806568:	8805003a 	cmpeq	r2,r17,zero
  80656c:	1000661e 	bne	r2,zero,806708 <_dtoa_r+0x588>
  806570:	d9000d17 	ldw	r4,52(sp)
  806574:	0102300e 	bge	zero,r4,806e38 <_dtoa_r+0xcb8>
  806578:	208003cc 	andi	r2,r4,15
  80657c:	100490fa 	slli	r2,r2,3
  806580:	2025d13a 	srai	r18,r4,4
  806584:	00c02074 	movhi	r3,129
  806588:	18c16704 	addi	r3,r3,1436
  80658c:	10c5883a 	add	r2,r2,r3
  806590:	90c0040c 	andi	r3,r18,16
  806594:	14000017 	ldw	r16,0(r2)
  806598:	14400117 	ldw	r17,4(r2)
  80659c:	18036a1e 	bne	r3,zero,807348 <_dtoa_r+0x11c8>
  8065a0:	05800084 	movi	r22,2
  8065a4:	90001026 	beq	r18,zero,8065e8 <_dtoa_r+0x468>
  8065a8:	04c02074 	movhi	r19,129
  8065ac:	9cc19904 	addi	r19,r19,1636
  8065b0:	9080004c 	andi	r2,r18,1
  8065b4:	1005003a 	cmpeq	r2,r2,zero
  8065b8:	1000081e 	bne	r2,zero,8065dc <_dtoa_r+0x45c>
  8065bc:	99800017 	ldw	r6,0(r19)
  8065c0:	99c00117 	ldw	r7,4(r19)
  8065c4:	880b883a 	mov	r5,r17
  8065c8:	8009883a 	mov	r4,r16
  8065cc:	0802bfc0 	call	802bfc <__muldf3>
  8065d0:	1021883a 	mov	r16,r2
  8065d4:	b5800044 	addi	r22,r22,1
  8065d8:	1823883a 	mov	r17,r3
  8065dc:	9025d07a 	srai	r18,r18,1
  8065e0:	9cc00204 	addi	r19,r19,8
  8065e4:	903ff21e 	bne	r18,zero,8065b0 <_dtoa_r+0x430>
  8065e8:	a80b883a 	mov	r5,r21
  8065ec:	a009883a 	mov	r4,r20
  8065f0:	880f883a 	mov	r7,r17
  8065f4:	800d883a 	mov	r6,r16
  8065f8:	080c97c0 	call	80c97c <__divdf3>
  8065fc:	1029883a 	mov	r20,r2
  806600:	182b883a 	mov	r21,r3
  806604:	d8c00c17 	ldw	r3,48(sp)
  806608:	1805003a 	cmpeq	r2,r3,zero
  80660c:	1000081e 	bne	r2,zero,806630 <_dtoa_r+0x4b0>
  806610:	0005883a 	mov	r2,zero
  806614:	00cffc34 	movhi	r3,16368
  806618:	180f883a 	mov	r7,r3
  80661c:	a009883a 	mov	r4,r20
  806620:	a80b883a 	mov	r5,r21
  806624:	100d883a 	mov	r6,r2
  806628:	080cdf40 	call	80cdf4 <__ltdf2>
  80662c:	1003fe16 	blt	r2,zero,807628 <_dtoa_r+0x14a8>
  806630:	b009883a 	mov	r4,r22
  806634:	080cf040 	call	80cf04 <__floatsidf>
  806638:	180b883a 	mov	r5,r3
  80663c:	1009883a 	mov	r4,r2
  806640:	a00d883a 	mov	r6,r20
  806644:	a80f883a 	mov	r7,r21
  806648:	0802bfc0 	call	802bfc <__muldf3>
  80664c:	0011883a 	mov	r8,zero
  806650:	02500734 	movhi	r9,16412
  806654:	1009883a 	mov	r4,r2
  806658:	180b883a 	mov	r5,r3
  80665c:	480f883a 	mov	r7,r9
  806660:	400d883a 	mov	r6,r8
  806664:	0802b880 	call	802b88 <__adddf3>
  806668:	d9000f17 	ldw	r4,60(sp)
  80666c:	102d883a 	mov	r22,r2
  806670:	00bf3034 	movhi	r2,64704
  806674:	18b9883a 	add	fp,r3,r2
  806678:	e02f883a 	mov	r23,fp
  80667c:	20028f1e 	bne	r4,zero,8070bc <_dtoa_r+0xf3c>
  806680:	0005883a 	mov	r2,zero
  806684:	00d00534 	movhi	r3,16404
  806688:	a009883a 	mov	r4,r20
  80668c:	a80b883a 	mov	r5,r21
  806690:	180f883a 	mov	r7,r3
  806694:	100d883a 	mov	r6,r2
  806698:	0802b080 	call	802b08 <__subdf3>
  80669c:	1009883a 	mov	r4,r2
  8066a0:	e00f883a 	mov	r7,fp
  8066a4:	180b883a 	mov	r5,r3
  8066a8:	b00d883a 	mov	r6,r22
  8066ac:	1025883a 	mov	r18,r2
  8066b0:	1827883a 	mov	r19,r3
  8066b4:	080cce40 	call	80cce4 <__gtdf2>
  8066b8:	00834f16 	blt	zero,r2,8073f8 <_dtoa_r+0x1278>
  8066bc:	e0e0003c 	xorhi	r3,fp,32768
  8066c0:	9009883a 	mov	r4,r18
  8066c4:	980b883a 	mov	r5,r19
  8066c8:	180f883a 	mov	r7,r3
  8066cc:	b00d883a 	mov	r6,r22
  8066d0:	080cdf40 	call	80cdf4 <__ltdf2>
  8066d4:	1000080e 	bge	r2,zero,8066f8 <_dtoa_r+0x578>
  8066d8:	0027883a 	mov	r19,zero
  8066dc:	0025883a 	mov	r18,zero
  8066e0:	d8802617 	ldw	r2,152(sp)
  8066e4:	df000517 	ldw	fp,20(sp)
  8066e8:	d8000615 	stw	zero,24(sp)
  8066ec:	0084303a 	nor	r2,zero,r2
  8066f0:	d8800d15 	stw	r2,52(sp)
  8066f4:	00019b06 	br	806d64 <_dtoa_r+0xbe4>
  8066f8:	d9801217 	ldw	r6,72(sp)
  8066fc:	d8801317 	ldw	r2,76(sp)
  806700:	3029883a 	mov	r20,r6
  806704:	102b883a 	mov	r21,r2
  806708:	d8c00217 	ldw	r3,8(sp)
  80670c:	18008516 	blt	r3,zero,806924 <_dtoa_r+0x7a4>
  806710:	d9000d17 	ldw	r4,52(sp)
  806714:	00800384 	movi	r2,14
  806718:	11008216 	blt	r2,r4,806924 <_dtoa_r+0x7a4>
  80671c:	200490fa 	slli	r2,r4,3
  806720:	d9802617 	ldw	r6,152(sp)
  806724:	00c02074 	movhi	r3,129
  806728:	18c16704 	addi	r3,r3,1436
  80672c:	10c5883a 	add	r2,r2,r3
  806730:	14800017 	ldw	r18,0(r2)
  806734:	14c00117 	ldw	r19,4(r2)
  806738:	30031e16 	blt	r6,zero,8073b4 <_dtoa_r+0x1234>
  80673c:	d9000517 	ldw	r4,20(sp)
  806740:	d8c00f17 	ldw	r3,60(sp)
  806744:	a823883a 	mov	r17,r21
  806748:	a021883a 	mov	r16,r20
  80674c:	192b883a 	add	r21,r3,r4
  806750:	2039883a 	mov	fp,r4
  806754:	00000f06 	br	806794 <_dtoa_r+0x614>
  806758:	0005883a 	mov	r2,zero
  80675c:	00d00934 	movhi	r3,16420
  806760:	5009883a 	mov	r4,r10
  806764:	580b883a 	mov	r5,r11
  806768:	180f883a 	mov	r7,r3
  80676c:	100d883a 	mov	r6,r2
  806770:	0802bfc0 	call	802bfc <__muldf3>
  806774:	180b883a 	mov	r5,r3
  806778:	000d883a 	mov	r6,zero
  80677c:	000f883a 	mov	r7,zero
  806780:	1009883a 	mov	r4,r2
  806784:	1021883a 	mov	r16,r2
  806788:	1823883a 	mov	r17,r3
  80678c:	080cc5c0 	call	80cc5c <__nedf2>
  806790:	10004526 	beq	r2,zero,8068a8 <_dtoa_r+0x728>
  806794:	900d883a 	mov	r6,r18
  806798:	980f883a 	mov	r7,r19
  80679c:	8009883a 	mov	r4,r16
  8067a0:	880b883a 	mov	r5,r17
  8067a4:	080c97c0 	call	80c97c <__divdf3>
  8067a8:	180b883a 	mov	r5,r3
  8067ac:	1009883a 	mov	r4,r2
  8067b0:	080cffc0 	call	80cffc <__fixdfsi>
  8067b4:	1009883a 	mov	r4,r2
  8067b8:	1029883a 	mov	r20,r2
  8067bc:	080cf040 	call	80cf04 <__floatsidf>
  8067c0:	180f883a 	mov	r7,r3
  8067c4:	9009883a 	mov	r4,r18
  8067c8:	980b883a 	mov	r5,r19
  8067cc:	100d883a 	mov	r6,r2
  8067d0:	0802bfc0 	call	802bfc <__muldf3>
  8067d4:	180f883a 	mov	r7,r3
  8067d8:	880b883a 	mov	r5,r17
  8067dc:	8009883a 	mov	r4,r16
  8067e0:	100d883a 	mov	r6,r2
  8067e4:	0802b080 	call	802b08 <__subdf3>
  8067e8:	1015883a 	mov	r10,r2
  8067ec:	a0800c04 	addi	r2,r20,48
  8067f0:	e0800005 	stb	r2,0(fp)
  8067f4:	e7000044 	addi	fp,fp,1
  8067f8:	1817883a 	mov	r11,r3
  8067fc:	e57fd61e 	bne	fp,r21,806758 <_dtoa_r+0x5d8>
  806800:	500d883a 	mov	r6,r10
  806804:	180f883a 	mov	r7,r3
  806808:	5009883a 	mov	r4,r10
  80680c:	180b883a 	mov	r5,r3
  806810:	0802b880 	call	802b88 <__adddf3>
  806814:	100d883a 	mov	r6,r2
  806818:	9009883a 	mov	r4,r18
  80681c:	980b883a 	mov	r5,r19
  806820:	180f883a 	mov	r7,r3
  806824:	1021883a 	mov	r16,r2
  806828:	1823883a 	mov	r17,r3
  80682c:	080cdf40 	call	80cdf4 <__ltdf2>
  806830:	10000816 	blt	r2,zero,806854 <_dtoa_r+0x6d4>
  806834:	980b883a 	mov	r5,r19
  806838:	800d883a 	mov	r6,r16
  80683c:	880f883a 	mov	r7,r17
  806840:	9009883a 	mov	r4,r18
  806844:	080cbd40 	call	80cbd4 <__eqdf2>
  806848:	1000171e 	bne	r2,zero,8068a8 <_dtoa_r+0x728>
  80684c:	a080004c 	andi	r2,r20,1
  806850:	10001526 	beq	r2,zero,8068a8 <_dtoa_r+0x728>
  806854:	d8800d17 	ldw	r2,52(sp)
  806858:	d8800415 	stw	r2,16(sp)
  80685c:	e009883a 	mov	r4,fp
  806860:	213fffc4 	addi	r4,r4,-1
  806864:	20c00007 	ldb	r3,0(r4)
  806868:	00800e44 	movi	r2,57
  80686c:	1880081e 	bne	r3,r2,806890 <_dtoa_r+0x710>
  806870:	d8800517 	ldw	r2,20(sp)
  806874:	113ffa1e 	bne	r2,r4,806860 <_dtoa_r+0x6e0>
  806878:	d8c00417 	ldw	r3,16(sp)
  80687c:	d9800517 	ldw	r6,20(sp)
  806880:	00800c04 	movi	r2,48
  806884:	18c00044 	addi	r3,r3,1
  806888:	d8c00415 	stw	r3,16(sp)
  80688c:	30800005 	stb	r2,0(r6)
  806890:	20800003 	ldbu	r2,0(r4)
  806894:	d8c00417 	ldw	r3,16(sp)
  806898:	27000044 	addi	fp,r4,1
  80689c:	10800044 	addi	r2,r2,1
  8068a0:	d8c00d15 	stw	r3,52(sp)
  8068a4:	20800005 	stb	r2,0(r4)
  8068a8:	d9001617 	ldw	r4,88(sp)
  8068ac:	d9400717 	ldw	r5,28(sp)
  8068b0:	0809e140 	call	809e14 <_Bfree>
  8068b4:	e0000005 	stb	zero,0(fp)
  8068b8:	d9800d17 	ldw	r6,52(sp)
  8068bc:	d8c02717 	ldw	r3,156(sp)
  8068c0:	d9002917 	ldw	r4,164(sp)
  8068c4:	30800044 	addi	r2,r6,1
  8068c8:	18800015 	stw	r2,0(r3)
  8068cc:	20029c26 	beq	r4,zero,807340 <_dtoa_r+0x11c0>
  8068d0:	d8c00517 	ldw	r3,20(sp)
  8068d4:	27000015 	stw	fp,0(r4)
  8068d8:	003e5d06 	br	806250 <_dtoa_r+0xd0>
  8068dc:	d9800d17 	ldw	r6,52(sp)
  8068e0:	00c02074 	movhi	r3,129
  8068e4:	18c16704 	addi	r3,r3,1436
  8068e8:	d9001217 	ldw	r4,72(sp)
  8068ec:	300490fa 	slli	r2,r6,3
  8068f0:	d9401317 	ldw	r5,76(sp)
  8068f4:	10c5883a 	add	r2,r2,r3
  8068f8:	12000017 	ldw	r8,0(r2)
  8068fc:	12400117 	ldw	r9,4(r2)
  806900:	400d883a 	mov	r6,r8
  806904:	480f883a 	mov	r7,r9
  806908:	080cdf40 	call	80cdf4 <__ltdf2>
  80690c:	1000030e 	bge	r2,zero,80691c <_dtoa_r+0x79c>
  806910:	d8800d17 	ldw	r2,52(sp)
  806914:	10bfffc4 	addi	r2,r2,-1
  806918:	d8800d15 	stw	r2,52(sp)
  80691c:	d8000c15 	stw	zero,48(sp)
  806920:	003ea806 	br	8063c4 <_dtoa_r+0x244>
  806924:	d9000b17 	ldw	r4,44(sp)
  806928:	202cc03a 	cmpne	r22,r4,zero
  80692c:	b000c71e 	bne	r22,zero,806c4c <_dtoa_r+0xacc>
  806930:	dc001117 	ldw	r16,68(sp)
  806934:	dc801017 	ldw	r18,64(sp)
  806938:	0027883a 	mov	r19,zero
  80693c:	04000b0e 	bge	zero,r16,80696c <_dtoa_r+0x7ec>
  806940:	d8c00a17 	ldw	r3,40(sp)
  806944:	00c0090e 	bge	zero,r3,80696c <_dtoa_r+0x7ec>
  806948:	8005883a 	mov	r2,r16
  80694c:	1c011316 	blt	r3,r16,806d9c <_dtoa_r+0xc1c>
  806950:	d9000a17 	ldw	r4,40(sp)
  806954:	d9801117 	ldw	r6,68(sp)
  806958:	80a1c83a 	sub	r16,r16,r2
  80695c:	2089c83a 	sub	r4,r4,r2
  806960:	308dc83a 	sub	r6,r6,r2
  806964:	d9000a15 	stw	r4,40(sp)
  806968:	d9801115 	stw	r6,68(sp)
  80696c:	d8801017 	ldw	r2,64(sp)
  806970:	0080150e 	bge	zero,r2,8069c8 <_dtoa_r+0x848>
  806974:	d8c00b17 	ldw	r3,44(sp)
  806978:	1805003a 	cmpeq	r2,r3,zero
  80697c:	1001c91e 	bne	r2,zero,8070a4 <_dtoa_r+0xf24>
  806980:	04800e0e 	bge	zero,r18,8069bc <_dtoa_r+0x83c>
  806984:	d9001617 	ldw	r4,88(sp)
  806988:	980b883a 	mov	r5,r19
  80698c:	900d883a 	mov	r6,r18
  806990:	080ac600 	call	80ac60 <__pow5mult>
  806994:	d9001617 	ldw	r4,88(sp)
  806998:	d9800717 	ldw	r6,28(sp)
  80699c:	100b883a 	mov	r5,r2
  8069a0:	1027883a 	mov	r19,r2
  8069a4:	080a8a40 	call	80a8a4 <__multiply>
  8069a8:	d9001617 	ldw	r4,88(sp)
  8069ac:	d9400717 	ldw	r5,28(sp)
  8069b0:	1023883a 	mov	r17,r2
  8069b4:	0809e140 	call	809e14 <_Bfree>
  8069b8:	dc400715 	stw	r17,28(sp)
  8069bc:	d9001017 	ldw	r4,64(sp)
  8069c0:	248dc83a 	sub	r6,r4,r18
  8069c4:	30010e1e 	bne	r6,zero,806e00 <_dtoa_r+0xc80>
  8069c8:	d9001617 	ldw	r4,88(sp)
  8069cc:	04400044 	movi	r17,1
  8069d0:	880b883a 	mov	r5,r17
  8069d4:	080aaf80 	call	80aaf8 <__i2b>
  8069d8:	d9800917 	ldw	r6,36(sp)
  8069dc:	1025883a 	mov	r18,r2
  8069e0:	0180040e 	bge	zero,r6,8069f4 <_dtoa_r+0x874>
  8069e4:	d9001617 	ldw	r4,88(sp)
  8069e8:	100b883a 	mov	r5,r2
  8069ec:	080ac600 	call	80ac60 <__pow5mult>
  8069f0:	1025883a 	mov	r18,r2
  8069f4:	d8801717 	ldw	r2,92(sp)
  8069f8:	8880f30e 	bge	r17,r2,806dc8 <_dtoa_r+0xc48>
  8069fc:	0023883a 	mov	r17,zero
  806a00:	d9800917 	ldw	r6,36(sp)
  806a04:	30019e1e 	bne	r6,zero,807080 <_dtoa_r+0xf00>
  806a08:	00c00044 	movi	r3,1
  806a0c:	d9000a17 	ldw	r4,40(sp)
  806a10:	20c5883a 	add	r2,r4,r3
  806a14:	10c007cc 	andi	r3,r2,31
  806a18:	1800841e 	bne	r3,zero,806c2c <_dtoa_r+0xaac>
  806a1c:	00800704 	movi	r2,28
  806a20:	d9000a17 	ldw	r4,40(sp)
  806a24:	d9801117 	ldw	r6,68(sp)
  806a28:	80a1883a 	add	r16,r16,r2
  806a2c:	2089883a 	add	r4,r4,r2
  806a30:	308d883a 	add	r6,r6,r2
  806a34:	d9000a15 	stw	r4,40(sp)
  806a38:	d9801115 	stw	r6,68(sp)
  806a3c:	d8801117 	ldw	r2,68(sp)
  806a40:	0080050e 	bge	zero,r2,806a58 <_dtoa_r+0x8d8>
  806a44:	d9400717 	ldw	r5,28(sp)
  806a48:	d9001617 	ldw	r4,88(sp)
  806a4c:	100d883a 	mov	r6,r2
  806a50:	080a7580 	call	80a758 <__lshift>
  806a54:	d8800715 	stw	r2,28(sp)
  806a58:	d8c00a17 	ldw	r3,40(sp)
  806a5c:	00c0050e 	bge	zero,r3,806a74 <_dtoa_r+0x8f4>
  806a60:	d9001617 	ldw	r4,88(sp)
  806a64:	900b883a 	mov	r5,r18
  806a68:	180d883a 	mov	r6,r3
  806a6c:	080a7580 	call	80a758 <__lshift>
  806a70:	1025883a 	mov	r18,r2
  806a74:	d9000c17 	ldw	r4,48(sp)
  806a78:	2005003a 	cmpeq	r2,r4,zero
  806a7c:	10016f26 	beq	r2,zero,80703c <_dtoa_r+0xebc>
  806a80:	d9000f17 	ldw	r4,60(sp)
  806a84:	0102170e 	bge	zero,r4,8072e4 <_dtoa_r+0x1164>
  806a88:	d9800b17 	ldw	r6,44(sp)
  806a8c:	3005003a 	cmpeq	r2,r6,zero
  806a90:	1000881e 	bne	r2,zero,806cb4 <_dtoa_r+0xb34>
  806a94:	0400050e 	bge	zero,r16,806aac <_dtoa_r+0x92c>
  806a98:	d9001617 	ldw	r4,88(sp)
  806a9c:	980b883a 	mov	r5,r19
  806aa0:	800d883a 	mov	r6,r16
  806aa4:	080a7580 	call	80a758 <__lshift>
  806aa8:	1027883a 	mov	r19,r2
  806aac:	8804c03a 	cmpne	r2,r17,zero
  806ab0:	1002541e 	bne	r2,zero,807404 <_dtoa_r+0x1284>
  806ab4:	980b883a 	mov	r5,r19
  806ab8:	dd800517 	ldw	r22,20(sp)
  806abc:	dcc00615 	stw	r19,24(sp)
  806ac0:	a700004c 	andi	fp,r20,1
  806ac4:	2827883a 	mov	r19,r5
  806ac8:	d9000717 	ldw	r4,28(sp)
  806acc:	900b883a 	mov	r5,r18
  806ad0:	0805f3c0 	call	805f3c <quorem>
  806ad4:	d9000717 	ldw	r4,28(sp)
  806ad8:	d9400617 	ldw	r5,24(sp)
  806adc:	1023883a 	mov	r17,r2
  806ae0:	8dc00c04 	addi	r23,r17,48
  806ae4:	0809f700 	call	809f70 <__mcmp>
  806ae8:	d9001617 	ldw	r4,88(sp)
  806aec:	900b883a 	mov	r5,r18
  806af0:	980d883a 	mov	r6,r19
  806af4:	1029883a 	mov	r20,r2
  806af8:	080a5cc0 	call	80a5cc <__mdiff>
  806afc:	102b883a 	mov	r21,r2
  806b00:	10800317 	ldw	r2,12(r2)
  806b04:	1001281e 	bne	r2,zero,806fa8 <_dtoa_r+0xe28>
  806b08:	d9000717 	ldw	r4,28(sp)
  806b0c:	a80b883a 	mov	r5,r21
  806b10:	0809f700 	call	809f70 <__mcmp>
  806b14:	d9001617 	ldw	r4,88(sp)
  806b18:	1021883a 	mov	r16,r2
  806b1c:	a80b883a 	mov	r5,r21
  806b20:	0809e140 	call	809e14 <_Bfree>
  806b24:	8000041e 	bne	r16,zero,806b38 <_dtoa_r+0x9b8>
  806b28:	d8801717 	ldw	r2,92(sp)
  806b2c:	1000021e 	bne	r2,zero,806b38 <_dtoa_r+0x9b8>
  806b30:	e004c03a 	cmpne	r2,fp,zero
  806b34:	10011726 	beq	r2,zero,806f94 <_dtoa_r+0xe14>
  806b38:	a0010616 	blt	r20,zero,806f54 <_dtoa_r+0xdd4>
  806b3c:	a000041e 	bne	r20,zero,806b50 <_dtoa_r+0x9d0>
  806b40:	d8c01717 	ldw	r3,92(sp)
  806b44:	1800021e 	bne	r3,zero,806b50 <_dtoa_r+0x9d0>
  806b48:	e004c03a 	cmpne	r2,fp,zero
  806b4c:	10010126 	beq	r2,zero,806f54 <_dtoa_r+0xdd4>
  806b50:	04023d16 	blt	zero,r16,807448 <_dtoa_r+0x12c8>
  806b54:	b5c00005 	stb	r23,0(r22)
  806b58:	d9800517 	ldw	r6,20(sp)
  806b5c:	d9000f17 	ldw	r4,60(sp)
  806b60:	b5800044 	addi	r22,r22,1
  806b64:	3105883a 	add	r2,r6,r4
  806b68:	b0806526 	beq	r22,r2,806d00 <_dtoa_r+0xb80>
  806b6c:	d9400717 	ldw	r5,28(sp)
  806b70:	d9001617 	ldw	r4,88(sp)
  806b74:	01800284 	movi	r6,10
  806b78:	000f883a 	mov	r7,zero
  806b7c:	080ab340 	call	80ab34 <__multadd>
  806b80:	d8800715 	stw	r2,28(sp)
  806b84:	d8800617 	ldw	r2,24(sp)
  806b88:	14c10c26 	beq	r2,r19,806fbc <_dtoa_r+0xe3c>
  806b8c:	d9400617 	ldw	r5,24(sp)
  806b90:	d9001617 	ldw	r4,88(sp)
  806b94:	01800284 	movi	r6,10
  806b98:	000f883a 	mov	r7,zero
  806b9c:	080ab340 	call	80ab34 <__multadd>
  806ba0:	d9001617 	ldw	r4,88(sp)
  806ba4:	980b883a 	mov	r5,r19
  806ba8:	01800284 	movi	r6,10
  806bac:	000f883a 	mov	r7,zero
  806bb0:	d8800615 	stw	r2,24(sp)
  806bb4:	080ab340 	call	80ab34 <__multadd>
  806bb8:	1027883a 	mov	r19,r2
  806bbc:	003fc206 	br	806ac8 <_dtoa_r+0x948>
  806bc0:	2445c83a 	sub	r2,r4,r17
  806bc4:	a088983a 	sll	r4,r20,r2
  806bc8:	003e4b06 	br	8064f8 <_dtoa_r+0x378>
  806bcc:	01bfffc4 	movi	r6,-1
  806bd0:	00800044 	movi	r2,1
  806bd4:	d9800e15 	stw	r6,56(sp)
  806bd8:	d9800f15 	stw	r6,60(sp)
  806bdc:	d8800b15 	stw	r2,44(sp)
  806be0:	d8c01617 	ldw	r3,88(sp)
  806be4:	008005c4 	movi	r2,23
  806be8:	18001115 	stw	zero,68(r3)
  806bec:	1580082e 	bgeu	r2,r22,806c10 <_dtoa_r+0xa90>
  806bf0:	00c00104 	movi	r3,4
  806bf4:	0009883a 	mov	r4,zero
  806bf8:	18c7883a 	add	r3,r3,r3
  806bfc:	18800504 	addi	r2,r3,20
  806c00:	21000044 	addi	r4,r4,1
  806c04:	b0bffc2e 	bgeu	r22,r2,806bf8 <_dtoa_r+0xa78>
  806c08:	d9801617 	ldw	r6,88(sp)
  806c0c:	31001115 	stw	r4,68(r6)
  806c10:	dc000f17 	ldw	r16,60(sp)
  806c14:	003e4b06 	br	806544 <_dtoa_r+0x3c4>
  806c18:	d9801717 	ldw	r6,92(sp)
  806c1c:	0023883a 	mov	r17,zero
  806c20:	31bfff04 	addi	r6,r6,-4
  806c24:	d9801715 	stw	r6,92(sp)
  806c28:	003df806 	br	80640c <_dtoa_r+0x28c>
  806c2c:	00800804 	movi	r2,32
  806c30:	10c9c83a 	sub	r4,r2,r3
  806c34:	00c00104 	movi	r3,4
  806c38:	19005a16 	blt	r3,r4,806da4 <_dtoa_r+0xc24>
  806c3c:	008000c4 	movi	r2,3
  806c40:	113f7e16 	blt	r2,r4,806a3c <_dtoa_r+0x8bc>
  806c44:	20800704 	addi	r2,r4,28
  806c48:	003f7506 	br	806a20 <_dtoa_r+0x8a0>
  806c4c:	d9801717 	ldw	r6,92(sp)
  806c50:	00800044 	movi	r2,1
  806c54:	1180a10e 	bge	r2,r6,806edc <_dtoa_r+0xd5c>
  806c58:	d9800f17 	ldw	r6,60(sp)
  806c5c:	d8c01017 	ldw	r3,64(sp)
  806c60:	30bfffc4 	addi	r2,r6,-1
  806c64:	1881c616 	blt	r3,r2,807380 <_dtoa_r+0x1200>
  806c68:	18a5c83a 	sub	r18,r3,r2
  806c6c:	d8800f17 	ldw	r2,60(sp)
  806c70:	10026216 	blt	r2,zero,8075fc <_dtoa_r+0x147c>
  806c74:	dc001117 	ldw	r16,68(sp)
  806c78:	1007883a 	mov	r3,r2
  806c7c:	d9800a17 	ldw	r6,40(sp)
  806c80:	d8801117 	ldw	r2,68(sp)
  806c84:	d9001617 	ldw	r4,88(sp)
  806c88:	30cd883a 	add	r6,r6,r3
  806c8c:	10c5883a 	add	r2,r2,r3
  806c90:	01400044 	movi	r5,1
  806c94:	d9800a15 	stw	r6,40(sp)
  806c98:	d8801115 	stw	r2,68(sp)
  806c9c:	080aaf80 	call	80aaf8 <__i2b>
  806ca0:	1027883a 	mov	r19,r2
  806ca4:	003f2506 	br	80693c <_dtoa_r+0x7bc>
  806ca8:	00c02074 	movhi	r3,129
  806cac:	18c14a04 	addi	r3,r3,1320
  806cb0:	003d6706 	br	806250 <_dtoa_r+0xd0>
  806cb4:	dd800517 	ldw	r22,20(sp)
  806cb8:	04000044 	movi	r16,1
  806cbc:	00000706 	br	806cdc <_dtoa_r+0xb5c>
  806cc0:	d9400717 	ldw	r5,28(sp)
  806cc4:	d9001617 	ldw	r4,88(sp)
  806cc8:	01800284 	movi	r6,10
  806ccc:	000f883a 	mov	r7,zero
  806cd0:	080ab340 	call	80ab34 <__multadd>
  806cd4:	d8800715 	stw	r2,28(sp)
  806cd8:	84000044 	addi	r16,r16,1
  806cdc:	d9000717 	ldw	r4,28(sp)
  806ce0:	900b883a 	mov	r5,r18
  806ce4:	0805f3c0 	call	805f3c <quorem>
  806ce8:	15c00c04 	addi	r23,r2,48
  806cec:	b5c00005 	stb	r23,0(r22)
  806cf0:	d8c00f17 	ldw	r3,60(sp)
  806cf4:	b5800044 	addi	r22,r22,1
  806cf8:	80fff116 	blt	r16,r3,806cc0 <_dtoa_r+0xb40>
  806cfc:	d8000615 	stw	zero,24(sp)
  806d00:	d9400717 	ldw	r5,28(sp)
  806d04:	d9001617 	ldw	r4,88(sp)
  806d08:	01800044 	movi	r6,1
  806d0c:	080a7580 	call	80a758 <__lshift>
  806d10:	1009883a 	mov	r4,r2
  806d14:	900b883a 	mov	r5,r18
  806d18:	d8800715 	stw	r2,28(sp)
  806d1c:	0809f700 	call	809f70 <__mcmp>
  806d20:	00803c0e 	bge	zero,r2,806e14 <_dtoa_r+0xc94>
  806d24:	b009883a 	mov	r4,r22
  806d28:	213fffc4 	addi	r4,r4,-1
  806d2c:	21400003 	ldbu	r5,0(r4)
  806d30:	00800e44 	movi	r2,57
  806d34:	28c03fcc 	andi	r3,r5,255
  806d38:	18c0201c 	xori	r3,r3,128
  806d3c:	18ffe004 	addi	r3,r3,-128
  806d40:	1881981e 	bne	r3,r2,8073a4 <_dtoa_r+0x1224>
  806d44:	d9800517 	ldw	r6,20(sp)
  806d48:	21bff71e 	bne	r4,r6,806d28 <_dtoa_r+0xba8>
  806d4c:	d8800d17 	ldw	r2,52(sp)
  806d50:	37000044 	addi	fp,r6,1
  806d54:	10800044 	addi	r2,r2,1
  806d58:	d8800d15 	stw	r2,52(sp)
  806d5c:	00800c44 	movi	r2,49
  806d60:	30800005 	stb	r2,0(r6)
  806d64:	d9001617 	ldw	r4,88(sp)
  806d68:	900b883a 	mov	r5,r18
  806d6c:	0809e140 	call	809e14 <_Bfree>
  806d70:	983ecd26 	beq	r19,zero,8068a8 <_dtoa_r+0x728>
  806d74:	d8c00617 	ldw	r3,24(sp)
  806d78:	18000426 	beq	r3,zero,806d8c <_dtoa_r+0xc0c>
  806d7c:	1cc00326 	beq	r3,r19,806d8c <_dtoa_r+0xc0c>
  806d80:	d9001617 	ldw	r4,88(sp)
  806d84:	180b883a 	mov	r5,r3
  806d88:	0809e140 	call	809e14 <_Bfree>
  806d8c:	d9001617 	ldw	r4,88(sp)
  806d90:	980b883a 	mov	r5,r19
  806d94:	0809e140 	call	809e14 <_Bfree>
  806d98:	003ec306 	br	8068a8 <_dtoa_r+0x728>
  806d9c:	1805883a 	mov	r2,r3
  806da0:	003eeb06 	br	806950 <_dtoa_r+0x7d0>
  806da4:	d9800a17 	ldw	r6,40(sp)
  806da8:	d8c01117 	ldw	r3,68(sp)
  806dac:	20bfff04 	addi	r2,r4,-4
  806db0:	308d883a 	add	r6,r6,r2
  806db4:	1887883a 	add	r3,r3,r2
  806db8:	80a1883a 	add	r16,r16,r2
  806dbc:	d9800a15 	stw	r6,40(sp)
  806dc0:	d8c01115 	stw	r3,68(sp)
  806dc4:	003f1d06 	br	806a3c <_dtoa_r+0x8bc>
  806dc8:	a03f0c1e 	bne	r20,zero,8069fc <_dtoa_r+0x87c>
  806dcc:	00800434 	movhi	r2,16
  806dd0:	10bfffc4 	addi	r2,r2,-1
  806dd4:	a884703a 	and	r2,r21,r2
  806dd8:	103f081e 	bne	r2,zero,8069fc <_dtoa_r+0x87c>
  806ddc:	a89ffc2c 	andhi	r2,r21,32752
  806de0:	103f0626 	beq	r2,zero,8069fc <_dtoa_r+0x87c>
  806de4:	d8c01117 	ldw	r3,68(sp)
  806de8:	d9000a17 	ldw	r4,40(sp)
  806dec:	18c00044 	addi	r3,r3,1
  806df0:	21000044 	addi	r4,r4,1
  806df4:	d8c01115 	stw	r3,68(sp)
  806df8:	d9000a15 	stw	r4,40(sp)
  806dfc:	003f0006 	br	806a00 <_dtoa_r+0x880>
  806e00:	d9400717 	ldw	r5,28(sp)
  806e04:	d9001617 	ldw	r4,88(sp)
  806e08:	080ac600 	call	80ac60 <__pow5mult>
  806e0c:	d8800715 	stw	r2,28(sp)
  806e10:	003eed06 	br	8069c8 <_dtoa_r+0x848>
  806e14:	1000021e 	bne	r2,zero,806e20 <_dtoa_r+0xca0>
  806e18:	b880004c 	andi	r2,r23,1
  806e1c:	103fc11e 	bne	r2,zero,806d24 <_dtoa_r+0xba4>
  806e20:	b5bfffc4 	addi	r22,r22,-1
  806e24:	b0c00007 	ldb	r3,0(r22)
  806e28:	00800c04 	movi	r2,48
  806e2c:	18bffc26 	beq	r3,r2,806e20 <_dtoa_r+0xca0>
  806e30:	b7000044 	addi	fp,r22,1
  806e34:	003fcb06 	br	806d64 <_dtoa_r+0xbe4>
  806e38:	d9800d17 	ldw	r6,52(sp)
  806e3c:	018fc83a 	sub	r7,zero,r6
  806e40:	3801f726 	beq	r7,zero,807620 <_dtoa_r+0x14a0>
  806e44:	398003cc 	andi	r6,r7,15
  806e48:	300c90fa 	slli	r6,r6,3
  806e4c:	01402074 	movhi	r5,129
  806e50:	29416704 	addi	r5,r5,1436
  806e54:	d9001217 	ldw	r4,72(sp)
  806e58:	314d883a 	add	r6,r6,r5
  806e5c:	30c00117 	ldw	r3,4(r6)
  806e60:	30800017 	ldw	r2,0(r6)
  806e64:	d9401317 	ldw	r5,76(sp)
  806e68:	3821d13a 	srai	r16,r7,4
  806e6c:	100d883a 	mov	r6,r2
  806e70:	180f883a 	mov	r7,r3
  806e74:	0802bfc0 	call	802bfc <__muldf3>
  806e78:	1011883a 	mov	r8,r2
  806e7c:	1813883a 	mov	r9,r3
  806e80:	1029883a 	mov	r20,r2
  806e84:	182b883a 	mov	r21,r3
  806e88:	8001e526 	beq	r16,zero,807620 <_dtoa_r+0x14a0>
  806e8c:	05800084 	movi	r22,2
  806e90:	04402074 	movhi	r17,129
  806e94:	8c419904 	addi	r17,r17,1636
  806e98:	8080004c 	andi	r2,r16,1
  806e9c:	1005003a 	cmpeq	r2,r2,zero
  806ea0:	1000081e 	bne	r2,zero,806ec4 <_dtoa_r+0xd44>
  806ea4:	89800017 	ldw	r6,0(r17)
  806ea8:	89c00117 	ldw	r7,4(r17)
  806eac:	480b883a 	mov	r5,r9
  806eb0:	4009883a 	mov	r4,r8
  806eb4:	0802bfc0 	call	802bfc <__muldf3>
  806eb8:	1011883a 	mov	r8,r2
  806ebc:	b5800044 	addi	r22,r22,1
  806ec0:	1813883a 	mov	r9,r3
  806ec4:	8021d07a 	srai	r16,r16,1
  806ec8:	8c400204 	addi	r17,r17,8
  806ecc:	803ff21e 	bne	r16,zero,806e98 <_dtoa_r+0xd18>
  806ed0:	4029883a 	mov	r20,r8
  806ed4:	482b883a 	mov	r21,r9
  806ed8:	003dca06 	br	806604 <_dtoa_r+0x484>
  806edc:	d9000817 	ldw	r4,32(sp)
  806ee0:	2005003a 	cmpeq	r2,r4,zero
  806ee4:	1001f61e 	bne	r2,zero,8076c0 <_dtoa_r+0x1540>
  806ee8:	dc001117 	ldw	r16,68(sp)
  806eec:	dc801017 	ldw	r18,64(sp)
  806ef0:	18c10cc4 	addi	r3,r3,1075
  806ef4:	003f6106 	br	806c7c <_dtoa_r+0xafc>
  806ef8:	d8000b15 	stw	zero,44(sp)
  806efc:	d9802617 	ldw	r6,152(sp)
  806f00:	d8c00d17 	ldw	r3,52(sp)
  806f04:	30800044 	addi	r2,r6,1
  806f08:	18ad883a 	add	r22,r3,r2
  806f0c:	b13fffc4 	addi	r4,r22,-1
  806f10:	d9000e15 	stw	r4,56(sp)
  806f14:	0581f60e 	bge	zero,r22,8076f0 <_dtoa_r+0x1570>
  806f18:	dd800f15 	stw	r22,60(sp)
  806f1c:	003f3006 	br	806be0 <_dtoa_r+0xa60>
  806f20:	d8000b15 	stw	zero,44(sp)
  806f24:	d9002617 	ldw	r4,152(sp)
  806f28:	0101eb0e 	bge	zero,r4,8076d8 <_dtoa_r+0x1558>
  806f2c:	202d883a 	mov	r22,r4
  806f30:	d9000e15 	stw	r4,56(sp)
  806f34:	d9000f15 	stw	r4,60(sp)
  806f38:	003f2906 	br	806be0 <_dtoa_r+0xa60>
  806f3c:	01800044 	movi	r6,1
  806f40:	d9800b15 	stw	r6,44(sp)
  806f44:	003ff706 	br	806f24 <_dtoa_r+0xda4>
  806f48:	01000044 	movi	r4,1
  806f4c:	d9000b15 	stw	r4,44(sp)
  806f50:	003fea06 	br	806efc <_dtoa_r+0xd7c>
  806f54:	04000c0e 	bge	zero,r16,806f88 <_dtoa_r+0xe08>
  806f58:	d9400717 	ldw	r5,28(sp)
  806f5c:	d9001617 	ldw	r4,88(sp)
  806f60:	01800044 	movi	r6,1
  806f64:	080a7580 	call	80a758 <__lshift>
  806f68:	1009883a 	mov	r4,r2
  806f6c:	900b883a 	mov	r5,r18
  806f70:	d8800715 	stw	r2,28(sp)
  806f74:	0809f700 	call	809f70 <__mcmp>
  806f78:	0081e00e 	bge	zero,r2,8076fc <_dtoa_r+0x157c>
  806f7c:	bdc00044 	addi	r23,r23,1
  806f80:	00800e84 	movi	r2,58
  806f84:	b881a226 	beq	r23,r2,807610 <_dtoa_r+0x1490>
  806f88:	b7000044 	addi	fp,r22,1
  806f8c:	b5c00005 	stb	r23,0(r22)
  806f90:	003f7406 	br	806d64 <_dtoa_r+0xbe4>
  806f94:	00800e44 	movi	r2,57
  806f98:	b8819d26 	beq	r23,r2,807610 <_dtoa_r+0x1490>
  806f9c:	053ffa0e 	bge	zero,r20,806f88 <_dtoa_r+0xe08>
  806fa0:	8dc00c44 	addi	r23,r17,49
  806fa4:	003ff806 	br	806f88 <_dtoa_r+0xe08>
  806fa8:	d9001617 	ldw	r4,88(sp)
  806fac:	a80b883a 	mov	r5,r21
  806fb0:	04000044 	movi	r16,1
  806fb4:	0809e140 	call	809e14 <_Bfree>
  806fb8:	003edf06 	br	806b38 <_dtoa_r+0x9b8>
  806fbc:	d9001617 	ldw	r4,88(sp)
  806fc0:	980b883a 	mov	r5,r19
  806fc4:	01800284 	movi	r6,10
  806fc8:	000f883a 	mov	r7,zero
  806fcc:	080ab340 	call	80ab34 <__multadd>
  806fd0:	1027883a 	mov	r19,r2
  806fd4:	d8800615 	stw	r2,24(sp)
  806fd8:	003ebb06 	br	806ac8 <_dtoa_r+0x948>
  806fdc:	d9801117 	ldw	r6,68(sp)
  806fe0:	d8800d17 	ldw	r2,52(sp)
  806fe4:	d8000915 	stw	zero,36(sp)
  806fe8:	308dc83a 	sub	r6,r6,r2
  806fec:	0087c83a 	sub	r3,zero,r2
  806ff0:	d9801115 	stw	r6,68(sp)
  806ff4:	d8c01015 	stw	r3,64(sp)
  806ff8:	003cfe06 	br	8063f4 <_dtoa_r+0x274>
  806ffc:	018dc83a 	sub	r6,zero,r6
  807000:	d9801115 	stw	r6,68(sp)
  807004:	d8000a15 	stw	zero,40(sp)
  807008:	003cf306 	br	8063d8 <_dtoa_r+0x258>
  80700c:	d9000d17 	ldw	r4,52(sp)
  807010:	080cf040 	call	80cf04 <__floatsidf>
  807014:	880b883a 	mov	r5,r17
  807018:	8009883a 	mov	r4,r16
  80701c:	180f883a 	mov	r7,r3
  807020:	100d883a 	mov	r6,r2
  807024:	080cc5c0 	call	80cc5c <__nedf2>
  807028:	103ce126 	beq	r2,zero,8063b0 <_dtoa_r+0x230>
  80702c:	d9800d17 	ldw	r6,52(sp)
  807030:	31bfffc4 	addi	r6,r6,-1
  807034:	d9800d15 	stw	r6,52(sp)
  807038:	003cdd06 	br	8063b0 <_dtoa_r+0x230>
  80703c:	d9000717 	ldw	r4,28(sp)
  807040:	900b883a 	mov	r5,r18
  807044:	0809f700 	call	809f70 <__mcmp>
  807048:	103e8d0e 	bge	r2,zero,806a80 <_dtoa_r+0x900>
  80704c:	d9400717 	ldw	r5,28(sp)
  807050:	d9001617 	ldw	r4,88(sp)
  807054:	01800284 	movi	r6,10
  807058:	000f883a 	mov	r7,zero
  80705c:	080ab340 	call	80ab34 <__multadd>
  807060:	d9800d17 	ldw	r6,52(sp)
  807064:	d8800715 	stw	r2,28(sp)
  807068:	31bfffc4 	addi	r6,r6,-1
  80706c:	d9800d15 	stw	r6,52(sp)
  807070:	b001a71e 	bne	r22,zero,807710 <_dtoa_r+0x1590>
  807074:	d8800e17 	ldw	r2,56(sp)
  807078:	d8800f15 	stw	r2,60(sp)
  80707c:	003e8006 	br	806a80 <_dtoa_r+0x900>
  807080:	90800417 	ldw	r2,16(r18)
  807084:	1085883a 	add	r2,r2,r2
  807088:	1085883a 	add	r2,r2,r2
  80708c:	1485883a 	add	r2,r2,r18
  807090:	11000417 	ldw	r4,16(r2)
  807094:	0809e3c0 	call	809e3c <__hi0bits>
  807098:	00c00804 	movi	r3,32
  80709c:	1887c83a 	sub	r3,r3,r2
  8070a0:	003e5a06 	br	806a0c <_dtoa_r+0x88c>
  8070a4:	d9400717 	ldw	r5,28(sp)
  8070a8:	d9801017 	ldw	r6,64(sp)
  8070ac:	d9001617 	ldw	r4,88(sp)
  8070b0:	080ac600 	call	80ac60 <__pow5mult>
  8070b4:	d8800715 	stw	r2,28(sp)
  8070b8:	003e4306 	br	8069c8 <_dtoa_r+0x848>
  8070bc:	d9800f17 	ldw	r6,60(sp)
  8070c0:	d8800d17 	ldw	r2,52(sp)
  8070c4:	d9800315 	stw	r6,12(sp)
  8070c8:	d8800415 	stw	r2,16(sp)
  8070cc:	d8c00b17 	ldw	r3,44(sp)
  8070d0:	1805003a 	cmpeq	r2,r3,zero
  8070d4:	1000e21e 	bne	r2,zero,807460 <_dtoa_r+0x12e0>
  8070d8:	d9000317 	ldw	r4,12(sp)
  8070dc:	0005883a 	mov	r2,zero
  8070e0:	00cff834 	movhi	r3,16352
  8070e4:	200c90fa 	slli	r6,r4,3
  8070e8:	01002074 	movhi	r4,129
  8070ec:	21016704 	addi	r4,r4,1436
  8070f0:	180b883a 	mov	r5,r3
  8070f4:	310d883a 	add	r6,r6,r4
  8070f8:	327fff17 	ldw	r9,-4(r6)
  8070fc:	323ffe17 	ldw	r8,-8(r6)
  807100:	1009883a 	mov	r4,r2
  807104:	480f883a 	mov	r7,r9
  807108:	400d883a 	mov	r6,r8
  80710c:	080c97c0 	call	80c97c <__divdf3>
  807110:	180b883a 	mov	r5,r3
  807114:	b00d883a 	mov	r6,r22
  807118:	b80f883a 	mov	r7,r23
  80711c:	1009883a 	mov	r4,r2
  807120:	0802b080 	call	802b08 <__subdf3>
  807124:	a80b883a 	mov	r5,r21
  807128:	a009883a 	mov	r4,r20
  80712c:	d8c01915 	stw	r3,100(sp)
  807130:	d8801815 	stw	r2,96(sp)
  807134:	080cffc0 	call	80cffc <__fixdfsi>
  807138:	1009883a 	mov	r4,r2
  80713c:	1027883a 	mov	r19,r2
  807140:	080cf040 	call	80cf04 <__floatsidf>
  807144:	a80b883a 	mov	r5,r21
  807148:	a009883a 	mov	r4,r20
  80714c:	180f883a 	mov	r7,r3
  807150:	100d883a 	mov	r6,r2
  807154:	0802b080 	call	802b08 <__subdf3>
  807158:	d9801817 	ldw	r6,96(sp)
  80715c:	1823883a 	mov	r17,r3
  807160:	d8801415 	stw	r2,80(sp)
  807164:	302d883a 	mov	r22,r6
  807168:	d9800517 	ldw	r6,20(sp)
  80716c:	9cc00c04 	addi	r19,r19,48
  807170:	dc401515 	stw	r17,84(sp)
  807174:	d8c01917 	ldw	r3,100(sp)
  807178:	34c00005 	stb	r19,0(r6)
  80717c:	d8800517 	ldw	r2,20(sp)
  807180:	d9401917 	ldw	r5,100(sp)
  807184:	d9801417 	ldw	r6,80(sp)
  807188:	b009883a 	mov	r4,r22
  80718c:	880f883a 	mov	r7,r17
  807190:	182f883a 	mov	r23,r3
  807194:	17000044 	addi	fp,r2,1
  807198:	080cce40 	call	80cce4 <__gtdf2>
  80719c:	00804e16 	blt	zero,r2,8072d8 <_dtoa_r+0x1158>
  8071a0:	d9801417 	ldw	r6,80(sp)
  8071a4:	0005883a 	mov	r2,zero
  8071a8:	00cffc34 	movhi	r3,16368
  8071ac:	180b883a 	mov	r5,r3
  8071b0:	880f883a 	mov	r7,r17
  8071b4:	1009883a 	mov	r4,r2
  8071b8:	0802b080 	call	802b08 <__subdf3>
  8071bc:	d9401917 	ldw	r5,100(sp)
  8071c0:	180f883a 	mov	r7,r3
  8071c4:	b009883a 	mov	r4,r22
  8071c8:	100d883a 	mov	r6,r2
  8071cc:	080cce40 	call	80cce4 <__gtdf2>
  8071d0:	00bda216 	blt	zero,r2,80685c <_dtoa_r+0x6dc>
  8071d4:	d8c00317 	ldw	r3,12(sp)
  8071d8:	00800044 	movi	r2,1
  8071dc:	10c01216 	blt	r2,r3,807228 <_dtoa_r+0x10a8>
  8071e0:	003d4506 	br	8066f8 <_dtoa_r+0x578>
  8071e4:	d9801417 	ldw	r6,80(sp)
  8071e8:	0005883a 	mov	r2,zero
  8071ec:	00cffc34 	movhi	r3,16368
  8071f0:	180b883a 	mov	r5,r3
  8071f4:	880f883a 	mov	r7,r17
  8071f8:	1009883a 	mov	r4,r2
  8071fc:	0802b080 	call	802b08 <__subdf3>
  807200:	d9c01b17 	ldw	r7,108(sp)
  807204:	180b883a 	mov	r5,r3
  807208:	1009883a 	mov	r4,r2
  80720c:	b00d883a 	mov	r6,r22
  807210:	080cdf40 	call	80cdf4 <__ltdf2>
  807214:	103d9116 	blt	r2,zero,80685c <_dtoa_r+0x6dc>
  807218:	d9800517 	ldw	r6,20(sp)
  80721c:	d9000317 	ldw	r4,12(sp)
  807220:	3105883a 	add	r2,r6,r4
  807224:	e0bd3426 	beq	fp,r2,8066f8 <_dtoa_r+0x578>
  807228:	04500934 	movhi	r17,16420
  80722c:	0021883a 	mov	r16,zero
  807230:	b80b883a 	mov	r5,r23
  807234:	b009883a 	mov	r4,r22
  807238:	800d883a 	mov	r6,r16
  80723c:	880f883a 	mov	r7,r17
  807240:	0802bfc0 	call	802bfc <__muldf3>
  807244:	d9401517 	ldw	r5,84(sp)
  807248:	d9001417 	ldw	r4,80(sp)
  80724c:	880f883a 	mov	r7,r17
  807250:	000d883a 	mov	r6,zero
  807254:	d8801a15 	stw	r2,104(sp)
  807258:	d8c01b15 	stw	r3,108(sp)
  80725c:	0802bfc0 	call	802bfc <__muldf3>
  807260:	180b883a 	mov	r5,r3
  807264:	1009883a 	mov	r4,r2
  807268:	1823883a 	mov	r17,r3
  80726c:	1021883a 	mov	r16,r2
  807270:	080cffc0 	call	80cffc <__fixdfsi>
  807274:	1009883a 	mov	r4,r2
  807278:	102b883a 	mov	r21,r2
  80727c:	080cf040 	call	80cf04 <__floatsidf>
  807280:	880b883a 	mov	r5,r17
  807284:	8009883a 	mov	r4,r16
  807288:	180f883a 	mov	r7,r3
  80728c:	100d883a 	mov	r6,r2
  807290:	0802b080 	call	802b08 <__subdf3>
  807294:	1021883a 	mov	r16,r2
  807298:	d9001b17 	ldw	r4,108(sp)
  80729c:	1823883a 	mov	r17,r3
  8072a0:	dc001415 	stw	r16,80(sp)
  8072a4:	ad400c04 	addi	r21,r21,48
  8072a8:	dc401515 	stw	r17,84(sp)
  8072ac:	d8801a17 	ldw	r2,104(sp)
  8072b0:	e5400005 	stb	r21,0(fp)
  8072b4:	202f883a 	mov	r23,r4
  8072b8:	d9c01b17 	ldw	r7,108(sp)
  8072bc:	d9001417 	ldw	r4,80(sp)
  8072c0:	880b883a 	mov	r5,r17
  8072c4:	100d883a 	mov	r6,r2
  8072c8:	102d883a 	mov	r22,r2
  8072cc:	e7000044 	addi	fp,fp,1
  8072d0:	080cdf40 	call	80cdf4 <__ltdf2>
  8072d4:	103fc30e 	bge	r2,zero,8071e4 <_dtoa_r+0x1064>
  8072d8:	d9000417 	ldw	r4,16(sp)
  8072dc:	d9000d15 	stw	r4,52(sp)
  8072e0:	003d7106 	br	8068a8 <_dtoa_r+0x728>
  8072e4:	d9801717 	ldw	r6,92(sp)
  8072e8:	00800084 	movi	r2,2
  8072ec:	11bde60e 	bge	r2,r6,806a88 <_dtoa_r+0x908>
  8072f0:	203cfb1e 	bne	r4,zero,8066e0 <_dtoa_r+0x560>
  8072f4:	d9001617 	ldw	r4,88(sp)
  8072f8:	900b883a 	mov	r5,r18
  8072fc:	01800144 	movi	r6,5
  807300:	000f883a 	mov	r7,zero
  807304:	080ab340 	call	80ab34 <__multadd>
  807308:	d9000717 	ldw	r4,28(sp)
  80730c:	100b883a 	mov	r5,r2
  807310:	1025883a 	mov	r18,r2
  807314:	0809f700 	call	809f70 <__mcmp>
  807318:	00bcf10e 	bge	zero,r2,8066e0 <_dtoa_r+0x560>
  80731c:	d8c00d17 	ldw	r3,52(sp)
  807320:	d9000517 	ldw	r4,20(sp)
  807324:	d8000615 	stw	zero,24(sp)
  807328:	18c00044 	addi	r3,r3,1
  80732c:	d8c00d15 	stw	r3,52(sp)
  807330:	00800c44 	movi	r2,49
  807334:	27000044 	addi	fp,r4,1
  807338:	20800005 	stb	r2,0(r4)
  80733c:	003e8906 	br	806d64 <_dtoa_r+0xbe4>
  807340:	d8c00517 	ldw	r3,20(sp)
  807344:	003bc206 	br	806250 <_dtoa_r+0xd0>
  807348:	01802074 	movhi	r6,129
  80734c:	31819904 	addi	r6,r6,1636
  807350:	30c00917 	ldw	r3,36(r6)
  807354:	30800817 	ldw	r2,32(r6)
  807358:	d9001217 	ldw	r4,72(sp)
  80735c:	d9401317 	ldw	r5,76(sp)
  807360:	180f883a 	mov	r7,r3
  807364:	100d883a 	mov	r6,r2
  807368:	080c97c0 	call	80c97c <__divdf3>
  80736c:	948003cc 	andi	r18,r18,15
  807370:	058000c4 	movi	r22,3
  807374:	1029883a 	mov	r20,r2
  807378:	182b883a 	mov	r21,r3
  80737c:	003c8906 	br	8065a4 <_dtoa_r+0x424>
  807380:	d9001017 	ldw	r4,64(sp)
  807384:	d9800917 	ldw	r6,36(sp)
  807388:	0025883a 	mov	r18,zero
  80738c:	1105c83a 	sub	r2,r2,r4
  807390:	2089883a 	add	r4,r4,r2
  807394:	308d883a 	add	r6,r6,r2
  807398:	d9001015 	stw	r4,64(sp)
  80739c:	d9800915 	stw	r6,36(sp)
  8073a0:	003e3206 	br	806c6c <_dtoa_r+0xaec>
  8073a4:	28800044 	addi	r2,r5,1
  8073a8:	27000044 	addi	fp,r4,1
  8073ac:	20800005 	stb	r2,0(r4)
  8073b0:	003e6c06 	br	806d64 <_dtoa_r+0xbe4>
  8073b4:	d8800f17 	ldw	r2,60(sp)
  8073b8:	00bce016 	blt	zero,r2,80673c <_dtoa_r+0x5bc>
  8073bc:	d9800f17 	ldw	r6,60(sp)
  8073c0:	303cc51e 	bne	r6,zero,8066d8 <_dtoa_r+0x558>
  8073c4:	0005883a 	mov	r2,zero
  8073c8:	00d00534 	movhi	r3,16404
  8073cc:	980b883a 	mov	r5,r19
  8073d0:	180f883a 	mov	r7,r3
  8073d4:	9009883a 	mov	r4,r18
  8073d8:	100d883a 	mov	r6,r2
  8073dc:	0802bfc0 	call	802bfc <__muldf3>
  8073e0:	180b883a 	mov	r5,r3
  8073e4:	a80f883a 	mov	r7,r21
  8073e8:	1009883a 	mov	r4,r2
  8073ec:	a00d883a 	mov	r6,r20
  8073f0:	080cd6c0 	call	80cd6c <__gedf2>
  8073f4:	103cb80e 	bge	r2,zero,8066d8 <_dtoa_r+0x558>
  8073f8:	0027883a 	mov	r19,zero
  8073fc:	0025883a 	mov	r18,zero
  807400:	003fc606 	br	80731c <_dtoa_r+0x119c>
  807404:	99400117 	ldw	r5,4(r19)
  807408:	d9001617 	ldw	r4,88(sp)
  80740c:	080a3940 	call	80a394 <_Balloc>
  807410:	99800417 	ldw	r6,16(r19)
  807414:	11000304 	addi	r4,r2,12
  807418:	99400304 	addi	r5,r19,12
  80741c:	318d883a 	add	r6,r6,r6
  807420:	318d883a 	add	r6,r6,r6
  807424:	31800204 	addi	r6,r6,8
  807428:	1023883a 	mov	r17,r2
  80742c:	0809bfc0 	call	809bfc <memcpy>
  807430:	d9001617 	ldw	r4,88(sp)
  807434:	880b883a 	mov	r5,r17
  807438:	01800044 	movi	r6,1
  80743c:	080a7580 	call	80a758 <__lshift>
  807440:	100b883a 	mov	r5,r2
  807444:	003d9c06 	br	806ab8 <_dtoa_r+0x938>
  807448:	00800e44 	movi	r2,57
  80744c:	b8807026 	beq	r23,r2,807610 <_dtoa_r+0x1490>
  807450:	b8800044 	addi	r2,r23,1
  807454:	b7000044 	addi	fp,r22,1
  807458:	b0800005 	stb	r2,0(r22)
  80745c:	003e4106 	br	806d64 <_dtoa_r+0xbe4>
  807460:	d8800317 	ldw	r2,12(sp)
  807464:	01802074 	movhi	r6,129
  807468:	31816704 	addi	r6,r6,1436
  80746c:	b009883a 	mov	r4,r22
  807470:	100e90fa 	slli	r7,r2,3
  807474:	b80b883a 	mov	r5,r23
  807478:	398f883a 	add	r7,r7,r6
  80747c:	38bffe17 	ldw	r2,-8(r7)
  807480:	d9800517 	ldw	r6,20(sp)
  807484:	38ffff17 	ldw	r3,-4(r7)
  807488:	37000044 	addi	fp,r6,1
  80748c:	180f883a 	mov	r7,r3
  807490:	100d883a 	mov	r6,r2
  807494:	0802bfc0 	call	802bfc <__muldf3>
  807498:	a80b883a 	mov	r5,r21
  80749c:	a009883a 	mov	r4,r20
  8074a0:	182f883a 	mov	r23,r3
  8074a4:	102d883a 	mov	r22,r2
  8074a8:	080cffc0 	call	80cffc <__fixdfsi>
  8074ac:	1009883a 	mov	r4,r2
  8074b0:	1027883a 	mov	r19,r2
  8074b4:	080cf040 	call	80cf04 <__floatsidf>
  8074b8:	a80b883a 	mov	r5,r21
  8074bc:	a009883a 	mov	r4,r20
  8074c0:	180f883a 	mov	r7,r3
  8074c4:	100d883a 	mov	r6,r2
  8074c8:	0802b080 	call	802b08 <__subdf3>
  8074cc:	180b883a 	mov	r5,r3
  8074d0:	d8c00517 	ldw	r3,20(sp)
  8074d4:	9cc00c04 	addi	r19,r19,48
  8074d8:	1009883a 	mov	r4,r2
  8074dc:	1cc00005 	stb	r19,0(r3)
  8074e0:	2021883a 	mov	r16,r4
  8074e4:	d9000317 	ldw	r4,12(sp)
  8074e8:	00800044 	movi	r2,1
  8074ec:	2823883a 	mov	r17,r5
  8074f0:	20802226 	beq	r4,r2,80757c <_dtoa_r+0x13fc>
  8074f4:	1029883a 	mov	r20,r2
  8074f8:	0005883a 	mov	r2,zero
  8074fc:	00d00934 	movhi	r3,16420
  807500:	180f883a 	mov	r7,r3
  807504:	100d883a 	mov	r6,r2
  807508:	880b883a 	mov	r5,r17
  80750c:	8009883a 	mov	r4,r16
  807510:	0802bfc0 	call	802bfc <__muldf3>
  807514:	180b883a 	mov	r5,r3
  807518:	1009883a 	mov	r4,r2
  80751c:	1823883a 	mov	r17,r3
  807520:	1021883a 	mov	r16,r2
  807524:	080cffc0 	call	80cffc <__fixdfsi>
  807528:	1009883a 	mov	r4,r2
  80752c:	102b883a 	mov	r21,r2
  807530:	080cf040 	call	80cf04 <__floatsidf>
  807534:	880b883a 	mov	r5,r17
  807538:	8009883a 	mov	r4,r16
  80753c:	180f883a 	mov	r7,r3
  807540:	100d883a 	mov	r6,r2
  807544:	0802b080 	call	802b08 <__subdf3>
  807548:	180b883a 	mov	r5,r3
  80754c:	d8c00517 	ldw	r3,20(sp)
  807550:	1009883a 	mov	r4,r2
  807554:	ad400c04 	addi	r21,r21,48
  807558:	1d05883a 	add	r2,r3,r20
  80755c:	15400005 	stb	r21,0(r2)
  807560:	2021883a 	mov	r16,r4
  807564:	d9000317 	ldw	r4,12(sp)
  807568:	a5000044 	addi	r20,r20,1
  80756c:	2823883a 	mov	r17,r5
  807570:	a13fe11e 	bne	r20,r4,8074f8 <_dtoa_r+0x1378>
  807574:	e505883a 	add	r2,fp,r20
  807578:	173fffc4 	addi	fp,r2,-1
  80757c:	0025883a 	mov	r18,zero
  807580:	04cff834 	movhi	r19,16352
  807584:	b009883a 	mov	r4,r22
  807588:	b80b883a 	mov	r5,r23
  80758c:	900d883a 	mov	r6,r18
  807590:	980f883a 	mov	r7,r19
  807594:	0802b880 	call	802b88 <__adddf3>
  807598:	180b883a 	mov	r5,r3
  80759c:	1009883a 	mov	r4,r2
  8075a0:	800d883a 	mov	r6,r16
  8075a4:	880f883a 	mov	r7,r17
  8075a8:	080cdf40 	call	80cdf4 <__ltdf2>
  8075ac:	103cab16 	blt	r2,zero,80685c <_dtoa_r+0x6dc>
  8075b0:	0009883a 	mov	r4,zero
  8075b4:	980b883a 	mov	r5,r19
  8075b8:	b80f883a 	mov	r7,r23
  8075bc:	b00d883a 	mov	r6,r22
  8075c0:	0802b080 	call	802b08 <__subdf3>
  8075c4:	180b883a 	mov	r5,r3
  8075c8:	880f883a 	mov	r7,r17
  8075cc:	1009883a 	mov	r4,r2
  8075d0:	800d883a 	mov	r6,r16
  8075d4:	080cce40 	call	80cce4 <__gtdf2>
  8075d8:	00bc470e 	bge	zero,r2,8066f8 <_dtoa_r+0x578>
  8075dc:	00c00c04 	movi	r3,48
  8075e0:	e73fffc4 	addi	fp,fp,-1
  8075e4:	e0800007 	ldb	r2,0(fp)
  8075e8:	10fffd26 	beq	r2,r3,8075e0 <_dtoa_r+0x1460>
  8075ec:	d9800417 	ldw	r6,16(sp)
  8075f0:	e7000044 	addi	fp,fp,1
  8075f4:	d9800d15 	stw	r6,52(sp)
  8075f8:	003cab06 	br	8068a8 <_dtoa_r+0x728>
  8075fc:	d8c00f17 	ldw	r3,60(sp)
  807600:	d9001117 	ldw	r4,68(sp)
  807604:	20e1c83a 	sub	r16,r4,r3
  807608:	0007883a 	mov	r3,zero
  80760c:	003d9b06 	br	806c7c <_dtoa_r+0xafc>
  807610:	00800e44 	movi	r2,57
  807614:	b0800005 	stb	r2,0(r22)
  807618:	b5800044 	addi	r22,r22,1
  80761c:	003dc106 	br	806d24 <_dtoa_r+0xba4>
  807620:	05800084 	movi	r22,2
  807624:	003bf706 	br	806604 <_dtoa_r+0x484>
  807628:	d9000f17 	ldw	r4,60(sp)
  80762c:	013c000e 	bge	zero,r4,806630 <_dtoa_r+0x4b0>
  807630:	d9800e17 	ldw	r6,56(sp)
  807634:	01bc300e 	bge	zero,r6,8066f8 <_dtoa_r+0x578>
  807638:	0005883a 	mov	r2,zero
  80763c:	00d00934 	movhi	r3,16420
  807640:	a80b883a 	mov	r5,r21
  807644:	180f883a 	mov	r7,r3
  807648:	a009883a 	mov	r4,r20
  80764c:	100d883a 	mov	r6,r2
  807650:	0802bfc0 	call	802bfc <__muldf3>
  807654:	b1000044 	addi	r4,r22,1
  807658:	1021883a 	mov	r16,r2
  80765c:	1823883a 	mov	r17,r3
  807660:	080cf040 	call	80cf04 <__floatsidf>
  807664:	880b883a 	mov	r5,r17
  807668:	8009883a 	mov	r4,r16
  80766c:	180f883a 	mov	r7,r3
  807670:	100d883a 	mov	r6,r2
  807674:	0802bfc0 	call	802bfc <__muldf3>
  807678:	0011883a 	mov	r8,zero
  80767c:	02500734 	movhi	r9,16412
  807680:	180b883a 	mov	r5,r3
  807684:	480f883a 	mov	r7,r9
  807688:	1009883a 	mov	r4,r2
  80768c:	400d883a 	mov	r6,r8
  807690:	0802b880 	call	802b88 <__adddf3>
  807694:	102d883a 	mov	r22,r2
  807698:	00bf3034 	movhi	r2,64704
  80769c:	10ef883a 	add	r23,r2,r3
  8076a0:	d8800d17 	ldw	r2,52(sp)
  8076a4:	d8c00e17 	ldw	r3,56(sp)
  8076a8:	8029883a 	mov	r20,r16
  8076ac:	10bfffc4 	addi	r2,r2,-1
  8076b0:	882b883a 	mov	r21,r17
  8076b4:	d8800415 	stw	r2,16(sp)
  8076b8:	d8c00315 	stw	r3,12(sp)
  8076bc:	003e8306 	br	8070cc <_dtoa_r+0xf4c>
  8076c0:	d8800117 	ldw	r2,4(sp)
  8076c4:	dc001117 	ldw	r16,68(sp)
  8076c8:	dc801017 	ldw	r18,64(sp)
  8076cc:	00c00d84 	movi	r3,54
  8076d0:	1887c83a 	sub	r3,r3,r2
  8076d4:	003d6906 	br	806c7c <_dtoa_r+0xafc>
  8076d8:	01800044 	movi	r6,1
  8076dc:	3021883a 	mov	r16,r6
  8076e0:	d9800f15 	stw	r6,60(sp)
  8076e4:	d9802615 	stw	r6,152(sp)
  8076e8:	d9800e15 	stw	r6,56(sp)
  8076ec:	003b9306 	br	80653c <_dtoa_r+0x3bc>
  8076f0:	b021883a 	mov	r16,r22
  8076f4:	dd800f15 	stw	r22,60(sp)
  8076f8:	003b9006 	br	80653c <_dtoa_r+0x3bc>
  8076fc:	103e221e 	bne	r2,zero,806f88 <_dtoa_r+0xe08>
  807700:	b880004c 	andi	r2,r23,1
  807704:	1005003a 	cmpeq	r2,r2,zero
  807708:	103e1f1e 	bne	r2,zero,806f88 <_dtoa_r+0xe08>
  80770c:	003e1b06 	br	806f7c <_dtoa_r+0xdfc>
  807710:	d9001617 	ldw	r4,88(sp)
  807714:	980b883a 	mov	r5,r19
  807718:	01800284 	movi	r6,10
  80771c:	000f883a 	mov	r7,zero
  807720:	080ab340 	call	80ab34 <__multadd>
  807724:	d8c00e17 	ldw	r3,56(sp)
  807728:	1027883a 	mov	r19,r2
  80772c:	d8c00f15 	stw	r3,60(sp)
  807730:	003cd306 	br	806a80 <_dtoa_r+0x900>

00807734 <print_e>:
  807734:	defff404 	addi	sp,sp,-48
  807738:	dcc00a15 	stw	r19,40(sp)
  80773c:	dcc00c17 	ldw	r19,48(sp)
  807740:	3005883a 	mov	r2,r6
  807744:	dc400815 	stw	r17,32(sp)
  807748:	2823883a 	mov	r17,r5
  80774c:	100b883a 	mov	r5,r2
  807750:	d8800604 	addi	r2,sp,24
  807754:	380d883a 	mov	r6,r7
  807758:	9a000044 	addi	r8,r19,1
  80775c:	d8800115 	stw	r2,4(sp)
  807760:	d8c00504 	addi	r3,sp,20
  807764:	d8800404 	addi	r2,sp,16
  807768:	01c00084 	movi	r7,2
  80776c:	dc800915 	stw	r18,36(sp)
  807770:	dc000715 	stw	r16,28(sp)
  807774:	dfc00b15 	stw	ra,44(sp)
  807778:	da000015 	stw	r8,0(sp)
  80777c:	d8c00315 	stw	r3,12(sp)
  807780:	d8800215 	stw	r2,8(sp)
  807784:	dc800d03 	ldbu	r18,52(sp)
  807788:	08061800 	call	806180 <_dtoa_r>
  80778c:	dc000617 	ldw	r16,24(sp)
  807790:	100b883a 	mov	r5,r2
  807794:	0089c3c4 	movi	r2,9999
  807798:	80805e26 	beq	r16,r2,807914 <print_e+0x1e0>
  80779c:	28c00003 	ldbu	r3,0(r5)
  8077a0:	89000044 	addi	r4,r17,1
  8077a4:	29400044 	addi	r5,r5,1
  8077a8:	88c00005 	stb	r3,0(r17)
  8077ac:	d8800e17 	ldw	r2,56(sp)
  8077b0:	10004826 	beq	r2,zero,8078d4 <print_e+0x1a0>
  8077b4:	00800b84 	movi	r2,46
  8077b8:	20800005 	stb	r2,0(r4)
  8077bc:	9811883a 	mov	r8,r19
  8077c0:	21000044 	addi	r4,r4,1
  8077c4:	28800003 	ldbu	r2,0(r5)
  8077c8:	10000926 	beq	r2,zero,8077f0 <print_e+0xbc>
  8077cc:	02000216 	blt	zero,r8,8077d8 <print_e+0xa4>
  8077d0:	00000706 	br	8077f0 <print_e+0xbc>
  8077d4:	40000626 	beq	r8,zero,8077f0 <print_e+0xbc>
  8077d8:	20800005 	stb	r2,0(r4)
  8077dc:	29400044 	addi	r5,r5,1
  8077e0:	28800003 	ldbu	r2,0(r5)
  8077e4:	423fffc4 	addi	r8,r8,-1
  8077e8:	21000044 	addi	r4,r4,1
  8077ec:	103ff91e 	bne	r2,zero,8077d4 <print_e+0xa0>
  8077f0:	90c03fcc 	andi	r3,r18,255
  8077f4:	18c0201c 	xori	r3,r3,128
  8077f8:	18ffe004 	addi	r3,r3,-128
  8077fc:	008019c4 	movi	r2,103
  807800:	18803726 	beq	r3,r2,8078e0 <print_e+0x1ac>
  807804:	008011c4 	movi	r2,71
  807808:	18804026 	beq	r3,r2,80790c <print_e+0x1d8>
  80780c:	0200080e 	bge	zero,r8,807830 <print_e+0xfc>
  807810:	2007883a 	mov	r3,r4
  807814:	4005883a 	mov	r2,r8
  807818:	01400c04 	movi	r5,48
  80781c:	10bfffc4 	addi	r2,r2,-1
  807820:	19400005 	stb	r5,0(r3)
  807824:	18c00044 	addi	r3,r3,1
  807828:	103ffc1e 	bne	r2,zero,80781c <print_e+0xe8>
  80782c:	2209883a 	add	r4,r4,r8
  807830:	843fffc4 	addi	r16,r16,-1
  807834:	24800005 	stb	r18,0(r4)
  807838:	dc000615 	stw	r16,24(sp)
  80783c:	80002d16 	blt	r16,zero,8078f4 <print_e+0x1c0>
  807840:	00800ac4 	movi	r2,43
  807844:	20800045 	stb	r2,1(r4)
  807848:	24400084 	addi	r17,r4,2
  80784c:	008018c4 	movi	r2,99
  807850:	14000b0e 	bge	r2,r16,807880 <print_e+0x14c>
  807854:	8009883a 	mov	r4,r16
  807858:	01401904 	movi	r5,100
  80785c:	080d1500 	call	80d150 <__divsi3>
  807860:	1009883a 	mov	r4,r2
  807864:	10800c04 	addi	r2,r2,48
  807868:	88800005 	stb	r2,0(r17)
  80786c:	01401904 	movi	r5,100
  807870:	08032000 	call	803200 <__mulsi3>
  807874:	80a1c83a 	sub	r16,r16,r2
  807878:	8c400044 	addi	r17,r17,1
  80787c:	dc000615 	stw	r16,24(sp)
  807880:	8009883a 	mov	r4,r16
  807884:	01400284 	movi	r5,10
  807888:	080d1500 	call	80d150 <__divsi3>
  80788c:	1009883a 	mov	r4,r2
  807890:	10800c04 	addi	r2,r2,48
  807894:	88800005 	stb	r2,0(r17)
  807898:	01400284 	movi	r5,10
  80789c:	08032000 	call	803200 <__mulsi3>
  8078a0:	8085c83a 	sub	r2,r16,r2
  8078a4:	10c00c04 	addi	r3,r2,48
  8078a8:	88c00045 	stb	r3,1(r17)
  8078ac:	89000044 	addi	r4,r17,1
  8078b0:	20000045 	stb	zero,1(r4)
  8078b4:	d8800615 	stw	r2,24(sp)
  8078b8:	dfc00b17 	ldw	ra,44(sp)
  8078bc:	dcc00a17 	ldw	r19,40(sp)
  8078c0:	dc800917 	ldw	r18,36(sp)
  8078c4:	dc400817 	ldw	r17,32(sp)
  8078c8:	dc000717 	ldw	r16,28(sp)
  8078cc:	dec00c04 	addi	sp,sp,48
  8078d0:	f800283a 	ret
  8078d4:	983fb71e 	bne	r19,zero,8077b4 <print_e+0x80>
  8078d8:	0011883a 	mov	r8,zero
  8078dc:	003fb906 	br	8077c4 <print_e+0x90>
  8078e0:	04801944 	movi	r18,101
  8078e4:	843fffc4 	addi	r16,r16,-1
  8078e8:	24800005 	stb	r18,0(r4)
  8078ec:	dc000615 	stw	r16,24(sp)
  8078f0:	803fd30e 	bge	r16,zero,807840 <print_e+0x10c>
  8078f4:	00800b44 	movi	r2,45
  8078f8:	0421c83a 	sub	r16,zero,r16
  8078fc:	20800045 	stb	r2,1(r4)
  807900:	24400084 	addi	r17,r4,2
  807904:	dc000615 	stw	r16,24(sp)
  807908:	003fd006 	br	80784c <print_e+0x118>
  80790c:	04801144 	movi	r18,69
  807910:	003fc706 	br	807830 <print_e+0xfc>
  807914:	8809883a 	mov	r4,r17
  807918:	080b77c0 	call	80b77c <strcpy>
  80791c:	dfc00b17 	ldw	ra,44(sp)
  807920:	dcc00a17 	ldw	r19,40(sp)
  807924:	dc800917 	ldw	r18,36(sp)
  807928:	dc400817 	ldw	r17,32(sp)
  80792c:	dc000717 	ldw	r16,28(sp)
  807930:	dec00c04 	addi	sp,sp,48
  807934:	f800283a 	ret

00807938 <_gcvt>:
  807938:	defff104 	addi	sp,sp,-60
  80793c:	dc400815 	stw	r17,32(sp)
  807940:	0005883a 	mov	r2,zero
  807944:	3023883a 	mov	r17,r6
  807948:	dcc00a15 	stw	r19,40(sp)
  80794c:	dc800915 	stw	r18,36(sp)
  807950:	dc000715 	stw	r16,28(sp)
  807954:	2027883a 	mov	r19,r4
  807958:	2821883a 	mov	r16,r5
  80795c:	3825883a 	mov	r18,r7
  807960:	2809883a 	mov	r4,r5
  807964:	100d883a 	mov	r6,r2
  807968:	880b883a 	mov	r5,r17
  80796c:	000f883a 	mov	r7,zero
  807970:	dd800d15 	stw	r22,52(sp)
  807974:	dd400c15 	stw	r21,48(sp)
  807978:	dd000b15 	stw	r20,44(sp)
  80797c:	dfc00e15 	stw	ra,56(sp)
  807980:	dd400f17 	ldw	r21,60(sp)
  807984:	dd801117 	ldw	r22,68(sp)
  807988:	dd001003 	ldbu	r20,64(sp)
  80798c:	080cdf40 	call	80cdf4 <__ltdf2>
  807990:	10008e16 	blt	r2,zero,807bcc <_gcvt+0x294>
  807994:	000d883a 	mov	r6,zero
  807998:	000f883a 	mov	r7,zero
  80799c:	8009883a 	mov	r4,r16
  8079a0:	880b883a 	mov	r5,r17
  8079a4:	080cbd40 	call	80cbd4 <__eqdf2>
  8079a8:	10000e1e 	bne	r2,zero,8079e4 <_gcvt+0xac>
  8079ac:	00800c04 	movi	r2,48
  8079b0:	a8800005 	stb	r2,0(r21)
  8079b4:	a8000045 	stb	zero,1(r21)
  8079b8:	a805883a 	mov	r2,r21
  8079bc:	dfc00e17 	ldw	ra,56(sp)
  8079c0:	dd800d17 	ldw	r22,52(sp)
  8079c4:	dd400c17 	ldw	r21,48(sp)
  8079c8:	dd000b17 	ldw	r20,44(sp)
  8079cc:	dcc00a17 	ldw	r19,40(sp)
  8079d0:	dc800917 	ldw	r18,36(sp)
  8079d4:	dc400817 	ldw	r17,32(sp)
  8079d8:	dc000717 	ldw	r16,28(sp)
  8079dc:	dec00f04 	addi	sp,sp,60
  8079e0:	f800283a 	ret
  8079e4:	00bac734 	movhi	r2,60188
  8079e8:	1090cb44 	addi	r2,r2,17197
  8079ec:	00cfc6b4 	movhi	r3,16154
  8079f0:	18cdb884 	addi	r3,r3,14050
  8079f4:	180f883a 	mov	r7,r3
  8079f8:	8009883a 	mov	r4,r16
  8079fc:	880b883a 	mov	r5,r17
  807a00:	100d883a 	mov	r6,r2
  807a04:	080ce7c0 	call	80ce7c <__ledf2>
  807a08:	00800d16 	blt	zero,r2,807a40 <_gcvt+0x108>
  807a0c:	a0c03fcc 	andi	r3,r20,255
  807a10:	18c0201c 	xori	r3,r3,128
  807a14:	90bfffc4 	addi	r2,r18,-1
  807a18:	18ffe004 	addi	r3,r3,-128
  807a1c:	9809883a 	mov	r4,r19
  807a20:	880f883a 	mov	r7,r17
  807a24:	a80b883a 	mov	r5,r21
  807a28:	800d883a 	mov	r6,r16
  807a2c:	d8800015 	stw	r2,0(sp)
  807a30:	d8c00115 	stw	r3,4(sp)
  807a34:	dd800215 	stw	r22,8(sp)
  807a38:	08077340 	call	807734 <print_e>
  807a3c:	003fde06 	br	8079b8 <_gcvt+0x80>
  807a40:	9009883a 	mov	r4,r18
  807a44:	080a2200 	call	80a220 <_mprec_log10>
  807a48:	180f883a 	mov	r7,r3
  807a4c:	8009883a 	mov	r4,r16
  807a50:	880b883a 	mov	r5,r17
  807a54:	100d883a 	mov	r6,r2
  807a58:	080cd6c0 	call	80cd6c <__gedf2>
  807a5c:	103feb0e 	bge	r2,zero,807a0c <_gcvt+0xd4>
  807a60:	0005883a 	mov	r2,zero
  807a64:	00cffc34 	movhi	r3,16368
  807a68:	180f883a 	mov	r7,r3
  807a6c:	8009883a 	mov	r4,r16
  807a70:	880b883a 	mov	r5,r17
  807a74:	100d883a 	mov	r6,r2
  807a78:	080cdf40 	call	80cdf4 <__ltdf2>
  807a7c:	10005616 	blt	r2,zero,807bd8 <_gcvt+0x2a0>
  807a80:	9809883a 	mov	r4,r19
  807a84:	880d883a 	mov	r6,r17
  807a88:	800b883a 	mov	r5,r16
  807a8c:	01c00084 	movi	r7,2
  807a90:	d8800504 	addi	r2,sp,20
  807a94:	d8800215 	stw	r2,8(sp)
  807a98:	d8c00604 	addi	r3,sp,24
  807a9c:	d8800404 	addi	r2,sp,16
  807aa0:	d8c00315 	stw	r3,12(sp)
  807aa4:	dc800015 	stw	r18,0(sp)
  807aa8:	d8800115 	stw	r2,4(sp)
  807aac:	08061800 	call	806180 <_dtoa_r>
  807ab0:	d9000417 	ldw	r4,16(sp)
  807ab4:	100b883a 	mov	r5,r2
  807ab8:	0089c3c4 	movi	r2,9999
  807abc:	20804b26 	beq	r4,r2,807bec <_gcvt+0x2b4>
  807ac0:	28800003 	ldbu	r2,0(r5)
  807ac4:	10005026 	beq	r2,zero,807c08 <_gcvt+0x2d0>
  807ac8:	0100510e 	bge	zero,r4,807c10 <_gcvt+0x2d8>
  807acc:	a807883a 	mov	r3,r21
  807ad0:	00000106 	br	807ad8 <_gcvt+0x1a0>
  807ad4:	0100130e 	bge	zero,r4,807b24 <_gcvt+0x1ec>
  807ad8:	18800005 	stb	r2,0(r3)
  807adc:	213fffc4 	addi	r4,r4,-1
  807ae0:	d9000415 	stw	r4,16(sp)
  807ae4:	29400044 	addi	r5,r5,1
  807ae8:	28800003 	ldbu	r2,0(r5)
  807aec:	18c00044 	addi	r3,r3,1
  807af0:	94bfffc4 	addi	r18,r18,-1
  807af4:	103ff71e 	bne	r2,zero,807ad4 <_gcvt+0x19c>
  807af8:	01000a0e 	bge	zero,r4,807b24 <_gcvt+0x1ec>
  807afc:	0480090e 	bge	zero,r18,807b24 <_gcvt+0x1ec>
  807b00:	00800c04 	movi	r2,48
  807b04:	00000106 	br	807b0c <_gcvt+0x1d4>
  807b08:	90000526 	beq	r18,zero,807b20 <_gcvt+0x1e8>
  807b0c:	213fffc4 	addi	r4,r4,-1
  807b10:	18800005 	stb	r2,0(r3)
  807b14:	94bfffc4 	addi	r18,r18,-1
  807b18:	18c00044 	addi	r3,r3,1
  807b1c:	013ffa16 	blt	zero,r4,807b08 <_gcvt+0x1d0>
  807b20:	d9000415 	stw	r4,16(sp)
  807b24:	b000021e 	bne	r22,zero,807b30 <_gcvt+0x1f8>
  807b28:	28800007 	ldb	r2,0(r5)
  807b2c:	10002526 	beq	r2,zero,807bc4 <_gcvt+0x28c>
  807b30:	a8c03126 	beq	r21,r3,807bf8 <_gcvt+0x2c0>
  807b34:	00800b84 	movi	r2,46
  807b38:	18800005 	stb	r2,0(r3)
  807b3c:	18c00044 	addi	r3,r3,1
  807b40:	20000b0e 	bge	r4,zero,807b70 <_gcvt+0x238>
  807b44:	04800a0e 	bge	zero,r18,807b70 <_gcvt+0x238>
  807b48:	01800c04 	movi	r6,48
  807b4c:	00000106 	br	807b54 <_gcvt+0x21c>
  807b50:	90000626 	beq	r18,zero,807b6c <_gcvt+0x234>
  807b54:	20800044 	addi	r2,r4,1
  807b58:	19800005 	stb	r6,0(r3)
  807b5c:	94bfffc4 	addi	r18,r18,-1
  807b60:	18c00044 	addi	r3,r3,1
  807b64:	1009883a 	mov	r4,r2
  807b68:	103ff916 	blt	r2,zero,807b50 <_gcvt+0x218>
  807b6c:	d8800415 	stw	r2,16(sp)
  807b70:	28800003 	ldbu	r2,0(r5)
  807b74:	10000926 	beq	r2,zero,807b9c <_gcvt+0x264>
  807b78:	04800216 	blt	zero,r18,807b84 <_gcvt+0x24c>
  807b7c:	00000706 	br	807b9c <_gcvt+0x264>
  807b80:	90000626 	beq	r18,zero,807b9c <_gcvt+0x264>
  807b84:	18800005 	stb	r2,0(r3)
  807b88:	29400044 	addi	r5,r5,1
  807b8c:	28800003 	ldbu	r2,0(r5)
  807b90:	94bfffc4 	addi	r18,r18,-1
  807b94:	18c00044 	addi	r3,r3,1
  807b98:	103ff91e 	bne	r2,zero,807b80 <_gcvt+0x248>
  807b9c:	b0000926 	beq	r22,zero,807bc4 <_gcvt+0x28c>
  807ba0:	0480080e 	bge	zero,r18,807bc4 <_gcvt+0x28c>
  807ba4:	9009883a 	mov	r4,r18
  807ba8:	1805883a 	mov	r2,r3
  807bac:	01400c04 	movi	r5,48
  807bb0:	213fffc4 	addi	r4,r4,-1
  807bb4:	11400005 	stb	r5,0(r2)
  807bb8:	10800044 	addi	r2,r2,1
  807bbc:	203ffc1e 	bne	r4,zero,807bb0 <_gcvt+0x278>
  807bc0:	1c87883a 	add	r3,r3,r18
  807bc4:	18000005 	stb	zero,0(r3)
  807bc8:	003f7b06 	br	8079b8 <_gcvt+0x80>
  807bcc:	88e0003c 	xorhi	r3,r17,32768
  807bd0:	1823883a 	mov	r17,r3
  807bd4:	003f6f06 	br	807994 <_gcvt+0x5c>
  807bd8:	9809883a 	mov	r4,r19
  807bdc:	880d883a 	mov	r6,r17
  807be0:	800b883a 	mov	r5,r16
  807be4:	01c000c4 	movi	r7,3
  807be8:	003fa906 	br	807a90 <_gcvt+0x158>
  807bec:	a809883a 	mov	r4,r21
  807bf0:	080b77c0 	call	80b77c <strcpy>
  807bf4:	003f7006 	br	8079b8 <_gcvt+0x80>
  807bf8:	00800c04 	movi	r2,48
  807bfc:	a8c00044 	addi	r3,r21,1
  807c00:	a8800005 	stb	r2,0(r21)
  807c04:	003fcb06 	br	807b34 <_gcvt+0x1fc>
  807c08:	a807883a 	mov	r3,r21
  807c0c:	003fba06 	br	807af8 <_gcvt+0x1c0>
  807c10:	a807883a 	mov	r3,r21
  807c14:	003fc306 	br	807b24 <_gcvt+0x1ec>

00807c18 <_dcvt>:
  807c18:	defff504 	addi	sp,sp,-44
  807c1c:	d8800d17 	ldw	r2,52(sp)
  807c20:	3011883a 	mov	r8,r6
  807c24:	dc800915 	stw	r18,36(sp)
  807c28:	10ffeec4 	addi	r3,r2,-69
  807c2c:	12c03fcc 	andi	r11,r2,255
  807c30:	19803fcc 	andi	r6,r3,255
  807c34:	5ac0201c 	xori	r11,r11,128
  807c38:	00c00884 	movi	r3,34
  807c3c:	dc400815 	stw	r17,32(sp)
  807c40:	dc000715 	stw	r16,28(sp)
  807c44:	dfc00a15 	stw	ra,40(sp)
  807c48:	2015883a 	mov	r10,r4
  807c4c:	2823883a 	mov	r17,r5
  807c50:	3813883a 	mov	r9,r7
  807c54:	dc000b17 	ldw	r16,44(sp)
  807c58:	dc800e17 	ldw	r18,56(sp)
  807c5c:	5affe004 	addi	r11,r11,-128
  807c60:	19803436 	bltu	r3,r6,807d34 <_dcvt+0x11c>
  807c64:	3185883a 	add	r2,r6,r6
  807c68:	1085883a 	add	r2,r2,r2
  807c6c:	00c02034 	movhi	r3,128
  807c70:	18df2004 	addi	r3,r3,31872
  807c74:	10c5883a 	add	r2,r2,r3
  807c78:	11000017 	ldw	r4,0(r2)
  807c7c:	2000683a 	jmp	r4
  807c80:	00807d50 	cmplti	r2,zero,501
  807c84:	00807d84 	movi	r2,502
  807c88:	00807d0c 	andi	r2,zero,500
  807c8c:	00807d34 	movhi	r2,500
  807c90:	00807d34 	movhi	r2,500
  807c94:	00807d34 	movhi	r2,500
  807c98:	00807d34 	movhi	r2,500
  807c9c:	00807d34 	movhi	r2,500
  807ca0:	00807d34 	movhi	r2,500
  807ca4:	00807d34 	movhi	r2,500
  807ca8:	00807d34 	movhi	r2,500
  807cac:	00807d34 	movhi	r2,500
  807cb0:	00807d34 	movhi	r2,500
  807cb4:	00807d34 	movhi	r2,500
  807cb8:	00807d34 	movhi	r2,500
  807cbc:	00807d34 	movhi	r2,500
  807cc0:	00807d34 	movhi	r2,500
  807cc4:	00807d34 	movhi	r2,500
  807cc8:	00807d34 	movhi	r2,500
  807ccc:	00807d34 	movhi	r2,500
  807cd0:	00807d34 	movhi	r2,500
  807cd4:	00807d34 	movhi	r2,500
  807cd8:	00807d34 	movhi	r2,500
  807cdc:	00807d34 	movhi	r2,500
  807ce0:	00807d34 	movhi	r2,500
  807ce4:	00807d34 	movhi	r2,500
  807ce8:	00807d34 	movhi	r2,500
  807cec:	00807d34 	movhi	r2,500
  807cf0:	00807d34 	movhi	r2,500
  807cf4:	00807d34 	movhi	r2,500
  807cf8:	00807d34 	movhi	r2,500
  807cfc:	00807d34 	movhi	r2,500
  807d00:	00807d50 	cmplti	r2,zero,501
  807d04:	00807d84 	movi	r2,502
  807d08:	00807d0c 	andi	r2,zero,500
  807d0c:	8000011e 	bne	r16,zero,807d14 <_dcvt+0xfc>
  807d10:	04000044 	movi	r16,1
  807d14:	5009883a 	mov	r4,r10
  807d18:	480d883a 	mov	r6,r9
  807d1c:	800f883a 	mov	r7,r16
  807d20:	400b883a 	mov	r5,r8
  807d24:	dac00115 	stw	r11,4(sp)
  807d28:	dc800215 	stw	r18,8(sp)
  807d2c:	dc400015 	stw	r17,0(sp)
  807d30:	08079380 	call	807938 <_gcvt>
  807d34:	8805883a 	mov	r2,r17
  807d38:	dfc00a17 	ldw	ra,40(sp)
  807d3c:	dc800917 	ldw	r18,36(sp)
  807d40:	dc400817 	ldw	r17,32(sp)
  807d44:	dc000717 	ldw	r16,28(sp)
  807d48:	dec00b04 	addi	sp,sp,44
  807d4c:	f800283a 	ret
  807d50:	5009883a 	mov	r4,r10
  807d54:	400d883a 	mov	r6,r8
  807d58:	dc000015 	stw	r16,0(sp)
  807d5c:	dac00115 	stw	r11,4(sp)
  807d60:	dc800215 	stw	r18,8(sp)
  807d64:	08077340 	call	807734 <print_e>
  807d68:	8805883a 	mov	r2,r17
  807d6c:	dfc00a17 	ldw	ra,40(sp)
  807d70:	dc800917 	ldw	r18,36(sp)
  807d74:	dc400817 	ldw	r17,32(sp)
  807d78:	dc000717 	ldw	r16,28(sp)
  807d7c:	dec00b04 	addi	sp,sp,44
  807d80:	f800283a 	ret
  807d84:	80000126 	beq	r16,zero,807d8c <_dcvt+0x174>
  807d88:	04800044 	movi	r18,1
  807d8c:	d8800504 	addi	r2,sp,20
  807d90:	d8c00604 	addi	r3,sp,24
  807d94:	400b883a 	mov	r5,r8
  807d98:	d8800215 	stw	r2,8(sp)
  807d9c:	5009883a 	mov	r4,r10
  807da0:	d8800404 	addi	r2,sp,16
  807da4:	480d883a 	mov	r6,r9
  807da8:	01c000c4 	movi	r7,3
  807dac:	d8c00315 	stw	r3,12(sp)
  807db0:	dc000015 	stw	r16,0(sp)
  807db4:	d8800115 	stw	r2,4(sp)
  807db8:	08061800 	call	806180 <_dtoa_r>
  807dbc:	d9400417 	ldw	r5,16(sp)
  807dc0:	1007883a 	mov	r3,r2
  807dc4:	0089c3c4 	movi	r2,9999
  807dc8:	28804626 	beq	r5,r2,807ee4 <_dcvt+0x2cc>
  807dcc:	18800003 	ldbu	r2,0(r3)
  807dd0:	10004c26 	beq	r2,zero,807f04 <_dcvt+0x2ec>
  807dd4:	0140120e 	bge	zero,r5,807e20 <_dcvt+0x208>
  807dd8:	8809883a 	mov	r4,r17
  807ddc:	180d883a 	mov	r6,r3
  807de0:	00000106 	br	807de8 <_dcvt+0x1d0>
  807de4:	0140100e 	bge	zero,r5,807e28 <_dcvt+0x210>
  807de8:	20800005 	stb	r2,0(r4)
  807dec:	297fffc4 	addi	r5,r5,-1
  807df0:	31800044 	addi	r6,r6,1
  807df4:	d9400415 	stw	r5,16(sp)
  807df8:	30800003 	ldbu	r2,0(r6)
  807dfc:	21000044 	addi	r4,r4,1
  807e00:	103ff81e 	bne	r2,zero,807de4 <_dcvt+0x1cc>
  807e04:	0140080e 	bge	zero,r5,807e28 <_dcvt+0x210>
  807e08:	00800c04 	movi	r2,48
  807e0c:	20800005 	stb	r2,0(r4)
  807e10:	297fffc4 	addi	r5,r5,-1
  807e14:	21000044 	addi	r4,r4,1
  807e18:	d9400415 	stw	r5,16(sp)
  807e1c:	003ff906 	br	807e04 <_dcvt+0x1ec>
  807e20:	8809883a 	mov	r4,r17
  807e24:	180d883a 	mov	r6,r3
  807e28:	9000021e 	bne	r18,zero,807e34 <_dcvt+0x21c>
  807e2c:	30800007 	ldb	r2,0(r6)
  807e30:	10002426 	beq	r2,zero,807ec4 <_dcvt+0x2ac>
  807e34:	19802f26 	beq	r3,r6,807ef4 <_dcvt+0x2dc>
  807e38:	00800b84 	movi	r2,46
  807e3c:	20800005 	stb	r2,0(r4)
  807e40:	21000044 	addi	r4,r4,1
  807e44:	28000b0e 	bge	r5,zero,807e74 <_dcvt+0x25c>
  807e48:	04000216 	blt	zero,r16,807e54 <_dcvt+0x23c>
  807e4c:	00000906 	br	807e74 <_dcvt+0x25c>
  807e50:	80000826 	beq	r16,zero,807e74 <_dcvt+0x25c>
  807e54:	00800c04 	movi	r2,48
  807e58:	28c00044 	addi	r3,r5,1
  807e5c:	20800005 	stb	r2,0(r4)
  807e60:	d8c00415 	stw	r3,16(sp)
  807e64:	21000044 	addi	r4,r4,1
  807e68:	843fffc4 	addi	r16,r16,-1
  807e6c:	180b883a 	mov	r5,r3
  807e70:	183ff716 	blt	r3,zero,807e50 <_dcvt+0x238>
  807e74:	30800003 	ldbu	r2,0(r6)
  807e78:	10000926 	beq	r2,zero,807ea0 <_dcvt+0x288>
  807e7c:	04000216 	blt	zero,r16,807e88 <_dcvt+0x270>
  807e80:	00001006 	br	807ec4 <_dcvt+0x2ac>
  807e84:	80000f26 	beq	r16,zero,807ec4 <_dcvt+0x2ac>
  807e88:	20800005 	stb	r2,0(r4)
  807e8c:	31800044 	addi	r6,r6,1
  807e90:	30800003 	ldbu	r2,0(r6)
  807e94:	21000044 	addi	r4,r4,1
  807e98:	843fffc4 	addi	r16,r16,-1
  807e9c:	103ff91e 	bne	r2,zero,807e84 <_dcvt+0x26c>
  807ea0:	0400080e 	bge	zero,r16,807ec4 <_dcvt+0x2ac>
  807ea4:	2007883a 	mov	r3,r4
  807ea8:	8005883a 	mov	r2,r16
  807eac:	01400c04 	movi	r5,48
  807eb0:	10bfffc4 	addi	r2,r2,-1
  807eb4:	19400005 	stb	r5,0(r3)
  807eb8:	18c00044 	addi	r3,r3,1
  807ebc:	103ffc1e 	bne	r2,zero,807eb0 <_dcvt+0x298>
  807ec0:	2409883a 	add	r4,r4,r16
  807ec4:	8805883a 	mov	r2,r17
  807ec8:	20000005 	stb	zero,0(r4)
  807ecc:	dfc00a17 	ldw	ra,40(sp)
  807ed0:	dc800917 	ldw	r18,36(sp)
  807ed4:	dc400817 	ldw	r17,32(sp)
  807ed8:	dc000717 	ldw	r16,28(sp)
  807edc:	dec00b04 	addi	sp,sp,44
  807ee0:	f800283a 	ret
  807ee4:	180b883a 	mov	r5,r3
  807ee8:	8809883a 	mov	r4,r17
  807eec:	080b77c0 	call	80b77c <strcpy>
  807ef0:	003f9006 	br	807d34 <_dcvt+0x11c>
  807ef4:	00800c04 	movi	r2,48
  807ef8:	20800005 	stb	r2,0(r4)
  807efc:	21000044 	addi	r4,r4,1
  807f00:	003fcd06 	br	807e38 <_dcvt+0x220>
  807f04:	8809883a 	mov	r4,r17
  807f08:	180d883a 	mov	r6,r3
  807f0c:	003fbd06 	br	807e04 <_dcvt+0x1ec>

00807f10 <ecvtbuf>:
  807f10:	defff404 	addi	sp,sp,-48
  807f14:	dc800715 	stw	r18,28(sp)
  807f18:	dc800d17 	ldw	r18,52(sp)
  807f1c:	dd000915 	stw	r20,36(sp)
  807f20:	dcc00815 	stw	r19,32(sp)
  807f24:	dc400615 	stw	r17,24(sp)
  807f28:	dc000515 	stw	r16,20(sp)
  807f2c:	dfc00b15 	stw	ra,44(sp)
  807f30:	dd400a15 	stw	r21,40(sp)
  807f34:	2021883a 	mov	r16,r4
  807f38:	2823883a 	mov	r17,r5
  807f3c:	3027883a 	mov	r19,r6
  807f40:	3829883a 	mov	r20,r7
  807f44:	90002d26 	beq	r18,zero,807ffc <ecvtbuf+0xec>
  807f48:	05402074 	movhi	r21,129
  807f4c:	ad484204 	addi	r21,r21,8456
  807f50:	d8800c17 	ldw	r2,48(sp)
  807f54:	a9000017 	ldw	r4,0(r21)
  807f58:	880d883a 	mov	r6,r17
  807f5c:	d8800215 	stw	r2,8(sp)
  807f60:	800b883a 	mov	r5,r16
  807f64:	d8800404 	addi	r2,sp,16
  807f68:	01c00084 	movi	r7,2
  807f6c:	dd000115 	stw	r20,4(sp)
  807f70:	dcc00015 	stw	r19,0(sp)
  807f74:	d8800315 	stw	r2,12(sp)
  807f78:	08061800 	call	806180 <_dtoa_r>
  807f7c:	1007883a 	mov	r3,r2
  807f80:	d8800417 	ldw	r2,16(sp)
  807f84:	1880252e 	bgeu	r3,r2,80801c <ecvtbuf+0x10c>
  807f88:	900d883a 	mov	r6,r18
  807f8c:	0009883a 	mov	r4,zero
  807f90:	18800003 	ldbu	r2,0(r3)
  807f94:	18c00044 	addi	r3,r3,1
  807f98:	21000044 	addi	r4,r4,1
  807f9c:	30800005 	stb	r2,0(r6)
  807fa0:	d8800417 	ldw	r2,16(sp)
  807fa4:	31800044 	addi	r6,r6,1
  807fa8:	18bff936 	bltu	r3,r2,807f90 <ecvtbuf+0x80>
  807fac:	24c0080e 	bge	r4,r19,807fd0 <ecvtbuf+0xc0>
  807fb0:	9905c83a 	sub	r2,r19,r4
  807fb4:	3007883a 	mov	r3,r6
  807fb8:	1185883a 	add	r2,r2,r6
  807fbc:	01000c04 	movi	r4,48
  807fc0:	19000005 	stb	r4,0(r3)
  807fc4:	18c00044 	addi	r3,r3,1
  807fc8:	10fffd1e 	bne	r2,r3,807fc0 <ecvtbuf+0xb0>
  807fcc:	100d883a 	mov	r6,r2
  807fd0:	30000005 	stb	zero,0(r6)
  807fd4:	9005883a 	mov	r2,r18
  807fd8:	dfc00b17 	ldw	ra,44(sp)
  807fdc:	dd400a17 	ldw	r21,40(sp)
  807fe0:	dd000917 	ldw	r20,36(sp)
  807fe4:	dcc00817 	ldw	r19,32(sp)
  807fe8:	dc800717 	ldw	r18,28(sp)
  807fec:	dc400617 	ldw	r17,24(sp)
  807ff0:	dc000517 	ldw	r16,20(sp)
  807ff4:	dec00c04 	addi	sp,sp,48
  807ff8:	f800283a 	ret
  807ffc:	05402074 	movhi	r21,129
  808000:	ad484204 	addi	r21,r21,8456
  808004:	a9000017 	ldw	r4,0(r21)
  808008:	20801417 	ldw	r2,80(r4)
  80800c:	3080060e 	bge	r6,r2,808028 <ecvtbuf+0x118>
  808010:	a8800017 	ldw	r2,0(r21)
  808014:	14801517 	ldw	r18,84(r2)
  808018:	003fcd06 	br	807f50 <ecvtbuf+0x40>
  80801c:	900d883a 	mov	r6,r18
  808020:	0009883a 	mov	r4,zero
  808024:	003fe106 	br	807fac <ecvtbuf+0x9c>
  808028:	21401517 	ldw	r5,84(r4)
  80802c:	34800044 	addi	r18,r6,1
  808030:	900d883a 	mov	r6,r18
  808034:	080aea00 	call	80aea0 <_realloc_r>
  808038:	1007883a 	mov	r3,r2
  80803c:	10000426 	beq	r2,zero,808050 <ecvtbuf+0x140>
  808040:	a8800017 	ldw	r2,0(r21)
  808044:	10c01515 	stw	r3,84(r2)
  808048:	14801415 	stw	r18,80(r2)
  80804c:	003ff006 	br	808010 <ecvtbuf+0x100>
  808050:	0005883a 	mov	r2,zero
  808054:	003fe006 	br	807fd8 <ecvtbuf+0xc8>

00808058 <fcvtbuf>:
  808058:	defff304 	addi	sp,sp,-52
  80805c:	dc800715 	stw	r18,28(sp)
  808060:	dc800e17 	ldw	r18,56(sp)
  808064:	dd800b15 	stw	r22,44(sp)
  808068:	dd000915 	stw	r20,36(sp)
  80806c:	dcc00815 	stw	r19,32(sp)
  808070:	dc400615 	stw	r17,24(sp)
  808074:	dc000515 	stw	r16,20(sp)
  808078:	dfc00c15 	stw	ra,48(sp)
  80807c:	dd400a15 	stw	r21,40(sp)
  808080:	2021883a 	mov	r16,r4
  808084:	2823883a 	mov	r17,r5
  808088:	3027883a 	mov	r19,r6
  80808c:	3829883a 	mov	r20,r7
  808090:	dd800d17 	ldw	r22,52(sp)
  808094:	90004326 	beq	r18,zero,8081a4 <fcvtbuf+0x14c>
  808098:	05402074 	movhi	r21,129
  80809c:	ad484204 	addi	r21,r21,8456
  8080a0:	0005883a 	mov	r2,zero
  8080a4:	00cffc34 	movhi	r3,16368
  8080a8:	180f883a 	mov	r7,r3
  8080ac:	8009883a 	mov	r4,r16
  8080b0:	880b883a 	mov	r5,r17
  8080b4:	100d883a 	mov	r6,r2
  8080b8:	080cdf40 	call	80cdf4 <__ltdf2>
  8080bc:	1000080e 	bge	r2,zero,8080e0 <fcvtbuf+0x88>
  8080c0:	0005883a 	mov	r2,zero
  8080c4:	00effc34 	movhi	r3,49136
  8080c8:	180f883a 	mov	r7,r3
  8080cc:	8009883a 	mov	r4,r16
  8080d0:	880b883a 	mov	r5,r17
  8080d4:	100d883a 	mov	r6,r2
  8080d8:	080cce40 	call	80cce4 <__gtdf2>
  8080dc:	00802c16 	blt	zero,r2,808190 <fcvtbuf+0x138>
  8080e0:	a9000017 	ldw	r4,0(r21)
  8080e4:	880d883a 	mov	r6,r17
  8080e8:	800b883a 	mov	r5,r16
  8080ec:	01c000c4 	movi	r7,3
  8080f0:	d8800404 	addi	r2,sp,16
  8080f4:	dd800215 	stw	r22,8(sp)
  8080f8:	dcc00015 	stw	r19,0(sp)
  8080fc:	dd000115 	stw	r20,4(sp)
  808100:	d8800315 	stw	r2,12(sp)
  808104:	08061800 	call	806180 <_dtoa_r>
  808108:	1009883a 	mov	r4,r2
  80810c:	d8c00417 	ldw	r3,16(sp)
  808110:	a0800017 	ldw	r2,0(r20)
  808114:	008dc83a 	sub	r6,zero,r2
  808118:	20c02b2e 	bgeu	r4,r3,8081c8 <fcvtbuf+0x170>
  80811c:	9007883a 	mov	r3,r18
  808120:	20800003 	ldbu	r2,0(r4)
  808124:	21000044 	addi	r4,r4,1
  808128:	31800044 	addi	r6,r6,1
  80812c:	18800005 	stb	r2,0(r3)
  808130:	d8800417 	ldw	r2,16(sp)
  808134:	18c00044 	addi	r3,r3,1
  808138:	20bff936 	bltu	r4,r2,808120 <fcvtbuf+0xc8>
  80813c:	34c0080e 	bge	r6,r19,808160 <fcvtbuf+0x108>
  808140:	9985c83a 	sub	r2,r19,r6
  808144:	1809883a 	mov	r4,r3
  808148:	10c5883a 	add	r2,r2,r3
  80814c:	00c00c04 	movi	r3,48
  808150:	20c00005 	stb	r3,0(r4)
  808154:	21000044 	addi	r4,r4,1
  808158:	113ffd1e 	bne	r2,r4,808150 <fcvtbuf+0xf8>
  80815c:	1007883a 	mov	r3,r2
  808160:	18000005 	stb	zero,0(r3)
  808164:	9005883a 	mov	r2,r18
  808168:	dfc00c17 	ldw	ra,48(sp)
  80816c:	dd800b17 	ldw	r22,44(sp)
  808170:	dd400a17 	ldw	r21,40(sp)
  808174:	dd000917 	ldw	r20,36(sp)
  808178:	dcc00817 	ldw	r19,32(sp)
  80817c:	dc800717 	ldw	r18,28(sp)
  808180:	dc400617 	ldw	r17,24(sp)
  808184:	dc000517 	ldw	r16,20(sp)
  808188:	dec00d04 	addi	sp,sp,52
  80818c:	f800283a 	ret
  808190:	a9000017 	ldw	r4,0(r21)
  808194:	880d883a 	mov	r6,r17
  808198:	800b883a 	mov	r5,r16
  80819c:	01c00084 	movi	r7,2
  8081a0:	003fd306 	br	8080f0 <fcvtbuf+0x98>
  8081a4:	05402074 	movhi	r21,129
  8081a8:	ad484204 	addi	r21,r21,8456
  8081ac:	a9000017 	ldw	r4,0(r21)
  8081b0:	30c008c4 	addi	r3,r6,35
  8081b4:	20801417 	ldw	r2,80(r4)
  8081b8:	1880050e 	bge	r3,r2,8081d0 <fcvtbuf+0x178>
  8081bc:	a8800017 	ldw	r2,0(r21)
  8081c0:	14801517 	ldw	r18,84(r2)
  8081c4:	003fb606 	br	8080a0 <fcvtbuf+0x48>
  8081c8:	9007883a 	mov	r3,r18
  8081cc:	003fdb06 	br	80813c <fcvtbuf+0xe4>
  8081d0:	21401517 	ldw	r5,84(r4)
  8081d4:	34800904 	addi	r18,r6,36
  8081d8:	900d883a 	mov	r6,r18
  8081dc:	080aea00 	call	80aea0 <_realloc_r>
  8081e0:	1007883a 	mov	r3,r2
  8081e4:	10000426 	beq	r2,zero,8081f8 <fcvtbuf+0x1a0>
  8081e8:	a8800017 	ldw	r2,0(r21)
  8081ec:	10c01515 	stw	r3,84(r2)
  8081f0:	14801415 	stw	r18,80(r2)
  8081f4:	003ff106 	br	8081bc <fcvtbuf+0x164>
  8081f8:	0005883a 	mov	r2,zero
  8081fc:	003fda06 	br	808168 <fcvtbuf+0x110>

00808200 <_fflush_r>:
  808200:	defffb04 	addi	sp,sp,-20
  808204:	dcc00315 	stw	r19,12(sp)
  808208:	dc800215 	stw	r18,8(sp)
  80820c:	dfc00415 	stw	ra,16(sp)
  808210:	dc400115 	stw	r17,4(sp)
  808214:	dc000015 	stw	r16,0(sp)
  808218:	2027883a 	mov	r19,r4
  80821c:	2825883a 	mov	r18,r5
  808220:	20000226 	beq	r4,zero,80822c <_fflush_r+0x2c>
  808224:	20800e17 	ldw	r2,56(r4)
  808228:	10005626 	beq	r2,zero,808384 <_fflush_r+0x184>
  80822c:	9100030b 	ldhu	r4,12(r18)
  808230:	20ffffcc 	andi	r3,r4,65535
  808234:	18e0001c 	xori	r3,r3,32768
  808238:	18e00004 	addi	r3,r3,-32768
  80823c:	1880020c 	andi	r2,r3,8
  808240:	1000261e 	bne	r2,zero,8082dc <_fflush_r+0xdc>
  808244:	90c00117 	ldw	r3,4(r18)
  808248:	20820014 	ori	r2,r4,2048
  80824c:	9080030d 	sth	r2,12(r18)
  808250:	1009883a 	mov	r4,r2
  808254:	00c0400e 	bge	zero,r3,808358 <_fflush_r+0x158>
  808258:	92000a17 	ldw	r8,40(r18)
  80825c:	40004026 	beq	r8,zero,808360 <_fflush_r+0x160>
  808260:	2084000c 	andi	r2,r4,4096
  808264:	10005326 	beq	r2,zero,8083b4 <_fflush_r+0x1b4>
  808268:	94001417 	ldw	r16,80(r18)
  80826c:	9080030b 	ldhu	r2,12(r18)
  808270:	1080010c 	andi	r2,r2,4
  808274:	1000481e 	bne	r2,zero,808398 <_fflush_r+0x198>
  808278:	91400717 	ldw	r5,28(r18)
  80827c:	9809883a 	mov	r4,r19
  808280:	800d883a 	mov	r6,r16
  808284:	000f883a 	mov	r7,zero
  808288:	403ee83a 	callr	r8
  80828c:	8080261e 	bne	r16,r2,808328 <_fflush_r+0x128>
  808290:	9080030b 	ldhu	r2,12(r18)
  808294:	91000417 	ldw	r4,16(r18)
  808298:	90000115 	stw	zero,4(r18)
  80829c:	10bdffcc 	andi	r2,r2,63487
  8082a0:	10ffffcc 	andi	r3,r2,65535
  8082a4:	18c4000c 	andi	r3,r3,4096
  8082a8:	9080030d 	sth	r2,12(r18)
  8082ac:	91000015 	stw	r4,0(r18)
  8082b0:	18002b26 	beq	r3,zero,808360 <_fflush_r+0x160>
  8082b4:	0007883a 	mov	r3,zero
  8082b8:	1805883a 	mov	r2,r3
  8082bc:	94001415 	stw	r16,80(r18)
  8082c0:	dfc00417 	ldw	ra,16(sp)
  8082c4:	dcc00317 	ldw	r19,12(sp)
  8082c8:	dc800217 	ldw	r18,8(sp)
  8082cc:	dc400117 	ldw	r17,4(sp)
  8082d0:	dc000017 	ldw	r16,0(sp)
  8082d4:	dec00504 	addi	sp,sp,20
  8082d8:	f800283a 	ret
  8082dc:	94400417 	ldw	r17,16(r18)
  8082e0:	88001f26 	beq	r17,zero,808360 <_fflush_r+0x160>
  8082e4:	90800017 	ldw	r2,0(r18)
  8082e8:	18c000cc 	andi	r3,r3,3
  8082ec:	94400015 	stw	r17,0(r18)
  8082f0:	1461c83a 	sub	r16,r2,r17
  8082f4:	18002526 	beq	r3,zero,80838c <_fflush_r+0x18c>
  8082f8:	0005883a 	mov	r2,zero
  8082fc:	90800215 	stw	r2,8(r18)
  808300:	0400170e 	bge	zero,r16,808360 <_fflush_r+0x160>
  808304:	90c00917 	ldw	r3,36(r18)
  808308:	91400717 	ldw	r5,28(r18)
  80830c:	880d883a 	mov	r6,r17
  808310:	800f883a 	mov	r7,r16
  808314:	9809883a 	mov	r4,r19
  808318:	183ee83a 	callr	r3
  80831c:	88a3883a 	add	r17,r17,r2
  808320:	80a1c83a 	sub	r16,r16,r2
  808324:	00bff616 	blt	zero,r2,808300 <_fflush_r+0x100>
  808328:	9080030b 	ldhu	r2,12(r18)
  80832c:	00ffffc4 	movi	r3,-1
  808330:	10801014 	ori	r2,r2,64
  808334:	9080030d 	sth	r2,12(r18)
  808338:	1805883a 	mov	r2,r3
  80833c:	dfc00417 	ldw	ra,16(sp)
  808340:	dcc00317 	ldw	r19,12(sp)
  808344:	dc800217 	ldw	r18,8(sp)
  808348:	dc400117 	ldw	r17,4(sp)
  80834c:	dc000017 	ldw	r16,0(sp)
  808350:	dec00504 	addi	sp,sp,20
  808354:	f800283a 	ret
  808358:	90800f17 	ldw	r2,60(r18)
  80835c:	00bfbe16 	blt	zero,r2,808258 <_fflush_r+0x58>
  808360:	0007883a 	mov	r3,zero
  808364:	1805883a 	mov	r2,r3
  808368:	dfc00417 	ldw	ra,16(sp)
  80836c:	dcc00317 	ldw	r19,12(sp)
  808370:	dc800217 	ldw	r18,8(sp)
  808374:	dc400117 	ldw	r17,4(sp)
  808378:	dc000017 	ldw	r16,0(sp)
  80837c:	dec00504 	addi	sp,sp,20
  808380:	f800283a 	ret
  808384:	08084980 	call	808498 <__sinit>
  808388:	003fa806 	br	80822c <_fflush_r+0x2c>
  80838c:	90800517 	ldw	r2,20(r18)
  808390:	90800215 	stw	r2,8(r18)
  808394:	003fda06 	br	808300 <_fflush_r+0x100>
  808398:	90800117 	ldw	r2,4(r18)
  80839c:	90c00c17 	ldw	r3,48(r18)
  8083a0:	80a1c83a 	sub	r16,r16,r2
  8083a4:	183fb426 	beq	r3,zero,808278 <_fflush_r+0x78>
  8083a8:	90800f17 	ldw	r2,60(r18)
  8083ac:	80a1c83a 	sub	r16,r16,r2
  8083b0:	003fb106 	br	808278 <_fflush_r+0x78>
  8083b4:	91400717 	ldw	r5,28(r18)
  8083b8:	9809883a 	mov	r4,r19
  8083bc:	000d883a 	mov	r6,zero
  8083c0:	01c00044 	movi	r7,1
  8083c4:	403ee83a 	callr	r8
  8083c8:	1021883a 	mov	r16,r2
  8083cc:	00bfffc4 	movi	r2,-1
  8083d0:	80800226 	beq	r16,r2,8083dc <_fflush_r+0x1dc>
  8083d4:	92000a17 	ldw	r8,40(r18)
  8083d8:	003fa406 	br	80826c <_fflush_r+0x6c>
  8083dc:	98c00017 	ldw	r3,0(r19)
  8083e0:	00800744 	movi	r2,29
  8083e4:	18bfde26 	beq	r3,r2,808360 <_fflush_r+0x160>
  8083e8:	9080030b 	ldhu	r2,12(r18)
  8083ec:	8007883a 	mov	r3,r16
  8083f0:	10801014 	ori	r2,r2,64
  8083f4:	9080030d 	sth	r2,12(r18)
  8083f8:	003fcf06 	br	808338 <_fflush_r+0x138>

008083fc <fflush>:
  8083fc:	01402074 	movhi	r5,129
  808400:	29608004 	addi	r5,r5,-32256
  808404:	2007883a 	mov	r3,r4
  808408:	20000526 	beq	r4,zero,808420 <fflush+0x24>
  80840c:	00802074 	movhi	r2,129
  808410:	10884204 	addi	r2,r2,8456
  808414:	11000017 	ldw	r4,0(r2)
  808418:	180b883a 	mov	r5,r3
  80841c:	08082001 	jmpi	808200 <_fflush_r>
  808420:	00802074 	movhi	r2,129
  808424:	10884304 	addi	r2,r2,8460
  808428:	11000017 	ldw	r4,0(r2)
  80842c:	08090001 	jmpi	809000 <_fwalk_reent>

00808430 <std>:
  808430:	00802074 	movhi	r2,129
  808434:	10ad5d04 	addi	r2,r2,-19084
  808438:	20800b15 	stw	r2,44(r4)
  80843c:	00802074 	movhi	r2,129
  808440:	10ad9804 	addi	r2,r2,-18848
  808444:	20800815 	stw	r2,32(r4)
  808448:	00c02074 	movhi	r3,129
  80844c:	18ed7904 	addi	r3,r3,-18972
  808450:	00802074 	movhi	r2,129
  808454:	10ad5f04 	addi	r2,r2,-19076
  808458:	2140030d 	sth	r5,12(r4)
  80845c:	2180038d 	sth	r6,14(r4)
  808460:	20c00915 	stw	r3,36(r4)
  808464:	20800a15 	stw	r2,40(r4)
  808468:	20000015 	stw	zero,0(r4)
  80846c:	20000115 	stw	zero,4(r4)
  808470:	20000215 	stw	zero,8(r4)
  808474:	20000415 	stw	zero,16(r4)
  808478:	20000515 	stw	zero,20(r4)
  80847c:	20000615 	stw	zero,24(r4)
  808480:	21000715 	stw	r4,28(r4)
  808484:	f800283a 	ret

00808488 <__sfp_lock_acquire>:
  808488:	f800283a 	ret

0080848c <__sfp_lock_release>:
  80848c:	f800283a 	ret

00808490 <__sinit_lock_acquire>:
  808490:	f800283a 	ret

00808494 <__sinit_lock_release>:
  808494:	f800283a 	ret

00808498 <__sinit>:
  808498:	20800e17 	ldw	r2,56(r4)
  80849c:	defffd04 	addi	sp,sp,-12
  8084a0:	dc400115 	stw	r17,4(sp)
  8084a4:	dc000015 	stw	r16,0(sp)
  8084a8:	dfc00215 	stw	ra,8(sp)
  8084ac:	04400044 	movi	r17,1
  8084b0:	01400104 	movi	r5,4
  8084b4:	000d883a 	mov	r6,zero
  8084b8:	2021883a 	mov	r16,r4
  8084bc:	2200bb04 	addi	r8,r4,748
  8084c0:	200f883a 	mov	r7,r4
  8084c4:	10000526 	beq	r2,zero,8084dc <__sinit+0x44>
  8084c8:	dfc00217 	ldw	ra,8(sp)
  8084cc:	dc400117 	ldw	r17,4(sp)
  8084d0:	dc000017 	ldw	r16,0(sp)
  8084d4:	dec00304 	addi	sp,sp,12
  8084d8:	f800283a 	ret
  8084dc:	21000117 	ldw	r4,4(r4)
  8084e0:	00802074 	movhi	r2,129
  8084e4:	10a15f04 	addi	r2,r2,-31364
  8084e8:	00c000c4 	movi	r3,3
  8084ec:	80800f15 	stw	r2,60(r16)
  8084f0:	80c0b915 	stw	r3,740(r16)
  8084f4:	8200ba15 	stw	r8,744(r16)
  8084f8:	84400e15 	stw	r17,56(r16)
  8084fc:	8000b815 	stw	zero,736(r16)
  808500:	08084300 	call	808430 <std>
  808504:	81000217 	ldw	r4,8(r16)
  808508:	880d883a 	mov	r6,r17
  80850c:	800f883a 	mov	r7,r16
  808510:	01400284 	movi	r5,10
  808514:	08084300 	call	808430 <std>
  808518:	81000317 	ldw	r4,12(r16)
  80851c:	800f883a 	mov	r7,r16
  808520:	01400484 	movi	r5,18
  808524:	01800084 	movi	r6,2
  808528:	dfc00217 	ldw	ra,8(sp)
  80852c:	dc400117 	ldw	r17,4(sp)
  808530:	dc000017 	ldw	r16,0(sp)
  808534:	dec00304 	addi	sp,sp,12
  808538:	08084301 	jmpi	808430 <std>

0080853c <__fp_lock>:
  80853c:	0005883a 	mov	r2,zero
  808540:	f800283a 	ret

00808544 <__fp_unlock>:
  808544:	0005883a 	mov	r2,zero
  808548:	f800283a 	ret

0080854c <__fp_unlock_all>:
  80854c:	00802074 	movhi	r2,129
  808550:	10884204 	addi	r2,r2,8456
  808554:	11000017 	ldw	r4,0(r2)
  808558:	01402074 	movhi	r5,129
  80855c:	29615104 	addi	r5,r5,-31420
  808560:	08090c81 	jmpi	8090c8 <_fwalk>

00808564 <__fp_lock_all>:
  808564:	00802074 	movhi	r2,129
  808568:	10884204 	addi	r2,r2,8456
  80856c:	11000017 	ldw	r4,0(r2)
  808570:	01402074 	movhi	r5,129
  808574:	29614f04 	addi	r5,r5,-31428
  808578:	08090c81 	jmpi	8090c8 <_fwalk>

0080857c <_cleanup_r>:
  80857c:	01402074 	movhi	r5,129
  808580:	296eb204 	addi	r5,r5,-17720
  808584:	08090c81 	jmpi	8090c8 <_fwalk>

00808588 <_cleanup>:
  808588:	00802074 	movhi	r2,129
  80858c:	10884304 	addi	r2,r2,8460
  808590:	11000017 	ldw	r4,0(r2)
  808594:	080857c1 	jmpi	80857c <_cleanup_r>

00808598 <__sfmoreglue>:
  808598:	defffc04 	addi	sp,sp,-16
  80859c:	dc000015 	stw	r16,0(sp)
  8085a0:	2821883a 	mov	r16,r5
  8085a4:	dc400115 	stw	r17,4(sp)
  8085a8:	01401704 	movi	r5,92
  8085ac:	2023883a 	mov	r17,r4
  8085b0:	8009883a 	mov	r4,r16
  8085b4:	dfc00315 	stw	ra,12(sp)
  8085b8:	dcc00215 	stw	r19,8(sp)
  8085bc:	08032000 	call	803200 <__mulsi3>
  8085c0:	11400304 	addi	r5,r2,12
  8085c4:	8809883a 	mov	r4,r17
  8085c8:	1027883a 	mov	r19,r2
  8085cc:	08093d80 	call	8093d8 <_malloc_r>
  8085d0:	10c00304 	addi	r3,r2,12
  8085d4:	1023883a 	mov	r17,r2
  8085d8:	1809883a 	mov	r4,r3
  8085dc:	980d883a 	mov	r6,r19
  8085e0:	000b883a 	mov	r5,zero
  8085e4:	10000b26 	beq	r2,zero,808614 <__sfmoreglue+0x7c>
  8085e8:	14000115 	stw	r16,4(r2)
  8085ec:	10c00215 	stw	r3,8(r2)
  8085f0:	10000015 	stw	zero,0(r2)
  8085f4:	0809d7c0 	call	809d7c <memset>
  8085f8:	8805883a 	mov	r2,r17
  8085fc:	dfc00317 	ldw	ra,12(sp)
  808600:	dcc00217 	ldw	r19,8(sp)
  808604:	dc400117 	ldw	r17,4(sp)
  808608:	dc000017 	ldw	r16,0(sp)
  80860c:	dec00404 	addi	sp,sp,16
  808610:	f800283a 	ret
  808614:	0023883a 	mov	r17,zero
  808618:	8805883a 	mov	r2,r17
  80861c:	dfc00317 	ldw	ra,12(sp)
  808620:	dcc00217 	ldw	r19,8(sp)
  808624:	dc400117 	ldw	r17,4(sp)
  808628:	dc000017 	ldw	r16,0(sp)
  80862c:	dec00404 	addi	sp,sp,16
  808630:	f800283a 	ret

00808634 <__sfp>:
  808634:	defffd04 	addi	sp,sp,-12
  808638:	00802074 	movhi	r2,129
  80863c:	10884304 	addi	r2,r2,8460
  808640:	dc000015 	stw	r16,0(sp)
  808644:	14000017 	ldw	r16,0(r2)
  808648:	dc400115 	stw	r17,4(sp)
  80864c:	dfc00215 	stw	ra,8(sp)
  808650:	80800e17 	ldw	r2,56(r16)
  808654:	2023883a 	mov	r17,r4
  808658:	10002626 	beq	r2,zero,8086f4 <__sfp+0xc0>
  80865c:	8400b804 	addi	r16,r16,736
  808660:	80800117 	ldw	r2,4(r16)
  808664:	81000217 	ldw	r4,8(r16)
  808668:	10ffffc4 	addi	r3,r2,-1
  80866c:	18000916 	blt	r3,zero,808694 <__sfp+0x60>
  808670:	2080030f 	ldh	r2,12(r4)
  808674:	10000b26 	beq	r2,zero,8086a4 <__sfp+0x70>
  808678:	017fffc4 	movi	r5,-1
  80867c:	00000206 	br	808688 <__sfp+0x54>
  808680:	2080030f 	ldh	r2,12(r4)
  808684:	10000726 	beq	r2,zero,8086a4 <__sfp+0x70>
  808688:	18ffffc4 	addi	r3,r3,-1
  80868c:	21001704 	addi	r4,r4,92
  808690:	197ffb1e 	bne	r3,r5,808680 <__sfp+0x4c>
  808694:	80800017 	ldw	r2,0(r16)
  808698:	10001926 	beq	r2,zero,808700 <__sfp+0xcc>
  80869c:	1021883a 	mov	r16,r2
  8086a0:	003fef06 	br	808660 <__sfp+0x2c>
  8086a4:	00bfffc4 	movi	r2,-1
  8086a8:	00c00044 	movi	r3,1
  8086ac:	2080038d 	sth	r2,14(r4)
  8086b0:	20c0030d 	sth	r3,12(r4)
  8086b4:	20000015 	stw	zero,0(r4)
  8086b8:	20000215 	stw	zero,8(r4)
  8086bc:	20000115 	stw	zero,4(r4)
  8086c0:	20000415 	stw	zero,16(r4)
  8086c4:	20000515 	stw	zero,20(r4)
  8086c8:	20000615 	stw	zero,24(r4)
  8086cc:	20000c15 	stw	zero,48(r4)
  8086d0:	20000d15 	stw	zero,52(r4)
  8086d4:	20001115 	stw	zero,68(r4)
  8086d8:	20001215 	stw	zero,72(r4)
  8086dc:	2005883a 	mov	r2,r4
  8086e0:	dfc00217 	ldw	ra,8(sp)
  8086e4:	dc400117 	ldw	r17,4(sp)
  8086e8:	dc000017 	ldw	r16,0(sp)
  8086ec:	dec00304 	addi	sp,sp,12
  8086f0:	f800283a 	ret
  8086f4:	8009883a 	mov	r4,r16
  8086f8:	08084980 	call	808498 <__sinit>
  8086fc:	003fd706 	br	80865c <__sfp+0x28>
  808700:	8809883a 	mov	r4,r17
  808704:	01400104 	movi	r5,4
  808708:	08085980 	call	808598 <__sfmoreglue>
  80870c:	80800015 	stw	r2,0(r16)
  808710:	103fe21e 	bne	r2,zero,80869c <__sfp+0x68>
  808714:	00800304 	movi	r2,12
  808718:	0009883a 	mov	r4,zero
  80871c:	88800015 	stw	r2,0(r17)
  808720:	003fee06 	br	8086dc <__sfp+0xa8>

00808724 <_malloc_trim_r>:
  808724:	defffb04 	addi	sp,sp,-20
  808728:	dcc00315 	stw	r19,12(sp)
  80872c:	04c02074 	movhi	r19,129
  808730:	9cc2be04 	addi	r19,r19,2808
  808734:	dc800215 	stw	r18,8(sp)
  808738:	dc400115 	stw	r17,4(sp)
  80873c:	dc000015 	stw	r16,0(sp)
  808740:	2823883a 	mov	r17,r5
  808744:	2025883a 	mov	r18,r4
  808748:	dfc00415 	stw	ra,16(sp)
  80874c:	080d97c0 	call	80d97c <__malloc_lock>
  808750:	98800217 	ldw	r2,8(r19)
  808754:	9009883a 	mov	r4,r18
  808758:	000b883a 	mov	r5,zero
  80875c:	10c00117 	ldw	r3,4(r2)
  808760:	00bfff04 	movi	r2,-4
  808764:	18a0703a 	and	r16,r3,r2
  808768:	8463c83a 	sub	r17,r16,r17
  80876c:	8c43fbc4 	addi	r17,r17,4079
  808770:	8822d33a 	srli	r17,r17,12
  808774:	0083ffc4 	movi	r2,4095
  808778:	8c7fffc4 	addi	r17,r17,-1
  80877c:	8822933a 	slli	r17,r17,12
  808780:	1440060e 	bge	r2,r17,80879c <_malloc_trim_r+0x78>
  808784:	080b5040 	call	80b504 <_sbrk_r>
  808788:	98c00217 	ldw	r3,8(r19)
  80878c:	9009883a 	mov	r4,r18
  808790:	044bc83a 	sub	r5,zero,r17
  808794:	80c7883a 	add	r3,r16,r3
  808798:	10c00926 	beq	r2,r3,8087c0 <_malloc_trim_r+0x9c>
  80879c:	080d99c0 	call	80d99c <__malloc_unlock>
  8087a0:	0005883a 	mov	r2,zero
  8087a4:	dfc00417 	ldw	ra,16(sp)
  8087a8:	dcc00317 	ldw	r19,12(sp)
  8087ac:	dc800217 	ldw	r18,8(sp)
  8087b0:	dc400117 	ldw	r17,4(sp)
  8087b4:	dc000017 	ldw	r16,0(sp)
  8087b8:	dec00504 	addi	sp,sp,20
  8087bc:	f800283a 	ret
  8087c0:	9009883a 	mov	r4,r18
  8087c4:	080b5040 	call	80b504 <_sbrk_r>
  8087c8:	844dc83a 	sub	r6,r16,r17
  8087cc:	00ffffc4 	movi	r3,-1
  8087d0:	9009883a 	mov	r4,r18
  8087d4:	000b883a 	mov	r5,zero
  8087d8:	01c02074 	movhi	r7,129
  8087dc:	39cef604 	addi	r7,r7,15320
  8087e0:	31800054 	ori	r6,r6,1
  8087e4:	10c00926 	beq	r2,r3,80880c <_malloc_trim_r+0xe8>
  8087e8:	38800017 	ldw	r2,0(r7)
  8087ec:	98c00217 	ldw	r3,8(r19)
  8087f0:	9009883a 	mov	r4,r18
  8087f4:	1445c83a 	sub	r2,r2,r17
  8087f8:	38800015 	stw	r2,0(r7)
  8087fc:	19800115 	stw	r6,4(r3)
  808800:	080d99c0 	call	80d99c <__malloc_unlock>
  808804:	00800044 	movi	r2,1
  808808:	003fe606 	br	8087a4 <_malloc_trim_r+0x80>
  80880c:	080b5040 	call	80b504 <_sbrk_r>
  808810:	99800217 	ldw	r6,8(r19)
  808814:	100f883a 	mov	r7,r2
  808818:	9009883a 	mov	r4,r18
  80881c:	1187c83a 	sub	r3,r2,r6
  808820:	008003c4 	movi	r2,15
  808824:	19400054 	ori	r5,r3,1
  808828:	10ffdc0e 	bge	r2,r3,80879c <_malloc_trim_r+0x78>
  80882c:	00802074 	movhi	r2,129
  808830:	10884704 	addi	r2,r2,8476
  808834:	10c00017 	ldw	r3,0(r2)
  808838:	00802074 	movhi	r2,129
  80883c:	108ef604 	addi	r2,r2,15320
  808840:	31400115 	stw	r5,4(r6)
  808844:	38c7c83a 	sub	r3,r7,r3
  808848:	10c00015 	stw	r3,0(r2)
  80884c:	003fd306 	br	80879c <_malloc_trim_r+0x78>

00808850 <_free_r>:
  808850:	defffd04 	addi	sp,sp,-12
  808854:	dc400115 	stw	r17,4(sp)
  808858:	dc000015 	stw	r16,0(sp)
  80885c:	dfc00215 	stw	ra,8(sp)
  808860:	2821883a 	mov	r16,r5
  808864:	2023883a 	mov	r17,r4
  808868:	28005a26 	beq	r5,zero,8089d4 <_free_r+0x184>
  80886c:	080d97c0 	call	80d97c <__malloc_lock>
  808870:	823ffe04 	addi	r8,r16,-8
  808874:	41400117 	ldw	r5,4(r8)
  808878:	00bfff84 	movi	r2,-2
  80887c:	02802074 	movhi	r10,129
  808880:	5282be04 	addi	r10,r10,2808
  808884:	288e703a 	and	r7,r5,r2
  808888:	41cd883a 	add	r6,r8,r7
  80888c:	30c00117 	ldw	r3,4(r6)
  808890:	51000217 	ldw	r4,8(r10)
  808894:	00bfff04 	movi	r2,-4
  808898:	1892703a 	and	r9,r3,r2
  80889c:	5017883a 	mov	r11,r10
  8088a0:	31006726 	beq	r6,r4,808a40 <_free_r+0x1f0>
  8088a4:	2880004c 	andi	r2,r5,1
  8088a8:	1005003a 	cmpeq	r2,r2,zero
  8088ac:	32400115 	stw	r9,4(r6)
  8088b0:	10001a1e 	bne	r2,zero,80891c <_free_r+0xcc>
  8088b4:	000b883a 	mov	r5,zero
  8088b8:	3247883a 	add	r3,r6,r9
  8088bc:	18800117 	ldw	r2,4(r3)
  8088c0:	1080004c 	andi	r2,r2,1
  8088c4:	1000231e 	bne	r2,zero,808954 <_free_r+0x104>
  8088c8:	280ac03a 	cmpne	r5,r5,zero
  8088cc:	3a4f883a 	add	r7,r7,r9
  8088d0:	2800451e 	bne	r5,zero,8089e8 <_free_r+0x198>
  8088d4:	31000217 	ldw	r4,8(r6)
  8088d8:	00802074 	movhi	r2,129
  8088dc:	1082c004 	addi	r2,r2,2816
  8088e0:	20807b26 	beq	r4,r2,808ad0 <_free_r+0x280>
  8088e4:	30800317 	ldw	r2,12(r6)
  8088e8:	3a07883a 	add	r3,r7,r8
  8088ec:	19c00015 	stw	r7,0(r3)
  8088f0:	11000215 	stw	r4,8(r2)
  8088f4:	20800315 	stw	r2,12(r4)
  8088f8:	38800054 	ori	r2,r7,1
  8088fc:	40800115 	stw	r2,4(r8)
  808900:	28001a26 	beq	r5,zero,80896c <_free_r+0x11c>
  808904:	8809883a 	mov	r4,r17
  808908:	dfc00217 	ldw	ra,8(sp)
  80890c:	dc400117 	ldw	r17,4(sp)
  808910:	dc000017 	ldw	r16,0(sp)
  808914:	dec00304 	addi	sp,sp,12
  808918:	080d99c1 	jmpi	80d99c <__malloc_unlock>
  80891c:	80bffe17 	ldw	r2,-8(r16)
  808920:	50c00204 	addi	r3,r10,8
  808924:	4091c83a 	sub	r8,r8,r2
  808928:	41000217 	ldw	r4,8(r8)
  80892c:	388f883a 	add	r7,r7,r2
  808930:	20c06126 	beq	r4,r3,808ab8 <_free_r+0x268>
  808934:	40800317 	ldw	r2,12(r8)
  808938:	3247883a 	add	r3,r6,r9
  80893c:	000b883a 	mov	r5,zero
  808940:	11000215 	stw	r4,8(r2)
  808944:	20800315 	stw	r2,12(r4)
  808948:	18800117 	ldw	r2,4(r3)
  80894c:	1080004c 	andi	r2,r2,1
  808950:	103fdd26 	beq	r2,zero,8088c8 <_free_r+0x78>
  808954:	38800054 	ori	r2,r7,1
  808958:	3a07883a 	add	r3,r7,r8
  80895c:	280ac03a 	cmpne	r5,r5,zero
  808960:	40800115 	stw	r2,4(r8)
  808964:	19c00015 	stw	r7,0(r3)
  808968:	283fe61e 	bne	r5,zero,808904 <_free_r+0xb4>
  80896c:	00807fc4 	movi	r2,511
  808970:	11c01f2e 	bgeu	r2,r7,8089f0 <_free_r+0x1a0>
  808974:	3806d27a 	srli	r3,r7,9
  808978:	1800481e 	bne	r3,zero,808a9c <_free_r+0x24c>
  80897c:	3804d0fa 	srli	r2,r7,3
  808980:	100690fa 	slli	r3,r2,3
  808984:	1acd883a 	add	r6,r3,r11
  808988:	31400217 	ldw	r5,8(r6)
  80898c:	31405926 	beq	r6,r5,808af4 <_free_r+0x2a4>
  808990:	28800117 	ldw	r2,4(r5)
  808994:	00ffff04 	movi	r3,-4
  808998:	10c4703a 	and	r2,r2,r3
  80899c:	3880022e 	bgeu	r7,r2,8089a8 <_free_r+0x158>
  8089a0:	29400217 	ldw	r5,8(r5)
  8089a4:	317ffa1e 	bne	r6,r5,808990 <_free_r+0x140>
  8089a8:	29800317 	ldw	r6,12(r5)
  8089ac:	41800315 	stw	r6,12(r8)
  8089b0:	41400215 	stw	r5,8(r8)
  8089b4:	8809883a 	mov	r4,r17
  8089b8:	2a000315 	stw	r8,12(r5)
  8089bc:	32000215 	stw	r8,8(r6)
  8089c0:	dfc00217 	ldw	ra,8(sp)
  8089c4:	dc400117 	ldw	r17,4(sp)
  8089c8:	dc000017 	ldw	r16,0(sp)
  8089cc:	dec00304 	addi	sp,sp,12
  8089d0:	080d99c1 	jmpi	80d99c <__malloc_unlock>
  8089d4:	dfc00217 	ldw	ra,8(sp)
  8089d8:	dc400117 	ldw	r17,4(sp)
  8089dc:	dc000017 	ldw	r16,0(sp)
  8089e0:	dec00304 	addi	sp,sp,12
  8089e4:	f800283a 	ret
  8089e8:	31000217 	ldw	r4,8(r6)
  8089ec:	003fbd06 	br	8088e4 <_free_r+0x94>
  8089f0:	3806d0fa 	srli	r3,r7,3
  8089f4:	00800044 	movi	r2,1
  8089f8:	51400117 	ldw	r5,4(r10)
  8089fc:	180890fa 	slli	r4,r3,3
  808a00:	1807d0ba 	srai	r3,r3,2
  808a04:	22c9883a 	add	r4,r4,r11
  808a08:	21800217 	ldw	r6,8(r4)
  808a0c:	10c4983a 	sll	r2,r2,r3
  808a10:	41000315 	stw	r4,12(r8)
  808a14:	41800215 	stw	r6,8(r8)
  808a18:	288ab03a 	or	r5,r5,r2
  808a1c:	22000215 	stw	r8,8(r4)
  808a20:	8809883a 	mov	r4,r17
  808a24:	51400115 	stw	r5,4(r10)
  808a28:	32000315 	stw	r8,12(r6)
  808a2c:	dfc00217 	ldw	ra,8(sp)
  808a30:	dc400117 	ldw	r17,4(sp)
  808a34:	dc000017 	ldw	r16,0(sp)
  808a38:	dec00304 	addi	sp,sp,12
  808a3c:	080d99c1 	jmpi	80d99c <__malloc_unlock>
  808a40:	2880004c 	andi	r2,r5,1
  808a44:	3a4d883a 	add	r6,r7,r9
  808a48:	1000071e 	bne	r2,zero,808a68 <_free_r+0x218>
  808a4c:	80bffe17 	ldw	r2,-8(r16)
  808a50:	4091c83a 	sub	r8,r8,r2
  808a54:	41000317 	ldw	r4,12(r8)
  808a58:	40c00217 	ldw	r3,8(r8)
  808a5c:	308d883a 	add	r6,r6,r2
  808a60:	20c00215 	stw	r3,8(r4)
  808a64:	19000315 	stw	r4,12(r3)
  808a68:	00802074 	movhi	r2,129
  808a6c:	10884604 	addi	r2,r2,8472
  808a70:	11000017 	ldw	r4,0(r2)
  808a74:	30c00054 	ori	r3,r6,1
  808a78:	52000215 	stw	r8,8(r10)
  808a7c:	40c00115 	stw	r3,4(r8)
  808a80:	313fa036 	bltu	r6,r4,808904 <_free_r+0xb4>
  808a84:	00802074 	movhi	r2,129
  808a88:	108eec04 	addi	r2,r2,15280
  808a8c:	11400017 	ldw	r5,0(r2)
  808a90:	8809883a 	mov	r4,r17
  808a94:	08087240 	call	808724 <_malloc_trim_r>
  808a98:	003f9a06 	br	808904 <_free_r+0xb4>
  808a9c:	00800104 	movi	r2,4
  808aa0:	10c0072e 	bgeu	r2,r3,808ac0 <_free_r+0x270>
  808aa4:	00800504 	movi	r2,20
  808aa8:	10c01936 	bltu	r2,r3,808b10 <_free_r+0x2c0>
  808aac:	188016c4 	addi	r2,r3,91
  808ab0:	100690fa 	slli	r3,r2,3
  808ab4:	003fb306 	br	808984 <_free_r+0x134>
  808ab8:	01400044 	movi	r5,1
  808abc:	003f7e06 	br	8088b8 <_free_r+0x68>
  808ac0:	3804d1ba 	srli	r2,r7,6
  808ac4:	10800e04 	addi	r2,r2,56
  808ac8:	100690fa 	slli	r3,r2,3
  808acc:	003fad06 	br	808984 <_free_r+0x134>
  808ad0:	22000315 	stw	r8,12(r4)
  808ad4:	22000215 	stw	r8,8(r4)
  808ad8:	3a05883a 	add	r2,r7,r8
  808adc:	38c00054 	ori	r3,r7,1
  808ae0:	11c00015 	stw	r7,0(r2)
  808ae4:	41000215 	stw	r4,8(r8)
  808ae8:	40c00115 	stw	r3,4(r8)
  808aec:	41000315 	stw	r4,12(r8)
  808af0:	003f8406 	br	808904 <_free_r+0xb4>
  808af4:	1005d0ba 	srai	r2,r2,2
  808af8:	00c00044 	movi	r3,1
  808afc:	51000117 	ldw	r4,4(r10)
  808b00:	1886983a 	sll	r3,r3,r2
  808b04:	20c8b03a 	or	r4,r4,r3
  808b08:	51000115 	stw	r4,4(r10)
  808b0c:	003fa706 	br	8089ac <_free_r+0x15c>
  808b10:	00801504 	movi	r2,84
  808b14:	10c00436 	bltu	r2,r3,808b28 <_free_r+0x2d8>
  808b18:	3804d33a 	srli	r2,r7,12
  808b1c:	10801b84 	addi	r2,r2,110
  808b20:	100690fa 	slli	r3,r2,3
  808b24:	003f9706 	br	808984 <_free_r+0x134>
  808b28:	00805504 	movi	r2,340
  808b2c:	10c00436 	bltu	r2,r3,808b40 <_free_r+0x2f0>
  808b30:	3804d3fa 	srli	r2,r7,15
  808b34:	10801dc4 	addi	r2,r2,119
  808b38:	100690fa 	slli	r3,r2,3
  808b3c:	003f9106 	br	808984 <_free_r+0x134>
  808b40:	00815504 	movi	r2,1364
  808b44:	10c0032e 	bgeu	r2,r3,808b54 <_free_r+0x304>
  808b48:	00801f84 	movi	r2,126
  808b4c:	00c0fc04 	movi	r3,1008
  808b50:	003f8c06 	br	808984 <_free_r+0x134>
  808b54:	3804d4ba 	srli	r2,r7,18
  808b58:	10801f04 	addi	r2,r2,124
  808b5c:	100690fa 	slli	r3,r2,3
  808b60:	003f8806 	br	808984 <_free_r+0x134>

00808b64 <__sfvwrite_r>:
  808b64:	30800217 	ldw	r2,8(r6)
  808b68:	defff504 	addi	sp,sp,-44
  808b6c:	df000915 	stw	fp,36(sp)
  808b70:	dd800715 	stw	r22,28(sp)
  808b74:	dc800315 	stw	r18,12(sp)
  808b78:	dfc00a15 	stw	ra,40(sp)
  808b7c:	ddc00815 	stw	r23,32(sp)
  808b80:	dd400615 	stw	r21,24(sp)
  808b84:	dd000515 	stw	r20,20(sp)
  808b88:	dcc00415 	stw	r19,16(sp)
  808b8c:	dc400215 	stw	r17,8(sp)
  808b90:	dc000115 	stw	r16,4(sp)
  808b94:	302d883a 	mov	r22,r6
  808b98:	2039883a 	mov	fp,r4
  808b9c:	2825883a 	mov	r18,r5
  808ba0:	10001c26 	beq	r2,zero,808c14 <__sfvwrite_r+0xb0>
  808ba4:	29c0030b 	ldhu	r7,12(r5)
  808ba8:	3880020c 	andi	r2,r7,8
  808bac:	10002726 	beq	r2,zero,808c4c <__sfvwrite_r+0xe8>
  808bb0:	28800417 	ldw	r2,16(r5)
  808bb4:	10002526 	beq	r2,zero,808c4c <__sfvwrite_r+0xe8>
  808bb8:	3880008c 	andi	r2,r7,2
  808bbc:	b5400017 	ldw	r21,0(r22)
  808bc0:	10002826 	beq	r2,zero,808c64 <__sfvwrite_r+0x100>
  808bc4:	0021883a 	mov	r16,zero
  808bc8:	0023883a 	mov	r17,zero
  808bcc:	880d883a 	mov	r6,r17
  808bd0:	e009883a 	mov	r4,fp
  808bd4:	00810004 	movi	r2,1024
  808bd8:	80006e26 	beq	r16,zero,808d94 <__sfvwrite_r+0x230>
  808bdc:	800f883a 	mov	r7,r16
  808be0:	91400717 	ldw	r5,28(r18)
  808be4:	1400012e 	bgeu	r2,r16,808bec <__sfvwrite_r+0x88>
  808be8:	100f883a 	mov	r7,r2
  808bec:	90c00917 	ldw	r3,36(r18)
  808bf0:	183ee83a 	callr	r3
  808bf4:	1007883a 	mov	r3,r2
  808bf8:	80a1c83a 	sub	r16,r16,r2
  808bfc:	88a3883a 	add	r17,r17,r2
  808c00:	00806d0e 	bge	zero,r2,808db8 <__sfvwrite_r+0x254>
  808c04:	b0800217 	ldw	r2,8(r22)
  808c08:	10c5c83a 	sub	r2,r2,r3
  808c0c:	b0800215 	stw	r2,8(r22)
  808c10:	103fee1e 	bne	r2,zero,808bcc <__sfvwrite_r+0x68>
  808c14:	0009883a 	mov	r4,zero
  808c18:	2005883a 	mov	r2,r4
  808c1c:	dfc00a17 	ldw	ra,40(sp)
  808c20:	df000917 	ldw	fp,36(sp)
  808c24:	ddc00817 	ldw	r23,32(sp)
  808c28:	dd800717 	ldw	r22,28(sp)
  808c2c:	dd400617 	ldw	r21,24(sp)
  808c30:	dd000517 	ldw	r20,20(sp)
  808c34:	dcc00417 	ldw	r19,16(sp)
  808c38:	dc800317 	ldw	r18,12(sp)
  808c3c:	dc400217 	ldw	r17,8(sp)
  808c40:	dc000117 	ldw	r16,4(sp)
  808c44:	dec00b04 	addi	sp,sp,44
  808c48:	f800283a 	ret
  808c4c:	0805e000 	call	805e00 <__swsetup_r>
  808c50:	1000e41e 	bne	r2,zero,808fe4 <__sfvwrite_r+0x480>
  808c54:	91c0030b 	ldhu	r7,12(r18)
  808c58:	b5400017 	ldw	r21,0(r22)
  808c5c:	3880008c 	andi	r2,r7,2
  808c60:	103fd81e 	bne	r2,zero,808bc4 <__sfvwrite_r+0x60>
  808c64:	3880004c 	andi	r2,r7,1
  808c68:	1005003a 	cmpeq	r2,r2,zero
  808c6c:	10005726 	beq	r2,zero,808dcc <__sfvwrite_r+0x268>
  808c70:	0029883a 	mov	r20,zero
  808c74:	002f883a 	mov	r23,zero
  808c78:	a0004226 	beq	r20,zero,808d84 <__sfvwrite_r+0x220>
  808c7c:	3880800c 	andi	r2,r7,512
  808c80:	94000217 	ldw	r16,8(r18)
  808c84:	10008b26 	beq	r2,zero,808eb4 <__sfvwrite_r+0x350>
  808c88:	800d883a 	mov	r6,r16
  808c8c:	a400a536 	bltu	r20,r16,808f24 <__sfvwrite_r+0x3c0>
  808c90:	3881200c 	andi	r2,r7,1152
  808c94:	10002726 	beq	r2,zero,808d34 <__sfvwrite_r+0x1d0>
  808c98:	90800517 	ldw	r2,20(r18)
  808c9c:	92000417 	ldw	r8,16(r18)
  808ca0:	91400017 	ldw	r5,0(r18)
  808ca4:	1087883a 	add	r3,r2,r2
  808ca8:	1887883a 	add	r3,r3,r2
  808cac:	1808d7fa 	srli	r4,r3,31
  808cb0:	2a21c83a 	sub	r16,r5,r8
  808cb4:	80800044 	addi	r2,r16,1
  808cb8:	20c9883a 	add	r4,r4,r3
  808cbc:	2027d07a 	srai	r19,r4,1
  808cc0:	a085883a 	add	r2,r20,r2
  808cc4:	980d883a 	mov	r6,r19
  808cc8:	9880022e 	bgeu	r19,r2,808cd4 <__sfvwrite_r+0x170>
  808ccc:	1027883a 	mov	r19,r2
  808cd0:	100d883a 	mov	r6,r2
  808cd4:	3881000c 	andi	r2,r7,1024
  808cd8:	1000b826 	beq	r2,zero,808fbc <__sfvwrite_r+0x458>
  808cdc:	300b883a 	mov	r5,r6
  808ce0:	e009883a 	mov	r4,fp
  808ce4:	08093d80 	call	8093d8 <_malloc_r>
  808ce8:	10003126 	beq	r2,zero,808db0 <__sfvwrite_r+0x24c>
  808cec:	91400417 	ldw	r5,16(r18)
  808cf0:	1009883a 	mov	r4,r2
  808cf4:	800d883a 	mov	r6,r16
  808cf8:	1023883a 	mov	r17,r2
  808cfc:	0809bfc0 	call	809bfc <memcpy>
  808d00:	90c0030b 	ldhu	r3,12(r18)
  808d04:	00beffc4 	movi	r2,-1025
  808d08:	1886703a 	and	r3,r3,r2
  808d0c:	18c02014 	ori	r3,r3,128
  808d10:	90c0030d 	sth	r3,12(r18)
  808d14:	9c07c83a 	sub	r3,r19,r16
  808d18:	8c05883a 	add	r2,r17,r16
  808d1c:	a00d883a 	mov	r6,r20
  808d20:	a021883a 	mov	r16,r20
  808d24:	90800015 	stw	r2,0(r18)
  808d28:	90c00215 	stw	r3,8(r18)
  808d2c:	94400415 	stw	r17,16(r18)
  808d30:	94c00515 	stw	r19,20(r18)
  808d34:	91000017 	ldw	r4,0(r18)
  808d38:	b80b883a 	mov	r5,r23
  808d3c:	a023883a 	mov	r17,r20
  808d40:	0809c9c0 	call	809c9c <memmove>
  808d44:	90c00217 	ldw	r3,8(r18)
  808d48:	90800017 	ldw	r2,0(r18)
  808d4c:	a027883a 	mov	r19,r20
  808d50:	1c07c83a 	sub	r3,r3,r16
  808d54:	1405883a 	add	r2,r2,r16
  808d58:	90c00215 	stw	r3,8(r18)
  808d5c:	a021883a 	mov	r16,r20
  808d60:	90800015 	stw	r2,0(r18)
  808d64:	b0800217 	ldw	r2,8(r22)
  808d68:	1405c83a 	sub	r2,r2,r16
  808d6c:	b0800215 	stw	r2,8(r22)
  808d70:	103fa826 	beq	r2,zero,808c14 <__sfvwrite_r+0xb0>
  808d74:	a469c83a 	sub	r20,r20,r17
  808d78:	91c0030b 	ldhu	r7,12(r18)
  808d7c:	bcef883a 	add	r23,r23,r19
  808d80:	a03fbe1e 	bne	r20,zero,808c7c <__sfvwrite_r+0x118>
  808d84:	adc00017 	ldw	r23,0(r21)
  808d88:	ad000117 	ldw	r20,4(r21)
  808d8c:	ad400204 	addi	r21,r21,8
  808d90:	003fb906 	br	808c78 <__sfvwrite_r+0x114>
  808d94:	ac400017 	ldw	r17,0(r21)
  808d98:	ac000117 	ldw	r16,4(r21)
  808d9c:	ad400204 	addi	r21,r21,8
  808da0:	003f8a06 	br	808bcc <__sfvwrite_r+0x68>
  808da4:	91400417 	ldw	r5,16(r18)
  808da8:	e009883a 	mov	r4,fp
  808dac:	08088500 	call	808850 <_free_r>
  808db0:	00800304 	movi	r2,12
  808db4:	e0800015 	stw	r2,0(fp)
  808db8:	9080030b 	ldhu	r2,12(r18)
  808dbc:	013fffc4 	movi	r4,-1
  808dc0:	10801014 	ori	r2,r2,64
  808dc4:	9080030d 	sth	r2,12(r18)
  808dc8:	003f9306 	br	808c18 <__sfvwrite_r+0xb4>
  808dcc:	0027883a 	mov	r19,zero
  808dd0:	002f883a 	mov	r23,zero
  808dd4:	d8000015 	stw	zero,0(sp)
  808dd8:	0029883a 	mov	r20,zero
  808ddc:	98001e26 	beq	r19,zero,808e58 <__sfvwrite_r+0x2f4>
  808de0:	d8c00017 	ldw	r3,0(sp)
  808de4:	1804c03a 	cmpne	r2,r3,zero
  808de8:	10005e26 	beq	r2,zero,808f64 <__sfvwrite_r+0x400>
  808dec:	9821883a 	mov	r16,r19
  808df0:	a4c0012e 	bgeu	r20,r19,808df8 <__sfvwrite_r+0x294>
  808df4:	a021883a 	mov	r16,r20
  808df8:	91000017 	ldw	r4,0(r18)
  808dfc:	90800417 	ldw	r2,16(r18)
  808e00:	91800217 	ldw	r6,8(r18)
  808e04:	91c00517 	ldw	r7,20(r18)
  808e08:	1100022e 	bgeu	r2,r4,808e14 <__sfvwrite_r+0x2b0>
  808e0c:	31e3883a 	add	r17,r6,r7
  808e10:	8c001616 	blt	r17,r16,808e6c <__sfvwrite_r+0x308>
  808e14:	81c03816 	blt	r16,r7,808ef8 <__sfvwrite_r+0x394>
  808e18:	90c00917 	ldw	r3,36(r18)
  808e1c:	91400717 	ldw	r5,28(r18)
  808e20:	e009883a 	mov	r4,fp
  808e24:	b80d883a 	mov	r6,r23
  808e28:	183ee83a 	callr	r3
  808e2c:	1023883a 	mov	r17,r2
  808e30:	00bfe10e 	bge	zero,r2,808db8 <__sfvwrite_r+0x254>
  808e34:	a469c83a 	sub	r20,r20,r17
  808e38:	a0001826 	beq	r20,zero,808e9c <__sfvwrite_r+0x338>
  808e3c:	b0800217 	ldw	r2,8(r22)
  808e40:	1445c83a 	sub	r2,r2,r17
  808e44:	b0800215 	stw	r2,8(r22)
  808e48:	103f7226 	beq	r2,zero,808c14 <__sfvwrite_r+0xb0>
  808e4c:	9c67c83a 	sub	r19,r19,r17
  808e50:	bc6f883a 	add	r23,r23,r17
  808e54:	983fe21e 	bne	r19,zero,808de0 <__sfvwrite_r+0x27c>
  808e58:	adc00017 	ldw	r23,0(r21)
  808e5c:	acc00117 	ldw	r19,4(r21)
  808e60:	ad400204 	addi	r21,r21,8
  808e64:	d8000015 	stw	zero,0(sp)
  808e68:	003fdc06 	br	808ddc <__sfvwrite_r+0x278>
  808e6c:	b80b883a 	mov	r5,r23
  808e70:	880d883a 	mov	r6,r17
  808e74:	0809c9c0 	call	809c9c <memmove>
  808e78:	90c00017 	ldw	r3,0(r18)
  808e7c:	e009883a 	mov	r4,fp
  808e80:	900b883a 	mov	r5,r18
  808e84:	1c47883a 	add	r3,r3,r17
  808e88:	90c00015 	stw	r3,0(r18)
  808e8c:	08082000 	call	808200 <_fflush_r>
  808e90:	103fc91e 	bne	r2,zero,808db8 <__sfvwrite_r+0x254>
  808e94:	a469c83a 	sub	r20,r20,r17
  808e98:	a03fe81e 	bne	r20,zero,808e3c <__sfvwrite_r+0x2d8>
  808e9c:	e009883a 	mov	r4,fp
  808ea0:	900b883a 	mov	r5,r18
  808ea4:	08082000 	call	808200 <_fflush_r>
  808ea8:	103fc31e 	bne	r2,zero,808db8 <__sfvwrite_r+0x254>
  808eac:	d8000015 	stw	zero,0(sp)
  808eb0:	003fe206 	br	808e3c <__sfvwrite_r+0x2d8>
  808eb4:	91000017 	ldw	r4,0(r18)
  808eb8:	90800417 	ldw	r2,16(r18)
  808ebc:	1100022e 	bgeu	r2,r4,808ec8 <__sfvwrite_r+0x364>
  808ec0:	8023883a 	mov	r17,r16
  808ec4:	85003136 	bltu	r16,r20,808f8c <__sfvwrite_r+0x428>
  808ec8:	91c00517 	ldw	r7,20(r18)
  808ecc:	a1c01836 	bltu	r20,r7,808f30 <__sfvwrite_r+0x3cc>
  808ed0:	90c00917 	ldw	r3,36(r18)
  808ed4:	91400717 	ldw	r5,28(r18)
  808ed8:	e009883a 	mov	r4,fp
  808edc:	b80d883a 	mov	r6,r23
  808ee0:	183ee83a 	callr	r3
  808ee4:	1021883a 	mov	r16,r2
  808ee8:	00bfb30e 	bge	zero,r2,808db8 <__sfvwrite_r+0x254>
  808eec:	1023883a 	mov	r17,r2
  808ef0:	1027883a 	mov	r19,r2
  808ef4:	003f9b06 	br	808d64 <__sfvwrite_r+0x200>
  808ef8:	b80b883a 	mov	r5,r23
  808efc:	800d883a 	mov	r6,r16
  808f00:	0809c9c0 	call	809c9c <memmove>
  808f04:	90c00217 	ldw	r3,8(r18)
  808f08:	90800017 	ldw	r2,0(r18)
  808f0c:	8023883a 	mov	r17,r16
  808f10:	1c07c83a 	sub	r3,r3,r16
  808f14:	1405883a 	add	r2,r2,r16
  808f18:	90c00215 	stw	r3,8(r18)
  808f1c:	90800015 	stw	r2,0(r18)
  808f20:	003fc406 	br	808e34 <__sfvwrite_r+0x2d0>
  808f24:	a00d883a 	mov	r6,r20
  808f28:	a021883a 	mov	r16,r20
  808f2c:	003f8106 	br	808d34 <__sfvwrite_r+0x1d0>
  808f30:	b80b883a 	mov	r5,r23
  808f34:	a00d883a 	mov	r6,r20
  808f38:	0809c9c0 	call	809c9c <memmove>
  808f3c:	90c00217 	ldw	r3,8(r18)
  808f40:	90800017 	ldw	r2,0(r18)
  808f44:	a021883a 	mov	r16,r20
  808f48:	1d07c83a 	sub	r3,r3,r20
  808f4c:	1505883a 	add	r2,r2,r20
  808f50:	a023883a 	mov	r17,r20
  808f54:	a027883a 	mov	r19,r20
  808f58:	90c00215 	stw	r3,8(r18)
  808f5c:	90800015 	stw	r2,0(r18)
  808f60:	003f8006 	br	808d64 <__sfvwrite_r+0x200>
  808f64:	b809883a 	mov	r4,r23
  808f68:	01400284 	movi	r5,10
  808f6c:	980d883a 	mov	r6,r19
  808f70:	0809b180 	call	809b18 <memchr>
  808f74:	10001726 	beq	r2,zero,808fd4 <__sfvwrite_r+0x470>
  808f78:	15c5c83a 	sub	r2,r2,r23
  808f7c:	15000044 	addi	r20,r2,1
  808f80:	00800044 	movi	r2,1
  808f84:	d8800015 	stw	r2,0(sp)
  808f88:	003f9806 	br	808dec <__sfvwrite_r+0x288>
  808f8c:	b80b883a 	mov	r5,r23
  808f90:	800d883a 	mov	r6,r16
  808f94:	0809c9c0 	call	809c9c <memmove>
  808f98:	90c00017 	ldw	r3,0(r18)
  808f9c:	e009883a 	mov	r4,fp
  808fa0:	900b883a 	mov	r5,r18
  808fa4:	1c07883a 	add	r3,r3,r16
  808fa8:	90c00015 	stw	r3,0(r18)
  808fac:	8027883a 	mov	r19,r16
  808fb0:	08082000 	call	808200 <_fflush_r>
  808fb4:	103f6b26 	beq	r2,zero,808d64 <__sfvwrite_r+0x200>
  808fb8:	003f7f06 	br	808db8 <__sfvwrite_r+0x254>
  808fbc:	400b883a 	mov	r5,r8
  808fc0:	e009883a 	mov	r4,fp
  808fc4:	080aea00 	call	80aea0 <_realloc_r>
  808fc8:	103f7626 	beq	r2,zero,808da4 <__sfvwrite_r+0x240>
  808fcc:	1023883a 	mov	r17,r2
  808fd0:	003f5006 	br	808d14 <__sfvwrite_r+0x1b0>
  808fd4:	00c00044 	movi	r3,1
  808fd8:	9d000044 	addi	r20,r19,1
  808fdc:	d8c00015 	stw	r3,0(sp)
  808fe0:	003f8206 	br	808dec <__sfvwrite_r+0x288>
  808fe4:	9080030b 	ldhu	r2,12(r18)
  808fe8:	00c00244 	movi	r3,9
  808fec:	013fffc4 	movi	r4,-1
  808ff0:	10801014 	ori	r2,r2,64
  808ff4:	9080030d 	sth	r2,12(r18)
  808ff8:	e0c00015 	stw	r3,0(fp)
  808ffc:	003f0606 	br	808c18 <__sfvwrite_r+0xb4>

00809000 <_fwalk_reent>:
  809000:	defff704 	addi	sp,sp,-36
  809004:	dcc00315 	stw	r19,12(sp)
  809008:	24c0b804 	addi	r19,r4,736
  80900c:	dd800615 	stw	r22,24(sp)
  809010:	dd400515 	stw	r21,20(sp)
  809014:	dfc00815 	stw	ra,32(sp)
  809018:	ddc00715 	stw	r23,28(sp)
  80901c:	dd000415 	stw	r20,16(sp)
  809020:	dc800215 	stw	r18,8(sp)
  809024:	dc400115 	stw	r17,4(sp)
  809028:	dc000015 	stw	r16,0(sp)
  80902c:	202b883a 	mov	r21,r4
  809030:	282d883a 	mov	r22,r5
  809034:	08084880 	call	808488 <__sfp_lock_acquire>
  809038:	98002126 	beq	r19,zero,8090c0 <_fwalk_reent+0xc0>
  80903c:	002f883a 	mov	r23,zero
  809040:	9c800117 	ldw	r18,4(r19)
  809044:	9c000217 	ldw	r16,8(r19)
  809048:	90bfffc4 	addi	r2,r18,-1
  80904c:	10000d16 	blt	r2,zero,809084 <_fwalk_reent+0x84>
  809050:	0023883a 	mov	r17,zero
  809054:	053fffc4 	movi	r20,-1
  809058:	8080030f 	ldh	r2,12(r16)
  80905c:	8c400044 	addi	r17,r17,1
  809060:	10000626 	beq	r2,zero,80907c <_fwalk_reent+0x7c>
  809064:	8080038f 	ldh	r2,14(r16)
  809068:	800b883a 	mov	r5,r16
  80906c:	a809883a 	mov	r4,r21
  809070:	15000226 	beq	r2,r20,80907c <_fwalk_reent+0x7c>
  809074:	b03ee83a 	callr	r22
  809078:	b8aeb03a 	or	r23,r23,r2
  80907c:	84001704 	addi	r16,r16,92
  809080:	947ff51e 	bne	r18,r17,809058 <_fwalk_reent+0x58>
  809084:	9cc00017 	ldw	r19,0(r19)
  809088:	983fed1e 	bne	r19,zero,809040 <_fwalk_reent+0x40>
  80908c:	080848c0 	call	80848c <__sfp_lock_release>
  809090:	b805883a 	mov	r2,r23
  809094:	dfc00817 	ldw	ra,32(sp)
  809098:	ddc00717 	ldw	r23,28(sp)
  80909c:	dd800617 	ldw	r22,24(sp)
  8090a0:	dd400517 	ldw	r21,20(sp)
  8090a4:	dd000417 	ldw	r20,16(sp)
  8090a8:	dcc00317 	ldw	r19,12(sp)
  8090ac:	dc800217 	ldw	r18,8(sp)
  8090b0:	dc400117 	ldw	r17,4(sp)
  8090b4:	dc000017 	ldw	r16,0(sp)
  8090b8:	dec00904 	addi	sp,sp,36
  8090bc:	f800283a 	ret
  8090c0:	002f883a 	mov	r23,zero
  8090c4:	003ff106 	br	80908c <_fwalk_reent+0x8c>

008090c8 <_fwalk>:
  8090c8:	defff804 	addi	sp,sp,-32
  8090cc:	dcc00315 	stw	r19,12(sp)
  8090d0:	24c0b804 	addi	r19,r4,736
  8090d4:	dd400515 	stw	r21,20(sp)
  8090d8:	dfc00715 	stw	ra,28(sp)
  8090dc:	dd800615 	stw	r22,24(sp)
  8090e0:	dd000415 	stw	r20,16(sp)
  8090e4:	dc800215 	stw	r18,8(sp)
  8090e8:	dc400115 	stw	r17,4(sp)
  8090ec:	dc000015 	stw	r16,0(sp)
  8090f0:	282b883a 	mov	r21,r5
  8090f4:	08084880 	call	808488 <__sfp_lock_acquire>
  8090f8:	98001f26 	beq	r19,zero,809178 <_fwalk+0xb0>
  8090fc:	002d883a 	mov	r22,zero
  809100:	9c800117 	ldw	r18,4(r19)
  809104:	9c000217 	ldw	r16,8(r19)
  809108:	90bfffc4 	addi	r2,r18,-1
  80910c:	10000c16 	blt	r2,zero,809140 <_fwalk+0x78>
  809110:	0023883a 	mov	r17,zero
  809114:	053fffc4 	movi	r20,-1
  809118:	8080030f 	ldh	r2,12(r16)
  80911c:	8c400044 	addi	r17,r17,1
  809120:	10000526 	beq	r2,zero,809138 <_fwalk+0x70>
  809124:	8080038f 	ldh	r2,14(r16)
  809128:	8009883a 	mov	r4,r16
  80912c:	15000226 	beq	r2,r20,809138 <_fwalk+0x70>
  809130:	a83ee83a 	callr	r21
  809134:	b0acb03a 	or	r22,r22,r2
  809138:	84001704 	addi	r16,r16,92
  80913c:	947ff61e 	bne	r18,r17,809118 <_fwalk+0x50>
  809140:	9cc00017 	ldw	r19,0(r19)
  809144:	983fee1e 	bne	r19,zero,809100 <_fwalk+0x38>
  809148:	080848c0 	call	80848c <__sfp_lock_release>
  80914c:	b005883a 	mov	r2,r22
  809150:	dfc00717 	ldw	ra,28(sp)
  809154:	dd800617 	ldw	r22,24(sp)
  809158:	dd400517 	ldw	r21,20(sp)
  80915c:	dd000417 	ldw	r20,16(sp)
  809160:	dcc00317 	ldw	r19,12(sp)
  809164:	dc800217 	ldw	r18,8(sp)
  809168:	dc400117 	ldw	r17,4(sp)
  80916c:	dc000017 	ldw	r16,0(sp)
  809170:	dec00804 	addi	sp,sp,32
  809174:	f800283a 	ret
  809178:	002d883a 	mov	r22,zero
  80917c:	003ff206 	br	809148 <_fwalk+0x80>

00809180 <__locale_charset>:
  809180:	d0a00317 	ldw	r2,-32756(gp)
  809184:	f800283a 	ret

00809188 <_localeconv_r>:
  809188:	00802074 	movhi	r2,129
  80918c:	10815b04 	addi	r2,r2,1388
  809190:	f800283a 	ret

00809194 <localeconv>:
  809194:	00802074 	movhi	r2,129
  809198:	10884204 	addi	r2,r2,8456
  80919c:	11000017 	ldw	r4,0(r2)
  8091a0:	08091881 	jmpi	809188 <_localeconv_r>

008091a4 <_setlocale_r>:
  8091a4:	defffc04 	addi	sp,sp,-16
  8091a8:	00c02074 	movhi	r3,129
  8091ac:	18c13104 	addi	r3,r3,1220
  8091b0:	dc800215 	stw	r18,8(sp)
  8091b4:	dc400115 	stw	r17,4(sp)
  8091b8:	dc000015 	stw	r16,0(sp)
  8091bc:	2023883a 	mov	r17,r4
  8091c0:	2825883a 	mov	r18,r5
  8091c4:	dfc00315 	stw	ra,12(sp)
  8091c8:	3021883a 	mov	r16,r6
  8091cc:	3009883a 	mov	r4,r6
  8091d0:	180b883a 	mov	r5,r3
  8091d4:	30000926 	beq	r6,zero,8091fc <_setlocale_r+0x58>
  8091d8:	080b6c00 	call	80b6c0 <strcmp>
  8091dc:	8009883a 	mov	r4,r16
  8091e0:	01402074 	movhi	r5,129
  8091e4:	29414204 	addi	r5,r5,1288
  8091e8:	10000b1e 	bne	r2,zero,809218 <_setlocale_r+0x74>
  8091ec:	8c000d15 	stw	r16,52(r17)
  8091f0:	8c800c15 	stw	r18,48(r17)
  8091f4:	00c02074 	movhi	r3,129
  8091f8:	18c13104 	addi	r3,r3,1220
  8091fc:	1805883a 	mov	r2,r3
  809200:	dfc00317 	ldw	ra,12(sp)
  809204:	dc800217 	ldw	r18,8(sp)
  809208:	dc400117 	ldw	r17,4(sp)
  80920c:	dc000017 	ldw	r16,0(sp)
  809210:	dec00404 	addi	sp,sp,16
  809214:	f800283a 	ret
  809218:	080b6c00 	call	80b6c0 <strcmp>
  80921c:	0007883a 	mov	r3,zero
  809220:	103ff226 	beq	r2,zero,8091ec <_setlocale_r+0x48>
  809224:	003ff506 	br	8091fc <_setlocale_r+0x58>

00809228 <setlocale>:
  809228:	01802074 	movhi	r6,129
  80922c:	31884204 	addi	r6,r6,8456
  809230:	2007883a 	mov	r3,r4
  809234:	31000017 	ldw	r4,0(r6)
  809238:	280d883a 	mov	r6,r5
  80923c:	180b883a 	mov	r5,r3
  809240:	08091a41 	jmpi	8091a4 <_setlocale_r>

00809244 <__smakebuf_r>:
  809244:	2880030b 	ldhu	r2,12(r5)
  809248:	deffed04 	addi	sp,sp,-76
  80924c:	dc401015 	stw	r17,64(sp)
  809250:	1080008c 	andi	r2,r2,2
  809254:	dc000f15 	stw	r16,60(sp)
  809258:	dfc01215 	stw	ra,72(sp)
  80925c:	dc801115 	stw	r18,68(sp)
  809260:	2821883a 	mov	r16,r5
  809264:	2023883a 	mov	r17,r4
  809268:	10000b26 	beq	r2,zero,809298 <__smakebuf_r+0x54>
  80926c:	28c010c4 	addi	r3,r5,67
  809270:	00800044 	movi	r2,1
  809274:	28800515 	stw	r2,20(r5)
  809278:	28c00415 	stw	r3,16(r5)
  80927c:	28c00015 	stw	r3,0(r5)
  809280:	dfc01217 	ldw	ra,72(sp)
  809284:	dc801117 	ldw	r18,68(sp)
  809288:	dc401017 	ldw	r17,64(sp)
  80928c:	dc000f17 	ldw	r16,60(sp)
  809290:	dec01304 	addi	sp,sp,76
  809294:	f800283a 	ret
  809298:	2940038f 	ldh	r5,14(r5)
  80929c:	28002116 	blt	r5,zero,809324 <__smakebuf_r+0xe0>
  8092a0:	d80d883a 	mov	r6,sp
  8092a4:	080badc0 	call	80badc <_fstat_r>
  8092a8:	10001e16 	blt	r2,zero,809324 <__smakebuf_r+0xe0>
  8092ac:	d8800117 	ldw	r2,4(sp)
  8092b0:	00e00014 	movui	r3,32768
  8092b4:	113c000c 	andi	r4,r2,61440
  8092b8:	20c03126 	beq	r4,r3,809380 <__smakebuf_r+0x13c>
  8092bc:	8080030b 	ldhu	r2,12(r16)
  8092c0:	00c80004 	movi	r3,8192
  8092c4:	10820014 	ori	r2,r2,2048
  8092c8:	8080030d 	sth	r2,12(r16)
  8092cc:	20c01e26 	beq	r4,r3,809348 <__smakebuf_r+0x104>
  8092d0:	04810004 	movi	r18,1024
  8092d4:	8809883a 	mov	r4,r17
  8092d8:	900b883a 	mov	r5,r18
  8092dc:	08093d80 	call	8093d8 <_malloc_r>
  8092e0:	1009883a 	mov	r4,r2
  8092e4:	10003126 	beq	r2,zero,8093ac <__smakebuf_r+0x168>
  8092e8:	80c0030b 	ldhu	r3,12(r16)
  8092ec:	00802074 	movhi	r2,129
  8092f0:	10a15f04 	addi	r2,r2,-31364
  8092f4:	88800f15 	stw	r2,60(r17)
  8092f8:	18c02014 	ori	r3,r3,128
  8092fc:	84800515 	stw	r18,20(r16)
  809300:	80c0030d 	sth	r3,12(r16)
  809304:	81000415 	stw	r4,16(r16)
  809308:	81000015 	stw	r4,0(r16)
  80930c:	dfc01217 	ldw	ra,72(sp)
  809310:	dc801117 	ldw	r18,68(sp)
  809314:	dc401017 	ldw	r17,64(sp)
  809318:	dc000f17 	ldw	r16,60(sp)
  80931c:	dec01304 	addi	sp,sp,76
  809320:	f800283a 	ret
  809324:	80c0030b 	ldhu	r3,12(r16)
  809328:	1880200c 	andi	r2,r3,128
  80932c:	10000426 	beq	r2,zero,809340 <__smakebuf_r+0xfc>
  809330:	04801004 	movi	r18,64
  809334:	18820014 	ori	r2,r3,2048
  809338:	8080030d 	sth	r2,12(r16)
  80933c:	003fe506 	br	8092d4 <__smakebuf_r+0x90>
  809340:	04810004 	movi	r18,1024
  809344:	003ffb06 	br	809334 <__smakebuf_r+0xf0>
  809348:	8140038f 	ldh	r5,14(r16)
  80934c:	8809883a 	mov	r4,r17
  809350:	080bb500 	call	80bb50 <_isatty_r>
  809354:	103fde26 	beq	r2,zero,8092d0 <__smakebuf_r+0x8c>
  809358:	8080030b 	ldhu	r2,12(r16)
  80935c:	80c010c4 	addi	r3,r16,67
  809360:	04810004 	movi	r18,1024
  809364:	10800054 	ori	r2,r2,1
  809368:	8080030d 	sth	r2,12(r16)
  80936c:	00800044 	movi	r2,1
  809370:	80c00415 	stw	r3,16(r16)
  809374:	80800515 	stw	r2,20(r16)
  809378:	80c00015 	stw	r3,0(r16)
  80937c:	003fd506 	br	8092d4 <__smakebuf_r+0x90>
  809380:	80c00a17 	ldw	r3,40(r16)
  809384:	00802074 	movhi	r2,129
  809388:	10ad5f04 	addi	r2,r2,-19076
  80938c:	18bfcb1e 	bne	r3,r2,8092bc <__smakebuf_r+0x78>
  809390:	8080030b 	ldhu	r2,12(r16)
  809394:	00c10004 	movi	r3,1024
  809398:	1825883a 	mov	r18,r3
  80939c:	10c4b03a 	or	r2,r2,r3
  8093a0:	8080030d 	sth	r2,12(r16)
  8093a4:	80c01315 	stw	r3,76(r16)
  8093a8:	003fca06 	br	8092d4 <__smakebuf_r+0x90>
  8093ac:	8100030b 	ldhu	r4,12(r16)
  8093b0:	2080800c 	andi	r2,r4,512
  8093b4:	103fb21e 	bne	r2,zero,809280 <__smakebuf_r+0x3c>
  8093b8:	80c010c4 	addi	r3,r16,67
  8093bc:	21000094 	ori	r4,r4,2
  8093c0:	00800044 	movi	r2,1
  8093c4:	80800515 	stw	r2,20(r16)
  8093c8:	8100030d 	sth	r4,12(r16)
  8093cc:	80c00415 	stw	r3,16(r16)
  8093d0:	80c00015 	stw	r3,0(r16)
  8093d4:	003faa06 	br	809280 <__smakebuf_r+0x3c>

008093d8 <_malloc_r>:
  8093d8:	defff604 	addi	sp,sp,-40
  8093dc:	28c002c4 	addi	r3,r5,11
  8093e0:	00800584 	movi	r2,22
  8093e4:	dc800215 	stw	r18,8(sp)
  8093e8:	dfc00915 	stw	ra,36(sp)
  8093ec:	df000815 	stw	fp,32(sp)
  8093f0:	ddc00715 	stw	r23,28(sp)
  8093f4:	dd800615 	stw	r22,24(sp)
  8093f8:	dd400515 	stw	r21,20(sp)
  8093fc:	dd000415 	stw	r20,16(sp)
  809400:	dcc00315 	stw	r19,12(sp)
  809404:	dc400115 	stw	r17,4(sp)
  809408:	dc000015 	stw	r16,0(sp)
  80940c:	2025883a 	mov	r18,r4
  809410:	10c01236 	bltu	r2,r3,80945c <_malloc_r+0x84>
  809414:	04400404 	movi	r17,16
  809418:	8940142e 	bgeu	r17,r5,80946c <_malloc_r+0x94>
  80941c:	00800304 	movi	r2,12
  809420:	0007883a 	mov	r3,zero
  809424:	90800015 	stw	r2,0(r18)
  809428:	1805883a 	mov	r2,r3
  80942c:	dfc00917 	ldw	ra,36(sp)
  809430:	df000817 	ldw	fp,32(sp)
  809434:	ddc00717 	ldw	r23,28(sp)
  809438:	dd800617 	ldw	r22,24(sp)
  80943c:	dd400517 	ldw	r21,20(sp)
  809440:	dd000417 	ldw	r20,16(sp)
  809444:	dcc00317 	ldw	r19,12(sp)
  809448:	dc800217 	ldw	r18,8(sp)
  80944c:	dc400117 	ldw	r17,4(sp)
  809450:	dc000017 	ldw	r16,0(sp)
  809454:	dec00a04 	addi	sp,sp,40
  809458:	f800283a 	ret
  80945c:	00bffe04 	movi	r2,-8
  809460:	18a2703a 	and	r17,r3,r2
  809464:	883fed16 	blt	r17,zero,80941c <_malloc_r+0x44>
  809468:	897fec36 	bltu	r17,r5,80941c <_malloc_r+0x44>
  80946c:	9009883a 	mov	r4,r18
  809470:	080d97c0 	call	80d97c <__malloc_lock>
  809474:	00807dc4 	movi	r2,503
  809478:	14402b2e 	bgeu	r2,r17,809528 <_malloc_r+0x150>
  80947c:	8806d27a 	srli	r3,r17,9
  809480:	18003f1e 	bne	r3,zero,809580 <_malloc_r+0x1a8>
  809484:	880cd0fa 	srli	r6,r17,3
  809488:	300490fa 	slli	r2,r6,3
  80948c:	02c02074 	movhi	r11,129
  809490:	5ac2be04 	addi	r11,r11,2808
  809494:	12cb883a 	add	r5,r2,r11
  809498:	2c000317 	ldw	r16,12(r5)
  80949c:	580f883a 	mov	r7,r11
  8094a0:	2c00041e 	bne	r5,r16,8094b4 <_malloc_r+0xdc>
  8094a4:	00000a06 	br	8094d0 <_malloc_r+0xf8>
  8094a8:	1800860e 	bge	r3,zero,8096c4 <_malloc_r+0x2ec>
  8094ac:	84000317 	ldw	r16,12(r16)
  8094b0:	2c000726 	beq	r5,r16,8094d0 <_malloc_r+0xf8>
  8094b4:	80800117 	ldw	r2,4(r16)
  8094b8:	00ffff04 	movi	r3,-4
  8094bc:	10c8703a 	and	r4,r2,r3
  8094c0:	2447c83a 	sub	r3,r4,r17
  8094c4:	008003c4 	movi	r2,15
  8094c8:	10fff70e 	bge	r2,r3,8094a8 <_malloc_r+0xd0>
  8094cc:	31bfffc4 	addi	r6,r6,-1
  8094d0:	32400044 	addi	r9,r6,1
  8094d4:	02802074 	movhi	r10,129
  8094d8:	5282c004 	addi	r10,r10,2816
  8094dc:	54000217 	ldw	r16,8(r10)
  8094e0:	8280a026 	beq	r16,r10,809764 <_malloc_r+0x38c>
  8094e4:	80800117 	ldw	r2,4(r16)
  8094e8:	00ffff04 	movi	r3,-4
  8094ec:	10ca703a 	and	r5,r2,r3
  8094f0:	2c4dc83a 	sub	r6,r5,r17
  8094f4:	008003c4 	movi	r2,15
  8094f8:	11808316 	blt	r2,r6,809708 <_malloc_r+0x330>
  8094fc:	52800315 	stw	r10,12(r10)
  809500:	52800215 	stw	r10,8(r10)
  809504:	30002916 	blt	r6,zero,8095ac <_malloc_r+0x1d4>
  809508:	8147883a 	add	r3,r16,r5
  80950c:	18800117 	ldw	r2,4(r3)
  809510:	9009883a 	mov	r4,r18
  809514:	10800054 	ori	r2,r2,1
  809518:	18800115 	stw	r2,4(r3)
  80951c:	080d99c0 	call	80d99c <__malloc_unlock>
  809520:	80c00204 	addi	r3,r16,8
  809524:	003fc006 	br	809428 <_malloc_r+0x50>
  809528:	02c02074 	movhi	r11,129
  80952c:	5ac2be04 	addi	r11,r11,2808
  809530:	8ac5883a 	add	r2,r17,r11
  809534:	14000317 	ldw	r16,12(r2)
  809538:	580f883a 	mov	r7,r11
  80953c:	8806d0fa 	srli	r3,r17,3
  809540:	14006c26 	beq	r2,r16,8096f4 <_malloc_r+0x31c>
  809544:	80c00117 	ldw	r3,4(r16)
  809548:	00bfff04 	movi	r2,-4
  80954c:	81800317 	ldw	r6,12(r16)
  809550:	1886703a 	and	r3,r3,r2
  809554:	80c7883a 	add	r3,r16,r3
  809558:	18800117 	ldw	r2,4(r3)
  80955c:	81400217 	ldw	r5,8(r16)
  809560:	9009883a 	mov	r4,r18
  809564:	10800054 	ori	r2,r2,1
  809568:	18800115 	stw	r2,4(r3)
  80956c:	31400215 	stw	r5,8(r6)
  809570:	29800315 	stw	r6,12(r5)
  809574:	080d99c0 	call	80d99c <__malloc_unlock>
  809578:	80c00204 	addi	r3,r16,8
  80957c:	003faa06 	br	809428 <_malloc_r+0x50>
  809580:	00800104 	movi	r2,4
  809584:	10c0052e 	bgeu	r2,r3,80959c <_malloc_r+0x1c4>
  809588:	00800504 	movi	r2,20
  80958c:	10c07836 	bltu	r2,r3,809770 <_malloc_r+0x398>
  809590:	198016c4 	addi	r6,r3,91
  809594:	300490fa 	slli	r2,r6,3
  809598:	003fbc06 	br	80948c <_malloc_r+0xb4>
  80959c:	8804d1ba 	srli	r2,r17,6
  8095a0:	11800e04 	addi	r6,r2,56
  8095a4:	300490fa 	slli	r2,r6,3
  8095a8:	003fb806 	br	80948c <_malloc_r+0xb4>
  8095ac:	00807fc4 	movi	r2,511
  8095b0:	1140bb36 	bltu	r2,r5,8098a0 <_malloc_r+0x4c8>
  8095b4:	2806d0fa 	srli	r3,r5,3
  8095b8:	573ffe04 	addi	fp,r10,-8
  8095bc:	00800044 	movi	r2,1
  8095c0:	180890fa 	slli	r4,r3,3
  8095c4:	1807d0ba 	srai	r3,r3,2
  8095c8:	e1c00117 	ldw	r7,4(fp)
  8095cc:	5909883a 	add	r4,r11,r4
  8095d0:	21400217 	ldw	r5,8(r4)
  8095d4:	10c4983a 	sll	r2,r2,r3
  8095d8:	81000315 	stw	r4,12(r16)
  8095dc:	81400215 	stw	r5,8(r16)
  8095e0:	388eb03a 	or	r7,r7,r2
  8095e4:	2c000315 	stw	r16,12(r5)
  8095e8:	24000215 	stw	r16,8(r4)
  8095ec:	e1c00115 	stw	r7,4(fp)
  8095f0:	4807883a 	mov	r3,r9
  8095f4:	4800cd16 	blt	r9,zero,80992c <_malloc_r+0x554>
  8095f8:	1807d0ba 	srai	r3,r3,2
  8095fc:	00800044 	movi	r2,1
  809600:	10c8983a 	sll	r4,r2,r3
  809604:	39004436 	bltu	r7,r4,809718 <_malloc_r+0x340>
  809608:	21c4703a 	and	r2,r4,r7
  80960c:	10000a1e 	bne	r2,zero,809638 <_malloc_r+0x260>
  809610:	2109883a 	add	r4,r4,r4
  809614:	00bfff04 	movi	r2,-4
  809618:	4884703a 	and	r2,r9,r2
  80961c:	3906703a 	and	r3,r7,r4
  809620:	12400104 	addi	r9,r2,4
  809624:	1800041e 	bne	r3,zero,809638 <_malloc_r+0x260>
  809628:	2109883a 	add	r4,r4,r4
  80962c:	3904703a 	and	r2,r7,r4
  809630:	4a400104 	addi	r9,r9,4
  809634:	103ffc26 	beq	r2,zero,809628 <_malloc_r+0x250>
  809638:	480490fa 	slli	r2,r9,3
  80963c:	4819883a 	mov	r12,r9
  809640:	023fff04 	movi	r8,-4
  809644:	589b883a 	add	r13,r11,r2
  809648:	6807883a 	mov	r3,r13
  80964c:	014003c4 	movi	r5,15
  809650:	1c000317 	ldw	r16,12(r3)
  809654:	1c00041e 	bne	r3,r16,809668 <_malloc_r+0x290>
  809658:	0000a706 	br	8098f8 <_malloc_r+0x520>
  80965c:	3000ab0e 	bge	r6,zero,80990c <_malloc_r+0x534>
  809660:	84000317 	ldw	r16,12(r16)
  809664:	1c00a426 	beq	r3,r16,8098f8 <_malloc_r+0x520>
  809668:	80800117 	ldw	r2,4(r16)
  80966c:	1204703a 	and	r2,r2,r8
  809670:	144dc83a 	sub	r6,r2,r17
  809674:	29bff90e 	bge	r5,r6,80965c <_malloc_r+0x284>
  809678:	81000317 	ldw	r4,12(r16)
  80967c:	80c00217 	ldw	r3,8(r16)
  809680:	89400054 	ori	r5,r17,1
  809684:	8445883a 	add	r2,r16,r17
  809688:	20c00215 	stw	r3,8(r4)
  80968c:	19000315 	stw	r4,12(r3)
  809690:	81400115 	stw	r5,4(r16)
  809694:	1187883a 	add	r3,r2,r6
  809698:	31000054 	ori	r4,r6,1
  80969c:	50800315 	stw	r2,12(r10)
  8096a0:	50800215 	stw	r2,8(r10)
  8096a4:	19800015 	stw	r6,0(r3)
  8096a8:	11000115 	stw	r4,4(r2)
  8096ac:	12800215 	stw	r10,8(r2)
  8096b0:	12800315 	stw	r10,12(r2)
  8096b4:	9009883a 	mov	r4,r18
  8096b8:	080d99c0 	call	80d99c <__malloc_unlock>
  8096bc:	80c00204 	addi	r3,r16,8
  8096c0:	003f5906 	br	809428 <_malloc_r+0x50>
  8096c4:	8109883a 	add	r4,r16,r4
  8096c8:	20800117 	ldw	r2,4(r4)
  8096cc:	80c00217 	ldw	r3,8(r16)
  8096d0:	81400317 	ldw	r5,12(r16)
  8096d4:	10800054 	ori	r2,r2,1
  8096d8:	20800115 	stw	r2,4(r4)
  8096dc:	28c00215 	stw	r3,8(r5)
  8096e0:	19400315 	stw	r5,12(r3)
  8096e4:	9009883a 	mov	r4,r18
  8096e8:	080d99c0 	call	80d99c <__malloc_unlock>
  8096ec:	80c00204 	addi	r3,r16,8
  8096f0:	003f4d06 	br	809428 <_malloc_r+0x50>
  8096f4:	80800204 	addi	r2,r16,8
  8096f8:	14000317 	ldw	r16,12(r2)
  8096fc:	143f911e 	bne	r2,r16,809544 <_malloc_r+0x16c>
  809700:	1a400084 	addi	r9,r3,2
  809704:	003f7306 	br	8094d4 <_malloc_r+0xfc>
  809708:	88c00054 	ori	r3,r17,1
  80970c:	8445883a 	add	r2,r16,r17
  809710:	80c00115 	stw	r3,4(r16)
  809714:	003fdf06 	br	809694 <_malloc_r+0x2bc>
  809718:	e4000217 	ldw	r16,8(fp)
  80971c:	00bfff04 	movi	r2,-4
  809720:	80c00117 	ldw	r3,4(r16)
  809724:	802d883a 	mov	r22,r16
  809728:	18aa703a 	and	r21,r3,r2
  80972c:	ac401636 	bltu	r21,r17,809788 <_malloc_r+0x3b0>
  809730:	ac49c83a 	sub	r4,r21,r17
  809734:	008003c4 	movi	r2,15
  809738:	1100130e 	bge	r2,r4,809788 <_malloc_r+0x3b0>
  80973c:	88800054 	ori	r2,r17,1
  809740:	8447883a 	add	r3,r16,r17
  809744:	80800115 	stw	r2,4(r16)
  809748:	20800054 	ori	r2,r4,1
  80974c:	18800115 	stw	r2,4(r3)
  809750:	e0c00215 	stw	r3,8(fp)
  809754:	9009883a 	mov	r4,r18
  809758:	080d99c0 	call	80d99c <__malloc_unlock>
  80975c:	80c00204 	addi	r3,r16,8
  809760:	003f3106 	br	809428 <_malloc_r+0x50>
  809764:	39c00117 	ldw	r7,4(r7)
  809768:	573ffe04 	addi	fp,r10,-8
  80976c:	003fa006 	br	8095f0 <_malloc_r+0x218>
  809770:	00801504 	movi	r2,84
  809774:	10c06736 	bltu	r2,r3,809914 <_malloc_r+0x53c>
  809778:	8804d33a 	srli	r2,r17,12
  80977c:	11801b84 	addi	r6,r2,110
  809780:	300490fa 	slli	r2,r6,3
  809784:	003f4106 	br	80948c <_malloc_r+0xb4>
  809788:	d0a6aa17 	ldw	r2,-25944(gp)
  80978c:	d0e00517 	ldw	r3,-32748(gp)
  809790:	053fffc4 	movi	r20,-1
  809794:	10800404 	addi	r2,r2,16
  809798:	88a7883a 	add	r19,r17,r2
  80979c:	1d000326 	beq	r3,r20,8097ac <_malloc_r+0x3d4>
  8097a0:	98c3ffc4 	addi	r3,r19,4095
  8097a4:	00bc0004 	movi	r2,-4096
  8097a8:	18a6703a 	and	r19,r3,r2
  8097ac:	9009883a 	mov	r4,r18
  8097b0:	980b883a 	mov	r5,r19
  8097b4:	080b5040 	call	80b504 <_sbrk_r>
  8097b8:	1009883a 	mov	r4,r2
  8097bc:	15000426 	beq	r2,r20,8097d0 <_malloc_r+0x3f8>
  8097c0:	854b883a 	add	r5,r16,r21
  8097c4:	1029883a 	mov	r20,r2
  8097c8:	11405a2e 	bgeu	r2,r5,809934 <_malloc_r+0x55c>
  8097cc:	87000c26 	beq	r16,fp,809800 <_malloc_r+0x428>
  8097d0:	e4000217 	ldw	r16,8(fp)
  8097d4:	80c00117 	ldw	r3,4(r16)
  8097d8:	00bfff04 	movi	r2,-4
  8097dc:	1884703a 	and	r2,r3,r2
  8097e0:	14400336 	bltu	r2,r17,8097f0 <_malloc_r+0x418>
  8097e4:	1449c83a 	sub	r4,r2,r17
  8097e8:	008003c4 	movi	r2,15
  8097ec:	113fd316 	blt	r2,r4,80973c <_malloc_r+0x364>
  8097f0:	9009883a 	mov	r4,r18
  8097f4:	080d99c0 	call	80d99c <__malloc_unlock>
  8097f8:	0007883a 	mov	r3,zero
  8097fc:	003f0a06 	br	809428 <_malloc_r+0x50>
  809800:	05c02074 	movhi	r23,129
  809804:	bdcef604 	addi	r23,r23,15320
  809808:	b8800017 	ldw	r2,0(r23)
  80980c:	988d883a 	add	r6,r19,r2
  809810:	b9800015 	stw	r6,0(r23)
  809814:	d0e00517 	ldw	r3,-32748(gp)
  809818:	00bfffc4 	movi	r2,-1
  80981c:	18808e26 	beq	r3,r2,809a58 <_malloc_r+0x680>
  809820:	2145c83a 	sub	r2,r4,r5
  809824:	3085883a 	add	r2,r6,r2
  809828:	b8800015 	stw	r2,0(r23)
  80982c:	20c001cc 	andi	r3,r4,7
  809830:	18005f1e 	bne	r3,zero,8099b0 <_malloc_r+0x5d8>
  809834:	000b883a 	mov	r5,zero
  809838:	a4c5883a 	add	r2,r20,r19
  80983c:	1083ffcc 	andi	r2,r2,4095
  809840:	00c40004 	movi	r3,4096
  809844:	1887c83a 	sub	r3,r3,r2
  809848:	28e7883a 	add	r19,r5,r3
  80984c:	9009883a 	mov	r4,r18
  809850:	980b883a 	mov	r5,r19
  809854:	080b5040 	call	80b504 <_sbrk_r>
  809858:	1007883a 	mov	r3,r2
  80985c:	00bfffc4 	movi	r2,-1
  809860:	18807a26 	beq	r3,r2,809a4c <_malloc_r+0x674>
  809864:	1d05c83a 	sub	r2,r3,r20
  809868:	9885883a 	add	r2,r19,r2
  80986c:	10c00054 	ori	r3,r2,1
  809870:	b8800017 	ldw	r2,0(r23)
  809874:	a021883a 	mov	r16,r20
  809878:	a0c00115 	stw	r3,4(r20)
  80987c:	9885883a 	add	r2,r19,r2
  809880:	b8800015 	stw	r2,0(r23)
  809884:	e5000215 	stw	r20,8(fp)
  809888:	b7003626 	beq	r22,fp,809964 <_malloc_r+0x58c>
  80988c:	018003c4 	movi	r6,15
  809890:	35404b36 	bltu	r6,r21,8099c0 <_malloc_r+0x5e8>
  809894:	00800044 	movi	r2,1
  809898:	a0800115 	stw	r2,4(r20)
  80989c:	003fcd06 	br	8097d4 <_malloc_r+0x3fc>
  8098a0:	2808d27a 	srli	r4,r5,9
  8098a4:	2000371e 	bne	r4,zero,809984 <_malloc_r+0x5ac>
  8098a8:	2808d0fa 	srli	r4,r5,3
  8098ac:	200690fa 	slli	r3,r4,3
  8098b0:	1ad1883a 	add	r8,r3,r11
  8098b4:	41800217 	ldw	r6,8(r8)
  8098b8:	41805b26 	beq	r8,r6,809a28 <_malloc_r+0x650>
  8098bc:	30800117 	ldw	r2,4(r6)
  8098c0:	00ffff04 	movi	r3,-4
  8098c4:	10c4703a 	and	r2,r2,r3
  8098c8:	2880022e 	bgeu	r5,r2,8098d4 <_malloc_r+0x4fc>
  8098cc:	31800217 	ldw	r6,8(r6)
  8098d0:	41bffa1e 	bne	r8,r6,8098bc <_malloc_r+0x4e4>
  8098d4:	32000317 	ldw	r8,12(r6)
  8098d8:	39c00117 	ldw	r7,4(r7)
  8098dc:	82000315 	stw	r8,12(r16)
  8098e0:	81800215 	stw	r6,8(r16)
  8098e4:	07002074 	movhi	fp,129
  8098e8:	e702be04 	addi	fp,fp,2808
  8098ec:	34000315 	stw	r16,12(r6)
  8098f0:	44000215 	stw	r16,8(r8)
  8098f4:	003f3e06 	br	8095f0 <_malloc_r+0x218>
  8098f8:	63000044 	addi	r12,r12,1
  8098fc:	608000cc 	andi	r2,r12,3
  809900:	10005d26 	beq	r2,zero,809a78 <_malloc_r+0x6a0>
  809904:	18c00204 	addi	r3,r3,8
  809908:	003f5106 	br	809650 <_malloc_r+0x278>
  80990c:	8089883a 	add	r4,r16,r2
  809910:	003f6d06 	br	8096c8 <_malloc_r+0x2f0>
  809914:	00805504 	movi	r2,340
  809918:	10c02036 	bltu	r2,r3,80999c <_malloc_r+0x5c4>
  80991c:	8804d3fa 	srli	r2,r17,15
  809920:	11801dc4 	addi	r6,r2,119
  809924:	300490fa 	slli	r2,r6,3
  809928:	003ed806 	br	80948c <_malloc_r+0xb4>
  80992c:	48c000c4 	addi	r3,r9,3
  809930:	003f3106 	br	8095f8 <_malloc_r+0x220>
  809934:	05c02074 	movhi	r23,129
  809938:	bdcef604 	addi	r23,r23,15320
  80993c:	b8800017 	ldw	r2,0(r23)
  809940:	988d883a 	add	r6,r19,r2
  809944:	b9800015 	stw	r6,0(r23)
  809948:	293fb21e 	bne	r5,r4,809814 <_malloc_r+0x43c>
  80994c:	2083ffcc 	andi	r2,r4,4095
  809950:	103fb01e 	bne	r2,zero,809814 <_malloc_r+0x43c>
  809954:	e4000217 	ldw	r16,8(fp)
  809958:	9d45883a 	add	r2,r19,r21
  80995c:	10800054 	ori	r2,r2,1
  809960:	80800115 	stw	r2,4(r16)
  809964:	b8c00017 	ldw	r3,0(r23)
  809968:	d0a6ab17 	ldw	r2,-25940(gp)
  80996c:	10c0012e 	bgeu	r2,r3,809974 <_malloc_r+0x59c>
  809970:	d0e6ab15 	stw	r3,-25940(gp)
  809974:	d0a6ac17 	ldw	r2,-25936(gp)
  809978:	10ff962e 	bgeu	r2,r3,8097d4 <_malloc_r+0x3fc>
  80997c:	d0e6ac15 	stw	r3,-25936(gp)
  809980:	003f9406 	br	8097d4 <_malloc_r+0x3fc>
  809984:	00800104 	movi	r2,4
  809988:	11001e36 	bltu	r2,r4,809a04 <_malloc_r+0x62c>
  80998c:	2804d1ba 	srli	r2,r5,6
  809990:	11000e04 	addi	r4,r2,56
  809994:	200690fa 	slli	r3,r4,3
  809998:	003fc506 	br	8098b0 <_malloc_r+0x4d8>
  80999c:	00815504 	movi	r2,1364
  8099a0:	10c01d2e 	bgeu	r2,r3,809a18 <_malloc_r+0x640>
  8099a4:	01801f84 	movi	r6,126
  8099a8:	0080fc04 	movi	r2,1008
  8099ac:	003eb706 	br	80948c <_malloc_r+0xb4>
  8099b0:	00800204 	movi	r2,8
  8099b4:	10cbc83a 	sub	r5,r2,r3
  8099b8:	2169883a 	add	r20,r4,r5
  8099bc:	003f9e06 	br	809838 <_malloc_r+0x460>
  8099c0:	00bffe04 	movi	r2,-8
  8099c4:	a93ffd04 	addi	r4,r21,-12
  8099c8:	2088703a 	and	r4,r4,r2
  8099cc:	b10b883a 	add	r5,r22,r4
  8099d0:	00c00144 	movi	r3,5
  8099d4:	28c00215 	stw	r3,8(r5)
  8099d8:	28c00115 	stw	r3,4(r5)
  8099dc:	b0800117 	ldw	r2,4(r22)
  8099e0:	1080004c 	andi	r2,r2,1
  8099e4:	2084b03a 	or	r2,r4,r2
  8099e8:	b0800115 	stw	r2,4(r22)
  8099ec:	313fdd2e 	bgeu	r6,r4,809964 <_malloc_r+0x58c>
  8099f0:	b1400204 	addi	r5,r22,8
  8099f4:	9009883a 	mov	r4,r18
  8099f8:	08088500 	call	808850 <_free_r>
  8099fc:	e4000217 	ldw	r16,8(fp)
  809a00:	003fd806 	br	809964 <_malloc_r+0x58c>
  809a04:	00800504 	movi	r2,20
  809a08:	11001536 	bltu	r2,r4,809a60 <_malloc_r+0x688>
  809a0c:	210016c4 	addi	r4,r4,91
  809a10:	200690fa 	slli	r3,r4,3
  809a14:	003fa606 	br	8098b0 <_malloc_r+0x4d8>
  809a18:	8804d4ba 	srli	r2,r17,18
  809a1c:	11801f04 	addi	r6,r2,124
  809a20:	300490fa 	slli	r2,r6,3
  809a24:	003e9906 	br	80948c <_malloc_r+0xb4>
  809a28:	2009d0ba 	srai	r4,r4,2
  809a2c:	01402074 	movhi	r5,129
  809a30:	2942be04 	addi	r5,r5,2808
  809a34:	00c00044 	movi	r3,1
  809a38:	28800117 	ldw	r2,4(r5)
  809a3c:	1906983a 	sll	r3,r3,r4
  809a40:	10c4b03a 	or	r2,r2,r3
  809a44:	28800115 	stw	r2,4(r5)
  809a48:	003fa306 	br	8098d8 <_malloc_r+0x500>
  809a4c:	0027883a 	mov	r19,zero
  809a50:	00c00044 	movi	r3,1
  809a54:	003f8606 	br	809870 <_malloc_r+0x498>
  809a58:	d1200515 	stw	r4,-32748(gp)
  809a5c:	003f7306 	br	80982c <_malloc_r+0x454>
  809a60:	00801504 	movi	r2,84
  809a64:	11001936 	bltu	r2,r4,809acc <_malloc_r+0x6f4>
  809a68:	2804d33a 	srli	r2,r5,12
  809a6c:	11001b84 	addi	r4,r2,110
  809a70:	200690fa 	slli	r3,r4,3
  809a74:	003f8e06 	br	8098b0 <_malloc_r+0x4d8>
  809a78:	480b883a 	mov	r5,r9
  809a7c:	6807883a 	mov	r3,r13
  809a80:	288000cc 	andi	r2,r5,3
  809a84:	18fffe04 	addi	r3,r3,-8
  809a88:	297fffc4 	addi	r5,r5,-1
  809a8c:	10001526 	beq	r2,zero,809ae4 <_malloc_r+0x70c>
  809a90:	18800217 	ldw	r2,8(r3)
  809a94:	10fffa26 	beq	r2,r3,809a80 <_malloc_r+0x6a8>
  809a98:	2109883a 	add	r4,r4,r4
  809a9c:	393f1e36 	bltu	r7,r4,809718 <_malloc_r+0x340>
  809aa0:	203f1d26 	beq	r4,zero,809718 <_malloc_r+0x340>
  809aa4:	21c4703a 	and	r2,r4,r7
  809aa8:	10000226 	beq	r2,zero,809ab4 <_malloc_r+0x6dc>
  809aac:	6013883a 	mov	r9,r12
  809ab0:	003ee106 	br	809638 <_malloc_r+0x260>
  809ab4:	2109883a 	add	r4,r4,r4
  809ab8:	3904703a 	and	r2,r7,r4
  809abc:	63000104 	addi	r12,r12,4
  809ac0:	103ffc26 	beq	r2,zero,809ab4 <_malloc_r+0x6dc>
  809ac4:	6013883a 	mov	r9,r12
  809ac8:	003edb06 	br	809638 <_malloc_r+0x260>
  809acc:	00805504 	movi	r2,340
  809ad0:	11000836 	bltu	r2,r4,809af4 <_malloc_r+0x71c>
  809ad4:	2804d3fa 	srli	r2,r5,15
  809ad8:	11001dc4 	addi	r4,r2,119
  809adc:	200690fa 	slli	r3,r4,3
  809ae0:	003f7306 	br	8098b0 <_malloc_r+0x4d8>
  809ae4:	0104303a 	nor	r2,zero,r4
  809ae8:	388e703a 	and	r7,r7,r2
  809aec:	e1c00115 	stw	r7,4(fp)
  809af0:	003fe906 	br	809a98 <_malloc_r+0x6c0>
  809af4:	00815504 	movi	r2,1364
  809af8:	1100032e 	bgeu	r2,r4,809b08 <_malloc_r+0x730>
  809afc:	01001f84 	movi	r4,126
  809b00:	00c0fc04 	movi	r3,1008
  809b04:	003f6a06 	br	8098b0 <_malloc_r+0x4d8>
  809b08:	2804d4ba 	srli	r2,r5,18
  809b0c:	11001f04 	addi	r4,r2,124
  809b10:	200690fa 	slli	r3,r4,3
  809b14:	003f6606 	br	8098b0 <_malloc_r+0x4d8>

00809b18 <memchr>:
  809b18:	008000c4 	movi	r2,3
  809b1c:	29403fcc 	andi	r5,r5,255
  809b20:	2007883a 	mov	r3,r4
  809b24:	1180022e 	bgeu	r2,r6,809b30 <memchr+0x18>
  809b28:	2084703a 	and	r2,r4,r2
  809b2c:	10000b26 	beq	r2,zero,809b5c <memchr+0x44>
  809b30:	313fffc4 	addi	r4,r6,-1
  809b34:	3000051e 	bne	r6,zero,809b4c <memchr+0x34>
  809b38:	00002c06 	br	809bec <memchr+0xd4>
  809b3c:	213fffc4 	addi	r4,r4,-1
  809b40:	00bfffc4 	movi	r2,-1
  809b44:	18c00044 	addi	r3,r3,1
  809b48:	20802826 	beq	r4,r2,809bec <memchr+0xd4>
  809b4c:	18800003 	ldbu	r2,0(r3)
  809b50:	28bffa1e 	bne	r5,r2,809b3c <memchr+0x24>
  809b54:	1805883a 	mov	r2,r3
  809b58:	f800283a 	ret
  809b5c:	0011883a 	mov	r8,zero
  809b60:	0007883a 	mov	r3,zero
  809b64:	01c00104 	movi	r7,4
  809b68:	4004923a 	slli	r2,r8,8
  809b6c:	18c00044 	addi	r3,r3,1
  809b70:	1151883a 	add	r8,r2,r5
  809b74:	19fffc1e 	bne	r3,r7,809b68 <memchr+0x50>
  809b78:	02bfbff4 	movhi	r10,65279
  809b7c:	52bfbfc4 	addi	r10,r10,-257
  809b80:	02602074 	movhi	r9,32897
  809b84:	4a602004 	addi	r9,r9,-32640
  809b88:	02c000c4 	movi	r11,3
  809b8c:	20800017 	ldw	r2,0(r4)
  809b90:	31bfff04 	addi	r6,r6,-4
  809b94:	200f883a 	mov	r7,r4
  809b98:	1204f03a 	xor	r2,r2,r8
  809b9c:	1287883a 	add	r3,r2,r10
  809ba0:	1a46703a 	and	r3,r3,r9
  809ba4:	0084303a 	nor	r2,zero,r2
  809ba8:	10c4703a 	and	r2,r2,r3
  809bac:	10000b26 	beq	r2,zero,809bdc <memchr+0xc4>
  809bb0:	20800003 	ldbu	r2,0(r4)
  809bb4:	28800f26 	beq	r5,r2,809bf4 <memchr+0xdc>
  809bb8:	20800043 	ldbu	r2,1(r4)
  809bbc:	21c00044 	addi	r7,r4,1
  809bc0:	28800c26 	beq	r5,r2,809bf4 <memchr+0xdc>
  809bc4:	20800083 	ldbu	r2,2(r4)
  809bc8:	21c00084 	addi	r7,r4,2
  809bcc:	28800926 	beq	r5,r2,809bf4 <memchr+0xdc>
  809bd0:	208000c3 	ldbu	r2,3(r4)
  809bd4:	21c000c4 	addi	r7,r4,3
  809bd8:	28800626 	beq	r5,r2,809bf4 <memchr+0xdc>
  809bdc:	21000104 	addi	r4,r4,4
  809be0:	59bfea36 	bltu	r11,r6,809b8c <memchr+0x74>
  809be4:	2007883a 	mov	r3,r4
  809be8:	003fd106 	br	809b30 <memchr+0x18>
  809bec:	0005883a 	mov	r2,zero
  809bf0:	f800283a 	ret
  809bf4:	3805883a 	mov	r2,r7
  809bf8:	f800283a 	ret

00809bfc <memcpy>:
  809bfc:	01c003c4 	movi	r7,15
  809c00:	2007883a 	mov	r3,r4
  809c04:	3980032e 	bgeu	r7,r6,809c14 <memcpy+0x18>
  809c08:	2904b03a 	or	r2,r5,r4
  809c0c:	108000cc 	andi	r2,r2,3
  809c10:	10000926 	beq	r2,zero,809c38 <memcpy+0x3c>
  809c14:	30000626 	beq	r6,zero,809c30 <memcpy+0x34>
  809c18:	30cd883a 	add	r6,r6,r3
  809c1c:	28800003 	ldbu	r2,0(r5)
  809c20:	29400044 	addi	r5,r5,1
  809c24:	18800005 	stb	r2,0(r3)
  809c28:	18c00044 	addi	r3,r3,1
  809c2c:	30fffb1e 	bne	r6,r3,809c1c <memcpy+0x20>
  809c30:	2005883a 	mov	r2,r4
  809c34:	f800283a 	ret
  809c38:	3811883a 	mov	r8,r7
  809c3c:	200f883a 	mov	r7,r4
  809c40:	28c00017 	ldw	r3,0(r5)
  809c44:	31bffc04 	addi	r6,r6,-16
  809c48:	38c00015 	stw	r3,0(r7)
  809c4c:	28800117 	ldw	r2,4(r5)
  809c50:	38800115 	stw	r2,4(r7)
  809c54:	28c00217 	ldw	r3,8(r5)
  809c58:	38c00215 	stw	r3,8(r7)
  809c5c:	28800317 	ldw	r2,12(r5)
  809c60:	29400404 	addi	r5,r5,16
  809c64:	38800315 	stw	r2,12(r7)
  809c68:	39c00404 	addi	r7,r7,16
  809c6c:	41bff436 	bltu	r8,r6,809c40 <memcpy+0x44>
  809c70:	008000c4 	movi	r2,3
  809c74:	1180072e 	bgeu	r2,r6,809c94 <memcpy+0x98>
  809c78:	1007883a 	mov	r3,r2
  809c7c:	28800017 	ldw	r2,0(r5)
  809c80:	31bfff04 	addi	r6,r6,-4
  809c84:	29400104 	addi	r5,r5,4
  809c88:	38800015 	stw	r2,0(r7)
  809c8c:	39c00104 	addi	r7,r7,4
  809c90:	19bffa36 	bltu	r3,r6,809c7c <memcpy+0x80>
  809c94:	3807883a 	mov	r3,r7
  809c98:	003fde06 	br	809c14 <memcpy+0x18>

00809c9c <memmove>:
  809c9c:	2807883a 	mov	r3,r5
  809ca0:	2011883a 	mov	r8,r4
  809ca4:	29000c2e 	bgeu	r5,r4,809cd8 <memmove+0x3c>
  809ca8:	298f883a 	add	r7,r5,r6
  809cac:	21c00a2e 	bgeu	r4,r7,809cd8 <memmove+0x3c>
  809cb0:	30000726 	beq	r6,zero,809cd0 <memmove+0x34>
  809cb4:	2187883a 	add	r3,r4,r6
  809cb8:	198dc83a 	sub	r6,r3,r6
  809cbc:	39ffffc4 	addi	r7,r7,-1
  809cc0:	38800003 	ldbu	r2,0(r7)
  809cc4:	18ffffc4 	addi	r3,r3,-1
  809cc8:	18800005 	stb	r2,0(r3)
  809ccc:	19bffb1e 	bne	r3,r6,809cbc <memmove+0x20>
  809cd0:	2005883a 	mov	r2,r4
  809cd4:	f800283a 	ret
  809cd8:	01c003c4 	movi	r7,15
  809cdc:	39800a36 	bltu	r7,r6,809d08 <memmove+0x6c>
  809ce0:	303ffb26 	beq	r6,zero,809cd0 <memmove+0x34>
  809ce4:	400f883a 	mov	r7,r8
  809ce8:	320d883a 	add	r6,r6,r8
  809cec:	28800003 	ldbu	r2,0(r5)
  809cf0:	29400044 	addi	r5,r5,1
  809cf4:	38800005 	stb	r2,0(r7)
  809cf8:	39c00044 	addi	r7,r7,1
  809cfc:	39bffb1e 	bne	r7,r6,809cec <memmove+0x50>
  809d00:	2005883a 	mov	r2,r4
  809d04:	f800283a 	ret
  809d08:	1904b03a 	or	r2,r3,r4
  809d0c:	108000cc 	andi	r2,r2,3
  809d10:	103ff31e 	bne	r2,zero,809ce0 <memmove+0x44>
  809d14:	3811883a 	mov	r8,r7
  809d18:	180b883a 	mov	r5,r3
  809d1c:	200f883a 	mov	r7,r4
  809d20:	28c00017 	ldw	r3,0(r5)
  809d24:	31bffc04 	addi	r6,r6,-16
  809d28:	38c00015 	stw	r3,0(r7)
  809d2c:	28800117 	ldw	r2,4(r5)
  809d30:	38800115 	stw	r2,4(r7)
  809d34:	28c00217 	ldw	r3,8(r5)
  809d38:	38c00215 	stw	r3,8(r7)
  809d3c:	28800317 	ldw	r2,12(r5)
  809d40:	29400404 	addi	r5,r5,16
  809d44:	38800315 	stw	r2,12(r7)
  809d48:	39c00404 	addi	r7,r7,16
  809d4c:	41bff436 	bltu	r8,r6,809d20 <memmove+0x84>
  809d50:	008000c4 	movi	r2,3
  809d54:	1180072e 	bgeu	r2,r6,809d74 <memmove+0xd8>
  809d58:	1007883a 	mov	r3,r2
  809d5c:	28800017 	ldw	r2,0(r5)
  809d60:	31bfff04 	addi	r6,r6,-4
  809d64:	29400104 	addi	r5,r5,4
  809d68:	38800015 	stw	r2,0(r7)
  809d6c:	39c00104 	addi	r7,r7,4
  809d70:	19bffa36 	bltu	r3,r6,809d5c <memmove+0xc0>
  809d74:	3811883a 	mov	r8,r7
  809d78:	003fd906 	br	809ce0 <memmove+0x44>

00809d7c <memset>:
  809d7c:	008000c4 	movi	r2,3
  809d80:	29403fcc 	andi	r5,r5,255
  809d84:	2007883a 	mov	r3,r4
  809d88:	1180022e 	bgeu	r2,r6,809d94 <memset+0x18>
  809d8c:	2084703a 	and	r2,r4,r2
  809d90:	10000826 	beq	r2,zero,809db4 <memset+0x38>
  809d94:	30000526 	beq	r6,zero,809dac <memset+0x30>
  809d98:	2805883a 	mov	r2,r5
  809d9c:	30cd883a 	add	r6,r6,r3
  809da0:	18800005 	stb	r2,0(r3)
  809da4:	18c00044 	addi	r3,r3,1
  809da8:	19bffd1e 	bne	r3,r6,809da0 <memset+0x24>
  809dac:	2005883a 	mov	r2,r4
  809db0:	f800283a 	ret
  809db4:	2804923a 	slli	r2,r5,8
  809db8:	020003c4 	movi	r8,15
  809dbc:	200f883a 	mov	r7,r4
  809dc0:	2884b03a 	or	r2,r5,r2
  809dc4:	1006943a 	slli	r3,r2,16
  809dc8:	10c6b03a 	or	r3,r2,r3
  809dcc:	41800a2e 	bgeu	r8,r6,809df8 <memset+0x7c>
  809dd0:	4005883a 	mov	r2,r8
  809dd4:	31bffc04 	addi	r6,r6,-16
  809dd8:	38c00015 	stw	r3,0(r7)
  809ddc:	38c00115 	stw	r3,4(r7)
  809de0:	38c00215 	stw	r3,8(r7)
  809de4:	38c00315 	stw	r3,12(r7)
  809de8:	39c00404 	addi	r7,r7,16
  809dec:	11bff936 	bltu	r2,r6,809dd4 <memset+0x58>
  809df0:	008000c4 	movi	r2,3
  809df4:	1180052e 	bgeu	r2,r6,809e0c <memset+0x90>
  809df8:	31bfff04 	addi	r6,r6,-4
  809dfc:	008000c4 	movi	r2,3
  809e00:	38c00015 	stw	r3,0(r7)
  809e04:	39c00104 	addi	r7,r7,4
  809e08:	11bffb36 	bltu	r2,r6,809df8 <memset+0x7c>
  809e0c:	3807883a 	mov	r3,r7
  809e10:	003fe006 	br	809d94 <memset+0x18>

00809e14 <_Bfree>:
  809e14:	28000826 	beq	r5,zero,809e38 <_Bfree+0x24>
  809e18:	28800117 	ldw	r2,4(r5)
  809e1c:	21001317 	ldw	r4,76(r4)
  809e20:	1085883a 	add	r2,r2,r2
  809e24:	1085883a 	add	r2,r2,r2
  809e28:	1105883a 	add	r2,r2,r4
  809e2c:	10c00017 	ldw	r3,0(r2)
  809e30:	28c00015 	stw	r3,0(r5)
  809e34:	11400015 	stw	r5,0(r2)
  809e38:	f800283a 	ret

00809e3c <__hi0bits>:
  809e3c:	20bfffec 	andhi	r2,r4,65535
  809e40:	10001426 	beq	r2,zero,809e94 <__hi0bits+0x58>
  809e44:	0007883a 	mov	r3,zero
  809e48:	20bfc02c 	andhi	r2,r4,65280
  809e4c:	1000021e 	bne	r2,zero,809e58 <__hi0bits+0x1c>
  809e50:	2008923a 	slli	r4,r4,8
  809e54:	18c00204 	addi	r3,r3,8
  809e58:	20bc002c 	andhi	r2,r4,61440
  809e5c:	1000021e 	bne	r2,zero,809e68 <__hi0bits+0x2c>
  809e60:	2008913a 	slli	r4,r4,4
  809e64:	18c00104 	addi	r3,r3,4
  809e68:	20b0002c 	andhi	r2,r4,49152
  809e6c:	1000031e 	bne	r2,zero,809e7c <__hi0bits+0x40>
  809e70:	2105883a 	add	r2,r4,r4
  809e74:	18c00084 	addi	r3,r3,2
  809e78:	1089883a 	add	r4,r2,r2
  809e7c:	20000316 	blt	r4,zero,809e8c <__hi0bits+0x50>
  809e80:	2090002c 	andhi	r2,r4,16384
  809e84:	10000626 	beq	r2,zero,809ea0 <__hi0bits+0x64>
  809e88:	18c00044 	addi	r3,r3,1
  809e8c:	1805883a 	mov	r2,r3
  809e90:	f800283a 	ret
  809e94:	2008943a 	slli	r4,r4,16
  809e98:	00c00404 	movi	r3,16
  809e9c:	003fea06 	br	809e48 <__hi0bits+0xc>
  809ea0:	00c00804 	movi	r3,32
  809ea4:	1805883a 	mov	r2,r3
  809ea8:	f800283a 	ret

00809eac <__lo0bits>:
  809eac:	20c00017 	ldw	r3,0(r4)
  809eb0:	188001cc 	andi	r2,r3,7
  809eb4:	10000a26 	beq	r2,zero,809ee0 <__lo0bits+0x34>
  809eb8:	1880004c 	andi	r2,r3,1
  809ebc:	1005003a 	cmpeq	r2,r2,zero
  809ec0:	10002126 	beq	r2,zero,809f48 <__lo0bits+0x9c>
  809ec4:	1880008c 	andi	r2,r3,2
  809ec8:	1000251e 	bne	r2,zero,809f60 <__lo0bits+0xb4>
  809ecc:	1804d0ba 	srli	r2,r3,2
  809ed0:	01400084 	movi	r5,2
  809ed4:	20800015 	stw	r2,0(r4)
  809ed8:	2805883a 	mov	r2,r5
  809edc:	f800283a 	ret
  809ee0:	18bfffcc 	andi	r2,r3,65535
  809ee4:	10001526 	beq	r2,zero,809f3c <__lo0bits+0x90>
  809ee8:	000b883a 	mov	r5,zero
  809eec:	18803fcc 	andi	r2,r3,255
  809ef0:	1000021e 	bne	r2,zero,809efc <__lo0bits+0x50>
  809ef4:	1806d23a 	srli	r3,r3,8
  809ef8:	29400204 	addi	r5,r5,8
  809efc:	188003cc 	andi	r2,r3,15
  809f00:	1000021e 	bne	r2,zero,809f0c <__lo0bits+0x60>
  809f04:	1806d13a 	srli	r3,r3,4
  809f08:	29400104 	addi	r5,r5,4
  809f0c:	188000cc 	andi	r2,r3,3
  809f10:	1000021e 	bne	r2,zero,809f1c <__lo0bits+0x70>
  809f14:	1806d0ba 	srli	r3,r3,2
  809f18:	29400084 	addi	r5,r5,2
  809f1c:	1880004c 	andi	r2,r3,1
  809f20:	1000031e 	bne	r2,zero,809f30 <__lo0bits+0x84>
  809f24:	1806d07a 	srli	r3,r3,1
  809f28:	18000a26 	beq	r3,zero,809f54 <__lo0bits+0xa8>
  809f2c:	29400044 	addi	r5,r5,1
  809f30:	2805883a 	mov	r2,r5
  809f34:	20c00015 	stw	r3,0(r4)
  809f38:	f800283a 	ret
  809f3c:	1806d43a 	srli	r3,r3,16
  809f40:	01400404 	movi	r5,16
  809f44:	003fe906 	br	809eec <__lo0bits+0x40>
  809f48:	000b883a 	mov	r5,zero
  809f4c:	2805883a 	mov	r2,r5
  809f50:	f800283a 	ret
  809f54:	01400804 	movi	r5,32
  809f58:	2805883a 	mov	r2,r5
  809f5c:	f800283a 	ret
  809f60:	1804d07a 	srli	r2,r3,1
  809f64:	01400044 	movi	r5,1
  809f68:	20800015 	stw	r2,0(r4)
  809f6c:	003fda06 	br	809ed8 <__lo0bits+0x2c>

00809f70 <__mcmp>:
  809f70:	20800417 	ldw	r2,16(r4)
  809f74:	28c00417 	ldw	r3,16(r5)
  809f78:	10cfc83a 	sub	r7,r2,r3
  809f7c:	38000c1e 	bne	r7,zero,809fb0 <__mcmp+0x40>
  809f80:	18c5883a 	add	r2,r3,r3
  809f84:	1085883a 	add	r2,r2,r2
  809f88:	10c00504 	addi	r3,r2,20
  809f8c:	21000504 	addi	r4,r4,20
  809f90:	28cb883a 	add	r5,r5,r3
  809f94:	2085883a 	add	r2,r4,r2
  809f98:	10bfff04 	addi	r2,r2,-4
  809f9c:	297fff04 	addi	r5,r5,-4
  809fa0:	11800017 	ldw	r6,0(r2)
  809fa4:	28c00017 	ldw	r3,0(r5)
  809fa8:	30c0031e 	bne	r6,r3,809fb8 <__mcmp+0x48>
  809fac:	20bffa36 	bltu	r4,r2,809f98 <__mcmp+0x28>
  809fb0:	3805883a 	mov	r2,r7
  809fb4:	f800283a 	ret
  809fb8:	30c00336 	bltu	r6,r3,809fc8 <__mcmp+0x58>
  809fbc:	01c00044 	movi	r7,1
  809fc0:	3805883a 	mov	r2,r7
  809fc4:	f800283a 	ret
  809fc8:	01ffffc4 	movi	r7,-1
  809fcc:	003ff806 	br	809fb0 <__mcmp+0x40>

00809fd0 <__ulp>:
  809fd0:	295ffc2c 	andhi	r5,r5,32752
  809fd4:	013f3034 	movhi	r4,64704
  809fd8:	290b883a 	add	r5,r5,r4
  809fdc:	0145c83a 	sub	r2,zero,r5
  809fe0:	1007d53a 	srai	r3,r2,20
  809fe4:	000d883a 	mov	r6,zero
  809fe8:	0140040e 	bge	zero,r5,809ffc <__ulp+0x2c>
  809fec:	280f883a 	mov	r7,r5
  809ff0:	3807883a 	mov	r3,r7
  809ff4:	3005883a 	mov	r2,r6
  809ff8:	f800283a 	ret
  809ffc:	008004c4 	movi	r2,19
  80a000:	193ffb04 	addi	r4,r3,-20
  80a004:	10c00c0e 	bge	r2,r3,80a038 <__ulp+0x68>
  80a008:	008007c4 	movi	r2,31
  80a00c:	1107c83a 	sub	r3,r2,r4
  80a010:	00800784 	movi	r2,30
  80a014:	01400044 	movi	r5,1
  80a018:	11000216 	blt	r2,r4,80a024 <__ulp+0x54>
  80a01c:	00800044 	movi	r2,1
  80a020:	10ca983a 	sll	r5,r2,r3
  80a024:	000f883a 	mov	r7,zero
  80a028:	280d883a 	mov	r6,r5
  80a02c:	3807883a 	mov	r3,r7
  80a030:	3005883a 	mov	r2,r6
  80a034:	f800283a 	ret
  80a038:	00800234 	movhi	r2,8
  80a03c:	10cfd83a 	sra	r7,r2,r3
  80a040:	000d883a 	mov	r6,zero
  80a044:	3005883a 	mov	r2,r6
  80a048:	3807883a 	mov	r3,r7
  80a04c:	f800283a 	ret

0080a050 <__b2d>:
  80a050:	20800417 	ldw	r2,16(r4)
  80a054:	defff904 	addi	sp,sp,-28
  80a058:	dd000415 	stw	r20,16(sp)
  80a05c:	1085883a 	add	r2,r2,r2
  80a060:	25000504 	addi	r20,r4,20
  80a064:	1085883a 	add	r2,r2,r2
  80a068:	dc000015 	stw	r16,0(sp)
  80a06c:	a0a1883a 	add	r16,r20,r2
  80a070:	dd400515 	stw	r21,20(sp)
  80a074:	857fff17 	ldw	r21,-4(r16)
  80a078:	dc400115 	stw	r17,4(sp)
  80a07c:	dfc00615 	stw	ra,24(sp)
  80a080:	a809883a 	mov	r4,r21
  80a084:	2823883a 	mov	r17,r5
  80a088:	dcc00315 	stw	r19,12(sp)
  80a08c:	dc800215 	stw	r18,8(sp)
  80a090:	0809e3c0 	call	809e3c <__hi0bits>
  80a094:	100b883a 	mov	r5,r2
  80a098:	00800804 	movi	r2,32
  80a09c:	1145c83a 	sub	r2,r2,r5
  80a0a0:	88800015 	stw	r2,0(r17)
  80a0a4:	00800284 	movi	r2,10
  80a0a8:	80ffff04 	addi	r3,r16,-4
  80a0ac:	11401416 	blt	r2,r5,80a100 <__b2d+0xb0>
  80a0b0:	008002c4 	movi	r2,11
  80a0b4:	1149c83a 	sub	r4,r2,r5
  80a0b8:	a0c02736 	bltu	r20,r3,80a158 <__b2d+0x108>
  80a0bc:	000d883a 	mov	r6,zero
  80a0c0:	28800544 	addi	r2,r5,21
  80a0c4:	a906d83a 	srl	r3,r21,r4
  80a0c8:	a884983a 	sll	r2,r21,r2
  80a0cc:	1ccffc34 	orhi	r19,r3,16368
  80a0d0:	11a4b03a 	or	r18,r2,r6
  80a0d4:	9005883a 	mov	r2,r18
  80a0d8:	9807883a 	mov	r3,r19
  80a0dc:	dfc00617 	ldw	ra,24(sp)
  80a0e0:	dd400517 	ldw	r21,20(sp)
  80a0e4:	dd000417 	ldw	r20,16(sp)
  80a0e8:	dcc00317 	ldw	r19,12(sp)
  80a0ec:	dc800217 	ldw	r18,8(sp)
  80a0f0:	dc400117 	ldw	r17,4(sp)
  80a0f4:	dc000017 	ldw	r16,0(sp)
  80a0f8:	dec00704 	addi	sp,sp,28
  80a0fc:	f800283a 	ret
  80a100:	a0c00e36 	bltu	r20,r3,80a13c <__b2d+0xec>
  80a104:	293ffd44 	addi	r4,r5,-11
  80a108:	000d883a 	mov	r6,zero
  80a10c:	20000f26 	beq	r4,zero,80a14c <__b2d+0xfc>
  80a110:	00800804 	movi	r2,32
  80a114:	110bc83a 	sub	r5,r2,r4
  80a118:	a0c01236 	bltu	r20,r3,80a164 <__b2d+0x114>
  80a11c:	000f883a 	mov	r7,zero
  80a120:	a904983a 	sll	r2,r21,r4
  80a124:	3146d83a 	srl	r3,r6,r5
  80a128:	3108983a 	sll	r4,r6,r4
  80a12c:	108ffc34 	orhi	r2,r2,16368
  80a130:	18a6b03a 	or	r19,r3,r2
  80a134:	3924b03a 	or	r18,r7,r4
  80a138:	003fe606 	br	80a0d4 <__b2d+0x84>
  80a13c:	293ffd44 	addi	r4,r5,-11
  80a140:	81bffe17 	ldw	r6,-8(r16)
  80a144:	80fffe04 	addi	r3,r16,-8
  80a148:	203ff11e 	bne	r4,zero,80a110 <__b2d+0xc0>
  80a14c:	accffc34 	orhi	r19,r21,16368
  80a150:	3025883a 	mov	r18,r6
  80a154:	003fdf06 	br	80a0d4 <__b2d+0x84>
  80a158:	18bfff17 	ldw	r2,-4(r3)
  80a15c:	110cd83a 	srl	r6,r2,r4
  80a160:	003fd706 	br	80a0c0 <__b2d+0x70>
  80a164:	18bfff17 	ldw	r2,-4(r3)
  80a168:	114ed83a 	srl	r7,r2,r5
  80a16c:	003fec06 	br	80a120 <__b2d+0xd0>

0080a170 <__ratio>:
  80a170:	defff904 	addi	sp,sp,-28
  80a174:	dc400215 	stw	r17,8(sp)
  80a178:	2823883a 	mov	r17,r5
  80a17c:	d80b883a 	mov	r5,sp
  80a180:	dfc00615 	stw	ra,24(sp)
  80a184:	dd000515 	stw	r20,20(sp)
  80a188:	dcc00415 	stw	r19,16(sp)
  80a18c:	dc800315 	stw	r18,12(sp)
  80a190:	2025883a 	mov	r18,r4
  80a194:	080a0500 	call	80a050 <__b2d>
  80a198:	8809883a 	mov	r4,r17
  80a19c:	d9400104 	addi	r5,sp,4
  80a1a0:	1027883a 	mov	r19,r2
  80a1a4:	1829883a 	mov	r20,r3
  80a1a8:	080a0500 	call	80a050 <__b2d>
  80a1ac:	89000417 	ldw	r4,16(r17)
  80a1b0:	91c00417 	ldw	r7,16(r18)
  80a1b4:	d9800117 	ldw	r6,4(sp)
  80a1b8:	180b883a 	mov	r5,r3
  80a1bc:	390fc83a 	sub	r7,r7,r4
  80a1c0:	1009883a 	mov	r4,r2
  80a1c4:	d8800017 	ldw	r2,0(sp)
  80a1c8:	380e917a 	slli	r7,r7,5
  80a1cc:	2011883a 	mov	r8,r4
  80a1d0:	1185c83a 	sub	r2,r2,r6
  80a1d4:	11c5883a 	add	r2,r2,r7
  80a1d8:	1006953a 	slli	r3,r2,20
  80a1dc:	2813883a 	mov	r9,r5
  80a1e0:	00800d0e 	bge	zero,r2,80a218 <__ratio+0xa8>
  80a1e4:	1d29883a 	add	r20,r3,r20
  80a1e8:	a00b883a 	mov	r5,r20
  80a1ec:	480f883a 	mov	r7,r9
  80a1f0:	9809883a 	mov	r4,r19
  80a1f4:	400d883a 	mov	r6,r8
  80a1f8:	080c97c0 	call	80c97c <__divdf3>
  80a1fc:	dfc00617 	ldw	ra,24(sp)
  80a200:	dd000517 	ldw	r20,20(sp)
  80a204:	dcc00417 	ldw	r19,16(sp)
  80a208:	dc800317 	ldw	r18,12(sp)
  80a20c:	dc400217 	ldw	r17,8(sp)
  80a210:	dec00704 	addi	sp,sp,28
  80a214:	f800283a 	ret
  80a218:	28d3c83a 	sub	r9,r5,r3
  80a21c:	003ff206 	br	80a1e8 <__ratio+0x78>

0080a220 <_mprec_log10>:
  80a220:	defffe04 	addi	sp,sp,-8
  80a224:	008005c4 	movi	r2,23
  80a228:	dc000015 	stw	r16,0(sp)
  80a22c:	dfc00115 	stw	ra,4(sp)
  80a230:	2021883a 	mov	r16,r4
  80a234:	11000c16 	blt	r2,r4,80a268 <_mprec_log10+0x48>
  80a238:	200490fa 	slli	r2,r4,3
  80a23c:	00c02074 	movhi	r3,129
  80a240:	18c16704 	addi	r3,r3,1436
  80a244:	10c5883a 	add	r2,r2,r3
  80a248:	12400117 	ldw	r9,4(r2)
  80a24c:	12000017 	ldw	r8,0(r2)
  80a250:	4807883a 	mov	r3,r9
  80a254:	4005883a 	mov	r2,r8
  80a258:	dfc00117 	ldw	ra,4(sp)
  80a25c:	dc000017 	ldw	r16,0(sp)
  80a260:	dec00204 	addi	sp,sp,8
  80a264:	f800283a 	ret
  80a268:	0011883a 	mov	r8,zero
  80a26c:	024ffc34 	movhi	r9,16368
  80a270:	0005883a 	mov	r2,zero
  80a274:	00d00934 	movhi	r3,16420
  80a278:	480b883a 	mov	r5,r9
  80a27c:	4009883a 	mov	r4,r8
  80a280:	180f883a 	mov	r7,r3
  80a284:	100d883a 	mov	r6,r2
  80a288:	0802bfc0 	call	802bfc <__muldf3>
  80a28c:	843fffc4 	addi	r16,r16,-1
  80a290:	1011883a 	mov	r8,r2
  80a294:	1813883a 	mov	r9,r3
  80a298:	803ff51e 	bne	r16,zero,80a270 <_mprec_log10+0x50>
  80a29c:	4005883a 	mov	r2,r8
  80a2a0:	4807883a 	mov	r3,r9
  80a2a4:	dfc00117 	ldw	ra,4(sp)
  80a2a8:	dc000017 	ldw	r16,0(sp)
  80a2ac:	dec00204 	addi	sp,sp,8
  80a2b0:	f800283a 	ret

0080a2b4 <__copybits>:
  80a2b4:	297fffc4 	addi	r5,r5,-1
  80a2b8:	30800417 	ldw	r2,16(r6)
  80a2bc:	280bd17a 	srai	r5,r5,5
  80a2c0:	31800504 	addi	r6,r6,20
  80a2c4:	1085883a 	add	r2,r2,r2
  80a2c8:	294b883a 	add	r5,r5,r5
  80a2cc:	294b883a 	add	r5,r5,r5
  80a2d0:	1085883a 	add	r2,r2,r2
  80a2d4:	290b883a 	add	r5,r5,r4
  80a2d8:	3087883a 	add	r3,r6,r2
  80a2dc:	29400104 	addi	r5,r5,4
  80a2e0:	30c0052e 	bgeu	r6,r3,80a2f8 <__copybits+0x44>
  80a2e4:	30800017 	ldw	r2,0(r6)
  80a2e8:	31800104 	addi	r6,r6,4
  80a2ec:	20800015 	stw	r2,0(r4)
  80a2f0:	21000104 	addi	r4,r4,4
  80a2f4:	30fffb36 	bltu	r6,r3,80a2e4 <__copybits+0x30>
  80a2f8:	2140032e 	bgeu	r4,r5,80a308 <__copybits+0x54>
  80a2fc:	20000015 	stw	zero,0(r4)
  80a300:	21000104 	addi	r4,r4,4
  80a304:	217ffd36 	bltu	r4,r5,80a2fc <__copybits+0x48>
  80a308:	f800283a 	ret

0080a30c <__any_on>:
  80a30c:	20800417 	ldw	r2,16(r4)
  80a310:	2807d17a 	srai	r3,r5,5
  80a314:	21000504 	addi	r4,r4,20
  80a318:	10c00d0e 	bge	r2,r3,80a350 <__any_on+0x44>
  80a31c:	1085883a 	add	r2,r2,r2
  80a320:	1085883a 	add	r2,r2,r2
  80a324:	208d883a 	add	r6,r4,r2
  80a328:	2180182e 	bgeu	r4,r6,80a38c <__any_on+0x80>
  80a32c:	30bfff17 	ldw	r2,-4(r6)
  80a330:	30ffff04 	addi	r3,r6,-4
  80a334:	1000041e 	bne	r2,zero,80a348 <__any_on+0x3c>
  80a338:	20c0142e 	bgeu	r4,r3,80a38c <__any_on+0x80>
  80a33c:	18ffff04 	addi	r3,r3,-4
  80a340:	18800017 	ldw	r2,0(r3)
  80a344:	103ffc26 	beq	r2,zero,80a338 <__any_on+0x2c>
  80a348:	00800044 	movi	r2,1
  80a34c:	f800283a 	ret
  80a350:	18800a0e 	bge	r3,r2,80a37c <__any_on+0x70>
  80a354:	294007cc 	andi	r5,r5,31
  80a358:	28000826 	beq	r5,zero,80a37c <__any_on+0x70>
  80a35c:	18c5883a 	add	r2,r3,r3
  80a360:	1085883a 	add	r2,r2,r2
  80a364:	208d883a 	add	r6,r4,r2
  80a368:	30c00017 	ldw	r3,0(r6)
  80a36c:	1944d83a 	srl	r2,r3,r5
  80a370:	1144983a 	sll	r2,r2,r5
  80a374:	18bff41e 	bne	r3,r2,80a348 <__any_on+0x3c>
  80a378:	003feb06 	br	80a328 <__any_on+0x1c>
  80a37c:	18c5883a 	add	r2,r3,r3
  80a380:	1085883a 	add	r2,r2,r2
  80a384:	208d883a 	add	r6,r4,r2
  80a388:	003fe706 	br	80a328 <__any_on+0x1c>
  80a38c:	0005883a 	mov	r2,zero
  80a390:	f800283a 	ret

0080a394 <_Balloc>:
  80a394:	20c01317 	ldw	r3,76(r4)
  80a398:	defffb04 	addi	sp,sp,-20
  80a39c:	dcc00315 	stw	r19,12(sp)
  80a3a0:	dc800215 	stw	r18,8(sp)
  80a3a4:	dfc00415 	stw	ra,16(sp)
  80a3a8:	2825883a 	mov	r18,r5
  80a3ac:	dc400115 	stw	r17,4(sp)
  80a3b0:	dc000015 	stw	r16,0(sp)
  80a3b4:	2027883a 	mov	r19,r4
  80a3b8:	01800404 	movi	r6,16
  80a3bc:	01400104 	movi	r5,4
  80a3c0:	18001726 	beq	r3,zero,80a420 <_Balloc+0x8c>
  80a3c4:	01400044 	movi	r5,1
  80a3c8:	9485883a 	add	r2,r18,r18
  80a3cc:	2ca2983a 	sll	r17,r5,r18
  80a3d0:	1085883a 	add	r2,r2,r2
  80a3d4:	10c7883a 	add	r3,r2,r3
  80a3d8:	1c000017 	ldw	r16,0(r3)
  80a3dc:	8c4d883a 	add	r6,r17,r17
  80a3e0:	318d883a 	add	r6,r6,r6
  80a3e4:	9809883a 	mov	r4,r19
  80a3e8:	31800504 	addi	r6,r6,20
  80a3ec:	80001226 	beq	r16,zero,80a438 <_Balloc+0xa4>
  80a3f0:	80800017 	ldw	r2,0(r16)
  80a3f4:	18800015 	stw	r2,0(r3)
  80a3f8:	80000415 	stw	zero,16(r16)
  80a3fc:	80000315 	stw	zero,12(r16)
  80a400:	8005883a 	mov	r2,r16
  80a404:	dfc00417 	ldw	ra,16(sp)
  80a408:	dcc00317 	ldw	r19,12(sp)
  80a40c:	dc800217 	ldw	r18,8(sp)
  80a410:	dc400117 	ldw	r17,4(sp)
  80a414:	dc000017 	ldw	r16,0(sp)
  80a418:	dec00504 	addi	sp,sp,20
  80a41c:	f800283a 	ret
  80a420:	080b8800 	call	80b880 <_calloc_r>
  80a424:	1007883a 	mov	r3,r2
  80a428:	0021883a 	mov	r16,zero
  80a42c:	98801315 	stw	r2,76(r19)
  80a430:	103fe41e 	bne	r2,zero,80a3c4 <_Balloc+0x30>
  80a434:	003ff206 	br	80a400 <_Balloc+0x6c>
  80a438:	080b8800 	call	80b880 <_calloc_r>
  80a43c:	103ff026 	beq	r2,zero,80a400 <_Balloc+0x6c>
  80a440:	1021883a 	mov	r16,r2
  80a444:	14800115 	stw	r18,4(r2)
  80a448:	14400215 	stw	r17,8(r2)
  80a44c:	003fea06 	br	80a3f8 <_Balloc+0x64>

0080a450 <__d2b>:
  80a450:	defff504 	addi	sp,sp,-44
  80a454:	dcc00515 	stw	r19,20(sp)
  80a458:	04c00044 	movi	r19,1
  80a45c:	dc000215 	stw	r16,8(sp)
  80a460:	2821883a 	mov	r16,r5
  80a464:	980b883a 	mov	r5,r19
  80a468:	ddc00915 	stw	r23,36(sp)
  80a46c:	dd800815 	stw	r22,32(sp)
  80a470:	dd400715 	stw	r21,28(sp)
  80a474:	dd000615 	stw	r20,24(sp)
  80a478:	dc800415 	stw	r18,16(sp)
  80a47c:	dc400315 	stw	r17,12(sp)
  80a480:	dfc00a15 	stw	ra,40(sp)
  80a484:	3023883a 	mov	r17,r6
  80a488:	382d883a 	mov	r22,r7
  80a48c:	ddc00b17 	ldw	r23,44(sp)
  80a490:	080a3940 	call	80a394 <_Balloc>
  80a494:	1025883a 	mov	r18,r2
  80a498:	00a00034 	movhi	r2,32768
  80a49c:	10bfffc4 	addi	r2,r2,-1
  80a4a0:	8888703a 	and	r4,r17,r2
  80a4a4:	202ad53a 	srli	r21,r4,20
  80a4a8:	00800434 	movhi	r2,16
  80a4ac:	10bfffc4 	addi	r2,r2,-1
  80a4b0:	8886703a 	and	r3,r17,r2
  80a4b4:	a829003a 	cmpeq	r20,r21,zero
  80a4b8:	800b883a 	mov	r5,r16
  80a4bc:	d8c00115 	stw	r3,4(sp)
  80a4c0:	94000504 	addi	r16,r18,20
  80a4c4:	a000021e 	bne	r20,zero,80a4d0 <__d2b+0x80>
  80a4c8:	18c00434 	orhi	r3,r3,16
  80a4cc:	d8c00115 	stw	r3,4(sp)
  80a4d0:	28002726 	beq	r5,zero,80a570 <__d2b+0x120>
  80a4d4:	d809883a 	mov	r4,sp
  80a4d8:	d9400015 	stw	r5,0(sp)
  80a4dc:	0809eac0 	call	809eac <__lo0bits>
  80a4e0:	100d883a 	mov	r6,r2
  80a4e4:	10003526 	beq	r2,zero,80a5bc <__d2b+0x16c>
  80a4e8:	d8c00117 	ldw	r3,4(sp)
  80a4ec:	00800804 	movi	r2,32
  80a4f0:	1185c83a 	sub	r2,r2,r6
  80a4f4:	d9000017 	ldw	r4,0(sp)
  80a4f8:	1886983a 	sll	r3,r3,r2
  80a4fc:	1906b03a 	or	r3,r3,r4
  80a500:	90c00515 	stw	r3,20(r18)
  80a504:	d8c00117 	ldw	r3,4(sp)
  80a508:	1986d83a 	srl	r3,r3,r6
  80a50c:	d8c00115 	stw	r3,4(sp)
  80a510:	180b003a 	cmpeq	r5,r3,zero
  80a514:	00800084 	movi	r2,2
  80a518:	114bc83a 	sub	r5,r2,r5
  80a51c:	80c00115 	stw	r3,4(r16)
  80a520:	91400415 	stw	r5,16(r18)
  80a524:	a0001a1e 	bne	r20,zero,80a590 <__d2b+0x140>
  80a528:	3545883a 	add	r2,r6,r21
  80a52c:	10bef344 	addi	r2,r2,-1075
  80a530:	00c00d44 	movi	r3,53
  80a534:	b0800015 	stw	r2,0(r22)
  80a538:	1987c83a 	sub	r3,r3,r6
  80a53c:	b8c00015 	stw	r3,0(r23)
  80a540:	9005883a 	mov	r2,r18
  80a544:	dfc00a17 	ldw	ra,40(sp)
  80a548:	ddc00917 	ldw	r23,36(sp)
  80a54c:	dd800817 	ldw	r22,32(sp)
  80a550:	dd400717 	ldw	r21,28(sp)
  80a554:	dd000617 	ldw	r20,24(sp)
  80a558:	dcc00517 	ldw	r19,20(sp)
  80a55c:	dc800417 	ldw	r18,16(sp)
  80a560:	dc400317 	ldw	r17,12(sp)
  80a564:	dc000217 	ldw	r16,8(sp)
  80a568:	dec00b04 	addi	sp,sp,44
  80a56c:	f800283a 	ret
  80a570:	d9000104 	addi	r4,sp,4
  80a574:	0809eac0 	call	809eac <__lo0bits>
  80a578:	11800804 	addi	r6,r2,32
  80a57c:	d8800117 	ldw	r2,4(sp)
  80a580:	94c00415 	stw	r19,16(r18)
  80a584:	980b883a 	mov	r5,r19
  80a588:	90800515 	stw	r2,20(r18)
  80a58c:	a03fe626 	beq	r20,zero,80a528 <__d2b+0xd8>
  80a590:	2945883a 	add	r2,r5,r5
  80a594:	1085883a 	add	r2,r2,r2
  80a598:	1405883a 	add	r2,r2,r16
  80a59c:	113fff17 	ldw	r4,-4(r2)
  80a5a0:	30fef384 	addi	r3,r6,-1074
  80a5a4:	2820917a 	slli	r16,r5,5
  80a5a8:	b0c00015 	stw	r3,0(r22)
  80a5ac:	0809e3c0 	call	809e3c <__hi0bits>
  80a5b0:	80a1c83a 	sub	r16,r16,r2
  80a5b4:	bc000015 	stw	r16,0(r23)
  80a5b8:	003fe106 	br	80a540 <__d2b+0xf0>
  80a5bc:	d8800017 	ldw	r2,0(sp)
  80a5c0:	90800515 	stw	r2,20(r18)
  80a5c4:	d8c00117 	ldw	r3,4(sp)
  80a5c8:	003fd106 	br	80a510 <__d2b+0xc0>

0080a5cc <__mdiff>:
  80a5cc:	defffb04 	addi	sp,sp,-20
  80a5d0:	dc000015 	stw	r16,0(sp)
  80a5d4:	2821883a 	mov	r16,r5
  80a5d8:	dc800215 	stw	r18,8(sp)
  80a5dc:	300b883a 	mov	r5,r6
  80a5e0:	2025883a 	mov	r18,r4
  80a5e4:	8009883a 	mov	r4,r16
  80a5e8:	dc400115 	stw	r17,4(sp)
  80a5ec:	dfc00415 	stw	ra,16(sp)
  80a5f0:	dcc00315 	stw	r19,12(sp)
  80a5f4:	3023883a 	mov	r17,r6
  80a5f8:	0809f700 	call	809f70 <__mcmp>
  80a5fc:	10004226 	beq	r2,zero,80a708 <__mdiff+0x13c>
  80a600:	10005016 	blt	r2,zero,80a744 <__mdiff+0x178>
  80a604:	0027883a 	mov	r19,zero
  80a608:	81400117 	ldw	r5,4(r16)
  80a60c:	9009883a 	mov	r4,r18
  80a610:	080a3940 	call	80a394 <_Balloc>
  80a614:	1019883a 	mov	r12,r2
  80a618:	82800417 	ldw	r10,16(r16)
  80a61c:	88800417 	ldw	r2,16(r17)
  80a620:	81800504 	addi	r6,r16,20
  80a624:	5287883a 	add	r3,r10,r10
  80a628:	1085883a 	add	r2,r2,r2
  80a62c:	18c7883a 	add	r3,r3,r3
  80a630:	1085883a 	add	r2,r2,r2
  80a634:	8a000504 	addi	r8,r17,20
  80a638:	64c00315 	stw	r19,12(r12)
  80a63c:	30db883a 	add	r13,r6,r3
  80a640:	4097883a 	add	r11,r8,r2
  80a644:	61c00504 	addi	r7,r12,20
  80a648:	0013883a 	mov	r9,zero
  80a64c:	31000017 	ldw	r4,0(r6)
  80a650:	41400017 	ldw	r5,0(r8)
  80a654:	42000104 	addi	r8,r8,4
  80a658:	20bfffcc 	andi	r2,r4,65535
  80a65c:	28ffffcc 	andi	r3,r5,65535
  80a660:	10c5c83a 	sub	r2,r2,r3
  80a664:	1245883a 	add	r2,r2,r9
  80a668:	2008d43a 	srli	r4,r4,16
  80a66c:	280ad43a 	srli	r5,r5,16
  80a670:	1007d43a 	srai	r3,r2,16
  80a674:	3880000d 	sth	r2,0(r7)
  80a678:	2149c83a 	sub	r4,r4,r5
  80a67c:	20c9883a 	add	r4,r4,r3
  80a680:	3900008d 	sth	r4,2(r7)
  80a684:	31800104 	addi	r6,r6,4
  80a688:	39c00104 	addi	r7,r7,4
  80a68c:	2013d43a 	srai	r9,r4,16
  80a690:	42ffee36 	bltu	r8,r11,80a64c <__mdiff+0x80>
  80a694:	33400c2e 	bgeu	r6,r13,80a6c8 <__mdiff+0xfc>
  80a698:	30800017 	ldw	r2,0(r6)
  80a69c:	31800104 	addi	r6,r6,4
  80a6a0:	10ffffcc 	andi	r3,r2,65535
  80a6a4:	1a47883a 	add	r3,r3,r9
  80a6a8:	1004d43a 	srli	r2,r2,16
  80a6ac:	1809d43a 	srai	r4,r3,16
  80a6b0:	38c0000d 	sth	r3,0(r7)
  80a6b4:	1105883a 	add	r2,r2,r4
  80a6b8:	3880008d 	sth	r2,2(r7)
  80a6bc:	1013d43a 	srai	r9,r2,16
  80a6c0:	39c00104 	addi	r7,r7,4
  80a6c4:	337ff436 	bltu	r6,r13,80a698 <__mdiff+0xcc>
  80a6c8:	38bfff17 	ldw	r2,-4(r7)
  80a6cc:	38ffff04 	addi	r3,r7,-4
  80a6d0:	1000041e 	bne	r2,zero,80a6e4 <__mdiff+0x118>
  80a6d4:	18ffff04 	addi	r3,r3,-4
  80a6d8:	18800017 	ldw	r2,0(r3)
  80a6dc:	52bfffc4 	addi	r10,r10,-1
  80a6e0:	103ffc26 	beq	r2,zero,80a6d4 <__mdiff+0x108>
  80a6e4:	6005883a 	mov	r2,r12
  80a6e8:	62800415 	stw	r10,16(r12)
  80a6ec:	dfc00417 	ldw	ra,16(sp)
  80a6f0:	dcc00317 	ldw	r19,12(sp)
  80a6f4:	dc800217 	ldw	r18,8(sp)
  80a6f8:	dc400117 	ldw	r17,4(sp)
  80a6fc:	dc000017 	ldw	r16,0(sp)
  80a700:	dec00504 	addi	sp,sp,20
  80a704:	f800283a 	ret
  80a708:	9009883a 	mov	r4,r18
  80a70c:	000b883a 	mov	r5,zero
  80a710:	080a3940 	call	80a394 <_Balloc>
  80a714:	1019883a 	mov	r12,r2
  80a718:	00800044 	movi	r2,1
  80a71c:	60800415 	stw	r2,16(r12)
  80a720:	6005883a 	mov	r2,r12
  80a724:	60000515 	stw	zero,20(r12)
  80a728:	dfc00417 	ldw	ra,16(sp)
  80a72c:	dcc00317 	ldw	r19,12(sp)
  80a730:	dc800217 	ldw	r18,8(sp)
  80a734:	dc400117 	ldw	r17,4(sp)
  80a738:	dc000017 	ldw	r16,0(sp)
  80a73c:	dec00504 	addi	sp,sp,20
  80a740:	f800283a 	ret
  80a744:	880d883a 	mov	r6,r17
  80a748:	04c00044 	movi	r19,1
  80a74c:	8023883a 	mov	r17,r16
  80a750:	3021883a 	mov	r16,r6
  80a754:	003fac06 	br	80a608 <__mdiff+0x3c>

0080a758 <__lshift>:
  80a758:	defff904 	addi	sp,sp,-28
  80a75c:	28800417 	ldw	r2,16(r5)
  80a760:	dc000015 	stw	r16,0(sp)
  80a764:	3021d17a 	srai	r16,r6,5
  80a768:	28c00217 	ldw	r3,8(r5)
  80a76c:	10800044 	addi	r2,r2,1
  80a770:	dc400115 	stw	r17,4(sp)
  80a774:	80a3883a 	add	r17,r16,r2
  80a778:	dd400515 	stw	r21,20(sp)
  80a77c:	dd000415 	stw	r20,16(sp)
  80a780:	dc800215 	stw	r18,8(sp)
  80a784:	dfc00615 	stw	ra,24(sp)
  80a788:	2825883a 	mov	r18,r5
  80a78c:	dcc00315 	stw	r19,12(sp)
  80a790:	3029883a 	mov	r20,r6
  80a794:	202b883a 	mov	r21,r4
  80a798:	29400117 	ldw	r5,4(r5)
  80a79c:	1c40030e 	bge	r3,r17,80a7ac <__lshift+0x54>
  80a7a0:	18c7883a 	add	r3,r3,r3
  80a7a4:	29400044 	addi	r5,r5,1
  80a7a8:	1c7ffd16 	blt	r3,r17,80a7a0 <__lshift+0x48>
  80a7ac:	a809883a 	mov	r4,r21
  80a7b0:	080a3940 	call	80a394 <_Balloc>
  80a7b4:	1027883a 	mov	r19,r2
  80a7b8:	11400504 	addi	r5,r2,20
  80a7bc:	0400090e 	bge	zero,r16,80a7e4 <__lshift+0x8c>
  80a7c0:	2805883a 	mov	r2,r5
  80a7c4:	0007883a 	mov	r3,zero
  80a7c8:	18c00044 	addi	r3,r3,1
  80a7cc:	10000015 	stw	zero,0(r2)
  80a7d0:	10800104 	addi	r2,r2,4
  80a7d4:	80fffc1e 	bne	r16,r3,80a7c8 <__lshift+0x70>
  80a7d8:	8405883a 	add	r2,r16,r16
  80a7dc:	1085883a 	add	r2,r2,r2
  80a7e0:	288b883a 	add	r5,r5,r2
  80a7e4:	90800417 	ldw	r2,16(r18)
  80a7e8:	91000504 	addi	r4,r18,20
  80a7ec:	a18007cc 	andi	r6,r20,31
  80a7f0:	1085883a 	add	r2,r2,r2
  80a7f4:	1085883a 	add	r2,r2,r2
  80a7f8:	208f883a 	add	r7,r4,r2
  80a7fc:	30001e26 	beq	r6,zero,80a878 <__lshift+0x120>
  80a800:	00800804 	movi	r2,32
  80a804:	1191c83a 	sub	r8,r2,r6
  80a808:	0007883a 	mov	r3,zero
  80a80c:	20800017 	ldw	r2,0(r4)
  80a810:	1184983a 	sll	r2,r2,r6
  80a814:	1884b03a 	or	r2,r3,r2
  80a818:	28800015 	stw	r2,0(r5)
  80a81c:	20c00017 	ldw	r3,0(r4)
  80a820:	21000104 	addi	r4,r4,4
  80a824:	29400104 	addi	r5,r5,4
  80a828:	1a06d83a 	srl	r3,r3,r8
  80a82c:	21fff736 	bltu	r4,r7,80a80c <__lshift+0xb4>
  80a830:	28c00015 	stw	r3,0(r5)
  80a834:	18000126 	beq	r3,zero,80a83c <__lshift+0xe4>
  80a838:	8c400044 	addi	r17,r17,1
  80a83c:	88bfffc4 	addi	r2,r17,-1
  80a840:	98800415 	stw	r2,16(r19)
  80a844:	a809883a 	mov	r4,r21
  80a848:	900b883a 	mov	r5,r18
  80a84c:	0809e140 	call	809e14 <_Bfree>
  80a850:	9805883a 	mov	r2,r19
  80a854:	dfc00617 	ldw	ra,24(sp)
  80a858:	dd400517 	ldw	r21,20(sp)
  80a85c:	dd000417 	ldw	r20,16(sp)
  80a860:	dcc00317 	ldw	r19,12(sp)
  80a864:	dc800217 	ldw	r18,8(sp)
  80a868:	dc400117 	ldw	r17,4(sp)
  80a86c:	dc000017 	ldw	r16,0(sp)
  80a870:	dec00704 	addi	sp,sp,28
  80a874:	f800283a 	ret
  80a878:	20800017 	ldw	r2,0(r4)
  80a87c:	21000104 	addi	r4,r4,4
  80a880:	28800015 	stw	r2,0(r5)
  80a884:	29400104 	addi	r5,r5,4
  80a888:	21ffec2e 	bgeu	r4,r7,80a83c <__lshift+0xe4>
  80a88c:	20800017 	ldw	r2,0(r4)
  80a890:	21000104 	addi	r4,r4,4
  80a894:	28800015 	stw	r2,0(r5)
  80a898:	29400104 	addi	r5,r5,4
  80a89c:	21fff636 	bltu	r4,r7,80a878 <__lshift+0x120>
  80a8a0:	003fe606 	br	80a83c <__lshift+0xe4>

0080a8a4 <__multiply>:
  80a8a4:	defff004 	addi	sp,sp,-64
  80a8a8:	dc800815 	stw	r18,32(sp)
  80a8ac:	dc400715 	stw	r17,28(sp)
  80a8b0:	2c800417 	ldw	r18,16(r5)
  80a8b4:	34400417 	ldw	r17,16(r6)
  80a8b8:	dcc00915 	stw	r19,36(sp)
  80a8bc:	dc000615 	stw	r16,24(sp)
  80a8c0:	dfc00f15 	stw	ra,60(sp)
  80a8c4:	df000e15 	stw	fp,56(sp)
  80a8c8:	ddc00d15 	stw	r23,52(sp)
  80a8cc:	dd800c15 	stw	r22,48(sp)
  80a8d0:	dd400b15 	stw	r21,44(sp)
  80a8d4:	dd000a15 	stw	r20,40(sp)
  80a8d8:	2821883a 	mov	r16,r5
  80a8dc:	3027883a 	mov	r19,r6
  80a8e0:	9440040e 	bge	r18,r17,80a8f4 <__multiply+0x50>
  80a8e4:	8825883a 	mov	r18,r17
  80a8e8:	2c400417 	ldw	r17,16(r5)
  80a8ec:	2827883a 	mov	r19,r5
  80a8f0:	3021883a 	mov	r16,r6
  80a8f4:	80800217 	ldw	r2,8(r16)
  80a8f8:	9447883a 	add	r3,r18,r17
  80a8fc:	d8c00415 	stw	r3,16(sp)
  80a900:	81400117 	ldw	r5,4(r16)
  80a904:	10c0010e 	bge	r2,r3,80a90c <__multiply+0x68>
  80a908:	29400044 	addi	r5,r5,1
  80a90c:	080a3940 	call	80a394 <_Balloc>
  80a910:	d8800515 	stw	r2,20(sp)
  80a914:	d9000417 	ldw	r4,16(sp)
  80a918:	d8c00517 	ldw	r3,20(sp)
  80a91c:	2105883a 	add	r2,r4,r4
  80a920:	1085883a 	add	r2,r2,r2
  80a924:	19000504 	addi	r4,r3,20
  80a928:	2085883a 	add	r2,r4,r2
  80a92c:	d8800315 	stw	r2,12(sp)
  80a930:	2080052e 	bgeu	r4,r2,80a948 <__multiply+0xa4>
  80a934:	2005883a 	mov	r2,r4
  80a938:	d8c00317 	ldw	r3,12(sp)
  80a93c:	10000015 	stw	zero,0(r2)
  80a940:	10800104 	addi	r2,r2,4
  80a944:	10fffc36 	bltu	r2,r3,80a938 <__multiply+0x94>
  80a948:	8c45883a 	add	r2,r17,r17
  80a94c:	9487883a 	add	r3,r18,r18
  80a950:	9dc00504 	addi	r23,r19,20
  80a954:	1085883a 	add	r2,r2,r2
  80a958:	84000504 	addi	r16,r16,20
  80a95c:	18c7883a 	add	r3,r3,r3
  80a960:	b885883a 	add	r2,r23,r2
  80a964:	dc000015 	stw	r16,0(sp)
  80a968:	d8800215 	stw	r2,8(sp)
  80a96c:	80f9883a 	add	fp,r16,r3
  80a970:	b880432e 	bgeu	r23,r2,80aa80 <__multiply+0x1dc>
  80a974:	d9000115 	stw	r4,4(sp)
  80a978:	b9000017 	ldw	r4,0(r23)
  80a97c:	253fffcc 	andi	r20,r4,65535
  80a980:	a0001a26 	beq	r20,zero,80a9ec <__multiply+0x148>
  80a984:	dcc00017 	ldw	r19,0(sp)
  80a988:	dc800117 	ldw	r18,4(sp)
  80a98c:	002b883a 	mov	r21,zero
  80a990:	9c400017 	ldw	r17,0(r19)
  80a994:	94000017 	ldw	r16,0(r18)
  80a998:	a009883a 	mov	r4,r20
  80a99c:	897fffcc 	andi	r5,r17,65535
  80a9a0:	08032000 	call	803200 <__mulsi3>
  80a9a4:	880ad43a 	srli	r5,r17,16
  80a9a8:	80ffffcc 	andi	r3,r16,65535
  80a9ac:	a8c7883a 	add	r3,r21,r3
  80a9b0:	a009883a 	mov	r4,r20
  80a9b4:	10e3883a 	add	r17,r2,r3
  80a9b8:	8020d43a 	srli	r16,r16,16
  80a9bc:	08032000 	call	803200 <__mulsi3>
  80a9c0:	8806d43a 	srli	r3,r17,16
  80a9c4:	1405883a 	add	r2,r2,r16
  80a9c8:	9cc00104 	addi	r19,r19,4
  80a9cc:	1887883a 	add	r3,r3,r2
  80a9d0:	90c0008d 	sth	r3,2(r18)
  80a9d4:	9440000d 	sth	r17,0(r18)
  80a9d8:	182ad43a 	srli	r21,r3,16
  80a9dc:	94800104 	addi	r18,r18,4
  80a9e0:	9f3feb36 	bltu	r19,fp,80a990 <__multiply+0xec>
  80a9e4:	95400015 	stw	r21,0(r18)
  80a9e8:	b9000017 	ldw	r4,0(r23)
  80a9ec:	202ad43a 	srli	r21,r4,16
  80a9f0:	a8001c26 	beq	r21,zero,80aa64 <__multiply+0x1c0>
  80a9f4:	d9000117 	ldw	r4,4(sp)
  80a9f8:	dd000017 	ldw	r20,0(sp)
  80a9fc:	002d883a 	mov	r22,zero
  80aa00:	24c00017 	ldw	r19,0(r4)
  80aa04:	2025883a 	mov	r18,r4
  80aa08:	9823883a 	mov	r17,r19
  80aa0c:	a4000017 	ldw	r16,0(r20)
  80aa10:	a809883a 	mov	r4,r21
  80aa14:	a5000104 	addi	r20,r20,4
  80aa18:	817fffcc 	andi	r5,r16,65535
  80aa1c:	08032000 	call	803200 <__mulsi3>
  80aa20:	8806d43a 	srli	r3,r17,16
  80aa24:	800ad43a 	srli	r5,r16,16
  80aa28:	94c0000d 	sth	r19,0(r18)
  80aa2c:	b0c7883a 	add	r3,r22,r3
  80aa30:	10e1883a 	add	r16,r2,r3
  80aa34:	9400008d 	sth	r16,2(r18)
  80aa38:	a809883a 	mov	r4,r21
  80aa3c:	94800104 	addi	r18,r18,4
  80aa40:	08032000 	call	803200 <__mulsi3>
  80aa44:	94400017 	ldw	r17,0(r18)
  80aa48:	8020d43a 	srli	r16,r16,16
  80aa4c:	88ffffcc 	andi	r3,r17,65535
  80aa50:	10c5883a 	add	r2,r2,r3
  80aa54:	80a7883a 	add	r19,r16,r2
  80aa58:	982cd43a 	srli	r22,r19,16
  80aa5c:	a73feb36 	bltu	r20,fp,80aa0c <__multiply+0x168>
  80aa60:	94c00015 	stw	r19,0(r18)
  80aa64:	d8800217 	ldw	r2,8(sp)
  80aa68:	bdc00104 	addi	r23,r23,4
  80aa6c:	b880042e 	bgeu	r23,r2,80aa80 <__multiply+0x1dc>
  80aa70:	d8c00117 	ldw	r3,4(sp)
  80aa74:	18c00104 	addi	r3,r3,4
  80aa78:	d8c00115 	stw	r3,4(sp)
  80aa7c:	003fbe06 	br	80a978 <__multiply+0xd4>
  80aa80:	d9000417 	ldw	r4,16(sp)
  80aa84:	01000c0e 	bge	zero,r4,80aab8 <__multiply+0x214>
  80aa88:	d8c00317 	ldw	r3,12(sp)
  80aa8c:	18bfff17 	ldw	r2,-4(r3)
  80aa90:	18ffff04 	addi	r3,r3,-4
  80aa94:	10000326 	beq	r2,zero,80aaa4 <__multiply+0x200>
  80aa98:	00000706 	br	80aab8 <__multiply+0x214>
  80aa9c:	18800017 	ldw	r2,0(r3)
  80aaa0:	1000051e 	bne	r2,zero,80aab8 <__multiply+0x214>
  80aaa4:	d9000417 	ldw	r4,16(sp)
  80aaa8:	18ffff04 	addi	r3,r3,-4
  80aaac:	213fffc4 	addi	r4,r4,-1
  80aab0:	d9000415 	stw	r4,16(sp)
  80aab4:	203ff91e 	bne	r4,zero,80aa9c <__multiply+0x1f8>
  80aab8:	d8800417 	ldw	r2,16(sp)
  80aabc:	d8c00517 	ldw	r3,20(sp)
  80aac0:	18800415 	stw	r2,16(r3)
  80aac4:	1805883a 	mov	r2,r3
  80aac8:	dfc00f17 	ldw	ra,60(sp)
  80aacc:	df000e17 	ldw	fp,56(sp)
  80aad0:	ddc00d17 	ldw	r23,52(sp)
  80aad4:	dd800c17 	ldw	r22,48(sp)
  80aad8:	dd400b17 	ldw	r21,44(sp)
  80aadc:	dd000a17 	ldw	r20,40(sp)
  80aae0:	dcc00917 	ldw	r19,36(sp)
  80aae4:	dc800817 	ldw	r18,32(sp)
  80aae8:	dc400717 	ldw	r17,28(sp)
  80aaec:	dc000617 	ldw	r16,24(sp)
  80aaf0:	dec01004 	addi	sp,sp,64
  80aaf4:	f800283a 	ret

0080aaf8 <__i2b>:
  80aaf8:	defffd04 	addi	sp,sp,-12
  80aafc:	dc000015 	stw	r16,0(sp)
  80ab00:	04000044 	movi	r16,1
  80ab04:	dc800115 	stw	r18,4(sp)
  80ab08:	2825883a 	mov	r18,r5
  80ab0c:	800b883a 	mov	r5,r16
  80ab10:	dfc00215 	stw	ra,8(sp)
  80ab14:	080a3940 	call	80a394 <_Balloc>
  80ab18:	14000415 	stw	r16,16(r2)
  80ab1c:	14800515 	stw	r18,20(r2)
  80ab20:	dfc00217 	ldw	ra,8(sp)
  80ab24:	dc800117 	ldw	r18,4(sp)
  80ab28:	dc000017 	ldw	r16,0(sp)
  80ab2c:	dec00304 	addi	sp,sp,12
  80ab30:	f800283a 	ret

0080ab34 <__multadd>:
  80ab34:	defff604 	addi	sp,sp,-40
  80ab38:	dd800615 	stw	r22,24(sp)
  80ab3c:	2d800417 	ldw	r22,16(r5)
  80ab40:	df000815 	stw	fp,32(sp)
  80ab44:	ddc00715 	stw	r23,28(sp)
  80ab48:	dd400515 	stw	r21,20(sp)
  80ab4c:	dd000415 	stw	r20,16(sp)
  80ab50:	dcc00315 	stw	r19,12(sp)
  80ab54:	dc800215 	stw	r18,8(sp)
  80ab58:	dfc00915 	stw	ra,36(sp)
  80ab5c:	dc400115 	stw	r17,4(sp)
  80ab60:	dc000015 	stw	r16,0(sp)
  80ab64:	282f883a 	mov	r23,r5
  80ab68:	2039883a 	mov	fp,r4
  80ab6c:	302b883a 	mov	r21,r6
  80ab70:	3829883a 	mov	r20,r7
  80ab74:	2c800504 	addi	r18,r5,20
  80ab78:	0027883a 	mov	r19,zero
  80ab7c:	94400017 	ldw	r17,0(r18)
  80ab80:	a80b883a 	mov	r5,r21
  80ab84:	9cc00044 	addi	r19,r19,1
  80ab88:	893fffcc 	andi	r4,r17,65535
  80ab8c:	08032000 	call	803200 <__mulsi3>
  80ab90:	8808d43a 	srli	r4,r17,16
  80ab94:	1521883a 	add	r16,r2,r20
  80ab98:	a80b883a 	mov	r5,r21
  80ab9c:	08032000 	call	803200 <__mulsi3>
  80aba0:	8008d43a 	srli	r4,r16,16
  80aba4:	843fffcc 	andi	r16,r16,65535
  80aba8:	1105883a 	add	r2,r2,r4
  80abac:	1006943a 	slli	r3,r2,16
  80abb0:	1028d43a 	srli	r20,r2,16
  80abb4:	1c07883a 	add	r3,r3,r16
  80abb8:	90c00015 	stw	r3,0(r18)
  80abbc:	94800104 	addi	r18,r18,4
  80abc0:	9dbfee16 	blt	r19,r22,80ab7c <__multadd+0x48>
  80abc4:	a0000826 	beq	r20,zero,80abe8 <__multadd+0xb4>
  80abc8:	b8800217 	ldw	r2,8(r23)
  80abcc:	b080130e 	bge	r22,r2,80ac1c <__multadd+0xe8>
  80abd0:	b585883a 	add	r2,r22,r22
  80abd4:	1085883a 	add	r2,r2,r2
  80abd8:	15c5883a 	add	r2,r2,r23
  80abdc:	b0c00044 	addi	r3,r22,1
  80abe0:	15000515 	stw	r20,20(r2)
  80abe4:	b8c00415 	stw	r3,16(r23)
  80abe8:	b805883a 	mov	r2,r23
  80abec:	dfc00917 	ldw	ra,36(sp)
  80abf0:	df000817 	ldw	fp,32(sp)
  80abf4:	ddc00717 	ldw	r23,28(sp)
  80abf8:	dd800617 	ldw	r22,24(sp)
  80abfc:	dd400517 	ldw	r21,20(sp)
  80ac00:	dd000417 	ldw	r20,16(sp)
  80ac04:	dcc00317 	ldw	r19,12(sp)
  80ac08:	dc800217 	ldw	r18,8(sp)
  80ac0c:	dc400117 	ldw	r17,4(sp)
  80ac10:	dc000017 	ldw	r16,0(sp)
  80ac14:	dec00a04 	addi	sp,sp,40
  80ac18:	f800283a 	ret
  80ac1c:	b9400117 	ldw	r5,4(r23)
  80ac20:	e009883a 	mov	r4,fp
  80ac24:	29400044 	addi	r5,r5,1
  80ac28:	080a3940 	call	80a394 <_Balloc>
  80ac2c:	b9800417 	ldw	r6,16(r23)
  80ac30:	b9400304 	addi	r5,r23,12
  80ac34:	11000304 	addi	r4,r2,12
  80ac38:	318d883a 	add	r6,r6,r6
  80ac3c:	318d883a 	add	r6,r6,r6
  80ac40:	31800204 	addi	r6,r6,8
  80ac44:	1023883a 	mov	r17,r2
  80ac48:	0809bfc0 	call	809bfc <memcpy>
  80ac4c:	b80b883a 	mov	r5,r23
  80ac50:	e009883a 	mov	r4,fp
  80ac54:	0809e140 	call	809e14 <_Bfree>
  80ac58:	882f883a 	mov	r23,r17
  80ac5c:	003fdc06 	br	80abd0 <__multadd+0x9c>

0080ac60 <__pow5mult>:
  80ac60:	defffa04 	addi	sp,sp,-24
  80ac64:	308000cc 	andi	r2,r6,3
  80ac68:	dd000415 	stw	r20,16(sp)
  80ac6c:	dcc00315 	stw	r19,12(sp)
  80ac70:	dc000015 	stw	r16,0(sp)
  80ac74:	dfc00515 	stw	ra,20(sp)
  80ac78:	dc800215 	stw	r18,8(sp)
  80ac7c:	dc400115 	stw	r17,4(sp)
  80ac80:	3021883a 	mov	r16,r6
  80ac84:	2027883a 	mov	r19,r4
  80ac88:	2829883a 	mov	r20,r5
  80ac8c:	10002b1e 	bne	r2,zero,80ad3c <__pow5mult+0xdc>
  80ac90:	8025d0ba 	srai	r18,r16,2
  80ac94:	90001b26 	beq	r18,zero,80ad04 <__pow5mult+0xa4>
  80ac98:	9c001217 	ldw	r16,72(r19)
  80ac9c:	8000081e 	bne	r16,zero,80acc0 <__pow5mult+0x60>
  80aca0:	00003006 	br	80ad64 <__pow5mult+0x104>
  80aca4:	800b883a 	mov	r5,r16
  80aca8:	800d883a 	mov	r6,r16
  80acac:	9809883a 	mov	r4,r19
  80acb0:	90001426 	beq	r18,zero,80ad04 <__pow5mult+0xa4>
  80acb4:	80800017 	ldw	r2,0(r16)
  80acb8:	10001b26 	beq	r2,zero,80ad28 <__pow5mult+0xc8>
  80acbc:	1021883a 	mov	r16,r2
  80acc0:	9080004c 	andi	r2,r18,1
  80acc4:	1005003a 	cmpeq	r2,r2,zero
  80acc8:	9025d07a 	srai	r18,r18,1
  80accc:	800d883a 	mov	r6,r16
  80acd0:	9809883a 	mov	r4,r19
  80acd4:	a00b883a 	mov	r5,r20
  80acd8:	103ff21e 	bne	r2,zero,80aca4 <__pow5mult+0x44>
  80acdc:	080a8a40 	call	80a8a4 <__multiply>
  80ace0:	a00b883a 	mov	r5,r20
  80ace4:	9809883a 	mov	r4,r19
  80ace8:	1023883a 	mov	r17,r2
  80acec:	0809e140 	call	809e14 <_Bfree>
  80acf0:	8829883a 	mov	r20,r17
  80acf4:	800b883a 	mov	r5,r16
  80acf8:	800d883a 	mov	r6,r16
  80acfc:	9809883a 	mov	r4,r19
  80ad00:	903fec1e 	bne	r18,zero,80acb4 <__pow5mult+0x54>
  80ad04:	a005883a 	mov	r2,r20
  80ad08:	dfc00517 	ldw	ra,20(sp)
  80ad0c:	dd000417 	ldw	r20,16(sp)
  80ad10:	dcc00317 	ldw	r19,12(sp)
  80ad14:	dc800217 	ldw	r18,8(sp)
  80ad18:	dc400117 	ldw	r17,4(sp)
  80ad1c:	dc000017 	ldw	r16,0(sp)
  80ad20:	dec00604 	addi	sp,sp,24
  80ad24:	f800283a 	ret
  80ad28:	080a8a40 	call	80a8a4 <__multiply>
  80ad2c:	80800015 	stw	r2,0(r16)
  80ad30:	1021883a 	mov	r16,r2
  80ad34:	10000015 	stw	zero,0(r2)
  80ad38:	003fe106 	br	80acc0 <__pow5mult+0x60>
  80ad3c:	1085883a 	add	r2,r2,r2
  80ad40:	00c02074 	movhi	r3,129
  80ad44:	18c1ad04 	addi	r3,r3,1716
  80ad48:	1085883a 	add	r2,r2,r2
  80ad4c:	10c5883a 	add	r2,r2,r3
  80ad50:	11bfff17 	ldw	r6,-4(r2)
  80ad54:	000f883a 	mov	r7,zero
  80ad58:	080ab340 	call	80ab34 <__multadd>
  80ad5c:	1029883a 	mov	r20,r2
  80ad60:	003fcb06 	br	80ac90 <__pow5mult+0x30>
  80ad64:	9809883a 	mov	r4,r19
  80ad68:	01409c44 	movi	r5,625
  80ad6c:	080aaf80 	call	80aaf8 <__i2b>
  80ad70:	98801215 	stw	r2,72(r19)
  80ad74:	1021883a 	mov	r16,r2
  80ad78:	10000015 	stw	zero,0(r2)
  80ad7c:	003fd006 	br	80acc0 <__pow5mult+0x60>

0080ad80 <__s2b>:
  80ad80:	defff904 	addi	sp,sp,-28
  80ad84:	dcc00315 	stw	r19,12(sp)
  80ad88:	dc800215 	stw	r18,8(sp)
  80ad8c:	2827883a 	mov	r19,r5
  80ad90:	2025883a 	mov	r18,r4
  80ad94:	01400244 	movi	r5,9
  80ad98:	39000204 	addi	r4,r7,8
  80ad9c:	dd000415 	stw	r20,16(sp)
  80ada0:	dc400115 	stw	r17,4(sp)
  80ada4:	dfc00615 	stw	ra,24(sp)
  80ada8:	dd400515 	stw	r21,20(sp)
  80adac:	dc000015 	stw	r16,0(sp)
  80adb0:	3829883a 	mov	r20,r7
  80adb4:	3023883a 	mov	r17,r6
  80adb8:	080d1500 	call	80d150 <__divsi3>
  80adbc:	00c00044 	movi	r3,1
  80adc0:	1880350e 	bge	r3,r2,80ae98 <__s2b+0x118>
  80adc4:	000b883a 	mov	r5,zero
  80adc8:	18c7883a 	add	r3,r3,r3
  80adcc:	29400044 	addi	r5,r5,1
  80add0:	18bffd16 	blt	r3,r2,80adc8 <__s2b+0x48>
  80add4:	9009883a 	mov	r4,r18
  80add8:	080a3940 	call	80a394 <_Balloc>
  80addc:	1011883a 	mov	r8,r2
  80ade0:	d8800717 	ldw	r2,28(sp)
  80ade4:	00c00044 	movi	r3,1
  80ade8:	01800244 	movi	r6,9
  80adec:	40800515 	stw	r2,20(r8)
  80adf0:	40c00415 	stw	r3,16(r8)
  80adf4:	3440260e 	bge	r6,r17,80ae90 <__s2b+0x110>
  80adf8:	3021883a 	mov	r16,r6
  80adfc:	99ab883a 	add	r21,r19,r6
  80ae00:	9c05883a 	add	r2,r19,r16
  80ae04:	11c00007 	ldb	r7,0(r2)
  80ae08:	400b883a 	mov	r5,r8
  80ae0c:	9009883a 	mov	r4,r18
  80ae10:	39fff404 	addi	r7,r7,-48
  80ae14:	01800284 	movi	r6,10
  80ae18:	080ab340 	call	80ab34 <__multadd>
  80ae1c:	84000044 	addi	r16,r16,1
  80ae20:	1011883a 	mov	r8,r2
  80ae24:	8c3ff61e 	bne	r17,r16,80ae00 <__s2b+0x80>
  80ae28:	ac45883a 	add	r2,r21,r17
  80ae2c:	117ffe04 	addi	r5,r2,-8
  80ae30:	880d883a 	mov	r6,r17
  80ae34:	35000c0e 	bge	r6,r20,80ae68 <__s2b+0xe8>
  80ae38:	a185c83a 	sub	r2,r20,r6
  80ae3c:	2821883a 	mov	r16,r5
  80ae40:	28a3883a 	add	r17,r5,r2
  80ae44:	81c00007 	ldb	r7,0(r16)
  80ae48:	400b883a 	mov	r5,r8
  80ae4c:	9009883a 	mov	r4,r18
  80ae50:	39fff404 	addi	r7,r7,-48
  80ae54:	01800284 	movi	r6,10
  80ae58:	080ab340 	call	80ab34 <__multadd>
  80ae5c:	84000044 	addi	r16,r16,1
  80ae60:	1011883a 	mov	r8,r2
  80ae64:	847ff71e 	bne	r16,r17,80ae44 <__s2b+0xc4>
  80ae68:	4005883a 	mov	r2,r8
  80ae6c:	dfc00617 	ldw	ra,24(sp)
  80ae70:	dd400517 	ldw	r21,20(sp)
  80ae74:	dd000417 	ldw	r20,16(sp)
  80ae78:	dcc00317 	ldw	r19,12(sp)
  80ae7c:	dc800217 	ldw	r18,8(sp)
  80ae80:	dc400117 	ldw	r17,4(sp)
  80ae84:	dc000017 	ldw	r16,0(sp)
  80ae88:	dec00704 	addi	sp,sp,28
  80ae8c:	f800283a 	ret
  80ae90:	99400284 	addi	r5,r19,10
  80ae94:	003fe706 	br	80ae34 <__s2b+0xb4>
  80ae98:	000b883a 	mov	r5,zero
  80ae9c:	003fcd06 	br	80add4 <__s2b+0x54>

0080aea0 <_realloc_r>:
  80aea0:	defff404 	addi	sp,sp,-48
  80aea4:	dd800815 	stw	r22,32(sp)
  80aea8:	dc800415 	stw	r18,16(sp)
  80aeac:	dc400315 	stw	r17,12(sp)
  80aeb0:	dfc00b15 	stw	ra,44(sp)
  80aeb4:	df000a15 	stw	fp,40(sp)
  80aeb8:	ddc00915 	stw	r23,36(sp)
  80aebc:	dd400715 	stw	r21,28(sp)
  80aec0:	dd000615 	stw	r20,24(sp)
  80aec4:	dcc00515 	stw	r19,20(sp)
  80aec8:	dc000215 	stw	r16,8(sp)
  80aecc:	2825883a 	mov	r18,r5
  80aed0:	3023883a 	mov	r17,r6
  80aed4:	202d883a 	mov	r22,r4
  80aed8:	2800c926 	beq	r5,zero,80b200 <_realloc_r+0x360>
  80aedc:	080d97c0 	call	80d97c <__malloc_lock>
  80aee0:	943ffe04 	addi	r16,r18,-8
  80aee4:	88c002c4 	addi	r3,r17,11
  80aee8:	00800584 	movi	r2,22
  80aeec:	82000117 	ldw	r8,4(r16)
  80aef0:	10c01b2e 	bgeu	r2,r3,80af60 <_realloc_r+0xc0>
  80aef4:	00bffe04 	movi	r2,-8
  80aef8:	188e703a 	and	r7,r3,r2
  80aefc:	3839883a 	mov	fp,r7
  80af00:	38001a16 	blt	r7,zero,80af6c <_realloc_r+0xcc>
  80af04:	e4401936 	bltu	fp,r17,80af6c <_realloc_r+0xcc>
  80af08:	013fff04 	movi	r4,-4
  80af0c:	4126703a 	and	r19,r8,r4
  80af10:	99c02616 	blt	r19,r7,80afac <_realloc_r+0x10c>
  80af14:	802b883a 	mov	r21,r16
  80af18:	9829883a 	mov	r20,r19
  80af1c:	84000204 	addi	r16,r16,8
  80af20:	a80f883a 	mov	r7,r21
  80af24:	a70dc83a 	sub	r6,r20,fp
  80af28:	008003c4 	movi	r2,15
  80af2c:	1180c136 	bltu	r2,r6,80b234 <_realloc_r+0x394>
  80af30:	38800117 	ldw	r2,4(r7)
  80af34:	a549883a 	add	r4,r20,r21
  80af38:	1080004c 	andi	r2,r2,1
  80af3c:	a084b03a 	or	r2,r20,r2
  80af40:	38800115 	stw	r2,4(r7)
  80af44:	20c00117 	ldw	r3,4(r4)
  80af48:	18c00054 	ori	r3,r3,1
  80af4c:	20c00115 	stw	r3,4(r4)
  80af50:	b009883a 	mov	r4,r22
  80af54:	080d99c0 	call	80d99c <__malloc_unlock>
  80af58:	8023883a 	mov	r17,r16
  80af5c:	00000606 	br	80af78 <_realloc_r+0xd8>
  80af60:	01c00404 	movi	r7,16
  80af64:	3839883a 	mov	fp,r7
  80af68:	e47fe72e 	bgeu	fp,r17,80af08 <_realloc_r+0x68>
  80af6c:	00800304 	movi	r2,12
  80af70:	0023883a 	mov	r17,zero
  80af74:	b0800015 	stw	r2,0(r22)
  80af78:	8805883a 	mov	r2,r17
  80af7c:	dfc00b17 	ldw	ra,44(sp)
  80af80:	df000a17 	ldw	fp,40(sp)
  80af84:	ddc00917 	ldw	r23,36(sp)
  80af88:	dd800817 	ldw	r22,32(sp)
  80af8c:	dd400717 	ldw	r21,28(sp)
  80af90:	dd000617 	ldw	r20,24(sp)
  80af94:	dcc00517 	ldw	r19,20(sp)
  80af98:	dc800417 	ldw	r18,16(sp)
  80af9c:	dc400317 	ldw	r17,12(sp)
  80afa0:	dc000217 	ldw	r16,8(sp)
  80afa4:	dec00c04 	addi	sp,sp,48
  80afa8:	f800283a 	ret
  80afac:	00802074 	movhi	r2,129
  80afb0:	1082be04 	addi	r2,r2,2808
  80afb4:	12400217 	ldw	r9,8(r2)
  80afb8:	84cd883a 	add	r6,r16,r19
  80afbc:	802b883a 	mov	r21,r16
  80afc0:	3240b926 	beq	r6,r9,80b2a8 <_realloc_r+0x408>
  80afc4:	31400117 	ldw	r5,4(r6)
  80afc8:	00bfff84 	movi	r2,-2
  80afcc:	2884703a 	and	r2,r5,r2
  80afd0:	1185883a 	add	r2,r2,r6
  80afd4:	10c00117 	ldw	r3,4(r2)
  80afd8:	18c0004c 	andi	r3,r3,1
  80afdc:	1807003a 	cmpeq	r3,r3,zero
  80afe0:	1800a326 	beq	r3,zero,80b270 <_realloc_r+0x3d0>
  80afe4:	2908703a 	and	r4,r5,r4
  80afe8:	9929883a 	add	r20,r19,r4
  80afec:	a1c0a30e 	bge	r20,r7,80b27c <_realloc_r+0x3dc>
  80aff0:	4080004c 	andi	r2,r8,1
  80aff4:	1000551e 	bne	r2,zero,80b14c <_realloc_r+0x2ac>
  80aff8:	80800017 	ldw	r2,0(r16)
  80affc:	80afc83a 	sub	r23,r16,r2
  80b000:	b8c00117 	ldw	r3,4(r23)
  80b004:	00bfff04 	movi	r2,-4
  80b008:	1884703a 	and	r2,r3,r2
  80b00c:	30002e26 	beq	r6,zero,80b0c8 <_realloc_r+0x228>
  80b010:	3240b926 	beq	r6,r9,80b2f8 <_realloc_r+0x458>
  80b014:	98a9883a 	add	r20,r19,r2
  80b018:	2509883a 	add	r4,r4,r20
  80b01c:	d9000015 	stw	r4,0(sp)
  80b020:	21c02a16 	blt	r4,r7,80b0cc <_realloc_r+0x22c>
  80b024:	30800317 	ldw	r2,12(r6)
  80b028:	30c00217 	ldw	r3,8(r6)
  80b02c:	01400904 	movi	r5,36
  80b030:	99bfff04 	addi	r6,r19,-4
  80b034:	18800315 	stw	r2,12(r3)
  80b038:	10c00215 	stw	r3,8(r2)
  80b03c:	b9000317 	ldw	r4,12(r23)
  80b040:	b8800217 	ldw	r2,8(r23)
  80b044:	b82b883a 	mov	r21,r23
  80b048:	bc000204 	addi	r16,r23,8
  80b04c:	20800215 	stw	r2,8(r4)
  80b050:	11000315 	stw	r4,12(r2)
  80b054:	2980e436 	bltu	r5,r6,80b3e8 <_realloc_r+0x548>
  80b058:	008004c4 	movi	r2,19
  80b05c:	9009883a 	mov	r4,r18
  80b060:	8011883a 	mov	r8,r16
  80b064:	11800f2e 	bgeu	r2,r6,80b0a4 <_realloc_r+0x204>
  80b068:	90800017 	ldw	r2,0(r18)
  80b06c:	ba000404 	addi	r8,r23,16
  80b070:	91000204 	addi	r4,r18,8
  80b074:	b8800215 	stw	r2,8(r23)
  80b078:	90c00117 	ldw	r3,4(r18)
  80b07c:	008006c4 	movi	r2,27
  80b080:	b8c00315 	stw	r3,12(r23)
  80b084:	1180072e 	bgeu	r2,r6,80b0a4 <_realloc_r+0x204>
  80b088:	90c00217 	ldw	r3,8(r18)
  80b08c:	ba000604 	addi	r8,r23,24
  80b090:	91000404 	addi	r4,r18,16
  80b094:	b8c00415 	stw	r3,16(r23)
  80b098:	90800317 	ldw	r2,12(r18)
  80b09c:	b8800515 	stw	r2,20(r23)
  80b0a0:	3140e726 	beq	r6,r5,80b440 <_realloc_r+0x5a0>
  80b0a4:	20800017 	ldw	r2,0(r4)
  80b0a8:	dd000017 	ldw	r20,0(sp)
  80b0ac:	b80f883a 	mov	r7,r23
  80b0b0:	40800015 	stw	r2,0(r8)
  80b0b4:	20c00117 	ldw	r3,4(r4)
  80b0b8:	40c00115 	stw	r3,4(r8)
  80b0bc:	20800217 	ldw	r2,8(r4)
  80b0c0:	40800215 	stw	r2,8(r8)
  80b0c4:	003f9706 	br	80af24 <_realloc_r+0x84>
  80b0c8:	98a9883a 	add	r20,r19,r2
  80b0cc:	a1c01f16 	blt	r20,r7,80b14c <_realloc_r+0x2ac>
  80b0d0:	b8c00317 	ldw	r3,12(r23)
  80b0d4:	b8800217 	ldw	r2,8(r23)
  80b0d8:	99bfff04 	addi	r6,r19,-4
  80b0dc:	01400904 	movi	r5,36
  80b0e0:	b82b883a 	mov	r21,r23
  80b0e4:	18800215 	stw	r2,8(r3)
  80b0e8:	10c00315 	stw	r3,12(r2)
  80b0ec:	bc000204 	addi	r16,r23,8
  80b0f0:	2980c336 	bltu	r5,r6,80b400 <_realloc_r+0x560>
  80b0f4:	008004c4 	movi	r2,19
  80b0f8:	9009883a 	mov	r4,r18
  80b0fc:	8011883a 	mov	r8,r16
  80b100:	11800f2e 	bgeu	r2,r6,80b140 <_realloc_r+0x2a0>
  80b104:	90800017 	ldw	r2,0(r18)
  80b108:	ba000404 	addi	r8,r23,16
  80b10c:	91000204 	addi	r4,r18,8
  80b110:	b8800215 	stw	r2,8(r23)
  80b114:	90c00117 	ldw	r3,4(r18)
  80b118:	008006c4 	movi	r2,27
  80b11c:	b8c00315 	stw	r3,12(r23)
  80b120:	1180072e 	bgeu	r2,r6,80b140 <_realloc_r+0x2a0>
  80b124:	90c00217 	ldw	r3,8(r18)
  80b128:	ba000604 	addi	r8,r23,24
  80b12c:	91000404 	addi	r4,r18,16
  80b130:	b8c00415 	stw	r3,16(r23)
  80b134:	90800317 	ldw	r2,12(r18)
  80b138:	b8800515 	stw	r2,20(r23)
  80b13c:	3140c726 	beq	r6,r5,80b45c <_realloc_r+0x5bc>
  80b140:	20800017 	ldw	r2,0(r4)
  80b144:	b80f883a 	mov	r7,r23
  80b148:	003fd906 	br	80b0b0 <_realloc_r+0x210>
  80b14c:	880b883a 	mov	r5,r17
  80b150:	b009883a 	mov	r4,r22
  80b154:	08093d80 	call	8093d8 <_malloc_r>
  80b158:	1023883a 	mov	r17,r2
  80b15c:	10002526 	beq	r2,zero,80b1f4 <_realloc_r+0x354>
  80b160:	80800117 	ldw	r2,4(r16)
  80b164:	00ffff84 	movi	r3,-2
  80b168:	893ffe04 	addi	r4,r17,-8
  80b16c:	10c4703a 	and	r2,r2,r3
  80b170:	8085883a 	add	r2,r16,r2
  80b174:	20809526 	beq	r4,r2,80b3cc <_realloc_r+0x52c>
  80b178:	99bfff04 	addi	r6,r19,-4
  80b17c:	01c00904 	movi	r7,36
  80b180:	39804536 	bltu	r7,r6,80b298 <_realloc_r+0x3f8>
  80b184:	008004c4 	movi	r2,19
  80b188:	9009883a 	mov	r4,r18
  80b18c:	880b883a 	mov	r5,r17
  80b190:	11800f2e 	bgeu	r2,r6,80b1d0 <_realloc_r+0x330>
  80b194:	90800017 	ldw	r2,0(r18)
  80b198:	89400204 	addi	r5,r17,8
  80b19c:	91000204 	addi	r4,r18,8
  80b1a0:	88800015 	stw	r2,0(r17)
  80b1a4:	90c00117 	ldw	r3,4(r18)
  80b1a8:	008006c4 	movi	r2,27
  80b1ac:	88c00115 	stw	r3,4(r17)
  80b1b0:	1180072e 	bgeu	r2,r6,80b1d0 <_realloc_r+0x330>
  80b1b4:	90c00217 	ldw	r3,8(r18)
  80b1b8:	89400404 	addi	r5,r17,16
  80b1bc:	91000404 	addi	r4,r18,16
  80b1c0:	88c00215 	stw	r3,8(r17)
  80b1c4:	90800317 	ldw	r2,12(r18)
  80b1c8:	88800315 	stw	r2,12(r17)
  80b1cc:	31c09126 	beq	r6,r7,80b414 <_realloc_r+0x574>
  80b1d0:	20800017 	ldw	r2,0(r4)
  80b1d4:	28800015 	stw	r2,0(r5)
  80b1d8:	20c00117 	ldw	r3,4(r4)
  80b1dc:	28c00115 	stw	r3,4(r5)
  80b1e0:	20800217 	ldw	r2,8(r4)
  80b1e4:	28800215 	stw	r2,8(r5)
  80b1e8:	900b883a 	mov	r5,r18
  80b1ec:	b009883a 	mov	r4,r22
  80b1f0:	08088500 	call	808850 <_free_r>
  80b1f4:	b009883a 	mov	r4,r22
  80b1f8:	080d99c0 	call	80d99c <__malloc_unlock>
  80b1fc:	003f5e06 	br	80af78 <_realloc_r+0xd8>
  80b200:	300b883a 	mov	r5,r6
  80b204:	dfc00b17 	ldw	ra,44(sp)
  80b208:	df000a17 	ldw	fp,40(sp)
  80b20c:	ddc00917 	ldw	r23,36(sp)
  80b210:	dd800817 	ldw	r22,32(sp)
  80b214:	dd400717 	ldw	r21,28(sp)
  80b218:	dd000617 	ldw	r20,24(sp)
  80b21c:	dcc00517 	ldw	r19,20(sp)
  80b220:	dc800417 	ldw	r18,16(sp)
  80b224:	dc400317 	ldw	r17,12(sp)
  80b228:	dc000217 	ldw	r16,8(sp)
  80b22c:	dec00c04 	addi	sp,sp,48
  80b230:	08093d81 	jmpi	8093d8 <_malloc_r>
  80b234:	38800117 	ldw	r2,4(r7)
  80b238:	e54b883a 	add	r5,fp,r21
  80b23c:	31000054 	ori	r4,r6,1
  80b240:	1080004c 	andi	r2,r2,1
  80b244:	1704b03a 	or	r2,r2,fp
  80b248:	38800115 	stw	r2,4(r7)
  80b24c:	29000115 	stw	r4,4(r5)
  80b250:	2987883a 	add	r3,r5,r6
  80b254:	18800117 	ldw	r2,4(r3)
  80b258:	29400204 	addi	r5,r5,8
  80b25c:	b009883a 	mov	r4,r22
  80b260:	10800054 	ori	r2,r2,1
  80b264:	18800115 	stw	r2,4(r3)
  80b268:	08088500 	call	808850 <_free_r>
  80b26c:	003f3806 	br	80af50 <_realloc_r+0xb0>
  80b270:	000d883a 	mov	r6,zero
  80b274:	0009883a 	mov	r4,zero
  80b278:	003f5d06 	br	80aff0 <_realloc_r+0x150>
  80b27c:	30c00217 	ldw	r3,8(r6)
  80b280:	30800317 	ldw	r2,12(r6)
  80b284:	800f883a 	mov	r7,r16
  80b288:	84000204 	addi	r16,r16,8
  80b28c:	10c00215 	stw	r3,8(r2)
  80b290:	18800315 	stw	r2,12(r3)
  80b294:	003f2306 	br	80af24 <_realloc_r+0x84>
  80b298:	8809883a 	mov	r4,r17
  80b29c:	900b883a 	mov	r5,r18
  80b2a0:	0809c9c0 	call	809c9c <memmove>
  80b2a4:	003fd006 	br	80b1e8 <_realloc_r+0x348>
  80b2a8:	30800117 	ldw	r2,4(r6)
  80b2ac:	e0c00404 	addi	r3,fp,16
  80b2b0:	1108703a 	and	r4,r2,r4
  80b2b4:	9905883a 	add	r2,r19,r4
  80b2b8:	10ff4d16 	blt	r2,r3,80aff0 <_realloc_r+0x150>
  80b2bc:	1705c83a 	sub	r2,r2,fp
  80b2c0:	870b883a 	add	r5,r16,fp
  80b2c4:	10800054 	ori	r2,r2,1
  80b2c8:	28800115 	stw	r2,4(r5)
  80b2cc:	80c00117 	ldw	r3,4(r16)
  80b2d0:	00802074 	movhi	r2,129
  80b2d4:	1082be04 	addi	r2,r2,2808
  80b2d8:	b009883a 	mov	r4,r22
  80b2dc:	18c0004c 	andi	r3,r3,1
  80b2e0:	e0c6b03a 	or	r3,fp,r3
  80b2e4:	11400215 	stw	r5,8(r2)
  80b2e8:	80c00115 	stw	r3,4(r16)
  80b2ec:	080d99c0 	call	80d99c <__malloc_unlock>
  80b2f0:	84400204 	addi	r17,r16,8
  80b2f4:	003f2006 	br	80af78 <_realloc_r+0xd8>
  80b2f8:	98a9883a 	add	r20,r19,r2
  80b2fc:	2509883a 	add	r4,r4,r20
  80b300:	e0800404 	addi	r2,fp,16
  80b304:	d9000115 	stw	r4,4(sp)
  80b308:	20bf7016 	blt	r4,r2,80b0cc <_realloc_r+0x22c>
  80b30c:	b8c00317 	ldw	r3,12(r23)
  80b310:	b8800217 	ldw	r2,8(r23)
  80b314:	99bfff04 	addi	r6,r19,-4
  80b318:	01400904 	movi	r5,36
  80b31c:	18800215 	stw	r2,8(r3)
  80b320:	10c00315 	stw	r3,12(r2)
  80b324:	bc400204 	addi	r17,r23,8
  80b328:	29804136 	bltu	r5,r6,80b430 <_realloc_r+0x590>
  80b32c:	008004c4 	movi	r2,19
  80b330:	9009883a 	mov	r4,r18
  80b334:	880f883a 	mov	r7,r17
  80b338:	11800f2e 	bgeu	r2,r6,80b378 <_realloc_r+0x4d8>
  80b33c:	90800017 	ldw	r2,0(r18)
  80b340:	b9c00404 	addi	r7,r23,16
  80b344:	91000204 	addi	r4,r18,8
  80b348:	b8800215 	stw	r2,8(r23)
  80b34c:	90c00117 	ldw	r3,4(r18)
  80b350:	008006c4 	movi	r2,27
  80b354:	b8c00315 	stw	r3,12(r23)
  80b358:	1180072e 	bgeu	r2,r6,80b378 <_realloc_r+0x4d8>
  80b35c:	90c00217 	ldw	r3,8(r18)
  80b360:	b9c00604 	addi	r7,r23,24
  80b364:	91000404 	addi	r4,r18,16
  80b368:	b8c00415 	stw	r3,16(r23)
  80b36c:	90800317 	ldw	r2,12(r18)
  80b370:	b8800515 	stw	r2,20(r23)
  80b374:	31404026 	beq	r6,r5,80b478 <_realloc_r+0x5d8>
  80b378:	20800017 	ldw	r2,0(r4)
  80b37c:	38800015 	stw	r2,0(r7)
  80b380:	20c00117 	ldw	r3,4(r4)
  80b384:	38c00115 	stw	r3,4(r7)
  80b388:	20800217 	ldw	r2,8(r4)
  80b38c:	38800215 	stw	r2,8(r7)
  80b390:	d8c00117 	ldw	r3,4(sp)
  80b394:	bf0b883a 	add	r5,r23,fp
  80b398:	b009883a 	mov	r4,r22
  80b39c:	1f05c83a 	sub	r2,r3,fp
  80b3a0:	10800054 	ori	r2,r2,1
  80b3a4:	28800115 	stw	r2,4(r5)
  80b3a8:	b8c00117 	ldw	r3,4(r23)
  80b3ac:	00802074 	movhi	r2,129
  80b3b0:	1082be04 	addi	r2,r2,2808
  80b3b4:	11400215 	stw	r5,8(r2)
  80b3b8:	18c0004c 	andi	r3,r3,1
  80b3bc:	e0c6b03a 	or	r3,fp,r3
  80b3c0:	b8c00115 	stw	r3,4(r23)
  80b3c4:	080d99c0 	call	80d99c <__malloc_unlock>
  80b3c8:	003eeb06 	br	80af78 <_realloc_r+0xd8>
  80b3cc:	20800117 	ldw	r2,4(r4)
  80b3d0:	00ffff04 	movi	r3,-4
  80b3d4:	800f883a 	mov	r7,r16
  80b3d8:	10c4703a 	and	r2,r2,r3
  80b3dc:	98a9883a 	add	r20,r19,r2
  80b3e0:	84000204 	addi	r16,r16,8
  80b3e4:	003ecf06 	br	80af24 <_realloc_r+0x84>
  80b3e8:	900b883a 	mov	r5,r18
  80b3ec:	8009883a 	mov	r4,r16
  80b3f0:	0809c9c0 	call	809c9c <memmove>
  80b3f4:	dd000017 	ldw	r20,0(sp)
  80b3f8:	b80f883a 	mov	r7,r23
  80b3fc:	003ec906 	br	80af24 <_realloc_r+0x84>
  80b400:	900b883a 	mov	r5,r18
  80b404:	8009883a 	mov	r4,r16
  80b408:	0809c9c0 	call	809c9c <memmove>
  80b40c:	b80f883a 	mov	r7,r23
  80b410:	003ec406 	br	80af24 <_realloc_r+0x84>
  80b414:	90c00417 	ldw	r3,16(r18)
  80b418:	89400604 	addi	r5,r17,24
  80b41c:	91000604 	addi	r4,r18,24
  80b420:	88c00415 	stw	r3,16(r17)
  80b424:	90800517 	ldw	r2,20(r18)
  80b428:	88800515 	stw	r2,20(r17)
  80b42c:	003f6806 	br	80b1d0 <_realloc_r+0x330>
  80b430:	900b883a 	mov	r5,r18
  80b434:	8809883a 	mov	r4,r17
  80b438:	0809c9c0 	call	809c9c <memmove>
  80b43c:	003fd406 	br	80b390 <_realloc_r+0x4f0>
  80b440:	90c00417 	ldw	r3,16(r18)
  80b444:	91000604 	addi	r4,r18,24
  80b448:	ba000804 	addi	r8,r23,32
  80b44c:	b8c00615 	stw	r3,24(r23)
  80b450:	90800517 	ldw	r2,20(r18)
  80b454:	b8800715 	stw	r2,28(r23)
  80b458:	003f1206 	br	80b0a4 <_realloc_r+0x204>
  80b45c:	90c00417 	ldw	r3,16(r18)
  80b460:	91000604 	addi	r4,r18,24
  80b464:	ba000804 	addi	r8,r23,32
  80b468:	b8c00615 	stw	r3,24(r23)
  80b46c:	90800517 	ldw	r2,20(r18)
  80b470:	b8800715 	stw	r2,28(r23)
  80b474:	003f3206 	br	80b140 <_realloc_r+0x2a0>
  80b478:	90c00417 	ldw	r3,16(r18)
  80b47c:	91000604 	addi	r4,r18,24
  80b480:	b9c00804 	addi	r7,r23,32
  80b484:	b8c00615 	stw	r3,24(r23)
  80b488:	90800517 	ldw	r2,20(r18)
  80b48c:	b8800715 	stw	r2,28(r23)
  80b490:	003fb906 	br	80b378 <_realloc_r+0x4d8>

0080b494 <__isinfd>:
  80b494:	200d883a 	mov	r6,r4
  80b498:	0109c83a 	sub	r4,zero,r4
  80b49c:	2188b03a 	or	r4,r4,r6
  80b4a0:	2008d7fa 	srli	r4,r4,31
  80b4a4:	00a00034 	movhi	r2,32768
  80b4a8:	10bfffc4 	addi	r2,r2,-1
  80b4ac:	1144703a 	and	r2,r2,r5
  80b4b0:	2088b03a 	or	r4,r4,r2
  80b4b4:	009ffc34 	movhi	r2,32752
  80b4b8:	1105c83a 	sub	r2,r2,r4
  80b4bc:	0087c83a 	sub	r3,zero,r2
  80b4c0:	10c4b03a 	or	r2,r2,r3
  80b4c4:	1004d7fa 	srli	r2,r2,31
  80b4c8:	00c00044 	movi	r3,1
  80b4cc:	1885c83a 	sub	r2,r3,r2
  80b4d0:	f800283a 	ret

0080b4d4 <__isnand>:
  80b4d4:	200d883a 	mov	r6,r4
  80b4d8:	0109c83a 	sub	r4,zero,r4
  80b4dc:	2188b03a 	or	r4,r4,r6
  80b4e0:	2008d7fa 	srli	r4,r4,31
  80b4e4:	00a00034 	movhi	r2,32768
  80b4e8:	10bfffc4 	addi	r2,r2,-1
  80b4ec:	1144703a 	and	r2,r2,r5
  80b4f0:	2088b03a 	or	r4,r4,r2
  80b4f4:	009ffc34 	movhi	r2,32752
  80b4f8:	1105c83a 	sub	r2,r2,r4
  80b4fc:	1004d7fa 	srli	r2,r2,31
  80b500:	f800283a 	ret

0080b504 <_sbrk_r>:
  80b504:	defffd04 	addi	sp,sp,-12
  80b508:	dc000015 	stw	r16,0(sp)
  80b50c:	04002074 	movhi	r16,129
  80b510:	840eef04 	addi	r16,r16,15292
  80b514:	dc400115 	stw	r17,4(sp)
  80b518:	80000015 	stw	zero,0(r16)
  80b51c:	2023883a 	mov	r17,r4
  80b520:	2809883a 	mov	r4,r5
  80b524:	dfc00215 	stw	ra,8(sp)
  80b528:	080dbf80 	call	80dbf8 <sbrk>
  80b52c:	1007883a 	mov	r3,r2
  80b530:	00bfffc4 	movi	r2,-1
  80b534:	18800626 	beq	r3,r2,80b550 <_sbrk_r+0x4c>
  80b538:	1805883a 	mov	r2,r3
  80b53c:	dfc00217 	ldw	ra,8(sp)
  80b540:	dc400117 	ldw	r17,4(sp)
  80b544:	dc000017 	ldw	r16,0(sp)
  80b548:	dec00304 	addi	sp,sp,12
  80b54c:	f800283a 	ret
  80b550:	80800017 	ldw	r2,0(r16)
  80b554:	103ff826 	beq	r2,zero,80b538 <_sbrk_r+0x34>
  80b558:	88800015 	stw	r2,0(r17)
  80b55c:	1805883a 	mov	r2,r3
  80b560:	dfc00217 	ldw	ra,8(sp)
  80b564:	dc400117 	ldw	r17,4(sp)
  80b568:	dc000017 	ldw	r16,0(sp)
  80b56c:	dec00304 	addi	sp,sp,12
  80b570:	f800283a 	ret

0080b574 <__sclose>:
  80b574:	2940038f 	ldh	r5,14(r5)
  80b578:	080b9481 	jmpi	80b948 <_close_r>

0080b57c <__sseek>:
  80b57c:	defffe04 	addi	sp,sp,-8
  80b580:	dc000015 	stw	r16,0(sp)
  80b584:	2821883a 	mov	r16,r5
  80b588:	2940038f 	ldh	r5,14(r5)
  80b58c:	dfc00115 	stw	ra,4(sp)
  80b590:	080bbc00 	call	80bbc0 <_lseek_r>
  80b594:	1007883a 	mov	r3,r2
  80b598:	00bfffc4 	movi	r2,-1
  80b59c:	18800926 	beq	r3,r2,80b5c4 <__sseek+0x48>
  80b5a0:	8080030b 	ldhu	r2,12(r16)
  80b5a4:	80c01415 	stw	r3,80(r16)
  80b5a8:	10840014 	ori	r2,r2,4096
  80b5ac:	8080030d 	sth	r2,12(r16)
  80b5b0:	1805883a 	mov	r2,r3
  80b5b4:	dfc00117 	ldw	ra,4(sp)
  80b5b8:	dc000017 	ldw	r16,0(sp)
  80b5bc:	dec00204 	addi	sp,sp,8
  80b5c0:	f800283a 	ret
  80b5c4:	8080030b 	ldhu	r2,12(r16)
  80b5c8:	10bbffcc 	andi	r2,r2,61439
  80b5cc:	8080030d 	sth	r2,12(r16)
  80b5d0:	1805883a 	mov	r2,r3
  80b5d4:	dfc00117 	ldw	ra,4(sp)
  80b5d8:	dc000017 	ldw	r16,0(sp)
  80b5dc:	dec00204 	addi	sp,sp,8
  80b5e0:	f800283a 	ret

0080b5e4 <__swrite>:
  80b5e4:	2880030b 	ldhu	r2,12(r5)
  80b5e8:	defffb04 	addi	sp,sp,-20
  80b5ec:	dcc00315 	stw	r19,12(sp)
  80b5f0:	1080400c 	andi	r2,r2,256
  80b5f4:	dc800215 	stw	r18,8(sp)
  80b5f8:	dc400115 	stw	r17,4(sp)
  80b5fc:	dc000015 	stw	r16,0(sp)
  80b600:	3027883a 	mov	r19,r6
  80b604:	3825883a 	mov	r18,r7
  80b608:	dfc00415 	stw	ra,16(sp)
  80b60c:	2821883a 	mov	r16,r5
  80b610:	000d883a 	mov	r6,zero
  80b614:	01c00084 	movi	r7,2
  80b618:	2023883a 	mov	r17,r4
  80b61c:	10000226 	beq	r2,zero,80b628 <__swrite+0x44>
  80b620:	2940038f 	ldh	r5,14(r5)
  80b624:	080bbc00 	call	80bbc0 <_lseek_r>
  80b628:	8080030b 	ldhu	r2,12(r16)
  80b62c:	8140038f 	ldh	r5,14(r16)
  80b630:	8809883a 	mov	r4,r17
  80b634:	10bbffcc 	andi	r2,r2,61439
  80b638:	980d883a 	mov	r6,r19
  80b63c:	900f883a 	mov	r7,r18
  80b640:	8080030d 	sth	r2,12(r16)
  80b644:	dfc00417 	ldw	ra,16(sp)
  80b648:	dcc00317 	ldw	r19,12(sp)
  80b64c:	dc800217 	ldw	r18,8(sp)
  80b650:	dc400117 	ldw	r17,4(sp)
  80b654:	dc000017 	ldw	r16,0(sp)
  80b658:	dec00504 	addi	sp,sp,20
  80b65c:	080b8081 	jmpi	80b808 <_write_r>

0080b660 <__sread>:
  80b660:	defffe04 	addi	sp,sp,-8
  80b664:	dc000015 	stw	r16,0(sp)
  80b668:	2821883a 	mov	r16,r5
  80b66c:	2940038f 	ldh	r5,14(r5)
  80b670:	dfc00115 	stw	ra,4(sp)
  80b674:	080bc380 	call	80bc38 <_read_r>
  80b678:	1007883a 	mov	r3,r2
  80b67c:	10000816 	blt	r2,zero,80b6a0 <__sread+0x40>
  80b680:	80801417 	ldw	r2,80(r16)
  80b684:	10c5883a 	add	r2,r2,r3
  80b688:	80801415 	stw	r2,80(r16)
  80b68c:	1805883a 	mov	r2,r3
  80b690:	dfc00117 	ldw	ra,4(sp)
  80b694:	dc000017 	ldw	r16,0(sp)
  80b698:	dec00204 	addi	sp,sp,8
  80b69c:	f800283a 	ret
  80b6a0:	8080030b 	ldhu	r2,12(r16)
  80b6a4:	10bbffcc 	andi	r2,r2,61439
  80b6a8:	8080030d 	sth	r2,12(r16)
  80b6ac:	1805883a 	mov	r2,r3
  80b6b0:	dfc00117 	ldw	ra,4(sp)
  80b6b4:	dc000017 	ldw	r16,0(sp)
  80b6b8:	dec00204 	addi	sp,sp,8
  80b6bc:	f800283a 	ret

0080b6c0 <strcmp>:
  80b6c0:	2144b03a 	or	r2,r4,r5
  80b6c4:	108000cc 	andi	r2,r2,3
  80b6c8:	10001d1e 	bne	r2,zero,80b740 <strcmp+0x80>
  80b6cc:	200f883a 	mov	r7,r4
  80b6d0:	28800017 	ldw	r2,0(r5)
  80b6d4:	21000017 	ldw	r4,0(r4)
  80b6d8:	280d883a 	mov	r6,r5
  80b6dc:	2080161e 	bne	r4,r2,80b738 <strcmp+0x78>
  80b6e0:	023fbff4 	movhi	r8,65279
  80b6e4:	423fbfc4 	addi	r8,r8,-257
  80b6e8:	2207883a 	add	r3,r4,r8
  80b6ec:	01602074 	movhi	r5,32897
  80b6f0:	29602004 	addi	r5,r5,-32640
  80b6f4:	1946703a 	and	r3,r3,r5
  80b6f8:	0104303a 	nor	r2,zero,r4
  80b6fc:	10c4703a 	and	r2,r2,r3
  80b700:	10001c1e 	bne	r2,zero,80b774 <strcmp+0xb4>
  80b704:	4013883a 	mov	r9,r8
  80b708:	2811883a 	mov	r8,r5
  80b70c:	00000106 	br	80b714 <strcmp+0x54>
  80b710:	1800181e 	bne	r3,zero,80b774 <strcmp+0xb4>
  80b714:	39c00104 	addi	r7,r7,4
  80b718:	39000017 	ldw	r4,0(r7)
  80b71c:	31800104 	addi	r6,r6,4
  80b720:	31400017 	ldw	r5,0(r6)
  80b724:	2245883a 	add	r2,r4,r9
  80b728:	1204703a 	and	r2,r2,r8
  80b72c:	0106303a 	nor	r3,zero,r4
  80b730:	1886703a 	and	r3,r3,r2
  80b734:	217ff626 	beq	r4,r5,80b710 <strcmp+0x50>
  80b738:	3809883a 	mov	r4,r7
  80b73c:	300b883a 	mov	r5,r6
  80b740:	20c00007 	ldb	r3,0(r4)
  80b744:	1800051e 	bne	r3,zero,80b75c <strcmp+0x9c>
  80b748:	00000606 	br	80b764 <strcmp+0xa4>
  80b74c:	21000044 	addi	r4,r4,1
  80b750:	20c00007 	ldb	r3,0(r4)
  80b754:	29400044 	addi	r5,r5,1
  80b758:	18000226 	beq	r3,zero,80b764 <strcmp+0xa4>
  80b75c:	28800007 	ldb	r2,0(r5)
  80b760:	18bffa26 	beq	r3,r2,80b74c <strcmp+0x8c>
  80b764:	20c00003 	ldbu	r3,0(r4)
  80b768:	28800003 	ldbu	r2,0(r5)
  80b76c:	1885c83a 	sub	r2,r3,r2
  80b770:	f800283a 	ret
  80b774:	0005883a 	mov	r2,zero
  80b778:	f800283a 	ret

0080b77c <strcpy>:
  80b77c:	2904b03a 	or	r2,r5,r4
  80b780:	108000cc 	andi	r2,r2,3
  80b784:	10000826 	beq	r2,zero,80b7a8 <strcpy+0x2c>
  80b788:	2007883a 	mov	r3,r4
  80b78c:	28800003 	ldbu	r2,0(r5)
  80b790:	29400044 	addi	r5,r5,1
  80b794:	18800005 	stb	r2,0(r3)
  80b798:	18c00044 	addi	r3,r3,1
  80b79c:	103ffb1e 	bne	r2,zero,80b78c <strcpy+0x10>
  80b7a0:	2005883a 	mov	r2,r4
  80b7a4:	f800283a 	ret
  80b7a8:	29800017 	ldw	r6,0(r5)
  80b7ac:	023fbff4 	movhi	r8,65279
  80b7b0:	423fbfc4 	addi	r8,r8,-257
  80b7b4:	02a02074 	movhi	r10,32897
  80b7b8:	52a02004 	addi	r10,r10,-32640
  80b7bc:	3205883a 	add	r2,r6,r8
  80b7c0:	0186303a 	nor	r3,zero,r6
  80b7c4:	10c4703a 	and	r2,r2,r3
  80b7c8:	1284703a 	and	r2,r2,r10
  80b7cc:	200f883a 	mov	r7,r4
  80b7d0:	10000b1e 	bne	r2,zero,80b800 <strcpy+0x84>
  80b7d4:	4013883a 	mov	r9,r8
  80b7d8:	5011883a 	mov	r8,r10
  80b7dc:	39800015 	stw	r6,0(r7)
  80b7e0:	29400104 	addi	r5,r5,4
  80b7e4:	29800017 	ldw	r6,0(r5)
  80b7e8:	39c00104 	addi	r7,r7,4
  80b7ec:	3245883a 	add	r2,r6,r9
  80b7f0:	0186303a 	nor	r3,zero,r6
  80b7f4:	10c4703a 	and	r2,r2,r3
  80b7f8:	1204703a 	and	r2,r2,r8
  80b7fc:	103ff726 	beq	r2,zero,80b7dc <strcpy+0x60>
  80b800:	3807883a 	mov	r3,r7
  80b804:	003fe106 	br	80b78c <strcpy+0x10>

0080b808 <_write_r>:
  80b808:	defffd04 	addi	sp,sp,-12
  80b80c:	dc000015 	stw	r16,0(sp)
  80b810:	04002074 	movhi	r16,129
  80b814:	840eef04 	addi	r16,r16,15292
  80b818:	dc400115 	stw	r17,4(sp)
  80b81c:	80000015 	stw	zero,0(r16)
  80b820:	2023883a 	mov	r17,r4
  80b824:	2809883a 	mov	r4,r5
  80b828:	300b883a 	mov	r5,r6
  80b82c:	380d883a 	mov	r6,r7
  80b830:	dfc00215 	stw	ra,8(sp)
  80b834:	080dda80 	call	80dda8 <write>
  80b838:	1007883a 	mov	r3,r2
  80b83c:	00bfffc4 	movi	r2,-1
  80b840:	18800626 	beq	r3,r2,80b85c <_write_r+0x54>
  80b844:	1805883a 	mov	r2,r3
  80b848:	dfc00217 	ldw	ra,8(sp)
  80b84c:	dc400117 	ldw	r17,4(sp)
  80b850:	dc000017 	ldw	r16,0(sp)
  80b854:	dec00304 	addi	sp,sp,12
  80b858:	f800283a 	ret
  80b85c:	80800017 	ldw	r2,0(r16)
  80b860:	103ff826 	beq	r2,zero,80b844 <_write_r+0x3c>
  80b864:	88800015 	stw	r2,0(r17)
  80b868:	1805883a 	mov	r2,r3
  80b86c:	dfc00217 	ldw	ra,8(sp)
  80b870:	dc400117 	ldw	r17,4(sp)
  80b874:	dc000017 	ldw	r16,0(sp)
  80b878:	dec00304 	addi	sp,sp,12
  80b87c:	f800283a 	ret

0080b880 <_calloc_r>:
  80b880:	defffe04 	addi	sp,sp,-8
  80b884:	dc400015 	stw	r17,0(sp)
  80b888:	2023883a 	mov	r17,r4
  80b88c:	2809883a 	mov	r4,r5
  80b890:	300b883a 	mov	r5,r6
  80b894:	dfc00115 	stw	ra,4(sp)
  80b898:	08032000 	call	803200 <__mulsi3>
  80b89c:	100b883a 	mov	r5,r2
  80b8a0:	8809883a 	mov	r4,r17
  80b8a4:	08093d80 	call	8093d8 <_malloc_r>
  80b8a8:	1023883a 	mov	r17,r2
  80b8ac:	01c00904 	movi	r7,36
  80b8b0:	10000d26 	beq	r2,zero,80b8e8 <_calloc_r+0x68>
  80b8b4:	10ffff17 	ldw	r3,-4(r2)
  80b8b8:	1009883a 	mov	r4,r2
  80b8bc:	00bfff04 	movi	r2,-4
  80b8c0:	1886703a 	and	r3,r3,r2
  80b8c4:	1887883a 	add	r3,r3,r2
  80b8c8:	180d883a 	mov	r6,r3
  80b8cc:	000b883a 	mov	r5,zero
  80b8d0:	38c01736 	bltu	r7,r3,80b930 <_calloc_r+0xb0>
  80b8d4:	008004c4 	movi	r2,19
  80b8d8:	10c00836 	bltu	r2,r3,80b8fc <_calloc_r+0x7c>
  80b8dc:	20000215 	stw	zero,8(r4)
  80b8e0:	20000015 	stw	zero,0(r4)
  80b8e4:	20000115 	stw	zero,4(r4)
  80b8e8:	8805883a 	mov	r2,r17
  80b8ec:	dfc00117 	ldw	ra,4(sp)
  80b8f0:	dc400017 	ldw	r17,0(sp)
  80b8f4:	dec00204 	addi	sp,sp,8
  80b8f8:	f800283a 	ret
  80b8fc:	008006c4 	movi	r2,27
  80b900:	88000015 	stw	zero,0(r17)
  80b904:	88000115 	stw	zero,4(r17)
  80b908:	89000204 	addi	r4,r17,8
  80b90c:	10fff32e 	bgeu	r2,r3,80b8dc <_calloc_r+0x5c>
  80b910:	88000215 	stw	zero,8(r17)
  80b914:	88000315 	stw	zero,12(r17)
  80b918:	89000404 	addi	r4,r17,16
  80b91c:	19ffef1e 	bne	r3,r7,80b8dc <_calloc_r+0x5c>
  80b920:	89000604 	addi	r4,r17,24
  80b924:	88000415 	stw	zero,16(r17)
  80b928:	88000515 	stw	zero,20(r17)
  80b92c:	003feb06 	br	80b8dc <_calloc_r+0x5c>
  80b930:	0809d7c0 	call	809d7c <memset>
  80b934:	8805883a 	mov	r2,r17
  80b938:	dfc00117 	ldw	ra,4(sp)
  80b93c:	dc400017 	ldw	r17,0(sp)
  80b940:	dec00204 	addi	sp,sp,8
  80b944:	f800283a 	ret

0080b948 <_close_r>:
  80b948:	defffd04 	addi	sp,sp,-12
  80b94c:	dc000015 	stw	r16,0(sp)
  80b950:	04002074 	movhi	r16,129
  80b954:	840eef04 	addi	r16,r16,15292
  80b958:	dc400115 	stw	r17,4(sp)
  80b95c:	80000015 	stw	zero,0(r16)
  80b960:	2023883a 	mov	r17,r4
  80b964:	2809883a 	mov	r4,r5
  80b968:	dfc00215 	stw	ra,8(sp)
  80b96c:	080d2e80 	call	80d2e8 <close>
  80b970:	1007883a 	mov	r3,r2
  80b974:	00bfffc4 	movi	r2,-1
  80b978:	18800626 	beq	r3,r2,80b994 <_close_r+0x4c>
  80b97c:	1805883a 	mov	r2,r3
  80b980:	dfc00217 	ldw	ra,8(sp)
  80b984:	dc400117 	ldw	r17,4(sp)
  80b988:	dc000017 	ldw	r16,0(sp)
  80b98c:	dec00304 	addi	sp,sp,12
  80b990:	f800283a 	ret
  80b994:	80800017 	ldw	r2,0(r16)
  80b998:	103ff826 	beq	r2,zero,80b97c <_close_r+0x34>
  80b99c:	88800015 	stw	r2,0(r17)
  80b9a0:	1805883a 	mov	r2,r3
  80b9a4:	dfc00217 	ldw	ra,8(sp)
  80b9a8:	dc400117 	ldw	r17,4(sp)
  80b9ac:	dc000017 	ldw	r16,0(sp)
  80b9b0:	dec00304 	addi	sp,sp,12
  80b9b4:	f800283a 	ret

0080b9b8 <_fclose_r>:
  80b9b8:	defffc04 	addi	sp,sp,-16
  80b9bc:	dc400115 	stw	r17,4(sp)
  80b9c0:	dc000015 	stw	r16,0(sp)
  80b9c4:	dfc00315 	stw	ra,12(sp)
  80b9c8:	dc800215 	stw	r18,8(sp)
  80b9cc:	2821883a 	mov	r16,r5
  80b9d0:	2023883a 	mov	r17,r4
  80b9d4:	28002926 	beq	r5,zero,80ba7c <_fclose_r+0xc4>
  80b9d8:	08084880 	call	808488 <__sfp_lock_acquire>
  80b9dc:	88000226 	beq	r17,zero,80b9e8 <_fclose_r+0x30>
  80b9e0:	88800e17 	ldw	r2,56(r17)
  80b9e4:	10002d26 	beq	r2,zero,80ba9c <_fclose_r+0xe4>
  80b9e8:	8080030f 	ldh	r2,12(r16)
  80b9ec:	10002226 	beq	r2,zero,80ba78 <_fclose_r+0xc0>
  80b9f0:	8809883a 	mov	r4,r17
  80b9f4:	800b883a 	mov	r5,r16
  80b9f8:	08082000 	call	808200 <_fflush_r>
  80b9fc:	1025883a 	mov	r18,r2
  80ba00:	80800b17 	ldw	r2,44(r16)
  80ba04:	10000426 	beq	r2,zero,80ba18 <_fclose_r+0x60>
  80ba08:	81400717 	ldw	r5,28(r16)
  80ba0c:	8809883a 	mov	r4,r17
  80ba10:	103ee83a 	callr	r2
  80ba14:	10002a16 	blt	r2,zero,80bac0 <_fclose_r+0x108>
  80ba18:	8080030b 	ldhu	r2,12(r16)
  80ba1c:	1080200c 	andi	r2,r2,128
  80ba20:	1000231e 	bne	r2,zero,80bab0 <_fclose_r+0xf8>
  80ba24:	81400c17 	ldw	r5,48(r16)
  80ba28:	28000526 	beq	r5,zero,80ba40 <_fclose_r+0x88>
  80ba2c:	80801004 	addi	r2,r16,64
  80ba30:	28800226 	beq	r5,r2,80ba3c <_fclose_r+0x84>
  80ba34:	8809883a 	mov	r4,r17
  80ba38:	08088500 	call	808850 <_free_r>
  80ba3c:	80000c15 	stw	zero,48(r16)
  80ba40:	81401117 	ldw	r5,68(r16)
  80ba44:	28000326 	beq	r5,zero,80ba54 <_fclose_r+0x9c>
  80ba48:	8809883a 	mov	r4,r17
  80ba4c:	08088500 	call	808850 <_free_r>
  80ba50:	80001115 	stw	zero,68(r16)
  80ba54:	8000030d 	sth	zero,12(r16)
  80ba58:	080848c0 	call	80848c <__sfp_lock_release>
  80ba5c:	9005883a 	mov	r2,r18
  80ba60:	dfc00317 	ldw	ra,12(sp)
  80ba64:	dc800217 	ldw	r18,8(sp)
  80ba68:	dc400117 	ldw	r17,4(sp)
  80ba6c:	dc000017 	ldw	r16,0(sp)
  80ba70:	dec00404 	addi	sp,sp,16
  80ba74:	f800283a 	ret
  80ba78:	080848c0 	call	80848c <__sfp_lock_release>
  80ba7c:	0025883a 	mov	r18,zero
  80ba80:	9005883a 	mov	r2,r18
  80ba84:	dfc00317 	ldw	ra,12(sp)
  80ba88:	dc800217 	ldw	r18,8(sp)
  80ba8c:	dc400117 	ldw	r17,4(sp)
  80ba90:	dc000017 	ldw	r16,0(sp)
  80ba94:	dec00404 	addi	sp,sp,16
  80ba98:	f800283a 	ret
  80ba9c:	8809883a 	mov	r4,r17
  80baa0:	08084980 	call	808498 <__sinit>
  80baa4:	8080030f 	ldh	r2,12(r16)
  80baa8:	103fd11e 	bne	r2,zero,80b9f0 <_fclose_r+0x38>
  80baac:	003ff206 	br	80ba78 <_fclose_r+0xc0>
  80bab0:	81400417 	ldw	r5,16(r16)
  80bab4:	8809883a 	mov	r4,r17
  80bab8:	08088500 	call	808850 <_free_r>
  80babc:	003fd906 	br	80ba24 <_fclose_r+0x6c>
  80bac0:	04bfffc4 	movi	r18,-1
  80bac4:	003fd406 	br	80ba18 <_fclose_r+0x60>

0080bac8 <fclose>:
  80bac8:	00802074 	movhi	r2,129
  80bacc:	10884204 	addi	r2,r2,8456
  80bad0:	200b883a 	mov	r5,r4
  80bad4:	11000017 	ldw	r4,0(r2)
  80bad8:	080b9b81 	jmpi	80b9b8 <_fclose_r>

0080badc <_fstat_r>:
  80badc:	defffd04 	addi	sp,sp,-12
  80bae0:	dc000015 	stw	r16,0(sp)
  80bae4:	04002074 	movhi	r16,129
  80bae8:	840eef04 	addi	r16,r16,15292
  80baec:	dc400115 	stw	r17,4(sp)
  80baf0:	80000015 	stw	zero,0(r16)
  80baf4:	2023883a 	mov	r17,r4
  80baf8:	2809883a 	mov	r4,r5
  80bafc:	300b883a 	mov	r5,r6
  80bb00:	dfc00215 	stw	ra,8(sp)
  80bb04:	080d4740 	call	80d474 <fstat>
  80bb08:	1007883a 	mov	r3,r2
  80bb0c:	00bfffc4 	movi	r2,-1
  80bb10:	18800626 	beq	r3,r2,80bb2c <_fstat_r+0x50>
  80bb14:	1805883a 	mov	r2,r3
  80bb18:	dfc00217 	ldw	ra,8(sp)
  80bb1c:	dc400117 	ldw	r17,4(sp)
  80bb20:	dc000017 	ldw	r16,0(sp)
  80bb24:	dec00304 	addi	sp,sp,12
  80bb28:	f800283a 	ret
  80bb2c:	80800017 	ldw	r2,0(r16)
  80bb30:	103ff826 	beq	r2,zero,80bb14 <_fstat_r+0x38>
  80bb34:	88800015 	stw	r2,0(r17)
  80bb38:	1805883a 	mov	r2,r3
  80bb3c:	dfc00217 	ldw	ra,8(sp)
  80bb40:	dc400117 	ldw	r17,4(sp)
  80bb44:	dc000017 	ldw	r16,0(sp)
  80bb48:	dec00304 	addi	sp,sp,12
  80bb4c:	f800283a 	ret

0080bb50 <_isatty_r>:
  80bb50:	defffd04 	addi	sp,sp,-12
  80bb54:	dc000015 	stw	r16,0(sp)
  80bb58:	04002074 	movhi	r16,129
  80bb5c:	840eef04 	addi	r16,r16,15292
  80bb60:	dc400115 	stw	r17,4(sp)
  80bb64:	80000015 	stw	zero,0(r16)
  80bb68:	2023883a 	mov	r17,r4
  80bb6c:	2809883a 	mov	r4,r5
  80bb70:	dfc00215 	stw	ra,8(sp)
  80bb74:	080d5ac0 	call	80d5ac <isatty>
  80bb78:	1007883a 	mov	r3,r2
  80bb7c:	00bfffc4 	movi	r2,-1
  80bb80:	18800626 	beq	r3,r2,80bb9c <_isatty_r+0x4c>
  80bb84:	1805883a 	mov	r2,r3
  80bb88:	dfc00217 	ldw	ra,8(sp)
  80bb8c:	dc400117 	ldw	r17,4(sp)
  80bb90:	dc000017 	ldw	r16,0(sp)
  80bb94:	dec00304 	addi	sp,sp,12
  80bb98:	f800283a 	ret
  80bb9c:	80800017 	ldw	r2,0(r16)
  80bba0:	103ff826 	beq	r2,zero,80bb84 <_isatty_r+0x34>
  80bba4:	88800015 	stw	r2,0(r17)
  80bba8:	1805883a 	mov	r2,r3
  80bbac:	dfc00217 	ldw	ra,8(sp)
  80bbb0:	dc400117 	ldw	r17,4(sp)
  80bbb4:	dc000017 	ldw	r16,0(sp)
  80bbb8:	dec00304 	addi	sp,sp,12
  80bbbc:	f800283a 	ret

0080bbc0 <_lseek_r>:
  80bbc0:	defffd04 	addi	sp,sp,-12
  80bbc4:	dc000015 	stw	r16,0(sp)
  80bbc8:	04002074 	movhi	r16,129
  80bbcc:	840eef04 	addi	r16,r16,15292
  80bbd0:	dc400115 	stw	r17,4(sp)
  80bbd4:	80000015 	stw	zero,0(r16)
  80bbd8:	2023883a 	mov	r17,r4
  80bbdc:	2809883a 	mov	r4,r5
  80bbe0:	300b883a 	mov	r5,r6
  80bbe4:	380d883a 	mov	r6,r7
  80bbe8:	dfc00215 	stw	ra,8(sp)
  80bbec:	080d7bc0 	call	80d7bc <lseek>
  80bbf0:	1007883a 	mov	r3,r2
  80bbf4:	00bfffc4 	movi	r2,-1
  80bbf8:	18800626 	beq	r3,r2,80bc14 <_lseek_r+0x54>
  80bbfc:	1805883a 	mov	r2,r3
  80bc00:	dfc00217 	ldw	ra,8(sp)
  80bc04:	dc400117 	ldw	r17,4(sp)
  80bc08:	dc000017 	ldw	r16,0(sp)
  80bc0c:	dec00304 	addi	sp,sp,12
  80bc10:	f800283a 	ret
  80bc14:	80800017 	ldw	r2,0(r16)
  80bc18:	103ff826 	beq	r2,zero,80bbfc <_lseek_r+0x3c>
  80bc1c:	88800015 	stw	r2,0(r17)
  80bc20:	1805883a 	mov	r2,r3
  80bc24:	dfc00217 	ldw	ra,8(sp)
  80bc28:	dc400117 	ldw	r17,4(sp)
  80bc2c:	dc000017 	ldw	r16,0(sp)
  80bc30:	dec00304 	addi	sp,sp,12
  80bc34:	f800283a 	ret

0080bc38 <_read_r>:
  80bc38:	defffd04 	addi	sp,sp,-12
  80bc3c:	dc000015 	stw	r16,0(sp)
  80bc40:	04002074 	movhi	r16,129
  80bc44:	840eef04 	addi	r16,r16,15292
  80bc48:	dc400115 	stw	r17,4(sp)
  80bc4c:	80000015 	stw	zero,0(r16)
  80bc50:	2023883a 	mov	r17,r4
  80bc54:	2809883a 	mov	r4,r5
  80bc58:	300b883a 	mov	r5,r6
  80bc5c:	380d883a 	mov	r6,r7
  80bc60:	dfc00215 	stw	ra,8(sp)
  80bc64:	080d9fc0 	call	80d9fc <read>
  80bc68:	1007883a 	mov	r3,r2
  80bc6c:	00bfffc4 	movi	r2,-1
  80bc70:	18800626 	beq	r3,r2,80bc8c <_read_r+0x54>
  80bc74:	1805883a 	mov	r2,r3
  80bc78:	dfc00217 	ldw	ra,8(sp)
  80bc7c:	dc400117 	ldw	r17,4(sp)
  80bc80:	dc000017 	ldw	r16,0(sp)
  80bc84:	dec00304 	addi	sp,sp,12
  80bc88:	f800283a 	ret
  80bc8c:	80800017 	ldw	r2,0(r16)
  80bc90:	103ff826 	beq	r2,zero,80bc74 <_read_r+0x3c>
  80bc94:	88800015 	stw	r2,0(r17)
  80bc98:	1805883a 	mov	r2,r3
  80bc9c:	dfc00217 	ldw	ra,8(sp)
  80bca0:	dc400117 	ldw	r17,4(sp)
  80bca4:	dc000017 	ldw	r16,0(sp)
  80bca8:	dec00304 	addi	sp,sp,12
  80bcac:	f800283a 	ret

0080bcb0 <__udivdi3>:
  80bcb0:	defff104 	addi	sp,sp,-60
  80bcb4:	0015883a 	mov	r10,zero
  80bcb8:	2005883a 	mov	r2,r4
  80bcbc:	3011883a 	mov	r8,r6
  80bcc0:	df000d15 	stw	fp,52(sp)
  80bcc4:	dd400a15 	stw	r21,40(sp)
  80bcc8:	dcc00815 	stw	r19,32(sp)
  80bccc:	dfc00e15 	stw	ra,56(sp)
  80bcd0:	ddc00c15 	stw	r23,48(sp)
  80bcd4:	dd800b15 	stw	r22,44(sp)
  80bcd8:	dd000915 	stw	r20,36(sp)
  80bcdc:	dc800715 	stw	r18,28(sp)
  80bce0:	dc400615 	stw	r17,24(sp)
  80bce4:	dc000515 	stw	r16,20(sp)
  80bce8:	da800315 	stw	r10,12(sp)
  80bcec:	4027883a 	mov	r19,r8
  80bcf0:	1039883a 	mov	fp,r2
  80bcf4:	282b883a 	mov	r21,r5
  80bcf8:	da800415 	stw	r10,16(sp)
  80bcfc:	3800401e 	bne	r7,zero,80be00 <__udivdi3+0x150>
  80bd00:	2a006536 	bltu	r5,r8,80be98 <__udivdi3+0x1e8>
  80bd04:	4000b526 	beq	r8,zero,80bfdc <__udivdi3+0x32c>
  80bd08:	00bfffd4 	movui	r2,65535
  80bd0c:	14c0ad36 	bltu	r2,r19,80bfc4 <__udivdi3+0x314>
  80bd10:	00803fc4 	movi	r2,255
  80bd14:	14c15e36 	bltu	r2,r19,80c290 <__udivdi3+0x5e0>
  80bd18:	000b883a 	mov	r5,zero
  80bd1c:	0005883a 	mov	r2,zero
  80bd20:	9884d83a 	srl	r2,r19,r2
  80bd24:	01002074 	movhi	r4,129
  80bd28:	2100f104 	addi	r4,r4,964
  80bd2c:	01800804 	movi	r6,32
  80bd30:	1105883a 	add	r2,r2,r4
  80bd34:	10c00003 	ldbu	r3,0(r2)
  80bd38:	28c7883a 	add	r3,r5,r3
  80bd3c:	30e9c83a 	sub	r20,r6,r3
  80bd40:	a0010a1e 	bne	r20,zero,80c16c <__udivdi3+0x4bc>
  80bd44:	982ed43a 	srli	r23,r19,16
  80bd48:	acebc83a 	sub	r21,r21,r19
  80bd4c:	9dbfffcc 	andi	r22,r19,65535
  80bd50:	05000044 	movi	r20,1
  80bd54:	a809883a 	mov	r4,r21
  80bd58:	b80b883a 	mov	r5,r23
  80bd5c:	080d2100 	call	80d210 <__udivsi3>
  80bd60:	100b883a 	mov	r5,r2
  80bd64:	b009883a 	mov	r4,r22
  80bd68:	1021883a 	mov	r16,r2
  80bd6c:	08032000 	call	803200 <__mulsi3>
  80bd70:	a809883a 	mov	r4,r21
  80bd74:	b80b883a 	mov	r5,r23
  80bd78:	1023883a 	mov	r17,r2
  80bd7c:	080d2180 	call	80d218 <__umodsi3>
  80bd80:	1004943a 	slli	r2,r2,16
  80bd84:	e006d43a 	srli	r3,fp,16
  80bd88:	10c4b03a 	or	r2,r2,r3
  80bd8c:	1440042e 	bgeu	r2,r17,80bda0 <__udivdi3+0xf0>
  80bd90:	14c5883a 	add	r2,r2,r19
  80bd94:	843fffc4 	addi	r16,r16,-1
  80bd98:	14c00136 	bltu	r2,r19,80bda0 <__udivdi3+0xf0>
  80bd9c:	14415c36 	bltu	r2,r17,80c310 <__udivdi3+0x660>
  80bda0:	1463c83a 	sub	r17,r2,r17
  80bda4:	8809883a 	mov	r4,r17
  80bda8:	b80b883a 	mov	r5,r23
  80bdac:	080d2100 	call	80d210 <__udivsi3>
  80bdb0:	100b883a 	mov	r5,r2
  80bdb4:	b009883a 	mov	r4,r22
  80bdb8:	102b883a 	mov	r21,r2
  80bdbc:	08032000 	call	803200 <__mulsi3>
  80bdc0:	8809883a 	mov	r4,r17
  80bdc4:	b80b883a 	mov	r5,r23
  80bdc8:	1025883a 	mov	r18,r2
  80bdcc:	080d2180 	call	80d218 <__umodsi3>
  80bdd0:	1004943a 	slli	r2,r2,16
  80bdd4:	e0ffffcc 	andi	r3,fp,65535
  80bdd8:	10c4b03a 	or	r2,r2,r3
  80bddc:	1480042e 	bgeu	r2,r18,80bdf0 <__udivdi3+0x140>
  80bde0:	9885883a 	add	r2,r19,r2
  80bde4:	ad7fffc4 	addi	r21,r21,-1
  80bde8:	14c00136 	bltu	r2,r19,80bdf0 <__udivdi3+0x140>
  80bdec:	14813c36 	bltu	r2,r18,80c2e0 <__udivdi3+0x630>
  80bdf0:	8004943a 	slli	r2,r16,16
  80bdf4:	a009883a 	mov	r4,r20
  80bdf8:	a884b03a 	or	r2,r21,r2
  80bdfc:	00001506 	br	80be54 <__udivdi3+0x1a4>
  80be00:	380d883a 	mov	r6,r7
  80be04:	29c06c36 	bltu	r5,r7,80bfb8 <__udivdi3+0x308>
  80be08:	00bfffd4 	movui	r2,65535
  80be0c:	11c06436 	bltu	r2,r7,80bfa0 <__udivdi3+0x2f0>
  80be10:	00803fc4 	movi	r2,255
  80be14:	11c11836 	bltu	r2,r7,80c278 <__udivdi3+0x5c8>
  80be18:	000b883a 	mov	r5,zero
  80be1c:	0005883a 	mov	r2,zero
  80be20:	3084d83a 	srl	r2,r6,r2
  80be24:	01002074 	movhi	r4,129
  80be28:	2100f104 	addi	r4,r4,964
  80be2c:	01c00804 	movi	r7,32
  80be30:	1105883a 	add	r2,r2,r4
  80be34:	10c00003 	ldbu	r3,0(r2)
  80be38:	28c7883a 	add	r3,r5,r3
  80be3c:	38edc83a 	sub	r22,r7,r3
  80be40:	b000731e 	bne	r22,zero,80c010 <__udivdi3+0x360>
  80be44:	35400136 	bltu	r6,r21,80be4c <__udivdi3+0x19c>
  80be48:	e4c05b36 	bltu	fp,r19,80bfb8 <__udivdi3+0x308>
  80be4c:	00800044 	movi	r2,1
  80be50:	0009883a 	mov	r4,zero
  80be54:	d8800315 	stw	r2,12(sp)
  80be58:	d9400317 	ldw	r5,12(sp)
  80be5c:	2007883a 	mov	r3,r4
  80be60:	d9000415 	stw	r4,16(sp)
  80be64:	2805883a 	mov	r2,r5
  80be68:	dfc00e17 	ldw	ra,56(sp)
  80be6c:	df000d17 	ldw	fp,52(sp)
  80be70:	ddc00c17 	ldw	r23,48(sp)
  80be74:	dd800b17 	ldw	r22,44(sp)
  80be78:	dd400a17 	ldw	r21,40(sp)
  80be7c:	dd000917 	ldw	r20,36(sp)
  80be80:	dcc00817 	ldw	r19,32(sp)
  80be84:	dc800717 	ldw	r18,28(sp)
  80be88:	dc400617 	ldw	r17,24(sp)
  80be8c:	dc000517 	ldw	r16,20(sp)
  80be90:	dec00f04 	addi	sp,sp,60
  80be94:	f800283a 	ret
  80be98:	00bfffd4 	movui	r2,65535
  80be9c:	12005636 	bltu	r2,r8,80bff8 <__udivdi3+0x348>
  80bea0:	00803fc4 	movi	r2,255
  80bea4:	12010036 	bltu	r2,r8,80c2a8 <__udivdi3+0x5f8>
  80bea8:	000b883a 	mov	r5,zero
  80beac:	0005883a 	mov	r2,zero
  80beb0:	9884d83a 	srl	r2,r19,r2
  80beb4:	01002074 	movhi	r4,129
  80beb8:	2100f104 	addi	r4,r4,964
  80bebc:	01800804 	movi	r6,32
  80bec0:	1105883a 	add	r2,r2,r4
  80bec4:	10c00003 	ldbu	r3,0(r2)
  80bec8:	28c7883a 	add	r3,r5,r3
  80becc:	30cbc83a 	sub	r5,r6,r3
  80bed0:	28000626 	beq	r5,zero,80beec <__udivdi3+0x23c>
  80bed4:	3145c83a 	sub	r2,r6,r5
  80bed8:	e084d83a 	srl	r2,fp,r2
  80bedc:	a946983a 	sll	r3,r21,r5
  80bee0:	e178983a 	sll	fp,fp,r5
  80bee4:	9966983a 	sll	r19,r19,r5
  80bee8:	18aab03a 	or	r21,r3,r2
  80beec:	982ed43a 	srli	r23,r19,16
  80bef0:	a809883a 	mov	r4,r21
  80bef4:	9cbfffcc 	andi	r18,r19,65535
  80bef8:	b80b883a 	mov	r5,r23
  80befc:	080d2100 	call	80d210 <__udivsi3>
  80bf00:	100b883a 	mov	r5,r2
  80bf04:	9009883a 	mov	r4,r18
  80bf08:	1021883a 	mov	r16,r2
  80bf0c:	08032000 	call	803200 <__mulsi3>
  80bf10:	a809883a 	mov	r4,r21
  80bf14:	b80b883a 	mov	r5,r23
  80bf18:	1023883a 	mov	r17,r2
  80bf1c:	080d2180 	call	80d218 <__umodsi3>
  80bf20:	1004943a 	slli	r2,r2,16
  80bf24:	e006d43a 	srli	r3,fp,16
  80bf28:	10c4b03a 	or	r2,r2,r3
  80bf2c:	1440042e 	bgeu	r2,r17,80bf40 <__udivdi3+0x290>
  80bf30:	14c5883a 	add	r2,r2,r19
  80bf34:	843fffc4 	addi	r16,r16,-1
  80bf38:	14c00136 	bltu	r2,r19,80bf40 <__udivdi3+0x290>
  80bf3c:	1440ea36 	bltu	r2,r17,80c2e8 <__udivdi3+0x638>
  80bf40:	1463c83a 	sub	r17,r2,r17
  80bf44:	8809883a 	mov	r4,r17
  80bf48:	b80b883a 	mov	r5,r23
  80bf4c:	080d2100 	call	80d210 <__udivsi3>
  80bf50:	100b883a 	mov	r5,r2
  80bf54:	9009883a 	mov	r4,r18
  80bf58:	102b883a 	mov	r21,r2
  80bf5c:	08032000 	call	803200 <__mulsi3>
  80bf60:	8809883a 	mov	r4,r17
  80bf64:	b80b883a 	mov	r5,r23
  80bf68:	1025883a 	mov	r18,r2
  80bf6c:	080d2180 	call	80d218 <__umodsi3>
  80bf70:	1004943a 	slli	r2,r2,16
  80bf74:	e0ffffcc 	andi	r3,fp,65535
  80bf78:	10c4b03a 	or	r2,r2,r3
  80bf7c:	1480042e 	bgeu	r2,r18,80bf90 <__udivdi3+0x2e0>
  80bf80:	9885883a 	add	r2,r19,r2
  80bf84:	ad7fffc4 	addi	r21,r21,-1
  80bf88:	14c00136 	bltu	r2,r19,80bf90 <__udivdi3+0x2e0>
  80bf8c:	1480d936 	bltu	r2,r18,80c2f4 <__udivdi3+0x644>
  80bf90:	8004943a 	slli	r2,r16,16
  80bf94:	0009883a 	mov	r4,zero
  80bf98:	a884b03a 	or	r2,r21,r2
  80bf9c:	003fad06 	br	80be54 <__udivdi3+0x1a4>
  80bfa0:	00804034 	movhi	r2,256
  80bfa4:	10bfffc4 	addi	r2,r2,-1
  80bfa8:	11c0b636 	bltu	r2,r7,80c284 <__udivdi3+0x5d4>
  80bfac:	01400404 	movi	r5,16
  80bfb0:	2805883a 	mov	r2,r5
  80bfb4:	003f9a06 	br	80be20 <__udivdi3+0x170>
  80bfb8:	0005883a 	mov	r2,zero
  80bfbc:	0009883a 	mov	r4,zero
  80bfc0:	003fa406 	br	80be54 <__udivdi3+0x1a4>
  80bfc4:	00804034 	movhi	r2,256
  80bfc8:	10bfffc4 	addi	r2,r2,-1
  80bfcc:	14c0b336 	bltu	r2,r19,80c29c <__udivdi3+0x5ec>
  80bfd0:	01400404 	movi	r5,16
  80bfd4:	2805883a 	mov	r2,r5
  80bfd8:	003f5106 	br	80bd20 <__udivdi3+0x70>
  80bfdc:	01000044 	movi	r4,1
  80bfe0:	000b883a 	mov	r5,zero
  80bfe4:	080d2100 	call	80d210 <__udivsi3>
  80bfe8:	1027883a 	mov	r19,r2
  80bfec:	00bfffd4 	movui	r2,65535
  80bff0:	14fff436 	bltu	r2,r19,80bfc4 <__udivdi3+0x314>
  80bff4:	003f4606 	br	80bd10 <__udivdi3+0x60>
  80bff8:	00804034 	movhi	r2,256
  80bffc:	10bfffc4 	addi	r2,r2,-1
  80c000:	1200ac36 	bltu	r2,r8,80c2b4 <__udivdi3+0x604>
  80c004:	01400404 	movi	r5,16
  80c008:	2805883a 	mov	r2,r5
  80c00c:	003fa806 	br	80beb0 <__udivdi3+0x200>
  80c010:	3d85c83a 	sub	r2,r7,r22
  80c014:	3588983a 	sll	r4,r6,r22
  80c018:	9886d83a 	srl	r3,r19,r2
  80c01c:	a8a2d83a 	srl	r17,r21,r2
  80c020:	e084d83a 	srl	r2,fp,r2
  80c024:	20eeb03a 	or	r23,r4,r3
  80c028:	b824d43a 	srli	r18,r23,16
  80c02c:	ad86983a 	sll	r3,r21,r22
  80c030:	8809883a 	mov	r4,r17
  80c034:	900b883a 	mov	r5,r18
  80c038:	1886b03a 	or	r3,r3,r2
  80c03c:	d8c00115 	stw	r3,4(sp)
  80c040:	bc3fffcc 	andi	r16,r23,65535
  80c044:	080d2100 	call	80d210 <__udivsi3>
  80c048:	100b883a 	mov	r5,r2
  80c04c:	8009883a 	mov	r4,r16
  80c050:	1029883a 	mov	r20,r2
  80c054:	08032000 	call	803200 <__mulsi3>
  80c058:	900b883a 	mov	r5,r18
  80c05c:	8809883a 	mov	r4,r17
  80c060:	102b883a 	mov	r21,r2
  80c064:	080d2180 	call	80d218 <__umodsi3>
  80c068:	d9400117 	ldw	r5,4(sp)
  80c06c:	1004943a 	slli	r2,r2,16
  80c070:	9da6983a 	sll	r19,r19,r22
  80c074:	2806d43a 	srli	r3,r5,16
  80c078:	10c4b03a 	or	r2,r2,r3
  80c07c:	1540032e 	bgeu	r2,r21,80c08c <__udivdi3+0x3dc>
  80c080:	15c5883a 	add	r2,r2,r23
  80c084:	a53fffc4 	addi	r20,r20,-1
  80c088:	15c0912e 	bgeu	r2,r23,80c2d0 <__udivdi3+0x620>
  80c08c:	1563c83a 	sub	r17,r2,r21
  80c090:	8809883a 	mov	r4,r17
  80c094:	900b883a 	mov	r5,r18
  80c098:	080d2100 	call	80d210 <__udivsi3>
  80c09c:	100b883a 	mov	r5,r2
  80c0a0:	8009883a 	mov	r4,r16
  80c0a4:	102b883a 	mov	r21,r2
  80c0a8:	08032000 	call	803200 <__mulsi3>
  80c0ac:	8809883a 	mov	r4,r17
  80c0b0:	900b883a 	mov	r5,r18
  80c0b4:	1021883a 	mov	r16,r2
  80c0b8:	080d2180 	call	80d218 <__umodsi3>
  80c0bc:	da800117 	ldw	r10,4(sp)
  80c0c0:	1004943a 	slli	r2,r2,16
  80c0c4:	50ffffcc 	andi	r3,r10,65535
  80c0c8:	10c6b03a 	or	r3,r2,r3
  80c0cc:	1c00032e 	bgeu	r3,r16,80c0dc <__udivdi3+0x42c>
  80c0d0:	1dc7883a 	add	r3,r3,r23
  80c0d4:	ad7fffc4 	addi	r21,r21,-1
  80c0d8:	1dc0792e 	bgeu	r3,r23,80c2c0 <__udivdi3+0x610>
  80c0dc:	a004943a 	slli	r2,r20,16
  80c0e0:	982ed43a 	srli	r23,r19,16
  80c0e4:	9cffffcc 	andi	r19,r19,65535
  80c0e8:	a8a4b03a 	or	r18,r21,r2
  80c0ec:	947fffcc 	andi	r17,r18,65535
  80c0f0:	902ad43a 	srli	r21,r18,16
  80c0f4:	8809883a 	mov	r4,r17
  80c0f8:	980b883a 	mov	r5,r19
  80c0fc:	1c21c83a 	sub	r16,r3,r16
  80c100:	08032000 	call	803200 <__mulsi3>
  80c104:	8809883a 	mov	r4,r17
  80c108:	b80b883a 	mov	r5,r23
  80c10c:	1029883a 	mov	r20,r2
  80c110:	08032000 	call	803200 <__mulsi3>
  80c114:	980b883a 	mov	r5,r19
  80c118:	a809883a 	mov	r4,r21
  80c11c:	1023883a 	mov	r17,r2
  80c120:	08032000 	call	803200 <__mulsi3>
  80c124:	a809883a 	mov	r4,r21
  80c128:	b80b883a 	mov	r5,r23
  80c12c:	1027883a 	mov	r19,r2
  80c130:	08032000 	call	803200 <__mulsi3>
  80c134:	1009883a 	mov	r4,r2
  80c138:	a004d43a 	srli	r2,r20,16
  80c13c:	8ce3883a 	add	r17,r17,r19
  80c140:	1447883a 	add	r3,r2,r17
  80c144:	1cc0022e 	bgeu	r3,r19,80c150 <__udivdi3+0x4a0>
  80c148:	00800074 	movhi	r2,1
  80c14c:	2089883a 	add	r4,r4,r2
  80c150:	1804d43a 	srli	r2,r3,16
  80c154:	2085883a 	add	r2,r4,r2
  80c158:	80804436 	bltu	r16,r2,80c26c <__udivdi3+0x5bc>
  80c15c:	80803e26 	beq	r16,r2,80c258 <__udivdi3+0x5a8>
  80c160:	9005883a 	mov	r2,r18
  80c164:	0009883a 	mov	r4,zero
  80c168:	003f3a06 	br	80be54 <__udivdi3+0x1a4>
  80c16c:	9d26983a 	sll	r19,r19,r20
  80c170:	3505c83a 	sub	r2,r6,r20
  80c174:	a8a2d83a 	srl	r17,r21,r2
  80c178:	982ed43a 	srli	r23,r19,16
  80c17c:	e084d83a 	srl	r2,fp,r2
  80c180:	ad06983a 	sll	r3,r21,r20
  80c184:	8809883a 	mov	r4,r17
  80c188:	b80b883a 	mov	r5,r23
  80c18c:	1886b03a 	or	r3,r3,r2
  80c190:	d8c00015 	stw	r3,0(sp)
  80c194:	9dbfffcc 	andi	r22,r19,65535
  80c198:	080d2100 	call	80d210 <__udivsi3>
  80c19c:	100b883a 	mov	r5,r2
  80c1a0:	b009883a 	mov	r4,r22
  80c1a4:	d8800215 	stw	r2,8(sp)
  80c1a8:	08032000 	call	803200 <__mulsi3>
  80c1ac:	8809883a 	mov	r4,r17
  80c1b0:	b80b883a 	mov	r5,r23
  80c1b4:	102b883a 	mov	r21,r2
  80c1b8:	080d2180 	call	80d218 <__umodsi3>
  80c1bc:	d9000017 	ldw	r4,0(sp)
  80c1c0:	1004943a 	slli	r2,r2,16
  80c1c4:	2006d43a 	srli	r3,r4,16
  80c1c8:	10c4b03a 	or	r2,r2,r3
  80c1cc:	1540052e 	bgeu	r2,r21,80c1e4 <__udivdi3+0x534>
  80c1d0:	d9400217 	ldw	r5,8(sp)
  80c1d4:	14c5883a 	add	r2,r2,r19
  80c1d8:	297fffc4 	addi	r5,r5,-1
  80c1dc:	d9400215 	stw	r5,8(sp)
  80c1e0:	14c0462e 	bgeu	r2,r19,80c2fc <__udivdi3+0x64c>
  80c1e4:	1563c83a 	sub	r17,r2,r21
  80c1e8:	8809883a 	mov	r4,r17
  80c1ec:	b80b883a 	mov	r5,r23
  80c1f0:	080d2100 	call	80d210 <__udivsi3>
  80c1f4:	100b883a 	mov	r5,r2
  80c1f8:	b009883a 	mov	r4,r22
  80c1fc:	1025883a 	mov	r18,r2
  80c200:	08032000 	call	803200 <__mulsi3>
  80c204:	8809883a 	mov	r4,r17
  80c208:	b80b883a 	mov	r5,r23
  80c20c:	1021883a 	mov	r16,r2
  80c210:	080d2180 	call	80d218 <__umodsi3>
  80c214:	da800017 	ldw	r10,0(sp)
  80c218:	1004943a 	slli	r2,r2,16
  80c21c:	50ffffcc 	andi	r3,r10,65535
  80c220:	10c6b03a 	or	r3,r2,r3
  80c224:	1c00062e 	bgeu	r3,r16,80c240 <__udivdi3+0x590>
  80c228:	1cc7883a 	add	r3,r3,r19
  80c22c:	94bfffc4 	addi	r18,r18,-1
  80c230:	1cc00336 	bltu	r3,r19,80c240 <__udivdi3+0x590>
  80c234:	1c00022e 	bgeu	r3,r16,80c240 <__udivdi3+0x590>
  80c238:	94bfffc4 	addi	r18,r18,-1
  80c23c:	1cc7883a 	add	r3,r3,r19
  80c240:	d9000217 	ldw	r4,8(sp)
  80c244:	e538983a 	sll	fp,fp,r20
  80c248:	1c2bc83a 	sub	r21,r3,r16
  80c24c:	2004943a 	slli	r2,r4,16
  80c250:	90a8b03a 	or	r20,r18,r2
  80c254:	003ebf06 	br	80bd54 <__udivdi3+0xa4>
  80c258:	1804943a 	slli	r2,r3,16
  80c25c:	e588983a 	sll	r4,fp,r22
  80c260:	a0ffffcc 	andi	r3,r20,65535
  80c264:	10c5883a 	add	r2,r2,r3
  80c268:	20bfbd2e 	bgeu	r4,r2,80c160 <__udivdi3+0x4b0>
  80c26c:	90bfffc4 	addi	r2,r18,-1
  80c270:	0009883a 	mov	r4,zero
  80c274:	003ef706 	br	80be54 <__udivdi3+0x1a4>
  80c278:	01400204 	movi	r5,8
  80c27c:	2805883a 	mov	r2,r5
  80c280:	003ee706 	br	80be20 <__udivdi3+0x170>
  80c284:	01400604 	movi	r5,24
  80c288:	2805883a 	mov	r2,r5
  80c28c:	003ee406 	br	80be20 <__udivdi3+0x170>
  80c290:	01400204 	movi	r5,8
  80c294:	2805883a 	mov	r2,r5
  80c298:	003ea106 	br	80bd20 <__udivdi3+0x70>
  80c29c:	01400604 	movi	r5,24
  80c2a0:	2805883a 	mov	r2,r5
  80c2a4:	003e9e06 	br	80bd20 <__udivdi3+0x70>
  80c2a8:	01400204 	movi	r5,8
  80c2ac:	2805883a 	mov	r2,r5
  80c2b0:	003eff06 	br	80beb0 <__udivdi3+0x200>
  80c2b4:	01400604 	movi	r5,24
  80c2b8:	2805883a 	mov	r2,r5
  80c2bc:	003efc06 	br	80beb0 <__udivdi3+0x200>
  80c2c0:	1c3f862e 	bgeu	r3,r16,80c0dc <__udivdi3+0x42c>
  80c2c4:	1dc7883a 	add	r3,r3,r23
  80c2c8:	ad7fffc4 	addi	r21,r21,-1
  80c2cc:	003f8306 	br	80c0dc <__udivdi3+0x42c>
  80c2d0:	157f6e2e 	bgeu	r2,r21,80c08c <__udivdi3+0x3dc>
  80c2d4:	a53fffc4 	addi	r20,r20,-1
  80c2d8:	15c5883a 	add	r2,r2,r23
  80c2dc:	003f6b06 	br	80c08c <__udivdi3+0x3dc>
  80c2e0:	ad7fffc4 	addi	r21,r21,-1
  80c2e4:	003ec206 	br	80bdf0 <__udivdi3+0x140>
  80c2e8:	843fffc4 	addi	r16,r16,-1
  80c2ec:	14c5883a 	add	r2,r2,r19
  80c2f0:	003f1306 	br	80bf40 <__udivdi3+0x290>
  80c2f4:	ad7fffc4 	addi	r21,r21,-1
  80c2f8:	003f2506 	br	80bf90 <__udivdi3+0x2e0>
  80c2fc:	157fb92e 	bgeu	r2,r21,80c1e4 <__udivdi3+0x534>
  80c300:	297fffc4 	addi	r5,r5,-1
  80c304:	14c5883a 	add	r2,r2,r19
  80c308:	d9400215 	stw	r5,8(sp)
  80c30c:	003fb506 	br	80c1e4 <__udivdi3+0x534>
  80c310:	843fffc4 	addi	r16,r16,-1
  80c314:	14c5883a 	add	r2,r2,r19
  80c318:	003ea106 	br	80bda0 <__udivdi3+0xf0>

0080c31c <__umoddi3>:
  80c31c:	defff004 	addi	sp,sp,-64
  80c320:	3011883a 	mov	r8,r6
  80c324:	000d883a 	mov	r6,zero
  80c328:	dd400b15 	stw	r21,44(sp)
  80c32c:	dcc00915 	stw	r19,36(sp)
  80c330:	dc000615 	stw	r16,24(sp)
  80c334:	dfc00f15 	stw	ra,60(sp)
  80c338:	df000e15 	stw	fp,56(sp)
  80c33c:	ddc00d15 	stw	r23,52(sp)
  80c340:	dd800c15 	stw	r22,48(sp)
  80c344:	dd000a15 	stw	r20,40(sp)
  80c348:	dc800815 	stw	r18,32(sp)
  80c34c:	dc400715 	stw	r17,28(sp)
  80c350:	2817883a 	mov	r11,r5
  80c354:	d9800415 	stw	r6,16(sp)
  80c358:	4027883a 	mov	r19,r8
  80c35c:	d9800515 	stw	r6,20(sp)
  80c360:	2021883a 	mov	r16,r4
  80c364:	282b883a 	mov	r21,r5
  80c368:	38002c1e 	bne	r7,zero,80c41c <__umoddi3+0x100>
  80c36c:	2a005636 	bltu	r5,r8,80c4c8 <__umoddi3+0x1ac>
  80c370:	40009a26 	beq	r8,zero,80c5dc <__umoddi3+0x2c0>
  80c374:	00bfffd4 	movui	r2,65535
  80c378:	14c09236 	bltu	r2,r19,80c5c4 <__umoddi3+0x2a8>
  80c37c:	00803fc4 	movi	r2,255
  80c380:	14c15c36 	bltu	r2,r19,80c8f4 <__umoddi3+0x5d8>
  80c384:	000b883a 	mov	r5,zero
  80c388:	0005883a 	mov	r2,zero
  80c38c:	9884d83a 	srl	r2,r19,r2
  80c390:	01002074 	movhi	r4,129
  80c394:	2100f104 	addi	r4,r4,964
  80c398:	01800804 	movi	r6,32
  80c39c:	1105883a 	add	r2,r2,r4
  80c3a0:	10c00003 	ldbu	r3,0(r2)
  80c3a4:	28c7883a 	add	r3,r5,r3
  80c3a8:	30e5c83a 	sub	r18,r6,r3
  80c3ac:	9000a41e 	bne	r18,zero,80c640 <__umoddi3+0x324>
  80c3b0:	982ed43a 	srli	r23,r19,16
  80c3b4:	acebc83a 	sub	r21,r21,r19
  80c3b8:	9d3fffcc 	andi	r20,r19,65535
  80c3bc:	002d883a 	mov	r22,zero
  80c3c0:	a809883a 	mov	r4,r21
  80c3c4:	b80b883a 	mov	r5,r23
  80c3c8:	080d2100 	call	80d210 <__udivsi3>
  80c3cc:	100b883a 	mov	r5,r2
  80c3d0:	a009883a 	mov	r4,r20
  80c3d4:	08032000 	call	803200 <__mulsi3>
  80c3d8:	a809883a 	mov	r4,r21
  80c3dc:	b80b883a 	mov	r5,r23
  80c3e0:	1023883a 	mov	r17,r2
  80c3e4:	080d2180 	call	80d218 <__umodsi3>
  80c3e8:	1004943a 	slli	r2,r2,16
  80c3ec:	8006d43a 	srli	r3,r16,16
  80c3f0:	10c4b03a 	or	r2,r2,r3
  80c3f4:	1440032e 	bgeu	r2,r17,80c404 <__umoddi3+0xe8>
  80c3f8:	14c5883a 	add	r2,r2,r19
  80c3fc:	14c00136 	bltu	r2,r19,80c404 <__umoddi3+0xe8>
  80c400:	14415836 	bltu	r2,r17,80c964 <__umoddi3+0x648>
  80c404:	1463c83a 	sub	r17,r2,r17
  80c408:	8809883a 	mov	r4,r17
  80c40c:	b80b883a 	mov	r5,r23
  80c410:	080d2100 	call	80d210 <__udivsi3>
  80c414:	a009883a 	mov	r4,r20
  80c418:	00005306 	br	80c568 <__umoddi3+0x24c>
  80c41c:	380d883a 	mov	r6,r7
  80c420:	29c0132e 	bgeu	r5,r7,80c470 <__umoddi3+0x154>
  80c424:	d9000415 	stw	r4,16(sp)
  80c428:	d9400515 	stw	r5,20(sp)
  80c42c:	d9400417 	ldw	r5,16(sp)
  80c430:	5813883a 	mov	r9,r11
  80c434:	2811883a 	mov	r8,r5
  80c438:	4005883a 	mov	r2,r8
  80c43c:	4807883a 	mov	r3,r9
  80c440:	dfc00f17 	ldw	ra,60(sp)
  80c444:	df000e17 	ldw	fp,56(sp)
  80c448:	ddc00d17 	ldw	r23,52(sp)
  80c44c:	dd800c17 	ldw	r22,48(sp)
  80c450:	dd400b17 	ldw	r21,44(sp)
  80c454:	dd000a17 	ldw	r20,40(sp)
  80c458:	dcc00917 	ldw	r19,36(sp)
  80c45c:	dc800817 	ldw	r18,32(sp)
  80c460:	dc400717 	ldw	r17,28(sp)
  80c464:	dc000617 	ldw	r16,24(sp)
  80c468:	dec01004 	addi	sp,sp,64
  80c46c:	f800283a 	ret
  80c470:	00bfffd4 	movui	r2,65535
  80c474:	11c06636 	bltu	r2,r7,80c610 <__umoddi3+0x2f4>
  80c478:	00803fc4 	movi	r2,255
  80c47c:	11c12036 	bltu	r2,r7,80c900 <__umoddi3+0x5e4>
  80c480:	000b883a 	mov	r5,zero
  80c484:	0005883a 	mov	r2,zero
  80c488:	3084d83a 	srl	r2,r6,r2
  80c48c:	01002074 	movhi	r4,129
  80c490:	2100f104 	addi	r4,r4,964
  80c494:	01c00804 	movi	r7,32
  80c498:	1105883a 	add	r2,r2,r4
  80c49c:	10c00003 	ldbu	r3,0(r2)
  80c4a0:	28c7883a 	add	r3,r5,r3
  80c4a4:	38e5c83a 	sub	r18,r7,r3
  80c4a8:	9000941e 	bne	r18,zero,80c6fc <__umoddi3+0x3e0>
  80c4ac:	35405e36 	bltu	r6,r21,80c628 <__umoddi3+0x30c>
  80c4b0:	84c05d2e 	bgeu	r16,r19,80c628 <__umoddi3+0x30c>
  80c4b4:	8011883a 	mov	r8,r16
  80c4b8:	a813883a 	mov	r9,r21
  80c4bc:	dc000415 	stw	r16,16(sp)
  80c4c0:	dd400515 	stw	r21,20(sp)
  80c4c4:	003fdc06 	br	80c438 <__umoddi3+0x11c>
  80c4c8:	00bfffd4 	movui	r2,65535
  80c4cc:	12004a36 	bltu	r2,r8,80c5f8 <__umoddi3+0x2dc>
  80c4d0:	00803fc4 	movi	r2,255
  80c4d4:	12010d36 	bltu	r2,r8,80c90c <__umoddi3+0x5f0>
  80c4d8:	000b883a 	mov	r5,zero
  80c4dc:	0005883a 	mov	r2,zero
  80c4e0:	9884d83a 	srl	r2,r19,r2
  80c4e4:	01002074 	movhi	r4,129
  80c4e8:	2100f104 	addi	r4,r4,964
  80c4ec:	01800804 	movi	r6,32
  80c4f0:	1105883a 	add	r2,r2,r4
  80c4f4:	10c00003 	ldbu	r3,0(r2)
  80c4f8:	28c7883a 	add	r3,r5,r3
  80c4fc:	30c7c83a 	sub	r3,r6,r3
  80c500:	1800dc1e 	bne	r3,zero,80c874 <__umoddi3+0x558>
  80c504:	002d883a 	mov	r22,zero
  80c508:	982ed43a 	srli	r23,r19,16
  80c50c:	a809883a 	mov	r4,r21
  80c510:	9cbfffcc 	andi	r18,r19,65535
  80c514:	b80b883a 	mov	r5,r23
  80c518:	080d2100 	call	80d210 <__udivsi3>
  80c51c:	100b883a 	mov	r5,r2
  80c520:	9009883a 	mov	r4,r18
  80c524:	08032000 	call	803200 <__mulsi3>
  80c528:	a809883a 	mov	r4,r21
  80c52c:	b80b883a 	mov	r5,r23
  80c530:	1023883a 	mov	r17,r2
  80c534:	080d2180 	call	80d218 <__umodsi3>
  80c538:	1004943a 	slli	r2,r2,16
  80c53c:	8006d43a 	srli	r3,r16,16
  80c540:	10c4b03a 	or	r2,r2,r3
  80c544:	1440032e 	bgeu	r2,r17,80c554 <__umoddi3+0x238>
  80c548:	14c5883a 	add	r2,r2,r19
  80c54c:	14c00136 	bltu	r2,r19,80c554 <__umoddi3+0x238>
  80c550:	14410236 	bltu	r2,r17,80c95c <__umoddi3+0x640>
  80c554:	1463c83a 	sub	r17,r2,r17
  80c558:	8809883a 	mov	r4,r17
  80c55c:	b80b883a 	mov	r5,r23
  80c560:	080d2100 	call	80d210 <__udivsi3>
  80c564:	9009883a 	mov	r4,r18
  80c568:	100b883a 	mov	r5,r2
  80c56c:	08032000 	call	803200 <__mulsi3>
  80c570:	8809883a 	mov	r4,r17
  80c574:	b80b883a 	mov	r5,r23
  80c578:	102b883a 	mov	r21,r2
  80c57c:	080d2180 	call	80d218 <__umodsi3>
  80c580:	1004943a 	slli	r2,r2,16
  80c584:	80ffffcc 	andi	r3,r16,65535
  80c588:	10c4b03a 	or	r2,r2,r3
  80c58c:	1540042e 	bgeu	r2,r21,80c5a0 <__umoddi3+0x284>
  80c590:	14c5883a 	add	r2,r2,r19
  80c594:	14c00236 	bltu	r2,r19,80c5a0 <__umoddi3+0x284>
  80c598:	1540012e 	bgeu	r2,r21,80c5a0 <__umoddi3+0x284>
  80c59c:	14c5883a 	add	r2,r2,r19
  80c5a0:	1545c83a 	sub	r2,r2,r21
  80c5a4:	1584d83a 	srl	r2,r2,r22
  80c5a8:	0013883a 	mov	r9,zero
  80c5ac:	d8800415 	stw	r2,16(sp)
  80c5b0:	d8c00417 	ldw	r3,16(sp)
  80c5b4:	0005883a 	mov	r2,zero
  80c5b8:	d8800515 	stw	r2,20(sp)
  80c5bc:	1811883a 	mov	r8,r3
  80c5c0:	003f9d06 	br	80c438 <__umoddi3+0x11c>
  80c5c4:	00804034 	movhi	r2,256
  80c5c8:	10bfffc4 	addi	r2,r2,-1
  80c5cc:	14c0c636 	bltu	r2,r19,80c8e8 <__umoddi3+0x5cc>
  80c5d0:	01400404 	movi	r5,16
  80c5d4:	2805883a 	mov	r2,r5
  80c5d8:	003f6c06 	br	80c38c <__umoddi3+0x70>
  80c5dc:	01000044 	movi	r4,1
  80c5e0:	000b883a 	mov	r5,zero
  80c5e4:	080d2100 	call	80d210 <__udivsi3>
  80c5e8:	1027883a 	mov	r19,r2
  80c5ec:	00bfffd4 	movui	r2,65535
  80c5f0:	14fff436 	bltu	r2,r19,80c5c4 <__umoddi3+0x2a8>
  80c5f4:	003f6106 	br	80c37c <__umoddi3+0x60>
  80c5f8:	00804034 	movhi	r2,256
  80c5fc:	10bfffc4 	addi	r2,r2,-1
  80c600:	1200c536 	bltu	r2,r8,80c918 <__umoddi3+0x5fc>
  80c604:	01400404 	movi	r5,16
  80c608:	2805883a 	mov	r2,r5
  80c60c:	003fb406 	br	80c4e0 <__umoddi3+0x1c4>
  80c610:	00804034 	movhi	r2,256
  80c614:	10bfffc4 	addi	r2,r2,-1
  80c618:	11c0c236 	bltu	r2,r7,80c924 <__umoddi3+0x608>
  80c61c:	01400404 	movi	r5,16
  80c620:	2805883a 	mov	r2,r5
  80c624:	003f9806 	br	80c488 <__umoddi3+0x16c>
  80c628:	84c9c83a 	sub	r4,r16,r19
  80c62c:	8105803a 	cmpltu	r2,r16,r4
  80c630:	a987c83a 	sub	r3,r21,r6
  80c634:	18abc83a 	sub	r21,r3,r2
  80c638:	2021883a 	mov	r16,r4
  80c63c:	003f9d06 	br	80c4b4 <__umoddi3+0x198>
  80c640:	9ca6983a 	sll	r19,r19,r18
  80c644:	3485c83a 	sub	r2,r6,r18
  80c648:	a8a2d83a 	srl	r17,r21,r2
  80c64c:	982ed43a 	srli	r23,r19,16
  80c650:	ac86983a 	sll	r3,r21,r18
  80c654:	8084d83a 	srl	r2,r16,r2
  80c658:	8809883a 	mov	r4,r17
  80c65c:	b80b883a 	mov	r5,r23
  80c660:	18b8b03a 	or	fp,r3,r2
  80c664:	9d3fffcc 	andi	r20,r19,65535
  80c668:	080d2100 	call	80d210 <__udivsi3>
  80c66c:	100b883a 	mov	r5,r2
  80c670:	a009883a 	mov	r4,r20
  80c674:	08032000 	call	803200 <__mulsi3>
  80c678:	8809883a 	mov	r4,r17
  80c67c:	b80b883a 	mov	r5,r23
  80c680:	102b883a 	mov	r21,r2
  80c684:	080d2180 	call	80d218 <__umodsi3>
  80c688:	1004943a 	slli	r2,r2,16
  80c68c:	e006d43a 	srli	r3,fp,16
  80c690:	902d883a 	mov	r22,r18
  80c694:	10c4b03a 	or	r2,r2,r3
  80c698:	1540022e 	bgeu	r2,r21,80c6a4 <__umoddi3+0x388>
  80c69c:	14c5883a 	add	r2,r2,r19
  80c6a0:	14c0ab2e 	bgeu	r2,r19,80c950 <__umoddi3+0x634>
  80c6a4:	1563c83a 	sub	r17,r2,r21
  80c6a8:	8809883a 	mov	r4,r17
  80c6ac:	b80b883a 	mov	r5,r23
  80c6b0:	080d2100 	call	80d210 <__udivsi3>
  80c6b4:	100b883a 	mov	r5,r2
  80c6b8:	a009883a 	mov	r4,r20
  80c6bc:	08032000 	call	803200 <__mulsi3>
  80c6c0:	8809883a 	mov	r4,r17
  80c6c4:	b80b883a 	mov	r5,r23
  80c6c8:	102b883a 	mov	r21,r2
  80c6cc:	080d2180 	call	80d218 <__umodsi3>
  80c6d0:	1004943a 	slli	r2,r2,16
  80c6d4:	e0ffffcc 	andi	r3,fp,65535
  80c6d8:	10c4b03a 	or	r2,r2,r3
  80c6dc:	1540042e 	bgeu	r2,r21,80c6f0 <__umoddi3+0x3d4>
  80c6e0:	14c5883a 	add	r2,r2,r19
  80c6e4:	14c00236 	bltu	r2,r19,80c6f0 <__umoddi3+0x3d4>
  80c6e8:	1540012e 	bgeu	r2,r21,80c6f0 <__umoddi3+0x3d4>
  80c6ec:	14c5883a 	add	r2,r2,r19
  80c6f0:	84a0983a 	sll	r16,r16,r18
  80c6f4:	156bc83a 	sub	r21,r2,r21
  80c6f8:	003f3106 	br	80c3c0 <__umoddi3+0xa4>
  80c6fc:	3c8fc83a 	sub	r7,r7,r18
  80c700:	3486983a 	sll	r3,r6,r18
  80c704:	99c4d83a 	srl	r2,r19,r7
  80c708:	a9e2d83a 	srl	r17,r21,r7
  80c70c:	ac8c983a 	sll	r6,r21,r18
  80c710:	18acb03a 	or	r22,r3,r2
  80c714:	b02ed43a 	srli	r23,r22,16
  80c718:	81c4d83a 	srl	r2,r16,r7
  80c71c:	8809883a 	mov	r4,r17
  80c720:	b80b883a 	mov	r5,r23
  80c724:	308cb03a 	or	r6,r6,r2
  80c728:	d9c00315 	stw	r7,12(sp)
  80c72c:	d9800215 	stw	r6,8(sp)
  80c730:	b53fffcc 	andi	r20,r22,65535
  80c734:	080d2100 	call	80d210 <__udivsi3>
  80c738:	100b883a 	mov	r5,r2
  80c73c:	a009883a 	mov	r4,r20
  80c740:	1039883a 	mov	fp,r2
  80c744:	08032000 	call	803200 <__mulsi3>
  80c748:	8809883a 	mov	r4,r17
  80c74c:	b80b883a 	mov	r5,r23
  80c750:	102b883a 	mov	r21,r2
  80c754:	080d2180 	call	80d218 <__umodsi3>
  80c758:	d9000217 	ldw	r4,8(sp)
  80c75c:	1004943a 	slli	r2,r2,16
  80c760:	9ca6983a 	sll	r19,r19,r18
  80c764:	2006d43a 	srli	r3,r4,16
  80c768:	84a0983a 	sll	r16,r16,r18
  80c76c:	dcc00015 	stw	r19,0(sp)
  80c770:	10c4b03a 	or	r2,r2,r3
  80c774:	dc000115 	stw	r16,4(sp)
  80c778:	1540032e 	bgeu	r2,r21,80c788 <__umoddi3+0x46c>
  80c77c:	1585883a 	add	r2,r2,r22
  80c780:	e73fffc4 	addi	fp,fp,-1
  80c784:	15806e2e 	bgeu	r2,r22,80c940 <__umoddi3+0x624>
  80c788:	1563c83a 	sub	r17,r2,r21
  80c78c:	8809883a 	mov	r4,r17
  80c790:	b80b883a 	mov	r5,r23
  80c794:	080d2100 	call	80d210 <__udivsi3>
  80c798:	100b883a 	mov	r5,r2
  80c79c:	a009883a 	mov	r4,r20
  80c7a0:	1021883a 	mov	r16,r2
  80c7a4:	08032000 	call	803200 <__mulsi3>
  80c7a8:	b80b883a 	mov	r5,r23
  80c7ac:	8809883a 	mov	r4,r17
  80c7b0:	1029883a 	mov	r20,r2
  80c7b4:	080d2180 	call	80d218 <__umodsi3>
  80c7b8:	d9400217 	ldw	r5,8(sp)
  80c7bc:	1004943a 	slli	r2,r2,16
  80c7c0:	28ffffcc 	andi	r3,r5,65535
  80c7c4:	10c4b03a 	or	r2,r2,r3
  80c7c8:	1500032e 	bgeu	r2,r20,80c7d8 <__umoddi3+0x4bc>
  80c7cc:	1585883a 	add	r2,r2,r22
  80c7d0:	843fffc4 	addi	r16,r16,-1
  80c7d4:	1580562e 	bgeu	r2,r22,80c930 <__umoddi3+0x614>
  80c7d8:	d9800017 	ldw	r6,0(sp)
  80c7dc:	e022943a 	slli	r17,fp,16
  80c7e0:	302ed43a 	srli	r23,r6,16
  80c7e4:	8462b03a 	or	r17,r16,r17
  80c7e8:	34ffffcc 	andi	r19,r6,65535
  80c7ec:	882ad43a 	srli	r21,r17,16
  80c7f0:	8c7fffcc 	andi	r17,r17,65535
  80c7f4:	8809883a 	mov	r4,r17
  80c7f8:	980b883a 	mov	r5,r19
  80c7fc:	1521c83a 	sub	r16,r2,r20
  80c800:	08032000 	call	803200 <__mulsi3>
  80c804:	8809883a 	mov	r4,r17
  80c808:	b80b883a 	mov	r5,r23
  80c80c:	1029883a 	mov	r20,r2
  80c810:	08032000 	call	803200 <__mulsi3>
  80c814:	980b883a 	mov	r5,r19
  80c818:	a809883a 	mov	r4,r21
  80c81c:	1023883a 	mov	r17,r2
  80c820:	08032000 	call	803200 <__mulsi3>
  80c824:	a809883a 	mov	r4,r21
  80c828:	b80b883a 	mov	r5,r23
  80c82c:	1027883a 	mov	r19,r2
  80c830:	08032000 	call	803200 <__mulsi3>
  80c834:	100b883a 	mov	r5,r2
  80c838:	a004d43a 	srli	r2,r20,16
  80c83c:	8ce3883a 	add	r17,r17,r19
  80c840:	1449883a 	add	r4,r2,r17
  80c844:	24c0022e 	bgeu	r4,r19,80c850 <__umoddi3+0x534>
  80c848:	00800074 	movhi	r2,1
  80c84c:	288b883a 	add	r5,r5,r2
  80c850:	2004d43a 	srli	r2,r4,16
  80c854:	2008943a 	slli	r4,r4,16
  80c858:	a0ffffcc 	andi	r3,r20,65535
  80c85c:	288d883a 	add	r6,r5,r2
  80c860:	20c9883a 	add	r4,r4,r3
  80c864:	81800b36 	bltu	r16,r6,80c894 <__umoddi3+0x578>
  80c868:	81804026 	beq	r16,r6,80c96c <__umoddi3+0x650>
  80c86c:	818dc83a 	sub	r6,r16,r6
  80c870:	00000f06 	br	80c8b0 <__umoddi3+0x594>
  80c874:	30c5c83a 	sub	r2,r6,r3
  80c878:	182d883a 	mov	r22,r3
  80c87c:	8084d83a 	srl	r2,r16,r2
  80c880:	a8c6983a 	sll	r3,r21,r3
  80c884:	9da6983a 	sll	r19,r19,r22
  80c888:	85a0983a 	sll	r16,r16,r22
  80c88c:	18aab03a 	or	r21,r3,r2
  80c890:	003f1d06 	br	80c508 <__umoddi3+0x1ec>
  80c894:	d8c00017 	ldw	r3,0(sp)
  80c898:	20c5c83a 	sub	r2,r4,r3
  80c89c:	2089803a 	cmpltu	r4,r4,r2
  80c8a0:	3587c83a 	sub	r3,r6,r22
  80c8a4:	1907c83a 	sub	r3,r3,r4
  80c8a8:	80cdc83a 	sub	r6,r16,r3
  80c8ac:	1009883a 	mov	r4,r2
  80c8b0:	d9400117 	ldw	r5,4(sp)
  80c8b4:	2905c83a 	sub	r2,r5,r4
  80c8b8:	2887803a 	cmpltu	r3,r5,r2
  80c8bc:	30c7c83a 	sub	r3,r6,r3
  80c8c0:	d9800317 	ldw	r6,12(sp)
  80c8c4:	1484d83a 	srl	r2,r2,r18
  80c8c8:	1988983a 	sll	r4,r3,r6
  80c8cc:	1c86d83a 	srl	r3,r3,r18
  80c8d0:	2088b03a 	or	r4,r4,r2
  80c8d4:	2011883a 	mov	r8,r4
  80c8d8:	1813883a 	mov	r9,r3
  80c8dc:	d9000415 	stw	r4,16(sp)
  80c8e0:	d8c00515 	stw	r3,20(sp)
  80c8e4:	003ed406 	br	80c438 <__umoddi3+0x11c>
  80c8e8:	01400604 	movi	r5,24
  80c8ec:	2805883a 	mov	r2,r5
  80c8f0:	003ea606 	br	80c38c <__umoddi3+0x70>
  80c8f4:	01400204 	movi	r5,8
  80c8f8:	2805883a 	mov	r2,r5
  80c8fc:	003ea306 	br	80c38c <__umoddi3+0x70>
  80c900:	01400204 	movi	r5,8
  80c904:	2805883a 	mov	r2,r5
  80c908:	003edf06 	br	80c488 <__umoddi3+0x16c>
  80c90c:	01400204 	movi	r5,8
  80c910:	2805883a 	mov	r2,r5
  80c914:	003ef206 	br	80c4e0 <__umoddi3+0x1c4>
  80c918:	01400604 	movi	r5,24
  80c91c:	2805883a 	mov	r2,r5
  80c920:	003eef06 	br	80c4e0 <__umoddi3+0x1c4>
  80c924:	01400604 	movi	r5,24
  80c928:	2805883a 	mov	r2,r5
  80c92c:	003ed606 	br	80c488 <__umoddi3+0x16c>
  80c930:	153fa92e 	bgeu	r2,r20,80c7d8 <__umoddi3+0x4bc>
  80c934:	843fffc4 	addi	r16,r16,-1
  80c938:	1585883a 	add	r2,r2,r22
  80c93c:	003fa606 	br	80c7d8 <__umoddi3+0x4bc>
  80c940:	157f912e 	bgeu	r2,r21,80c788 <__umoddi3+0x46c>
  80c944:	e73fffc4 	addi	fp,fp,-1
  80c948:	1585883a 	add	r2,r2,r22
  80c94c:	003f8e06 	br	80c788 <__umoddi3+0x46c>
  80c950:	157f542e 	bgeu	r2,r21,80c6a4 <__umoddi3+0x388>
  80c954:	14c5883a 	add	r2,r2,r19
  80c958:	003f5206 	br	80c6a4 <__umoddi3+0x388>
  80c95c:	14c5883a 	add	r2,r2,r19
  80c960:	003efc06 	br	80c554 <__umoddi3+0x238>
  80c964:	14c5883a 	add	r2,r2,r19
  80c968:	003ea606 	br	80c404 <__umoddi3+0xe8>
  80c96c:	d8800117 	ldw	r2,4(sp)
  80c970:	113fc836 	bltu	r2,r4,80c894 <__umoddi3+0x578>
  80c974:	000d883a 	mov	r6,zero
  80c978:	003fcd06 	br	80c8b0 <__umoddi3+0x594>

0080c97c <__divdf3>:
  80c97c:	deffed04 	addi	sp,sp,-76
  80c980:	dcc01115 	stw	r19,68(sp)
  80c984:	dcc00404 	addi	r19,sp,16
  80c988:	2011883a 	mov	r8,r4
  80c98c:	2813883a 	mov	r9,r5
  80c990:	dc000e15 	stw	r16,56(sp)
  80c994:	d809883a 	mov	r4,sp
  80c998:	980b883a 	mov	r5,r19
  80c99c:	dc000904 	addi	r16,sp,36
  80c9a0:	dfc01215 	stw	ra,72(sp)
  80c9a4:	da400115 	stw	r9,4(sp)
  80c9a8:	d9c00315 	stw	r7,12(sp)
  80c9ac:	da000015 	stw	r8,0(sp)
  80c9b0:	d9800215 	stw	r6,8(sp)
  80c9b4:	dc801015 	stw	r18,64(sp)
  80c9b8:	dc400f15 	stw	r17,60(sp)
  80c9bc:	08039ec0 	call	8039ec <__unpack_d>
  80c9c0:	d9000204 	addi	r4,sp,8
  80c9c4:	800b883a 	mov	r5,r16
  80c9c8:	08039ec0 	call	8039ec <__unpack_d>
  80c9cc:	d9000417 	ldw	r4,16(sp)
  80c9d0:	00800044 	movi	r2,1
  80c9d4:	11000b2e 	bgeu	r2,r4,80ca04 <__divdf3+0x88>
  80c9d8:	d9400917 	ldw	r5,36(sp)
  80c9dc:	1140762e 	bgeu	r2,r5,80cbb8 <__divdf3+0x23c>
  80c9e0:	d8800517 	ldw	r2,20(sp)
  80c9e4:	d8c00a17 	ldw	r3,40(sp)
  80c9e8:	01800104 	movi	r6,4
  80c9ec:	10c4f03a 	xor	r2,r2,r3
  80c9f0:	d8800515 	stw	r2,20(sp)
  80c9f4:	21800226 	beq	r4,r6,80ca00 <__divdf3+0x84>
  80c9f8:	00800084 	movi	r2,2
  80c9fc:	2080141e 	bne	r4,r2,80ca50 <__divdf3+0xd4>
  80ca00:	29000926 	beq	r5,r4,80ca28 <__divdf3+0xac>
  80ca04:	9809883a 	mov	r4,r19
  80ca08:	08036d80 	call	8036d8 <__pack_d>
  80ca0c:	dfc01217 	ldw	ra,72(sp)
  80ca10:	dcc01117 	ldw	r19,68(sp)
  80ca14:	dc801017 	ldw	r18,64(sp)
  80ca18:	dc400f17 	ldw	r17,60(sp)
  80ca1c:	dc000e17 	ldw	r16,56(sp)
  80ca20:	dec01304 	addi	sp,sp,76
  80ca24:	f800283a 	ret
  80ca28:	01002074 	movhi	r4,129
  80ca2c:	2100ec04 	addi	r4,r4,944
  80ca30:	08036d80 	call	8036d8 <__pack_d>
  80ca34:	dfc01217 	ldw	ra,72(sp)
  80ca38:	dcc01117 	ldw	r19,68(sp)
  80ca3c:	dc801017 	ldw	r18,64(sp)
  80ca40:	dc400f17 	ldw	r17,60(sp)
  80ca44:	dc000e17 	ldw	r16,56(sp)
  80ca48:	dec01304 	addi	sp,sp,76
  80ca4c:	f800283a 	ret
  80ca50:	29805b26 	beq	r5,r6,80cbc0 <__divdf3+0x244>
  80ca54:	28802d26 	beq	r5,r2,80cb0c <__divdf3+0x190>
  80ca58:	d8c00617 	ldw	r3,24(sp)
  80ca5c:	d8800b17 	ldw	r2,44(sp)
  80ca60:	d9c00817 	ldw	r7,32(sp)
  80ca64:	dc400d17 	ldw	r17,52(sp)
  80ca68:	188bc83a 	sub	r5,r3,r2
  80ca6c:	d9800717 	ldw	r6,28(sp)
  80ca70:	dc000c17 	ldw	r16,48(sp)
  80ca74:	d9400615 	stw	r5,24(sp)
  80ca78:	3c403836 	bltu	r7,r17,80cb5c <__divdf3+0x1e0>
  80ca7c:	89c03626 	beq	r17,r7,80cb58 <__divdf3+0x1dc>
  80ca80:	0015883a 	mov	r10,zero
  80ca84:	001d883a 	mov	r14,zero
  80ca88:	02c40034 	movhi	r11,4096
  80ca8c:	001f883a 	mov	r15,zero
  80ca90:	003f883a 	mov	ra,zero
  80ca94:	04800f44 	movi	r18,61
  80ca98:	00000f06 	br	80cad8 <__divdf3+0x15c>
  80ca9c:	601d883a 	mov	r14,r12
  80caa0:	681f883a 	mov	r15,r13
  80caa4:	400d883a 	mov	r6,r8
  80caa8:	100f883a 	mov	r7,r2
  80caac:	3191883a 	add	r8,r6,r6
  80cab0:	5808d07a 	srli	r4,r11,1
  80cab4:	4185803a 	cmpltu	r2,r8,r6
  80cab8:	39d3883a 	add	r9,r7,r7
  80cabc:	28c6b03a 	or	r3,r5,r3
  80cac0:	1245883a 	add	r2,r2,r9
  80cac4:	1815883a 	mov	r10,r3
  80cac8:	2017883a 	mov	r11,r4
  80cacc:	400d883a 	mov	r6,r8
  80cad0:	100f883a 	mov	r7,r2
  80cad4:	fc801726 	beq	ra,r18,80cb34 <__divdf3+0x1b8>
  80cad8:	580a97fa 	slli	r5,r11,31
  80cadc:	5006d07a 	srli	r3,r10,1
  80cae0:	ffc00044 	addi	ra,ra,1
  80cae4:	3c7ff136 	bltu	r7,r17,80caac <__divdf3+0x130>
  80cae8:	3411c83a 	sub	r8,r6,r16
  80caec:	3205803a 	cmpltu	r2,r6,r8
  80caf0:	3c53c83a 	sub	r9,r7,r17
  80caf4:	7298b03a 	or	r12,r14,r10
  80caf8:	7adab03a 	or	r13,r15,r11
  80cafc:	4885c83a 	sub	r2,r9,r2
  80cb00:	89ffe61e 	bne	r17,r7,80ca9c <__divdf3+0x120>
  80cb04:	343fe936 	bltu	r6,r16,80caac <__divdf3+0x130>
  80cb08:	003fe406 	br	80ca9c <__divdf3+0x120>
  80cb0c:	9809883a 	mov	r4,r19
  80cb10:	d9800415 	stw	r6,16(sp)
  80cb14:	08036d80 	call	8036d8 <__pack_d>
  80cb18:	dfc01217 	ldw	ra,72(sp)
  80cb1c:	dcc01117 	ldw	r19,68(sp)
  80cb20:	dc801017 	ldw	r18,64(sp)
  80cb24:	dc400f17 	ldw	r17,60(sp)
  80cb28:	dc000e17 	ldw	r16,56(sp)
  80cb2c:	dec01304 	addi	sp,sp,76
  80cb30:	f800283a 	ret
  80cb34:	00803fc4 	movi	r2,255
  80cb38:	7090703a 	and	r8,r14,r2
  80cb3c:	00802004 	movi	r2,128
  80cb40:	0007883a 	mov	r3,zero
  80cb44:	0013883a 	mov	r9,zero
  80cb48:	40800d26 	beq	r8,r2,80cb80 <__divdf3+0x204>
  80cb4c:	dbc00815 	stw	r15,32(sp)
  80cb50:	db800715 	stw	r14,28(sp)
  80cb54:	003fab06 	br	80ca04 <__divdf3+0x88>
  80cb58:	343fc92e 	bgeu	r6,r16,80ca80 <__divdf3+0x104>
  80cb5c:	3185883a 	add	r2,r6,r6
  80cb60:	1189803a 	cmpltu	r4,r2,r6
  80cb64:	39c7883a 	add	r3,r7,r7
  80cb68:	20c9883a 	add	r4,r4,r3
  80cb6c:	297fffc4 	addi	r5,r5,-1
  80cb70:	100d883a 	mov	r6,r2
  80cb74:	200f883a 	mov	r7,r4
  80cb78:	d9400615 	stw	r5,24(sp)
  80cb7c:	003fc006 	br	80ca80 <__divdf3+0x104>
  80cb80:	483ff21e 	bne	r9,zero,80cb4c <__divdf3+0x1d0>
  80cb84:	01004004 	movi	r4,256
  80cb88:	7104703a 	and	r2,r14,r4
  80cb8c:	10c4b03a 	or	r2,r2,r3
  80cb90:	103fee1e 	bne	r2,zero,80cb4c <__divdf3+0x1d0>
  80cb94:	31c4b03a 	or	r2,r6,r7
  80cb98:	103fec26 	beq	r2,zero,80cb4c <__divdf3+0x1d0>
  80cb9c:	7205883a 	add	r2,r14,r8
  80cba0:	1391803a 	cmpltu	r8,r2,r14
  80cba4:	43d1883a 	add	r8,r8,r15
  80cba8:	013fc004 	movi	r4,-256
  80cbac:	111c703a 	and	r14,r2,r4
  80cbb0:	401f883a 	mov	r15,r8
  80cbb4:	003fe506 	br	80cb4c <__divdf3+0x1d0>
  80cbb8:	8009883a 	mov	r4,r16
  80cbbc:	003f9206 	br	80ca08 <__divdf3+0x8c>
  80cbc0:	9809883a 	mov	r4,r19
  80cbc4:	d8000715 	stw	zero,28(sp)
  80cbc8:	d8000815 	stw	zero,32(sp)
  80cbcc:	d8000615 	stw	zero,24(sp)
  80cbd0:	003f8d06 	br	80ca08 <__divdf3+0x8c>

0080cbd4 <__eqdf2>:
  80cbd4:	deffef04 	addi	sp,sp,-68
  80cbd8:	dc400f15 	stw	r17,60(sp)
  80cbdc:	dc400404 	addi	r17,sp,16
  80cbe0:	2005883a 	mov	r2,r4
  80cbe4:	2807883a 	mov	r3,r5
  80cbe8:	dc000e15 	stw	r16,56(sp)
  80cbec:	d809883a 	mov	r4,sp
  80cbf0:	880b883a 	mov	r5,r17
  80cbf4:	dc000904 	addi	r16,sp,36
  80cbf8:	d8c00115 	stw	r3,4(sp)
  80cbfc:	d8800015 	stw	r2,0(sp)
  80cc00:	d9800215 	stw	r6,8(sp)
  80cc04:	dfc01015 	stw	ra,64(sp)
  80cc08:	d9c00315 	stw	r7,12(sp)
  80cc0c:	08039ec0 	call	8039ec <__unpack_d>
  80cc10:	d9000204 	addi	r4,sp,8
  80cc14:	800b883a 	mov	r5,r16
  80cc18:	08039ec0 	call	8039ec <__unpack_d>
  80cc1c:	d8800417 	ldw	r2,16(sp)
  80cc20:	00c00044 	movi	r3,1
  80cc24:	180d883a 	mov	r6,r3
  80cc28:	1880062e 	bgeu	r3,r2,80cc44 <__eqdf2+0x70>
  80cc2c:	d8800917 	ldw	r2,36(sp)
  80cc30:	8809883a 	mov	r4,r17
  80cc34:	800b883a 	mov	r5,r16
  80cc38:	1880022e 	bgeu	r3,r2,80cc44 <__eqdf2+0x70>
  80cc3c:	080d2200 	call	80d220 <__fpcmp_parts_d>
  80cc40:	100d883a 	mov	r6,r2
  80cc44:	3005883a 	mov	r2,r6
  80cc48:	dfc01017 	ldw	ra,64(sp)
  80cc4c:	dc400f17 	ldw	r17,60(sp)
  80cc50:	dc000e17 	ldw	r16,56(sp)
  80cc54:	dec01104 	addi	sp,sp,68
  80cc58:	f800283a 	ret

0080cc5c <__nedf2>:
  80cc5c:	deffef04 	addi	sp,sp,-68
  80cc60:	dc400f15 	stw	r17,60(sp)
  80cc64:	dc400404 	addi	r17,sp,16
  80cc68:	2005883a 	mov	r2,r4
  80cc6c:	2807883a 	mov	r3,r5
  80cc70:	dc000e15 	stw	r16,56(sp)
  80cc74:	d809883a 	mov	r4,sp
  80cc78:	880b883a 	mov	r5,r17
  80cc7c:	dc000904 	addi	r16,sp,36
  80cc80:	d8c00115 	stw	r3,4(sp)
  80cc84:	d8800015 	stw	r2,0(sp)
  80cc88:	d9800215 	stw	r6,8(sp)
  80cc8c:	dfc01015 	stw	ra,64(sp)
  80cc90:	d9c00315 	stw	r7,12(sp)
  80cc94:	08039ec0 	call	8039ec <__unpack_d>
  80cc98:	d9000204 	addi	r4,sp,8
  80cc9c:	800b883a 	mov	r5,r16
  80cca0:	08039ec0 	call	8039ec <__unpack_d>
  80cca4:	d8800417 	ldw	r2,16(sp)
  80cca8:	00c00044 	movi	r3,1
  80ccac:	180d883a 	mov	r6,r3
  80ccb0:	1880062e 	bgeu	r3,r2,80cccc <__nedf2+0x70>
  80ccb4:	d8800917 	ldw	r2,36(sp)
  80ccb8:	8809883a 	mov	r4,r17
  80ccbc:	800b883a 	mov	r5,r16
  80ccc0:	1880022e 	bgeu	r3,r2,80cccc <__nedf2+0x70>
  80ccc4:	080d2200 	call	80d220 <__fpcmp_parts_d>
  80ccc8:	100d883a 	mov	r6,r2
  80cccc:	3005883a 	mov	r2,r6
  80ccd0:	dfc01017 	ldw	ra,64(sp)
  80ccd4:	dc400f17 	ldw	r17,60(sp)
  80ccd8:	dc000e17 	ldw	r16,56(sp)
  80ccdc:	dec01104 	addi	sp,sp,68
  80cce0:	f800283a 	ret

0080cce4 <__gtdf2>:
  80cce4:	deffef04 	addi	sp,sp,-68
  80cce8:	dc400f15 	stw	r17,60(sp)
  80ccec:	dc400404 	addi	r17,sp,16
  80ccf0:	2005883a 	mov	r2,r4
  80ccf4:	2807883a 	mov	r3,r5
  80ccf8:	dc000e15 	stw	r16,56(sp)
  80ccfc:	d809883a 	mov	r4,sp
  80cd00:	880b883a 	mov	r5,r17
  80cd04:	dc000904 	addi	r16,sp,36
  80cd08:	d8c00115 	stw	r3,4(sp)
  80cd0c:	d8800015 	stw	r2,0(sp)
  80cd10:	d9800215 	stw	r6,8(sp)
  80cd14:	dfc01015 	stw	ra,64(sp)
  80cd18:	d9c00315 	stw	r7,12(sp)
  80cd1c:	08039ec0 	call	8039ec <__unpack_d>
  80cd20:	d9000204 	addi	r4,sp,8
  80cd24:	800b883a 	mov	r5,r16
  80cd28:	08039ec0 	call	8039ec <__unpack_d>
  80cd2c:	d8800417 	ldw	r2,16(sp)
  80cd30:	00c00044 	movi	r3,1
  80cd34:	01bfffc4 	movi	r6,-1
  80cd38:	1880062e 	bgeu	r3,r2,80cd54 <__gtdf2+0x70>
  80cd3c:	d8800917 	ldw	r2,36(sp)
  80cd40:	8809883a 	mov	r4,r17
  80cd44:	800b883a 	mov	r5,r16
  80cd48:	1880022e 	bgeu	r3,r2,80cd54 <__gtdf2+0x70>
  80cd4c:	080d2200 	call	80d220 <__fpcmp_parts_d>
  80cd50:	100d883a 	mov	r6,r2
  80cd54:	3005883a 	mov	r2,r6
  80cd58:	dfc01017 	ldw	ra,64(sp)
  80cd5c:	dc400f17 	ldw	r17,60(sp)
  80cd60:	dc000e17 	ldw	r16,56(sp)
  80cd64:	dec01104 	addi	sp,sp,68
  80cd68:	f800283a 	ret

0080cd6c <__gedf2>:
  80cd6c:	deffef04 	addi	sp,sp,-68
  80cd70:	dc400f15 	stw	r17,60(sp)
  80cd74:	dc400404 	addi	r17,sp,16
  80cd78:	2005883a 	mov	r2,r4
  80cd7c:	2807883a 	mov	r3,r5
  80cd80:	dc000e15 	stw	r16,56(sp)
  80cd84:	d809883a 	mov	r4,sp
  80cd88:	880b883a 	mov	r5,r17
  80cd8c:	dc000904 	addi	r16,sp,36
  80cd90:	d8c00115 	stw	r3,4(sp)
  80cd94:	d8800015 	stw	r2,0(sp)
  80cd98:	d9800215 	stw	r6,8(sp)
  80cd9c:	dfc01015 	stw	ra,64(sp)
  80cda0:	d9c00315 	stw	r7,12(sp)
  80cda4:	08039ec0 	call	8039ec <__unpack_d>
  80cda8:	d9000204 	addi	r4,sp,8
  80cdac:	800b883a 	mov	r5,r16
  80cdb0:	08039ec0 	call	8039ec <__unpack_d>
  80cdb4:	d8800417 	ldw	r2,16(sp)
  80cdb8:	00c00044 	movi	r3,1
  80cdbc:	01bfffc4 	movi	r6,-1
  80cdc0:	1880062e 	bgeu	r3,r2,80cddc <__gedf2+0x70>
  80cdc4:	d8800917 	ldw	r2,36(sp)
  80cdc8:	8809883a 	mov	r4,r17
  80cdcc:	800b883a 	mov	r5,r16
  80cdd0:	1880022e 	bgeu	r3,r2,80cddc <__gedf2+0x70>
  80cdd4:	080d2200 	call	80d220 <__fpcmp_parts_d>
  80cdd8:	100d883a 	mov	r6,r2
  80cddc:	3005883a 	mov	r2,r6
  80cde0:	dfc01017 	ldw	ra,64(sp)
  80cde4:	dc400f17 	ldw	r17,60(sp)
  80cde8:	dc000e17 	ldw	r16,56(sp)
  80cdec:	dec01104 	addi	sp,sp,68
  80cdf0:	f800283a 	ret

0080cdf4 <__ltdf2>:
  80cdf4:	deffef04 	addi	sp,sp,-68
  80cdf8:	dc400f15 	stw	r17,60(sp)
  80cdfc:	dc400404 	addi	r17,sp,16
  80ce00:	2005883a 	mov	r2,r4
  80ce04:	2807883a 	mov	r3,r5
  80ce08:	dc000e15 	stw	r16,56(sp)
  80ce0c:	d809883a 	mov	r4,sp
  80ce10:	880b883a 	mov	r5,r17
  80ce14:	dc000904 	addi	r16,sp,36
  80ce18:	d8c00115 	stw	r3,4(sp)
  80ce1c:	d8800015 	stw	r2,0(sp)
  80ce20:	d9800215 	stw	r6,8(sp)
  80ce24:	dfc01015 	stw	ra,64(sp)
  80ce28:	d9c00315 	stw	r7,12(sp)
  80ce2c:	08039ec0 	call	8039ec <__unpack_d>
  80ce30:	d9000204 	addi	r4,sp,8
  80ce34:	800b883a 	mov	r5,r16
  80ce38:	08039ec0 	call	8039ec <__unpack_d>
  80ce3c:	d8800417 	ldw	r2,16(sp)
  80ce40:	00c00044 	movi	r3,1
  80ce44:	180d883a 	mov	r6,r3
  80ce48:	1880062e 	bgeu	r3,r2,80ce64 <__ltdf2+0x70>
  80ce4c:	d8800917 	ldw	r2,36(sp)
  80ce50:	8809883a 	mov	r4,r17
  80ce54:	800b883a 	mov	r5,r16
  80ce58:	1880022e 	bgeu	r3,r2,80ce64 <__ltdf2+0x70>
  80ce5c:	080d2200 	call	80d220 <__fpcmp_parts_d>
  80ce60:	100d883a 	mov	r6,r2
  80ce64:	3005883a 	mov	r2,r6
  80ce68:	dfc01017 	ldw	ra,64(sp)
  80ce6c:	dc400f17 	ldw	r17,60(sp)
  80ce70:	dc000e17 	ldw	r16,56(sp)
  80ce74:	dec01104 	addi	sp,sp,68
  80ce78:	f800283a 	ret

0080ce7c <__ledf2>:
  80ce7c:	deffef04 	addi	sp,sp,-68
  80ce80:	dc400f15 	stw	r17,60(sp)
  80ce84:	dc400404 	addi	r17,sp,16
  80ce88:	2005883a 	mov	r2,r4
  80ce8c:	2807883a 	mov	r3,r5
  80ce90:	dc000e15 	stw	r16,56(sp)
  80ce94:	d809883a 	mov	r4,sp
  80ce98:	880b883a 	mov	r5,r17
  80ce9c:	dc000904 	addi	r16,sp,36
  80cea0:	d8c00115 	stw	r3,4(sp)
  80cea4:	d8800015 	stw	r2,0(sp)
  80cea8:	d9800215 	stw	r6,8(sp)
  80ceac:	dfc01015 	stw	ra,64(sp)
  80ceb0:	d9c00315 	stw	r7,12(sp)
  80ceb4:	08039ec0 	call	8039ec <__unpack_d>
  80ceb8:	d9000204 	addi	r4,sp,8
  80cebc:	800b883a 	mov	r5,r16
  80cec0:	08039ec0 	call	8039ec <__unpack_d>
  80cec4:	d8800417 	ldw	r2,16(sp)
  80cec8:	00c00044 	movi	r3,1
  80cecc:	180d883a 	mov	r6,r3
  80ced0:	1880062e 	bgeu	r3,r2,80ceec <__ledf2+0x70>
  80ced4:	d8800917 	ldw	r2,36(sp)
  80ced8:	8809883a 	mov	r4,r17
  80cedc:	800b883a 	mov	r5,r16
  80cee0:	1880022e 	bgeu	r3,r2,80ceec <__ledf2+0x70>
  80cee4:	080d2200 	call	80d220 <__fpcmp_parts_d>
  80cee8:	100d883a 	mov	r6,r2
  80ceec:	3005883a 	mov	r2,r6
  80cef0:	dfc01017 	ldw	ra,64(sp)
  80cef4:	dc400f17 	ldw	r17,60(sp)
  80cef8:	dc000e17 	ldw	r16,56(sp)
  80cefc:	dec01104 	addi	sp,sp,68
  80cf00:	f800283a 	ret

0080cf04 <__floatsidf>:
  80cf04:	2006d7fa 	srli	r3,r4,31
  80cf08:	defff604 	addi	sp,sp,-40
  80cf0c:	008000c4 	movi	r2,3
  80cf10:	dfc00915 	stw	ra,36(sp)
  80cf14:	dcc00815 	stw	r19,32(sp)
  80cf18:	dc800715 	stw	r18,28(sp)
  80cf1c:	dc400615 	stw	r17,24(sp)
  80cf20:	dc000515 	stw	r16,20(sp)
  80cf24:	d8800015 	stw	r2,0(sp)
  80cf28:	d8c00115 	stw	r3,4(sp)
  80cf2c:	20000f1e 	bne	r4,zero,80cf6c <__floatsidf+0x68>
  80cf30:	00800084 	movi	r2,2
  80cf34:	d8800015 	stw	r2,0(sp)
  80cf38:	d809883a 	mov	r4,sp
  80cf3c:	08036d80 	call	8036d8 <__pack_d>
  80cf40:	1009883a 	mov	r4,r2
  80cf44:	180b883a 	mov	r5,r3
  80cf48:	2005883a 	mov	r2,r4
  80cf4c:	2807883a 	mov	r3,r5
  80cf50:	dfc00917 	ldw	ra,36(sp)
  80cf54:	dcc00817 	ldw	r19,32(sp)
  80cf58:	dc800717 	ldw	r18,28(sp)
  80cf5c:	dc400617 	ldw	r17,24(sp)
  80cf60:	dc000517 	ldw	r16,20(sp)
  80cf64:	dec00a04 	addi	sp,sp,40
  80cf68:	f800283a 	ret
  80cf6c:	00800f04 	movi	r2,60
  80cf70:	1807003a 	cmpeq	r3,r3,zero
  80cf74:	d8800215 	stw	r2,8(sp)
  80cf78:	18001126 	beq	r3,zero,80cfc0 <__floatsidf+0xbc>
  80cf7c:	0027883a 	mov	r19,zero
  80cf80:	2025883a 	mov	r18,r4
  80cf84:	d9000315 	stw	r4,12(sp)
  80cf88:	dcc00415 	stw	r19,16(sp)
  80cf8c:	080335c0 	call	80335c <__clzsi2>
  80cf90:	11000744 	addi	r4,r2,29
  80cf94:	013fe80e 	bge	zero,r4,80cf38 <__floatsidf+0x34>
  80cf98:	10bfff44 	addi	r2,r2,-3
  80cf9c:	10000c16 	blt	r2,zero,80cfd0 <__floatsidf+0xcc>
  80cfa0:	90a2983a 	sll	r17,r18,r2
  80cfa4:	0021883a 	mov	r16,zero
  80cfa8:	d8800217 	ldw	r2,8(sp)
  80cfac:	dc400415 	stw	r17,16(sp)
  80cfb0:	dc000315 	stw	r16,12(sp)
  80cfb4:	1105c83a 	sub	r2,r2,r4
  80cfb8:	d8800215 	stw	r2,8(sp)
  80cfbc:	003fde06 	br	80cf38 <__floatsidf+0x34>
  80cfc0:	00a00034 	movhi	r2,32768
  80cfc4:	20800a26 	beq	r4,r2,80cff0 <__floatsidf+0xec>
  80cfc8:	0109c83a 	sub	r4,zero,r4
  80cfcc:	003feb06 	br	80cf7c <__floatsidf+0x78>
  80cfd0:	9006d07a 	srli	r3,r18,1
  80cfd4:	008007c4 	movi	r2,31
  80cfd8:	1105c83a 	sub	r2,r2,r4
  80cfdc:	1886d83a 	srl	r3,r3,r2
  80cfe0:	9922983a 	sll	r17,r19,r4
  80cfe4:	9120983a 	sll	r16,r18,r4
  80cfe8:	1c62b03a 	or	r17,r3,r17
  80cfec:	003fee06 	br	80cfa8 <__floatsidf+0xa4>
  80cff0:	0009883a 	mov	r4,zero
  80cff4:	01707834 	movhi	r5,49632
  80cff8:	003fd306 	br	80cf48 <__floatsidf+0x44>

0080cffc <__fixdfsi>:
  80cffc:	defff804 	addi	sp,sp,-32
  80d000:	2005883a 	mov	r2,r4
  80d004:	2807883a 	mov	r3,r5
  80d008:	d809883a 	mov	r4,sp
  80d00c:	d9400204 	addi	r5,sp,8
  80d010:	d8c00115 	stw	r3,4(sp)
  80d014:	d8800015 	stw	r2,0(sp)
  80d018:	dfc00715 	stw	ra,28(sp)
  80d01c:	08039ec0 	call	8039ec <__unpack_d>
  80d020:	d8c00217 	ldw	r3,8(sp)
  80d024:	00800084 	movi	r2,2
  80d028:	1880051e 	bne	r3,r2,80d040 <__fixdfsi+0x44>
  80d02c:	0007883a 	mov	r3,zero
  80d030:	1805883a 	mov	r2,r3
  80d034:	dfc00717 	ldw	ra,28(sp)
  80d038:	dec00804 	addi	sp,sp,32
  80d03c:	f800283a 	ret
  80d040:	00800044 	movi	r2,1
  80d044:	10fff92e 	bgeu	r2,r3,80d02c <__fixdfsi+0x30>
  80d048:	00800104 	movi	r2,4
  80d04c:	18800426 	beq	r3,r2,80d060 <__fixdfsi+0x64>
  80d050:	d8c00417 	ldw	r3,16(sp)
  80d054:	183ff516 	blt	r3,zero,80d02c <__fixdfsi+0x30>
  80d058:	00800784 	movi	r2,30
  80d05c:	10c0080e 	bge	r2,r3,80d080 <__fixdfsi+0x84>
  80d060:	d8800317 	ldw	r2,12(sp)
  80d064:	1000121e 	bne	r2,zero,80d0b0 <__fixdfsi+0xb4>
  80d068:	00e00034 	movhi	r3,32768
  80d06c:	18ffffc4 	addi	r3,r3,-1
  80d070:	1805883a 	mov	r2,r3
  80d074:	dfc00717 	ldw	ra,28(sp)
  80d078:	dec00804 	addi	sp,sp,32
  80d07c:	f800283a 	ret
  80d080:	00800f04 	movi	r2,60
  80d084:	10d1c83a 	sub	r8,r2,r3
  80d088:	40bff804 	addi	r2,r8,-32
  80d08c:	d9800517 	ldw	r6,20(sp)
  80d090:	d9c00617 	ldw	r7,24(sp)
  80d094:	10000816 	blt	r2,zero,80d0b8 <__fixdfsi+0xbc>
  80d098:	3888d83a 	srl	r4,r7,r2
  80d09c:	d8800317 	ldw	r2,12(sp)
  80d0a0:	2007883a 	mov	r3,r4
  80d0a4:	103fe226 	beq	r2,zero,80d030 <__fixdfsi+0x34>
  80d0a8:	0107c83a 	sub	r3,zero,r4
  80d0ac:	003fe006 	br	80d030 <__fixdfsi+0x34>
  80d0b0:	00e00034 	movhi	r3,32768
  80d0b4:	003fde06 	br	80d030 <__fixdfsi+0x34>
  80d0b8:	39c7883a 	add	r3,r7,r7
  80d0bc:	008007c4 	movi	r2,31
  80d0c0:	1205c83a 	sub	r2,r2,r8
  80d0c4:	1886983a 	sll	r3,r3,r2
  80d0c8:	3208d83a 	srl	r4,r6,r8
  80d0cc:	1908b03a 	or	r4,r3,r4
  80d0d0:	003ff206 	br	80d09c <__fixdfsi+0xa0>

0080d0d4 <udivmodsi4>:
  80d0d4:	29001b2e 	bgeu	r5,r4,80d144 <udivmodsi4+0x70>
  80d0d8:	28001a16 	blt	r5,zero,80d144 <udivmodsi4+0x70>
  80d0dc:	00800044 	movi	r2,1
  80d0e0:	0007883a 	mov	r3,zero
  80d0e4:	01c007c4 	movi	r7,31
  80d0e8:	00000306 	br	80d0f8 <udivmodsi4+0x24>
  80d0ec:	19c01326 	beq	r3,r7,80d13c <udivmodsi4+0x68>
  80d0f0:	18c00044 	addi	r3,r3,1
  80d0f4:	28000416 	blt	r5,zero,80d108 <udivmodsi4+0x34>
  80d0f8:	294b883a 	add	r5,r5,r5
  80d0fc:	1085883a 	add	r2,r2,r2
  80d100:	293ffa36 	bltu	r5,r4,80d0ec <udivmodsi4+0x18>
  80d104:	10000d26 	beq	r2,zero,80d13c <udivmodsi4+0x68>
  80d108:	0007883a 	mov	r3,zero
  80d10c:	21400236 	bltu	r4,r5,80d118 <udivmodsi4+0x44>
  80d110:	2149c83a 	sub	r4,r4,r5
  80d114:	1886b03a 	or	r3,r3,r2
  80d118:	1004d07a 	srli	r2,r2,1
  80d11c:	280ad07a 	srli	r5,r5,1
  80d120:	103ffa1e 	bne	r2,zero,80d10c <udivmodsi4+0x38>
  80d124:	30000226 	beq	r6,zero,80d130 <udivmodsi4+0x5c>
  80d128:	2005883a 	mov	r2,r4
  80d12c:	f800283a 	ret
  80d130:	1809883a 	mov	r4,r3
  80d134:	2005883a 	mov	r2,r4
  80d138:	f800283a 	ret
  80d13c:	0007883a 	mov	r3,zero
  80d140:	003ff806 	br	80d124 <udivmodsi4+0x50>
  80d144:	00800044 	movi	r2,1
  80d148:	0007883a 	mov	r3,zero
  80d14c:	003fef06 	br	80d10c <udivmodsi4+0x38>

0080d150 <__divsi3>:
  80d150:	defffe04 	addi	sp,sp,-8
  80d154:	dc000015 	stw	r16,0(sp)
  80d158:	dfc00115 	stw	ra,4(sp)
  80d15c:	0021883a 	mov	r16,zero
  80d160:	20000c16 	blt	r4,zero,80d194 <__divsi3+0x44>
  80d164:	000d883a 	mov	r6,zero
  80d168:	28000e16 	blt	r5,zero,80d1a4 <__divsi3+0x54>
  80d16c:	080d0d40 	call	80d0d4 <udivmodsi4>
  80d170:	1007883a 	mov	r3,r2
  80d174:	8005003a 	cmpeq	r2,r16,zero
  80d178:	1000011e 	bne	r2,zero,80d180 <__divsi3+0x30>
  80d17c:	00c7c83a 	sub	r3,zero,r3
  80d180:	1805883a 	mov	r2,r3
  80d184:	dfc00117 	ldw	ra,4(sp)
  80d188:	dc000017 	ldw	r16,0(sp)
  80d18c:	dec00204 	addi	sp,sp,8
  80d190:	f800283a 	ret
  80d194:	0109c83a 	sub	r4,zero,r4
  80d198:	04000044 	movi	r16,1
  80d19c:	000d883a 	mov	r6,zero
  80d1a0:	283ff20e 	bge	r5,zero,80d16c <__divsi3+0x1c>
  80d1a4:	014bc83a 	sub	r5,zero,r5
  80d1a8:	8021003a 	cmpeq	r16,r16,zero
  80d1ac:	003fef06 	br	80d16c <__divsi3+0x1c>

0080d1b0 <__modsi3>:
  80d1b0:	deffff04 	addi	sp,sp,-4
  80d1b4:	dfc00015 	stw	ra,0(sp)
  80d1b8:	01800044 	movi	r6,1
  80d1bc:	2807883a 	mov	r3,r5
  80d1c0:	20000416 	blt	r4,zero,80d1d4 <__modsi3+0x24>
  80d1c4:	28000c16 	blt	r5,zero,80d1f8 <__modsi3+0x48>
  80d1c8:	dfc00017 	ldw	ra,0(sp)
  80d1cc:	dec00104 	addi	sp,sp,4
  80d1d0:	080d0d41 	jmpi	80d0d4 <udivmodsi4>
  80d1d4:	0109c83a 	sub	r4,zero,r4
  80d1d8:	28000b16 	blt	r5,zero,80d208 <__modsi3+0x58>
  80d1dc:	180b883a 	mov	r5,r3
  80d1e0:	01800044 	movi	r6,1
  80d1e4:	080d0d40 	call	80d0d4 <udivmodsi4>
  80d1e8:	0085c83a 	sub	r2,zero,r2
  80d1ec:	dfc00017 	ldw	ra,0(sp)
  80d1f0:	dec00104 	addi	sp,sp,4
  80d1f4:	f800283a 	ret
  80d1f8:	014bc83a 	sub	r5,zero,r5
  80d1fc:	dfc00017 	ldw	ra,0(sp)
  80d200:	dec00104 	addi	sp,sp,4
  80d204:	080d0d41 	jmpi	80d0d4 <udivmodsi4>
  80d208:	0147c83a 	sub	r3,zero,r5
  80d20c:	003ff306 	br	80d1dc <__modsi3+0x2c>

0080d210 <__udivsi3>:
  80d210:	000d883a 	mov	r6,zero
  80d214:	080d0d41 	jmpi	80d0d4 <udivmodsi4>

0080d218 <__umodsi3>:
  80d218:	01800044 	movi	r6,1
  80d21c:	080d0d41 	jmpi	80d0d4 <udivmodsi4>

0080d220 <__fpcmp_parts_d>:
  80d220:	21800017 	ldw	r6,0(r4)
  80d224:	00c00044 	movi	r3,1
  80d228:	19800a2e 	bgeu	r3,r6,80d254 <__fpcmp_parts_d+0x34>
  80d22c:	28800017 	ldw	r2,0(r5)
  80d230:	1880082e 	bgeu	r3,r2,80d254 <__fpcmp_parts_d+0x34>
  80d234:	00c00104 	movi	r3,4
  80d238:	30c02626 	beq	r6,r3,80d2d4 <__fpcmp_parts_d+0xb4>
  80d23c:	10c02226 	beq	r2,r3,80d2c8 <__fpcmp_parts_d+0xa8>
  80d240:	00c00084 	movi	r3,2
  80d244:	30c00526 	beq	r6,r3,80d25c <__fpcmp_parts_d+0x3c>
  80d248:	10c0071e 	bne	r2,r3,80d268 <__fpcmp_parts_d+0x48>
  80d24c:	20800117 	ldw	r2,4(r4)
  80d250:	1000091e 	bne	r2,zero,80d278 <__fpcmp_parts_d+0x58>
  80d254:	00800044 	movi	r2,1
  80d258:	f800283a 	ret
  80d25c:	10c01a1e 	bne	r2,r3,80d2c8 <__fpcmp_parts_d+0xa8>
  80d260:	0005883a 	mov	r2,zero
  80d264:	f800283a 	ret
  80d268:	22000117 	ldw	r8,4(r4)
  80d26c:	28800117 	ldw	r2,4(r5)
  80d270:	40800326 	beq	r8,r2,80d280 <__fpcmp_parts_d+0x60>
  80d274:	403ff726 	beq	r8,zero,80d254 <__fpcmp_parts_d+0x34>
  80d278:	00bfffc4 	movi	r2,-1
  80d27c:	f800283a 	ret
  80d280:	20c00217 	ldw	r3,8(r4)
  80d284:	28800217 	ldw	r2,8(r5)
  80d288:	10fffa16 	blt	r2,r3,80d274 <__fpcmp_parts_d+0x54>
  80d28c:	18800916 	blt	r3,r2,80d2b4 <__fpcmp_parts_d+0x94>
  80d290:	21c00417 	ldw	r7,16(r4)
  80d294:	28c00417 	ldw	r3,16(r5)
  80d298:	21800317 	ldw	r6,12(r4)
  80d29c:	28800317 	ldw	r2,12(r5)
  80d2a0:	19fff436 	bltu	r3,r7,80d274 <__fpcmp_parts_d+0x54>
  80d2a4:	38c00526 	beq	r7,r3,80d2bc <__fpcmp_parts_d+0x9c>
  80d2a8:	38c00236 	bltu	r7,r3,80d2b4 <__fpcmp_parts_d+0x94>
  80d2ac:	19ffec1e 	bne	r3,r7,80d260 <__fpcmp_parts_d+0x40>
  80d2b0:	30bfeb2e 	bgeu	r6,r2,80d260 <__fpcmp_parts_d+0x40>
  80d2b4:	403fe71e 	bne	r8,zero,80d254 <__fpcmp_parts_d+0x34>
  80d2b8:	003fef06 	br	80d278 <__fpcmp_parts_d+0x58>
  80d2bc:	11bffa2e 	bgeu	r2,r6,80d2a8 <__fpcmp_parts_d+0x88>
  80d2c0:	403fe426 	beq	r8,zero,80d254 <__fpcmp_parts_d+0x34>
  80d2c4:	003fec06 	br	80d278 <__fpcmp_parts_d+0x58>
  80d2c8:	28800117 	ldw	r2,4(r5)
  80d2cc:	103fe11e 	bne	r2,zero,80d254 <__fpcmp_parts_d+0x34>
  80d2d0:	003fe906 	br	80d278 <__fpcmp_parts_d+0x58>
  80d2d4:	11bfdd1e 	bne	r2,r6,80d24c <__fpcmp_parts_d+0x2c>
  80d2d8:	28c00117 	ldw	r3,4(r5)
  80d2dc:	20800117 	ldw	r2,4(r4)
  80d2e0:	1885c83a 	sub	r2,r3,r2
  80d2e4:	f800283a 	ret

0080d2e8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d2e8:	defff804 	addi	sp,sp,-32
  80d2ec:	dfc00715 	stw	ra,28(sp)
  80d2f0:	df000615 	stw	fp,24(sp)
  80d2f4:	df000604 	addi	fp,sp,24
  80d2f8:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d2fc:	e0bffc17 	ldw	r2,-16(fp)
  80d300:	1004803a 	cmplt	r2,r2,zero
  80d304:	1000091e 	bne	r2,zero,80d32c <close+0x44>
  80d308:	e13ffc17 	ldw	r4,-16(fp)
  80d30c:	01400304 	movi	r5,12
  80d310:	08032000 	call	803200 <__mulsi3>
  80d314:	1007883a 	mov	r3,r2
  80d318:	00802074 	movhi	r2,129
  80d31c:	1083ca04 	addi	r2,r2,3880
  80d320:	1887883a 	add	r3,r3,r2
  80d324:	e0ffff15 	stw	r3,-4(fp)
  80d328:	00000106 	br	80d330 <close+0x48>
  80d32c:	e03fff15 	stw	zero,-4(fp)
  80d330:	e0bfff17 	ldw	r2,-4(fp)
  80d334:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
  80d338:	e0bffb17 	ldw	r2,-20(fp)
  80d33c:	1005003a 	cmpeq	r2,r2,zero
  80d340:	10001d1e 	bne	r2,zero,80d3b8 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d344:	e0bffb17 	ldw	r2,-20(fp)
  80d348:	10800017 	ldw	r2,0(r2)
  80d34c:	10800417 	ldw	r2,16(r2)
  80d350:	1005003a 	cmpeq	r2,r2,zero
  80d354:	1000071e 	bne	r2,zero,80d374 <close+0x8c>
  80d358:	e0bffb17 	ldw	r2,-20(fp)
  80d35c:	10800017 	ldw	r2,0(r2)
  80d360:	10800417 	ldw	r2,16(r2)
  80d364:	e13ffb17 	ldw	r4,-20(fp)
  80d368:	103ee83a 	callr	r2
  80d36c:	e0bffe15 	stw	r2,-8(fp)
  80d370:	00000106 	br	80d378 <close+0x90>
  80d374:	e03ffe15 	stw	zero,-8(fp)
  80d378:	e0bffe17 	ldw	r2,-8(fp)
  80d37c:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d380:	e13ffc17 	ldw	r4,-16(fp)
  80d384:	080db800 	call	80db80 <alt_release_fd>
    if (rval < 0)
  80d388:	e0bffa17 	ldw	r2,-24(fp)
  80d38c:	1004403a 	cmpge	r2,r2,zero
  80d390:	1000071e 	bne	r2,zero,80d3b0 <close+0xc8>
    {
      ALT_ERRNO = -rval;
  80d394:	080d3e80 	call	80d3e8 <alt_get_errno>
  80d398:	e0fffa17 	ldw	r3,-24(fp)
  80d39c:	00c7c83a 	sub	r3,zero,r3
  80d3a0:	10c00015 	stw	r3,0(r2)
      return -1;
  80d3a4:	00bfffc4 	movi	r2,-1
  80d3a8:	e0bffd15 	stw	r2,-12(fp)
  80d3ac:	00000806 	br	80d3d0 <close+0xe8>
    }
    return 0;
  80d3b0:	e03ffd15 	stw	zero,-12(fp)
  80d3b4:	00000606 	br	80d3d0 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d3b8:	080d3e80 	call	80d3e8 <alt_get_errno>
  80d3bc:	1007883a 	mov	r3,r2
  80d3c0:	00801444 	movi	r2,81
  80d3c4:	18800015 	stw	r2,0(r3)
    return -1;
  80d3c8:	00bfffc4 	movi	r2,-1
  80d3cc:	e0bffd15 	stw	r2,-12(fp)
  80d3d0:	e0bffd17 	ldw	r2,-12(fp)
  }
}
  80d3d4:	e037883a 	mov	sp,fp
  80d3d8:	dfc00117 	ldw	ra,4(sp)
  80d3dc:	df000017 	ldw	fp,0(sp)
  80d3e0:	dec00204 	addi	sp,sp,8
  80d3e4:	f800283a 	ret

0080d3e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d3e8:	defffd04 	addi	sp,sp,-12
  80d3ec:	dfc00215 	stw	ra,8(sp)
  80d3f0:	df000115 	stw	fp,4(sp)
  80d3f4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d3f8:	00802074 	movhi	r2,129
  80d3fc:	10884d04 	addi	r2,r2,8500
  80d400:	10800017 	ldw	r2,0(r2)
  80d404:	1005003a 	cmpeq	r2,r2,zero
  80d408:	1000061e 	bne	r2,zero,80d424 <alt_get_errno+0x3c>
  80d40c:	00802074 	movhi	r2,129
  80d410:	10884d04 	addi	r2,r2,8500
  80d414:	10800017 	ldw	r2,0(r2)
  80d418:	103ee83a 	callr	r2
  80d41c:	e0bfff15 	stw	r2,-4(fp)
  80d420:	00000306 	br	80d430 <alt_get_errno+0x48>
  80d424:	00802074 	movhi	r2,129
  80d428:	108eef04 	addi	r2,r2,15292
  80d42c:	e0bfff15 	stw	r2,-4(fp)
  80d430:	e0bfff17 	ldw	r2,-4(fp)
}
  80d434:	e037883a 	mov	sp,fp
  80d438:	dfc00117 	ldw	ra,4(sp)
  80d43c:	df000017 	ldw	fp,0(sp)
  80d440:	dec00204 	addi	sp,sp,8
  80d444:	f800283a 	ret

0080d448 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d448:	defffc04 	addi	sp,sp,-16
  80d44c:	df000315 	stw	fp,12(sp)
  80d450:	df000304 	addi	fp,sp,12
  80d454:	e13ffd15 	stw	r4,-12(fp)
  80d458:	e17ffe15 	stw	r5,-8(fp)
  80d45c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d460:	e0bfff17 	ldw	r2,-4(fp)
}
  80d464:	e037883a 	mov	sp,fp
  80d468:	df000017 	ldw	fp,0(sp)
  80d46c:	dec00104 	addi	sp,sp,4
  80d470:	f800283a 	ret

0080d474 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d474:	defff904 	addi	sp,sp,-28
  80d478:	dfc00615 	stw	ra,24(sp)
  80d47c:	df000515 	stw	fp,20(sp)
  80d480:	df000504 	addi	fp,sp,20
  80d484:	e13ffc15 	stw	r4,-16(fp)
  80d488:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d48c:	e0bffc17 	ldw	r2,-16(fp)
  80d490:	1004803a 	cmplt	r2,r2,zero
  80d494:	1000091e 	bne	r2,zero,80d4bc <fstat+0x48>
  80d498:	e13ffc17 	ldw	r4,-16(fp)
  80d49c:	01400304 	movi	r5,12
  80d4a0:	08032000 	call	803200 <__mulsi3>
  80d4a4:	1007883a 	mov	r3,r2
  80d4a8:	00802074 	movhi	r2,129
  80d4ac:	1083ca04 	addi	r2,r2,3880
  80d4b0:	1887883a 	add	r3,r3,r2
  80d4b4:	e0ffff15 	stw	r3,-4(fp)
  80d4b8:	00000106 	br	80d4c0 <fstat+0x4c>
  80d4bc:	e03fff15 	stw	zero,-4(fp)
  80d4c0:	e0bfff17 	ldw	r2,-4(fp)
  80d4c4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d4c8:	e0bffb17 	ldw	r2,-20(fp)
  80d4cc:	1005003a 	cmpeq	r2,r2,zero
  80d4d0:	1000121e 	bne	r2,zero,80d51c <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d4d4:	e0bffb17 	ldw	r2,-20(fp)
  80d4d8:	10800017 	ldw	r2,0(r2)
  80d4dc:	10800817 	ldw	r2,32(r2)
  80d4e0:	1005003a 	cmpeq	r2,r2,zero
  80d4e4:	1000081e 	bne	r2,zero,80d508 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
  80d4e8:	e0bffb17 	ldw	r2,-20(fp)
  80d4ec:	10800017 	ldw	r2,0(r2)
  80d4f0:	10800817 	ldw	r2,32(r2)
  80d4f4:	e13ffb17 	ldw	r4,-20(fp)
  80d4f8:	e17ffd17 	ldw	r5,-12(fp)
  80d4fc:	103ee83a 	callr	r2
  80d500:	e0bffe15 	stw	r2,-8(fp)
  80d504:	00000b06 	br	80d534 <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d508:	e0fffd17 	ldw	r3,-12(fp)
  80d50c:	00880004 	movi	r2,8192
  80d510:	18800115 	stw	r2,4(r3)
      return 0;
  80d514:	e03ffe15 	stw	zero,-8(fp)
  80d518:	00000606 	br	80d534 <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d51c:	080d54c0 	call	80d54c <alt_get_errno>
  80d520:	1007883a 	mov	r3,r2
  80d524:	00801444 	movi	r2,81
  80d528:	18800015 	stw	r2,0(r3)
    return -1;
  80d52c:	00bfffc4 	movi	r2,-1
  80d530:	e0bffe15 	stw	r2,-8(fp)
  80d534:	e0bffe17 	ldw	r2,-8(fp)
  }
}
  80d538:	e037883a 	mov	sp,fp
  80d53c:	dfc00117 	ldw	ra,4(sp)
  80d540:	df000017 	ldw	fp,0(sp)
  80d544:	dec00204 	addi	sp,sp,8
  80d548:	f800283a 	ret

0080d54c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d54c:	defffd04 	addi	sp,sp,-12
  80d550:	dfc00215 	stw	ra,8(sp)
  80d554:	df000115 	stw	fp,4(sp)
  80d558:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d55c:	00802074 	movhi	r2,129
  80d560:	10884d04 	addi	r2,r2,8500
  80d564:	10800017 	ldw	r2,0(r2)
  80d568:	1005003a 	cmpeq	r2,r2,zero
  80d56c:	1000061e 	bne	r2,zero,80d588 <alt_get_errno+0x3c>
  80d570:	00802074 	movhi	r2,129
  80d574:	10884d04 	addi	r2,r2,8500
  80d578:	10800017 	ldw	r2,0(r2)
  80d57c:	103ee83a 	callr	r2
  80d580:	e0bfff15 	stw	r2,-4(fp)
  80d584:	00000306 	br	80d594 <alt_get_errno+0x48>
  80d588:	00802074 	movhi	r2,129
  80d58c:	108eef04 	addi	r2,r2,15292
  80d590:	e0bfff15 	stw	r2,-4(fp)
  80d594:	e0bfff17 	ldw	r2,-4(fp)
}
  80d598:	e037883a 	mov	sp,fp
  80d59c:	dfc00117 	ldw	ra,4(sp)
  80d5a0:	df000017 	ldw	fp,0(sp)
  80d5a4:	dec00204 	addi	sp,sp,8
  80d5a8:	f800283a 	ret

0080d5ac <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d5ac:	deffeb04 	addi	sp,sp,-84
  80d5b0:	dfc01415 	stw	ra,80(sp)
  80d5b4:	df001315 	stw	fp,76(sp)
  80d5b8:	df001304 	addi	fp,sp,76
  80d5bc:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d5c0:	e0bffd17 	ldw	r2,-12(fp)
  80d5c4:	1004803a 	cmplt	r2,r2,zero
  80d5c8:	1000091e 	bne	r2,zero,80d5f0 <isatty+0x44>
  80d5cc:	e13ffd17 	ldw	r4,-12(fp)
  80d5d0:	01400304 	movi	r5,12
  80d5d4:	08032000 	call	803200 <__mulsi3>
  80d5d8:	1007883a 	mov	r3,r2
  80d5dc:	00802074 	movhi	r2,129
  80d5e0:	1083ca04 	addi	r2,r2,3880
  80d5e4:	1887883a 	add	r3,r3,r2
  80d5e8:	e0ffff15 	stw	r3,-4(fp)
  80d5ec:	00000106 	br	80d5f4 <isatty+0x48>
  80d5f0:	e03fff15 	stw	zero,-4(fp)
  80d5f4:	e0bfff17 	ldw	r2,-4(fp)
  80d5f8:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
  80d5fc:	e0bfed17 	ldw	r2,-76(fp)
  80d600:	1005003a 	cmpeq	r2,r2,zero
  80d604:	10000f1e 	bne	r2,zero,80d644 <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d608:	e0bfed17 	ldw	r2,-76(fp)
  80d60c:	10800017 	ldw	r2,0(r2)
  80d610:	10800817 	ldw	r2,32(r2)
  80d614:	1004c03a 	cmpne	r2,r2,zero
  80d618:	1000031e 	bne	r2,zero,80d628 <isatty+0x7c>
    {
      return 1;
  80d61c:	00800044 	movi	r2,1
  80d620:	e0bffe15 	stw	r2,-8(fp)
  80d624:	00000c06 	br	80d658 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d628:	e17fee04 	addi	r5,fp,-72
  80d62c:	e13ffd17 	ldw	r4,-12(fp)
  80d630:	080d4740 	call	80d474 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d634:	e0bfef17 	ldw	r2,-68(fp)
  80d638:	10880020 	cmpeqi	r2,r2,8192
  80d63c:	e0bffe15 	stw	r2,-8(fp)
  80d640:	00000506 	br	80d658 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d644:	080d6700 	call	80d670 <alt_get_errno>
  80d648:	1007883a 	mov	r3,r2
  80d64c:	00801444 	movi	r2,81
  80d650:	18800015 	stw	r2,0(r3)
    return 0;
  80d654:	e03ffe15 	stw	zero,-8(fp)
  80d658:	e0bffe17 	ldw	r2,-8(fp)
  }
}
  80d65c:	e037883a 	mov	sp,fp
  80d660:	dfc00117 	ldw	ra,4(sp)
  80d664:	df000017 	ldw	fp,0(sp)
  80d668:	dec00204 	addi	sp,sp,8
  80d66c:	f800283a 	ret

0080d670 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d670:	defffd04 	addi	sp,sp,-12
  80d674:	dfc00215 	stw	ra,8(sp)
  80d678:	df000115 	stw	fp,4(sp)
  80d67c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d680:	00802074 	movhi	r2,129
  80d684:	10884d04 	addi	r2,r2,8500
  80d688:	10800017 	ldw	r2,0(r2)
  80d68c:	1005003a 	cmpeq	r2,r2,zero
  80d690:	1000061e 	bne	r2,zero,80d6ac <alt_get_errno+0x3c>
  80d694:	00802074 	movhi	r2,129
  80d698:	10884d04 	addi	r2,r2,8500
  80d69c:	10800017 	ldw	r2,0(r2)
  80d6a0:	103ee83a 	callr	r2
  80d6a4:	e0bfff15 	stw	r2,-4(fp)
  80d6a8:	00000306 	br	80d6b8 <alt_get_errno+0x48>
  80d6ac:	00802074 	movhi	r2,129
  80d6b0:	108eef04 	addi	r2,r2,15292
  80d6b4:	e0bfff15 	stw	r2,-4(fp)
  80d6b8:	e0bfff17 	ldw	r2,-4(fp)
}
  80d6bc:	e037883a 	mov	sp,fp
  80d6c0:	dfc00117 	ldw	ra,4(sp)
  80d6c4:	df000017 	ldw	fp,0(sp)
  80d6c8:	dec00204 	addi	sp,sp,8
  80d6cc:	f800283a 	ret

0080d6d0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d6d0:	defffe04 	addi	sp,sp,-8
  80d6d4:	dfc00115 	stw	ra,4(sp)
  80d6d8:	df000015 	stw	fp,0(sp)
  80d6dc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d6e0:	01002074 	movhi	r4,129
  80d6e4:	21085204 	addi	r4,r4,8520
  80d6e8:	01402074 	movhi	r5,129
  80d6ec:	2941bb04 	addi	r5,r5,1772
  80d6f0:	01802074 	movhi	r6,129
  80d6f4:	31885204 	addi	r6,r6,8520
  80d6f8:	080d7500 	call	80d750 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d6fc:	01002034 	movhi	r4,128
  80d700:	21000804 	addi	r4,r4,32
  80d704:	01402034 	movhi	r5,128
  80d708:	29400804 	addi	r5,r5,32
  80d70c:	01802034 	movhi	r6,128
  80d710:	31806d04 	addi	r6,r6,436
  80d714:	080d7500 	call	80d750 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d718:	01002074 	movhi	r4,129
  80d71c:	213fe404 	addi	r4,r4,-112
  80d720:	01402074 	movhi	r5,129
  80d724:	297fe404 	addi	r5,r5,-112
  80d728:	01802074 	movhi	r6,129
  80d72c:	3181bb04 	addi	r6,r6,1772
  80d730:	080d7500 	call	80d750 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d734:	080ecf40 	call	80ecf4 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d738:	080eeec0 	call	80eeec <alt_icache_flush_all>
}
  80d73c:	e037883a 	mov	sp,fp
  80d740:	dfc00117 	ldw	ra,4(sp)
  80d744:	df000017 	ldw	fp,0(sp)
  80d748:	dec00204 	addi	sp,sp,8
  80d74c:	f800283a 	ret

0080d750 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d750:	defffc04 	addi	sp,sp,-16
  80d754:	df000315 	stw	fp,12(sp)
  80d758:	df000304 	addi	fp,sp,12
  80d75c:	e13ffd15 	stw	r4,-12(fp)
  80d760:	e17ffe15 	stw	r5,-8(fp)
  80d764:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d768:	e0fffe17 	ldw	r3,-8(fp)
  80d76c:	e0bffd17 	ldw	r2,-12(fp)
  80d770:	18800e26 	beq	r3,r2,80d7ac <alt_load_section+0x5c>
  {
    while( to != end )
  80d774:	00000a06 	br	80d7a0 <alt_load_section+0x50>
    {
      *to++ = *from++;
  80d778:	e0bffd17 	ldw	r2,-12(fp)
  80d77c:	10c00017 	ldw	r3,0(r2)
  80d780:	e0bffe17 	ldw	r2,-8(fp)
  80d784:	10c00015 	stw	r3,0(r2)
  80d788:	e0bffe17 	ldw	r2,-8(fp)
  80d78c:	10800104 	addi	r2,r2,4
  80d790:	e0bffe15 	stw	r2,-8(fp)
  80d794:	e0bffd17 	ldw	r2,-12(fp)
  80d798:	10800104 	addi	r2,r2,4
  80d79c:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d7a0:	e0fffe17 	ldw	r3,-8(fp)
  80d7a4:	e0bfff17 	ldw	r2,-4(fp)
  80d7a8:	18bff31e 	bne	r3,r2,80d778 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
  80d7ac:	e037883a 	mov	sp,fp
  80d7b0:	df000017 	ldw	fp,0(sp)
  80d7b4:	dec00104 	addi	sp,sp,4
  80d7b8:	f800283a 	ret

0080d7bc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d7bc:	defff804 	addi	sp,sp,-32
  80d7c0:	dfc00715 	stw	ra,28(sp)
  80d7c4:	df000615 	stw	fp,24(sp)
  80d7c8:	df000604 	addi	fp,sp,24
  80d7cc:	e13ffc15 	stw	r4,-16(fp)
  80d7d0:	e17ffd15 	stw	r5,-12(fp)
  80d7d4:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d7d8:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d7dc:	e0bffc17 	ldw	r2,-16(fp)
  80d7e0:	1004803a 	cmplt	r2,r2,zero
  80d7e4:	1000091e 	bne	r2,zero,80d80c <lseek+0x50>
  80d7e8:	e13ffc17 	ldw	r4,-16(fp)
  80d7ec:	01400304 	movi	r5,12
  80d7f0:	08032000 	call	803200 <__mulsi3>
  80d7f4:	1007883a 	mov	r3,r2
  80d7f8:	00802074 	movhi	r2,129
  80d7fc:	1083ca04 	addi	r2,r2,3880
  80d800:	1887883a 	add	r3,r3,r2
  80d804:	e0ffff15 	stw	r3,-4(fp)
  80d808:	00000106 	br	80d810 <lseek+0x54>
  80d80c:	e03fff15 	stw	zero,-4(fp)
  80d810:	e0bfff17 	ldw	r2,-4(fp)
  80d814:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
  80d818:	e0bffb17 	ldw	r2,-20(fp)
  80d81c:	1005003a 	cmpeq	r2,r2,zero
  80d820:	1000111e 	bne	r2,zero,80d868 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d824:	e0bffb17 	ldw	r2,-20(fp)
  80d828:	10800017 	ldw	r2,0(r2)
  80d82c:	10800717 	ldw	r2,28(r2)
  80d830:	1005003a 	cmpeq	r2,r2,zero
  80d834:	1000091e 	bne	r2,zero,80d85c <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d838:	e0bffb17 	ldw	r2,-20(fp)
  80d83c:	10800017 	ldw	r2,0(r2)
  80d840:	10800717 	ldw	r2,28(r2)
  80d844:	e13ffb17 	ldw	r4,-20(fp)
  80d848:	e17ffd17 	ldw	r5,-12(fp)
  80d84c:	e1bffe17 	ldw	r6,-8(fp)
  80d850:	103ee83a 	callr	r2
  80d854:	e0bffa15 	stw	r2,-24(fp)
  80d858:	00000506 	br	80d870 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d85c:	00bfde84 	movi	r2,-134
  80d860:	e0bffa15 	stw	r2,-24(fp)
  80d864:	00000206 	br	80d870 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d868:	00bfebc4 	movi	r2,-81
  80d86c:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
  80d870:	e0bffa17 	ldw	r2,-24(fp)
  80d874:	1004403a 	cmpge	r2,r2,zero
  80d878:	1000071e 	bne	r2,zero,80d898 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
  80d87c:	080d8b00 	call	80d8b0 <alt_get_errno>
  80d880:	1007883a 	mov	r3,r2
  80d884:	e0bffa17 	ldw	r2,-24(fp)
  80d888:	0085c83a 	sub	r2,zero,r2
  80d88c:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d890:	00bfffc4 	movi	r2,-1
  80d894:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
  80d898:	e0bffa17 	ldw	r2,-24(fp)
}
  80d89c:	e037883a 	mov	sp,fp
  80d8a0:	dfc00117 	ldw	ra,4(sp)
  80d8a4:	df000017 	ldw	fp,0(sp)
  80d8a8:	dec00204 	addi	sp,sp,8
  80d8ac:	f800283a 	ret

0080d8b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d8b0:	defffd04 	addi	sp,sp,-12
  80d8b4:	dfc00215 	stw	ra,8(sp)
  80d8b8:	df000115 	stw	fp,4(sp)
  80d8bc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80d8c0:	00802074 	movhi	r2,129
  80d8c4:	10884d04 	addi	r2,r2,8500
  80d8c8:	10800017 	ldw	r2,0(r2)
  80d8cc:	1005003a 	cmpeq	r2,r2,zero
  80d8d0:	1000061e 	bne	r2,zero,80d8ec <alt_get_errno+0x3c>
  80d8d4:	00802074 	movhi	r2,129
  80d8d8:	10884d04 	addi	r2,r2,8500
  80d8dc:	10800017 	ldw	r2,0(r2)
  80d8e0:	103ee83a 	callr	r2
  80d8e4:	e0bfff15 	stw	r2,-4(fp)
  80d8e8:	00000306 	br	80d8f8 <alt_get_errno+0x48>
  80d8ec:	00802074 	movhi	r2,129
  80d8f0:	108eef04 	addi	r2,r2,15292
  80d8f4:	e0bfff15 	stw	r2,-4(fp)
  80d8f8:	e0bfff17 	ldw	r2,-4(fp)
}
  80d8fc:	e037883a 	mov	sp,fp
  80d900:	dfc00117 	ldw	ra,4(sp)
  80d904:	df000017 	ldw	fp,0(sp)
  80d908:	dec00204 	addi	sp,sp,8
  80d90c:	f800283a 	ret

0080d910 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d910:	defffd04 	addi	sp,sp,-12
  80d914:	dfc00215 	stw	ra,8(sp)
  80d918:	df000115 	stw	fp,4(sp)
  80d91c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d920:	0009883a 	mov	r4,zero
  80d924:	080df2c0 	call	80df2c <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d928:	080df600 	call	80df60 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d92c:	01002074 	movhi	r4,129
  80d930:	2101b304 	addi	r4,r4,1740
  80d934:	01402074 	movhi	r5,129
  80d938:	2941b304 	addi	r5,r5,1740
  80d93c:	01802074 	movhi	r6,129
  80d940:	3181b304 	addi	r6,r6,1740
  80d944:	080f2c00 	call	80f2c0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d948:	080ee240 	call	80ee24 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d94c:	01002074 	movhi	r4,129
  80d950:	213ba204 	addi	r4,r4,-4472
  80d954:	080faf40 	call	80faf4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d958:	d126ae17 	ldw	r4,-25928(gp)
  80d95c:	d166af17 	ldw	r5,-25924(gp)
  80d960:	d1a6b017 	ldw	r6,-25920(gp)
  80d964:	08004ac0 	call	8004ac <main>
  80d968:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d96c:	01000044 	movi	r4,1
  80d970:	080d2e80 	call	80d2e8 <close>
  exit (result);
  80d974:	e13fff17 	ldw	r4,-4(fp)
  80d978:	080fb080 	call	80fb08 <exit>

0080d97c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d97c:	defffe04 	addi	sp,sp,-8
  80d980:	df000115 	stw	fp,4(sp)
  80d984:	df000104 	addi	fp,sp,4
  80d988:	e13fff15 	stw	r4,-4(fp)
}
  80d98c:	e037883a 	mov	sp,fp
  80d990:	df000017 	ldw	fp,0(sp)
  80d994:	dec00104 	addi	sp,sp,4
  80d998:	f800283a 	ret

0080d99c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d99c:	defffe04 	addi	sp,sp,-8
  80d9a0:	df000115 	stw	fp,4(sp)
  80d9a4:	df000104 	addi	fp,sp,4
  80d9a8:	e13fff15 	stw	r4,-4(fp)
}
  80d9ac:	e037883a 	mov	sp,fp
  80d9b0:	df000017 	ldw	fp,0(sp)
  80d9b4:	dec00104 	addi	sp,sp,4
  80d9b8:	f800283a 	ret

0080d9bc <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
  80d9bc:	defffd04 	addi	sp,sp,-12
  80d9c0:	dfc00215 	stw	ra,8(sp)
  80d9c4:	df000115 	stw	fp,4(sp)
  80d9c8:	df000104 	addi	fp,sp,4
  80d9cc:	e13fff15 	stw	r4,-4(fp)
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
  80d9d0:	00802074 	movhi	r2,129
  80d9d4:	10884204 	addi	r2,r2,8456
  80d9d8:	10800017 	ldw	r2,0(r2)
  80d9dc:	11400217 	ldw	r5,8(r2)
  80d9e0:	e13fff17 	ldw	r4,-4(fp)
  80d9e4:	080fbb40 	call	80fbb4 <fputs>
#endif
}
  80d9e8:	e037883a 	mov	sp,fp
  80d9ec:	dfc00117 	ldw	ra,4(sp)
  80d9f0:	df000017 	ldw	fp,0(sp)
  80d9f4:	dec00204 	addi	sp,sp,8
  80d9f8:	f800283a 	ret

0080d9fc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80d9fc:	defff704 	addi	sp,sp,-36
  80da00:	dfc00815 	stw	ra,32(sp)
  80da04:	df000715 	stw	fp,28(sp)
  80da08:	df000704 	addi	fp,sp,28
  80da0c:	e13ffb15 	stw	r4,-20(fp)
  80da10:	e17ffc15 	stw	r5,-16(fp)
  80da14:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80da18:	e0bffb17 	ldw	r2,-20(fp)
  80da1c:	1004803a 	cmplt	r2,r2,zero
  80da20:	1000091e 	bne	r2,zero,80da48 <read+0x4c>
  80da24:	e13ffb17 	ldw	r4,-20(fp)
  80da28:	01400304 	movi	r5,12
  80da2c:	08032000 	call	803200 <__mulsi3>
  80da30:	1007883a 	mov	r3,r2
  80da34:	00802074 	movhi	r2,129
  80da38:	1083ca04 	addi	r2,r2,3880
  80da3c:	1887883a 	add	r3,r3,r2
  80da40:	e0ffff15 	stw	r3,-4(fp)
  80da44:	00000106 	br	80da4c <read+0x50>
  80da48:	e03fff15 	stw	zero,-4(fp)
  80da4c:	e0bfff17 	ldw	r2,-4(fp)
  80da50:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
  80da54:	e0bffa17 	ldw	r2,-24(fp)
  80da58:	1005003a 	cmpeq	r2,r2,zero
  80da5c:	1000241e 	bne	r2,zero,80daf0 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80da60:	e0bffa17 	ldw	r2,-24(fp)
  80da64:	10800217 	ldw	r2,8(r2)
  80da68:	108000cc 	andi	r2,r2,3
  80da6c:	10800060 	cmpeqi	r2,r2,1
  80da70:	10001a1e 	bne	r2,zero,80dadc <read+0xe0>
  80da74:	e0bffa17 	ldw	r2,-24(fp)
  80da78:	10800017 	ldw	r2,0(r2)
  80da7c:	10800517 	ldw	r2,20(r2)
  80da80:	1005003a 	cmpeq	r2,r2,zero
  80da84:	1000151e 	bne	r2,zero,80dadc <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80da88:	e0bffa17 	ldw	r2,-24(fp)
  80da8c:	10800017 	ldw	r2,0(r2)
  80da90:	10800517 	ldw	r2,20(r2)
  80da94:	e17ffc17 	ldw	r5,-16(fp)
  80da98:	e1bffd17 	ldw	r6,-12(fp)
  80da9c:	e13ffa17 	ldw	r4,-24(fp)
  80daa0:	103ee83a 	callr	r2
  80daa4:	e0bff915 	stw	r2,-28(fp)
  80daa8:	e0bff917 	ldw	r2,-28(fp)
  80daac:	1004403a 	cmpge	r2,r2,zero
  80dab0:	1000071e 	bne	r2,zero,80dad0 <read+0xd4>
        {
          ALT_ERRNO = -rval;
  80dab4:	080db200 	call	80db20 <alt_get_errno>
  80dab8:	e0fff917 	ldw	r3,-28(fp)
  80dabc:	00c7c83a 	sub	r3,zero,r3
  80dac0:	10c00015 	stw	r3,0(r2)
          return -1;
  80dac4:	00bfffc4 	movi	r2,-1
  80dac8:	e0bffe15 	stw	r2,-8(fp)
  80dacc:	00000e06 	br	80db08 <read+0x10c>
        }
        return rval;
  80dad0:	e0bff917 	ldw	r2,-28(fp)
  80dad4:	e0bffe15 	stw	r2,-8(fp)
  80dad8:	00000b06 	br	80db08 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80dadc:	080db200 	call	80db20 <alt_get_errno>
  80dae0:	1007883a 	mov	r3,r2
  80dae4:	00800344 	movi	r2,13
  80dae8:	18800015 	stw	r2,0(r3)
  80daec:	00000406 	br	80db00 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80daf0:	080db200 	call	80db20 <alt_get_errno>
  80daf4:	1007883a 	mov	r3,r2
  80daf8:	00801444 	movi	r2,81
  80dafc:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80db00:	00bfffc4 	movi	r2,-1
  80db04:	e0bffe15 	stw	r2,-8(fp)
  80db08:	e0bffe17 	ldw	r2,-8(fp)
}
  80db0c:	e037883a 	mov	sp,fp
  80db10:	dfc00117 	ldw	ra,4(sp)
  80db14:	df000017 	ldw	fp,0(sp)
  80db18:	dec00204 	addi	sp,sp,8
  80db1c:	f800283a 	ret

0080db20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80db20:	defffd04 	addi	sp,sp,-12
  80db24:	dfc00215 	stw	ra,8(sp)
  80db28:	df000115 	stw	fp,4(sp)
  80db2c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80db30:	00802074 	movhi	r2,129
  80db34:	10884d04 	addi	r2,r2,8500
  80db38:	10800017 	ldw	r2,0(r2)
  80db3c:	1005003a 	cmpeq	r2,r2,zero
  80db40:	1000061e 	bne	r2,zero,80db5c <alt_get_errno+0x3c>
  80db44:	00802074 	movhi	r2,129
  80db48:	10884d04 	addi	r2,r2,8500
  80db4c:	10800017 	ldw	r2,0(r2)
  80db50:	103ee83a 	callr	r2
  80db54:	e0bfff15 	stw	r2,-4(fp)
  80db58:	00000306 	br	80db68 <alt_get_errno+0x48>
  80db5c:	00802074 	movhi	r2,129
  80db60:	108eef04 	addi	r2,r2,15292
  80db64:	e0bfff15 	stw	r2,-4(fp)
  80db68:	e0bfff17 	ldw	r2,-4(fp)
}
  80db6c:	e037883a 	mov	sp,fp
  80db70:	dfc00117 	ldw	ra,4(sp)
  80db74:	df000017 	ldw	fp,0(sp)
  80db78:	dec00204 	addi	sp,sp,8
  80db7c:	f800283a 	ret

0080db80 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80db80:	defffc04 	addi	sp,sp,-16
  80db84:	dfc00315 	stw	ra,12(sp)
  80db88:	df000215 	stw	fp,8(sp)
  80db8c:	dc000115 	stw	r16,4(sp)
  80db90:	df000104 	addi	fp,sp,4
  80db94:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80db98:	e0bfff17 	ldw	r2,-4(fp)
  80db9c:	108000d0 	cmplti	r2,r2,3
  80dba0:	10000f1e 	bne	r2,zero,80dbe0 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
  80dba4:	e13fff17 	ldw	r4,-4(fp)
  80dba8:	04002074 	movhi	r16,129
  80dbac:	8403ca04 	addi	r16,r16,3880
  80dbb0:	01400304 	movi	r5,12
  80dbb4:	08032000 	call	803200 <__mulsi3>
  80dbb8:	1405883a 	add	r2,r2,r16
  80dbbc:	10800204 	addi	r2,r2,8
  80dbc0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80dbc4:	e13fff17 	ldw	r4,-4(fp)
  80dbc8:	04002074 	movhi	r16,129
  80dbcc:	8403ca04 	addi	r16,r16,3880
  80dbd0:	01400304 	movi	r5,12
  80dbd4:	08032000 	call	803200 <__mulsi3>
  80dbd8:	1405883a 	add	r2,r2,r16
  80dbdc:	10000015 	stw	zero,0(r2)
  }
}
  80dbe0:	e037883a 	mov	sp,fp
  80dbe4:	dfc00217 	ldw	ra,8(sp)
  80dbe8:	df000117 	ldw	fp,4(sp)
  80dbec:	dc000017 	ldw	r16,0(sp)
  80dbf0:	dec00304 	addi	sp,sp,12
  80dbf4:	f800283a 	ret

0080dbf8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80dbf8:	defff804 	addi	sp,sp,-32
  80dbfc:	df000715 	stw	fp,28(sp)
  80dc00:	df000704 	addi	fp,sp,28
  80dc04:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80dc08:	0005303a 	rdctl	r2,status
  80dc0c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80dc10:	e0fffb17 	ldw	r3,-20(fp)
  80dc14:	00bfff84 	movi	r2,-2
  80dc18:	1884703a 	and	r2,r3,r2
  80dc1c:	1001703a 	wrctl	status,r2
  
  return context;
  80dc20:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80dc24:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80dc28:	d0a00c17 	ldw	r2,-32720(gp)
  80dc2c:	10c000c4 	addi	r3,r2,3
  80dc30:	00bfff04 	movi	r2,-4
  80dc34:	1884703a 	and	r2,r3,r2
  80dc38:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80dc3c:	d0e00c17 	ldw	r3,-32720(gp)
  80dc40:	e0bffe17 	ldw	r2,-8(fp)
  80dc44:	1887883a 	add	r3,r3,r2
  80dc48:	00804034 	movhi	r2,256
  80dc4c:	10800004 	addi	r2,r2,0
  80dc50:	10c0072e 	bgeu	r2,r3,80dc70 <sbrk+0x78>
  80dc54:	e0bffd17 	ldw	r2,-12(fp)
  80dc58:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80dc5c:	e0bffa17 	ldw	r2,-24(fp)
  80dc60:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80dc64:	00bfffc4 	movi	r2,-1
  80dc68:	e0bfff15 	stw	r2,-4(fp)
  80dc6c:	00000c06 	br	80dca0 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80dc70:	d0a00c17 	ldw	r2,-32720(gp)
  80dc74:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
  80dc78:	d0e00c17 	ldw	r3,-32720(gp)
  80dc7c:	e0bffe17 	ldw	r2,-8(fp)
  80dc80:	1885883a 	add	r2,r3,r2
  80dc84:	d0a00c15 	stw	r2,-32720(gp)
  80dc88:	e0bffd17 	ldw	r2,-12(fp)
  80dc8c:	e0bff915 	stw	r2,-28(fp)
  80dc90:	e0bff917 	ldw	r2,-28(fp)
  80dc94:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80dc98:	e0bffc17 	ldw	r2,-16(fp)
  80dc9c:	e0bfff15 	stw	r2,-4(fp)
  80dca0:	e0bfff17 	ldw	r2,-4(fp)
} 
  80dca4:	e037883a 	mov	sp,fp
  80dca8:	df000017 	ldw	fp,0(sp)
  80dcac:	dec00104 	addi	sp,sp,4
  80dcb0:	f800283a 	ret

0080dcb4 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80dcb4:	defffb04 	addi	sp,sp,-20
  80dcb8:	dfc00415 	stw	ra,16(sp)
  80dcbc:	df000315 	stw	fp,12(sp)
  80dcc0:	df000304 	addi	fp,sp,12
  80dcc4:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80dcc8:	00802074 	movhi	r2,129
  80dccc:	108ef504 	addi	r2,r2,15316
  80dcd0:	10800017 	ldw	r2,0(r2)
  clock_t ticks = alt_nticks(); 
  80dcd4:	e0bffd15 	stw	r2,-12(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80dcd8:	00802074 	movhi	r2,129
  80dcdc:	108ef404 	addi	r2,r2,15312
  80dce0:	10800017 	ldw	r2,0(r2)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80dce4:	1004c03a 	cmpne	r2,r2,zero
  80dce8:	1000061e 	bne	r2,zero,80dd04 <times+0x50>
  {
    ALT_ERRNO = ENOSYS;
  80dcec:	080dd480 	call	80dd48 <alt_get_errno>
  80dcf0:	1007883a 	mov	r3,r2
  80dcf4:	00801604 	movi	r2,88
  80dcf8:	18800015 	stw	r2,0(r3)
    return 0;
  80dcfc:	e03fff15 	stw	zero,-4(fp)
  80dd00:	00000b06 	br	80dd30 <times+0x7c>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80dd04:	e0bffe17 	ldw	r2,-8(fp)
  80dd08:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80dd0c:	e0fffe17 	ldw	r3,-8(fp)
  80dd10:	e0bffd17 	ldw	r2,-12(fp)
  80dd14:	18800115 	stw	r2,4(r3)
  buf->tms_cutime = 0;
  80dd18:	e0bffe17 	ldw	r2,-8(fp)
  80dd1c:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80dd20:	e0bffe17 	ldw	r2,-8(fp)
  80dd24:	10000315 	stw	zero,12(r2)

  return ticks;
  80dd28:	e0bffd17 	ldw	r2,-12(fp)
  80dd2c:	e0bfff15 	stw	r2,-4(fp)
  80dd30:	e0bfff17 	ldw	r2,-4(fp)
}
  80dd34:	e037883a 	mov	sp,fp
  80dd38:	dfc00117 	ldw	ra,4(sp)
  80dd3c:	df000017 	ldw	fp,0(sp)
  80dd40:	dec00204 	addi	sp,sp,8
  80dd44:	f800283a 	ret

0080dd48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80dd48:	defffd04 	addi	sp,sp,-12
  80dd4c:	dfc00215 	stw	ra,8(sp)
  80dd50:	df000115 	stw	fp,4(sp)
  80dd54:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80dd58:	00802074 	movhi	r2,129
  80dd5c:	10884d04 	addi	r2,r2,8500
  80dd60:	10800017 	ldw	r2,0(r2)
  80dd64:	1005003a 	cmpeq	r2,r2,zero
  80dd68:	1000061e 	bne	r2,zero,80dd84 <alt_get_errno+0x3c>
  80dd6c:	00802074 	movhi	r2,129
  80dd70:	10884d04 	addi	r2,r2,8500
  80dd74:	10800017 	ldw	r2,0(r2)
  80dd78:	103ee83a 	callr	r2
  80dd7c:	e0bfff15 	stw	r2,-4(fp)
  80dd80:	00000306 	br	80dd90 <alt_get_errno+0x48>
  80dd84:	00802074 	movhi	r2,129
  80dd88:	108eef04 	addi	r2,r2,15292
  80dd8c:	e0bfff15 	stw	r2,-4(fp)
  80dd90:	e0bfff17 	ldw	r2,-4(fp)
}
  80dd94:	e037883a 	mov	sp,fp
  80dd98:	dfc00117 	ldw	ra,4(sp)
  80dd9c:	df000017 	ldw	fp,0(sp)
  80dda0:	dec00204 	addi	sp,sp,8
  80dda4:	f800283a 	ret

0080dda8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80dda8:	defff704 	addi	sp,sp,-36
  80ddac:	dfc00815 	stw	ra,32(sp)
  80ddb0:	df000715 	stw	fp,28(sp)
  80ddb4:	df000704 	addi	fp,sp,28
  80ddb8:	e13ffb15 	stw	r4,-20(fp)
  80ddbc:	e17ffc15 	stw	r5,-16(fp)
  80ddc0:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ddc4:	e0bffb17 	ldw	r2,-20(fp)
  80ddc8:	1004803a 	cmplt	r2,r2,zero
  80ddcc:	1000091e 	bne	r2,zero,80ddf4 <write+0x4c>
  80ddd0:	e13ffb17 	ldw	r4,-20(fp)
  80ddd4:	01400304 	movi	r5,12
  80ddd8:	08032000 	call	803200 <__mulsi3>
  80dddc:	1007883a 	mov	r3,r2
  80dde0:	00802074 	movhi	r2,129
  80dde4:	1083ca04 	addi	r2,r2,3880
  80dde8:	1887883a 	add	r3,r3,r2
  80ddec:	e0ffff15 	stw	r3,-4(fp)
  80ddf0:	00000106 	br	80ddf8 <write+0x50>
  80ddf4:	e03fff15 	stw	zero,-4(fp)
  80ddf8:	e0bfff17 	ldw	r2,-4(fp)
  80ddfc:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
  80de00:	e0bffa17 	ldw	r2,-24(fp)
  80de04:	1005003a 	cmpeq	r2,r2,zero
  80de08:	1000241e 	bne	r2,zero,80de9c <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80de0c:	e0bffa17 	ldw	r2,-24(fp)
  80de10:	10800217 	ldw	r2,8(r2)
  80de14:	108000cc 	andi	r2,r2,3
  80de18:	1005003a 	cmpeq	r2,r2,zero
  80de1c:	10001a1e 	bne	r2,zero,80de88 <write+0xe0>
  80de20:	e0bffa17 	ldw	r2,-24(fp)
  80de24:	10800017 	ldw	r2,0(r2)
  80de28:	10800617 	ldw	r2,24(r2)
  80de2c:	1005003a 	cmpeq	r2,r2,zero
  80de30:	1000151e 	bne	r2,zero,80de88 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80de34:	e0bffa17 	ldw	r2,-24(fp)
  80de38:	10800017 	ldw	r2,0(r2)
  80de3c:	10800617 	ldw	r2,24(r2)
  80de40:	e17ffc17 	ldw	r5,-16(fp)
  80de44:	e1bffd17 	ldw	r6,-12(fp)
  80de48:	e13ffa17 	ldw	r4,-24(fp)
  80de4c:	103ee83a 	callr	r2
  80de50:	e0bff915 	stw	r2,-28(fp)
  80de54:	e0bff917 	ldw	r2,-28(fp)
  80de58:	1004403a 	cmpge	r2,r2,zero
  80de5c:	1000071e 	bne	r2,zero,80de7c <write+0xd4>
      {
        ALT_ERRNO = -rval;
  80de60:	080decc0 	call	80decc <alt_get_errno>
  80de64:	e0fff917 	ldw	r3,-28(fp)
  80de68:	00c7c83a 	sub	r3,zero,r3
  80de6c:	10c00015 	stw	r3,0(r2)
        return -1;
  80de70:	00bfffc4 	movi	r2,-1
  80de74:	e0bffe15 	stw	r2,-8(fp)
  80de78:	00000e06 	br	80deb4 <write+0x10c>
      }
      return rval;
  80de7c:	e0bff917 	ldw	r2,-28(fp)
  80de80:	e0bffe15 	stw	r2,-8(fp)
  80de84:	00000b06 	br	80deb4 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80de88:	080decc0 	call	80decc <alt_get_errno>
  80de8c:	1007883a 	mov	r3,r2
  80de90:	00800344 	movi	r2,13
  80de94:	18800015 	stw	r2,0(r3)
  80de98:	00000406 	br	80deac <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80de9c:	080decc0 	call	80decc <alt_get_errno>
  80dea0:	1007883a 	mov	r3,r2
  80dea4:	00801444 	movi	r2,81
  80dea8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80deac:	00bfffc4 	movi	r2,-1
  80deb0:	e0bffe15 	stw	r2,-8(fp)
  80deb4:	e0bffe17 	ldw	r2,-8(fp)
}
  80deb8:	e037883a 	mov	sp,fp
  80debc:	dfc00117 	ldw	ra,4(sp)
  80dec0:	df000017 	ldw	fp,0(sp)
  80dec4:	dec00204 	addi	sp,sp,8
  80dec8:	f800283a 	ret

0080decc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80decc:	defffd04 	addi	sp,sp,-12
  80ded0:	dfc00215 	stw	ra,8(sp)
  80ded4:	df000115 	stw	fp,4(sp)
  80ded8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80dedc:	00802074 	movhi	r2,129
  80dee0:	10884d04 	addi	r2,r2,8500
  80dee4:	10800017 	ldw	r2,0(r2)
  80dee8:	1005003a 	cmpeq	r2,r2,zero
  80deec:	1000061e 	bne	r2,zero,80df08 <alt_get_errno+0x3c>
  80def0:	00802074 	movhi	r2,129
  80def4:	10884d04 	addi	r2,r2,8500
  80def8:	10800017 	ldw	r2,0(r2)
  80defc:	103ee83a 	callr	r2
  80df00:	e0bfff15 	stw	r2,-4(fp)
  80df04:	00000306 	br	80df14 <alt_get_errno+0x48>
  80df08:	00802074 	movhi	r2,129
  80df0c:	108eef04 	addi	r2,r2,15292
  80df10:	e0bfff15 	stw	r2,-4(fp)
  80df14:	e0bfff17 	ldw	r2,-4(fp)
}
  80df18:	e037883a 	mov	sp,fp
  80df1c:	dfc00117 	ldw	ra,4(sp)
  80df20:	df000017 	ldw	fp,0(sp)
  80df24:	dec00204 	addi	sp,sp,8
  80df28:	f800283a 	ret

0080df2c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80df2c:	defffd04 	addi	sp,sp,-12
  80df30:	dfc00215 	stw	ra,8(sp)
  80df34:	df000115 	stw	fp,4(sp)
  80df38:	df000104 	addi	fp,sp,4
  80df3c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80df40:	080f7c00 	call	80f7c0 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80df44:	00800044 	movi	r2,1
  80df48:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80df4c:	e037883a 	mov	sp,fp
  80df50:	dfc00117 	ldw	ra,4(sp)
  80df54:	df000017 	ldw	fp,0(sp)
  80df58:	dec00204 	addi	sp,sp,8
  80df5c:	f800283a 	ret

0080df60 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80df60:	defffe04 	addi	sp,sp,-8
  80df64:	dfc00115 	stw	ra,4(sp)
  80df68:	df000015 	stw	fp,0(sp)
  80df6c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80df70:	01004034 	movhi	r4,256
  80df74:	21040004 	addi	r4,r4,4096
  80df78:	000b883a 	mov	r5,zero
  80df7c:	01800044 	movi	r6,1
  80df80:	01c0fa04 	movi	r7,1000
  80df84:	080eb100 	call	80eb10 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80df88:	01002074 	movhi	r4,129
  80df8c:	21043404 	addi	r4,r4,4304
  80df90:	000b883a 	mov	r5,zero
  80df94:	01800404 	movi	r6,16
  80df98:	080e13c0 	call	80e13c <altera_avalon_jtag_uart_init>
  80df9c:	01002074 	movhi	r4,129
  80dfa0:	21042a04 	addi	r4,r4,4264
  80dfa4:	080dfbc0 	call	80dfbc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
}
  80dfa8:	e037883a 	mov	sp,fp
  80dfac:	dfc00117 	ldw	ra,4(sp)
  80dfb0:	df000017 	ldw	fp,0(sp)
  80dfb4:	dec00204 	addi	sp,sp,8
  80dfb8:	f800283a 	ret

0080dfbc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80dfbc:	defffd04 	addi	sp,sp,-12
  80dfc0:	dfc00215 	stw	ra,8(sp)
  80dfc4:	df000115 	stw	fp,4(sp)
  80dfc8:	df000104 	addi	fp,sp,4
  80dfcc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80dfd0:	e13fff17 	ldw	r4,-4(fp)
  80dfd4:	01402074 	movhi	r5,129
  80dfd8:	29484a04 	addi	r5,r5,8488
  80dfdc:	080ed100 	call	80ed10 <alt_dev_llist_insert>
}
  80dfe0:	e037883a 	mov	sp,fp
  80dfe4:	dfc00117 	ldw	ra,4(sp)
  80dfe8:	df000017 	ldw	fp,0(sp)
  80dfec:	dec00204 	addi	sp,sp,8
  80dff0:	f800283a 	ret

0080dff4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80dff4:	defffa04 	addi	sp,sp,-24
  80dff8:	dfc00515 	stw	ra,20(sp)
  80dffc:	df000415 	stw	fp,16(sp)
  80e000:	df000404 	addi	fp,sp,16
  80e004:	e13ffd15 	stw	r4,-12(fp)
  80e008:	e17ffe15 	stw	r5,-8(fp)
  80e00c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e010:	e0bffd17 	ldw	r2,-12(fp)
  80e014:	10800017 	ldw	r2,0(r2)
  80e018:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80e01c:	e0bffc17 	ldw	r2,-16(fp)
  80e020:	11000a04 	addi	r4,r2,40
  80e024:	e0bffd17 	ldw	r2,-12(fp)
  80e028:	11c00217 	ldw	r7,8(r2)
  80e02c:	e17ffe17 	ldw	r5,-8(fp)
  80e030:	e1bfff17 	ldw	r6,-4(fp)
  80e034:	080e63c0 	call	80e63c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80e038:	e037883a 	mov	sp,fp
  80e03c:	dfc00117 	ldw	ra,4(sp)
  80e040:	df000017 	ldw	fp,0(sp)
  80e044:	dec00204 	addi	sp,sp,8
  80e048:	f800283a 	ret

0080e04c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80e04c:	defffa04 	addi	sp,sp,-24
  80e050:	dfc00515 	stw	ra,20(sp)
  80e054:	df000415 	stw	fp,16(sp)
  80e058:	df000404 	addi	fp,sp,16
  80e05c:	e13ffd15 	stw	r4,-12(fp)
  80e060:	e17ffe15 	stw	r5,-8(fp)
  80e064:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e068:	e0bffd17 	ldw	r2,-12(fp)
  80e06c:	10800017 	ldw	r2,0(r2)
  80e070:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80e074:	e0bffc17 	ldw	r2,-16(fp)
  80e078:	11000a04 	addi	r4,r2,40
  80e07c:	e0bffd17 	ldw	r2,-12(fp)
  80e080:	11c00217 	ldw	r7,8(r2)
  80e084:	e17ffe17 	ldw	r5,-8(fp)
  80e088:	e1bfff17 	ldw	r6,-4(fp)
  80e08c:	080e8600 	call	80e860 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80e090:	e037883a 	mov	sp,fp
  80e094:	dfc00117 	ldw	ra,4(sp)
  80e098:	df000017 	ldw	fp,0(sp)
  80e09c:	dec00204 	addi	sp,sp,8
  80e0a0:	f800283a 	ret

0080e0a4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80e0a4:	defffc04 	addi	sp,sp,-16
  80e0a8:	dfc00315 	stw	ra,12(sp)
  80e0ac:	df000215 	stw	fp,8(sp)
  80e0b0:	df000204 	addi	fp,sp,8
  80e0b4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e0b8:	e0bfff17 	ldw	r2,-4(fp)
  80e0bc:	10800017 	ldw	r2,0(r2)
  80e0c0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80e0c4:	e0bffe17 	ldw	r2,-8(fp)
  80e0c8:	11000a04 	addi	r4,r2,40
  80e0cc:	e0bfff17 	ldw	r2,-4(fp)
  80e0d0:	11400217 	ldw	r5,8(r2)
  80e0d4:	080e4d40 	call	80e4d4 <altera_avalon_jtag_uart_close>
}
  80e0d8:	e037883a 	mov	sp,fp
  80e0dc:	dfc00117 	ldw	ra,4(sp)
  80e0e0:	df000017 	ldw	fp,0(sp)
  80e0e4:	dec00204 	addi	sp,sp,8
  80e0e8:	f800283a 	ret

0080e0ec <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80e0ec:	defffa04 	addi	sp,sp,-24
  80e0f0:	dfc00515 	stw	ra,20(sp)
  80e0f4:	df000415 	stw	fp,16(sp)
  80e0f8:	df000404 	addi	fp,sp,16
  80e0fc:	e13ffd15 	stw	r4,-12(fp)
  80e100:	e17ffe15 	stw	r5,-8(fp)
  80e104:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80e108:	e0bffd17 	ldw	r2,-12(fp)
  80e10c:	10800017 	ldw	r2,0(r2)
  80e110:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80e114:	e0bffc17 	ldw	r2,-16(fp)
  80e118:	11000a04 	addi	r4,r2,40
  80e11c:	e17ffe17 	ldw	r5,-8(fp)
  80e120:	e1bfff17 	ldw	r6,-4(fp)
  80e124:	080e5480 	call	80e548 <altera_avalon_jtag_uart_ioctl>
}
  80e128:	e037883a 	mov	sp,fp
  80e12c:	dfc00117 	ldw	ra,4(sp)
  80e130:	df000017 	ldw	fp,0(sp)
  80e134:	dec00204 	addi	sp,sp,8
  80e138:	f800283a 	ret

0080e13c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e13c:	defffa04 	addi	sp,sp,-24
  80e140:	dfc00515 	stw	ra,20(sp)
  80e144:	df000415 	stw	fp,16(sp)
  80e148:	df000404 	addi	fp,sp,16
  80e14c:	e13ffd15 	stw	r4,-12(fp)
  80e150:	e17ffe15 	stw	r5,-8(fp)
  80e154:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e158:	e0fffd17 	ldw	r3,-12(fp)
  80e15c:	00800044 	movi	r2,1
  80e160:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e164:	e0bffd17 	ldw	r2,-12(fp)
  80e168:	10800017 	ldw	r2,0(r2)
  80e16c:	11000104 	addi	r4,r2,4
  80e170:	e0bffd17 	ldw	r2,-12(fp)
  80e174:	10800817 	ldw	r2,32(r2)
  80e178:	1007883a 	mov	r3,r2
  80e17c:	2005883a 	mov	r2,r4
  80e180:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e184:	e13ffe17 	ldw	r4,-8(fp)
  80e188:	e17fff17 	ldw	r5,-4(fp)
  80e18c:	d8000015 	stw	zero,0(sp)
  80e190:	01802074 	movhi	r6,129
  80e194:	31b87f04 	addi	r6,r6,-7684
  80e198:	e1fffd17 	ldw	r7,-12(fp)
  80e19c:	080ef1c0 	call	80ef1c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e1a0:	e0bffd17 	ldw	r2,-12(fp)
  80e1a4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e1a8:	e0bffd17 	ldw	r2,-12(fp)
  80e1ac:	11000204 	addi	r4,r2,8
  80e1b0:	00802074 	movhi	r2,129
  80e1b4:	108ef404 	addi	r2,r2,15312
  80e1b8:	10800017 	ldw	r2,0(r2)
  80e1bc:	100b883a 	mov	r5,r2
  80e1c0:	01802074 	movhi	r6,129
  80e1c4:	31b90904 	addi	r6,r6,-7132
  80e1c8:	e1fffd17 	ldw	r7,-12(fp)
  80e1cc:	080eba00 	call	80eba0 <alt_alarm_start>
  80e1d0:	1004403a 	cmpge	r2,r2,zero
  80e1d4:	1000041e 	bne	r2,zero,80e1e8 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e1d8:	e0fffd17 	ldw	r3,-12(fp)
  80e1dc:	00a00034 	movhi	r2,32768
  80e1e0:	10bfffc4 	addi	r2,r2,-1
  80e1e4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e1e8:	e037883a 	mov	sp,fp
  80e1ec:	dfc00117 	ldw	ra,4(sp)
  80e1f0:	df000017 	ldw	fp,0(sp)
  80e1f4:	dec00204 	addi	sp,sp,8
  80e1f8:	f800283a 	ret

0080e1fc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e1fc:	defff804 	addi	sp,sp,-32
  80e200:	df000715 	stw	fp,28(sp)
  80e204:	df000704 	addi	fp,sp,28
  80e208:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e20c:	e0bfff17 	ldw	r2,-4(fp)
  80e210:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
  80e214:	e0bffe17 	ldw	r2,-8(fp)
  80e218:	10800017 	ldw	r2,0(r2)
  80e21c:	e0bffd15 	stw	r2,-12(fp)
  80e220:	00000006 	br	80e224 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e224:	e0bffd17 	ldw	r2,-12(fp)
  80e228:	10800104 	addi	r2,r2,4
  80e22c:	10800037 	ldwio	r2,0(r2)
  80e230:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e234:	e0bffc17 	ldw	r2,-16(fp)
  80e238:	1080c00c 	andi	r2,r2,768
  80e23c:	1005003a 	cmpeq	r2,r2,zero
  80e240:	1000741e 	bne	r2,zero,80e414 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e244:	e0bffc17 	ldw	r2,-16(fp)
  80e248:	1080400c 	andi	r2,r2,256
  80e24c:	1005003a 	cmpeq	r2,r2,zero
  80e250:	1000351e 	bne	r2,zero,80e328 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e254:	00800074 	movhi	r2,1
  80e258:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e25c:	e0bffe17 	ldw	r2,-8(fp)
  80e260:	10800a17 	ldw	r2,40(r2)
  80e264:	10800044 	addi	r2,r2,1
  80e268:	1081ffcc 	andi	r2,r2,2047
  80e26c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80e270:	e0bffe17 	ldw	r2,-8(fp)
  80e274:	10c00b17 	ldw	r3,44(r2)
  80e278:	e0bffa17 	ldw	r2,-24(fp)
  80e27c:	18801626 	beq	r3,r2,80e2d8 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e280:	e0bffd17 	ldw	r2,-12(fp)
  80e284:	10800037 	ldwio	r2,0(r2)
  80e288:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e28c:	e0bffb17 	ldw	r2,-20(fp)
  80e290:	10a0000c 	andi	r2,r2,32768
  80e294:	1005003a 	cmpeq	r2,r2,zero
  80e298:	10000f1e 	bne	r2,zero,80e2d8 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80e29c:	e0bffe17 	ldw	r2,-8(fp)
  80e2a0:	10c00a17 	ldw	r3,40(r2)
  80e2a4:	e0bffb17 	ldw	r2,-20(fp)
  80e2a8:	1009883a 	mov	r4,r2
  80e2ac:	e0bffe17 	ldw	r2,-8(fp)
  80e2b0:	1885883a 	add	r2,r3,r2
  80e2b4:	10800e04 	addi	r2,r2,56
  80e2b8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e2bc:	e0bffe17 	ldw	r2,-8(fp)
  80e2c0:	10800a17 	ldw	r2,40(r2)
  80e2c4:	10800044 	addi	r2,r2,1
  80e2c8:	10c1ffcc 	andi	r3,r2,2047
  80e2cc:	e0bffe17 	ldw	r2,-8(fp)
  80e2d0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80e2d4:	003fe106 	br	80e25c <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80e2d8:	e0bffb17 	ldw	r2,-20(fp)
  80e2dc:	10bfffec 	andhi	r2,r2,65535
  80e2e0:	1005003a 	cmpeq	r2,r2,zero
  80e2e4:	1000101e 	bne	r2,zero,80e328 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e2e8:	e0bffe17 	ldw	r2,-8(fp)
  80e2ec:	10c00817 	ldw	r3,32(r2)
  80e2f0:	00bfff84 	movi	r2,-2
  80e2f4:	1886703a 	and	r3,r3,r2
  80e2f8:	e0bffe17 	ldw	r2,-8(fp)
  80e2fc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80e300:	e0bffd17 	ldw	r2,-12(fp)
  80e304:	11000104 	addi	r4,r2,4
  80e308:	e0bffe17 	ldw	r2,-8(fp)
  80e30c:	10800817 	ldw	r2,32(r2)
  80e310:	1007883a 	mov	r3,r2
  80e314:	2005883a 	mov	r2,r4
  80e318:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e31c:	e0bffd17 	ldw	r2,-12(fp)
  80e320:	10800104 	addi	r2,r2,4
  80e324:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80e328:	e0bffc17 	ldw	r2,-16(fp)
  80e32c:	1080800c 	andi	r2,r2,512
  80e330:	1005003a 	cmpeq	r2,r2,zero
  80e334:	103fbb1e 	bne	r2,zero,80e224 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80e338:	e0bffc17 	ldw	r2,-16(fp)
  80e33c:	10bfffec 	andhi	r2,r2,65535
  80e340:	1004d43a 	srli	r2,r2,16
  80e344:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e348:	00001506 	br	80e3a0 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80e34c:	e13ffd17 	ldw	r4,-12(fp)
  80e350:	e0bffe17 	ldw	r2,-8(fp)
  80e354:	10c00d17 	ldw	r3,52(r2)
  80e358:	e0bffe17 	ldw	r2,-8(fp)
  80e35c:	1885883a 	add	r2,r3,r2
  80e360:	10820e04 	addi	r2,r2,2104
  80e364:	10800003 	ldbu	r2,0(r2)
  80e368:	10c03fcc 	andi	r3,r2,255
  80e36c:	18c0201c 	xori	r3,r3,128
  80e370:	18ffe004 	addi	r3,r3,-128
  80e374:	2005883a 	mov	r2,r4
  80e378:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e37c:	e0bffe17 	ldw	r2,-8(fp)
  80e380:	10800d17 	ldw	r2,52(r2)
  80e384:	10800044 	addi	r2,r2,1
  80e388:	10c1ffcc 	andi	r3,r2,2047
  80e38c:	e0bffe17 	ldw	r2,-8(fp)
  80e390:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80e394:	e0bff917 	ldw	r2,-28(fp)
  80e398:	10bfffc4 	addi	r2,r2,-1
  80e39c:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e3a0:	e0bff917 	ldw	r2,-28(fp)
  80e3a4:	1005003a 	cmpeq	r2,r2,zero
  80e3a8:	1000051e 	bne	r2,zero,80e3c0 <altera_avalon_jtag_uart_irq+0x1c4>
  80e3ac:	e0bffe17 	ldw	r2,-8(fp)
  80e3b0:	10c00d17 	ldw	r3,52(r2)
  80e3b4:	e0bffe17 	ldw	r2,-8(fp)
  80e3b8:	10800c17 	ldw	r2,48(r2)
  80e3bc:	18bfe31e 	bne	r3,r2,80e34c <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80e3c0:	e0bff917 	ldw	r2,-28(fp)
  80e3c4:	1005003a 	cmpeq	r2,r2,zero
  80e3c8:	103f961e 	bne	r2,zero,80e224 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e3cc:	e0bffe17 	ldw	r2,-8(fp)
  80e3d0:	10c00817 	ldw	r3,32(r2)
  80e3d4:	00bfff44 	movi	r2,-3
  80e3d8:	1886703a 	and	r3,r3,r2
  80e3dc:	e0bffe17 	ldw	r2,-8(fp)
  80e3e0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e3e4:	e0bffe17 	ldw	r2,-8(fp)
  80e3e8:	10800017 	ldw	r2,0(r2)
  80e3ec:	11000104 	addi	r4,r2,4
  80e3f0:	e0bffe17 	ldw	r2,-8(fp)
  80e3f4:	10800817 	ldw	r2,32(r2)
  80e3f8:	1007883a 	mov	r3,r2
  80e3fc:	2005883a 	mov	r2,r4
  80e400:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e404:	e0bffd17 	ldw	r2,-12(fp)
  80e408:	10800104 	addi	r2,r2,4
  80e40c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80e410:	003f8406 	br	80e224 <altera_avalon_jtag_uart_irq+0x28>
}
  80e414:	e037883a 	mov	sp,fp
  80e418:	df000017 	ldw	fp,0(sp)
  80e41c:	dec00104 	addi	sp,sp,4
  80e420:	f800283a 	ret

0080e424 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e424:	defffc04 	addi	sp,sp,-16
  80e428:	df000315 	stw	fp,12(sp)
  80e42c:	df000304 	addi	fp,sp,12
  80e430:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e434:	e0bfff17 	ldw	r2,-4(fp)
  80e438:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e43c:	e0bffe17 	ldw	r2,-8(fp)
  80e440:	10800017 	ldw	r2,0(r2)
  80e444:	10800104 	addi	r2,r2,4
  80e448:	10800037 	ldwio	r2,0(r2)
  80e44c:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e450:	e0bffd17 	ldw	r2,-12(fp)
  80e454:	1081000c 	andi	r2,r2,1024
  80e458:	1005003a 	cmpeq	r2,r2,zero
  80e45c:	10000c1e 	bne	r2,zero,80e490 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e460:	e0bffe17 	ldw	r2,-8(fp)
  80e464:	10800017 	ldw	r2,0(r2)
  80e468:	11000104 	addi	r4,r2,4
  80e46c:	e0bffe17 	ldw	r2,-8(fp)
  80e470:	10800817 	ldw	r2,32(r2)
  80e474:	10810014 	ori	r2,r2,1024
  80e478:	1007883a 	mov	r3,r2
  80e47c:	2005883a 	mov	r2,r4
  80e480:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
  80e484:	e0bffe17 	ldw	r2,-8(fp)
  80e488:	10000915 	stw	zero,36(r2)
  80e48c:	00000a06 	br	80e4b8 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e490:	e0bffe17 	ldw	r2,-8(fp)
  80e494:	10c00917 	ldw	r3,36(r2)
  80e498:	00a00034 	movhi	r2,32768
  80e49c:	10bfff04 	addi	r2,r2,-4
  80e4a0:	10c00536 	bltu	r2,r3,80e4b8 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
  80e4a4:	e0bffe17 	ldw	r2,-8(fp)
  80e4a8:	10800917 	ldw	r2,36(r2)
  80e4ac:	10c00044 	addi	r3,r2,1
  80e4b0:	e0bffe17 	ldw	r2,-8(fp)
  80e4b4:	10c00915 	stw	r3,36(r2)
  80e4b8:	00802074 	movhi	r2,129
  80e4bc:	108ef404 	addi	r2,r2,15312
  80e4c0:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e4c4:	e037883a 	mov	sp,fp
  80e4c8:	df000017 	ldw	fp,0(sp)
  80e4cc:	dec00104 	addi	sp,sp,4
  80e4d0:	f800283a 	ret

0080e4d4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e4d4:	defffc04 	addi	sp,sp,-16
  80e4d8:	df000315 	stw	fp,12(sp)
  80e4dc:	df000304 	addi	fp,sp,12
  80e4e0:	e13ffd15 	stw	r4,-12(fp)
  80e4e4:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e4e8:	00000706 	br	80e508 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
  80e4ec:	e0bffe17 	ldw	r2,-8(fp)
  80e4f0:	1090000c 	andi	r2,r2,16384
  80e4f4:	1005003a 	cmpeq	r2,r2,zero
  80e4f8:	1000031e 	bne	r2,zero,80e508 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
  80e4fc:	00bffd44 	movi	r2,-11
  80e500:	e0bfff15 	stw	r2,-4(fp)
  80e504:	00000b06 	br	80e534 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e508:	e0bffd17 	ldw	r2,-12(fp)
  80e50c:	10c00d17 	ldw	r3,52(r2)
  80e510:	e0bffd17 	ldw	r2,-12(fp)
  80e514:	10800c17 	ldw	r2,48(r2)
  80e518:	18800526 	beq	r3,r2,80e530 <altera_avalon_jtag_uart_close+0x5c>
  80e51c:	e0bffd17 	ldw	r2,-12(fp)
  80e520:	10c00917 	ldw	r3,36(r2)
  80e524:	e0bffd17 	ldw	r2,-12(fp)
  80e528:	10800117 	ldw	r2,4(r2)
  80e52c:	18bfef36 	bltu	r3,r2,80e4ec <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80e530:	e03fff15 	stw	zero,-4(fp)
  80e534:	e0bfff17 	ldw	r2,-4(fp)
}
  80e538:	e037883a 	mov	sp,fp
  80e53c:	df000017 	ldw	fp,0(sp)
  80e540:	dec00104 	addi	sp,sp,4
  80e544:	f800283a 	ret

0080e548 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e548:	defff804 	addi	sp,sp,-32
  80e54c:	df000715 	stw	fp,28(sp)
  80e550:	df000704 	addi	fp,sp,28
  80e554:	e13ffb15 	stw	r4,-20(fp)
  80e558:	e17ffc15 	stw	r5,-16(fp)
  80e55c:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
  80e560:	00bff9c4 	movi	r2,-25
  80e564:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
  80e568:	e0bffc17 	ldw	r2,-16(fp)
  80e56c:	e0bfff15 	stw	r2,-4(fp)
  80e570:	e0ffff17 	ldw	r3,-4(fp)
  80e574:	189a8060 	cmpeqi	r2,r3,27137
  80e578:	1000041e 	bne	r2,zero,80e58c <altera_avalon_jtag_uart_ioctl+0x44>
  80e57c:	e0ffff17 	ldw	r3,-4(fp)
  80e580:	189a80a0 	cmpeqi	r2,r3,27138
  80e584:	10001b1e 	bne	r2,zero,80e5f4 <altera_avalon_jtag_uart_ioctl+0xac>
  80e588:	00002706 	br	80e628 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80e58c:	e0bffb17 	ldw	r2,-20(fp)
  80e590:	10c00117 	ldw	r3,4(r2)
  80e594:	00a00034 	movhi	r2,32768
  80e598:	10bfffc4 	addi	r2,r2,-1
  80e59c:	18802226 	beq	r3,r2,80e628 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
  80e5a0:	e0bffd17 	ldw	r2,-12(fp)
  80e5a4:	10800017 	ldw	r2,0(r2)
  80e5a8:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e5ac:	e0bff917 	ldw	r2,-28(fp)
  80e5b0:	10800090 	cmplti	r2,r2,2
  80e5b4:	1000071e 	bne	r2,zero,80e5d4 <altera_avalon_jtag_uart_ioctl+0x8c>
  80e5b8:	e0fff917 	ldw	r3,-28(fp)
  80e5bc:	00a00034 	movhi	r2,32768
  80e5c0:	10bfffc4 	addi	r2,r2,-1
  80e5c4:	18800326 	beq	r3,r2,80e5d4 <altera_avalon_jtag_uart_ioctl+0x8c>
  80e5c8:	e0bff917 	ldw	r2,-28(fp)
  80e5cc:	e0bffe15 	stw	r2,-8(fp)
  80e5d0:	00000306 	br	80e5e0 <altera_avalon_jtag_uart_ioctl+0x98>
  80e5d4:	00e00034 	movhi	r3,32768
  80e5d8:	18ffff84 	addi	r3,r3,-2
  80e5dc:	e0fffe15 	stw	r3,-8(fp)
  80e5e0:	e0bffb17 	ldw	r2,-20(fp)
  80e5e4:	e0fffe17 	ldw	r3,-8(fp)
  80e5e8:	10c00115 	stw	r3,4(r2)
      rc = 0;
  80e5ec:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
  80e5f0:	00000d06 	br	80e628 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e5f4:	e0bffb17 	ldw	r2,-20(fp)
  80e5f8:	10c00117 	ldw	r3,4(r2)
  80e5fc:	00a00034 	movhi	r2,32768
  80e600:	10bfffc4 	addi	r2,r2,-1
  80e604:	18800826 	beq	r3,r2,80e628 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e608:	e13ffd17 	ldw	r4,-12(fp)
  80e60c:	e0bffb17 	ldw	r2,-20(fp)
  80e610:	10c00917 	ldw	r3,36(r2)
  80e614:	e0bffb17 	ldw	r2,-20(fp)
  80e618:	10800117 	ldw	r2,4(r2)
  80e61c:	1885803a 	cmpltu	r2,r3,r2
  80e620:	20800015 	stw	r2,0(r4)
      rc = 0;
  80e624:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
  80e628:	e0bffa17 	ldw	r2,-24(fp)
}
  80e62c:	e037883a 	mov	sp,fp
  80e630:	df000017 	ldw	fp,0(sp)
  80e634:	dec00104 	addi	sp,sp,4
  80e638:	f800283a 	ret

0080e63c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e63c:	defff204 	addi	sp,sp,-56
  80e640:	dfc00d15 	stw	ra,52(sp)
  80e644:	df000c15 	stw	fp,48(sp)
  80e648:	df000c04 	addi	fp,sp,48
  80e64c:	e13ffb15 	stw	r4,-20(fp)
  80e650:	e17ffc15 	stw	r5,-16(fp)
  80e654:	e1bffd15 	stw	r6,-12(fp)
  80e658:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
  80e65c:	e0bffc17 	ldw	r2,-16(fp)
  80e660:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e664:	00004806 	br	80e788 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e668:	e0bffb17 	ldw	r2,-20(fp)
  80e66c:	10800a17 	ldw	r2,40(r2)
  80e670:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e674:	e0bffb17 	ldw	r2,-20(fp)
  80e678:	10800b17 	ldw	r2,44(r2)
  80e67c:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
  80e680:	e0fff717 	ldw	r3,-36(fp)
  80e684:	e0bff617 	ldw	r2,-40(fp)
  80e688:	18800536 	bltu	r3,r2,80e6a0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e68c:	e0bff717 	ldw	r2,-36(fp)
  80e690:	e0fff617 	ldw	r3,-40(fp)
  80e694:	10c5c83a 	sub	r2,r2,r3
  80e698:	e0bff815 	stw	r2,-32(fp)
  80e69c:	00000406 	br	80e6b0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e6a0:	00820004 	movi	r2,2048
  80e6a4:	e0fff617 	ldw	r3,-40(fp)
  80e6a8:	10c5c83a 	sub	r2,r2,r3
  80e6ac:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
  80e6b0:	e0bff817 	ldw	r2,-32(fp)
  80e6b4:	1005003a 	cmpeq	r2,r2,zero
  80e6b8:	10001f1e 	bne	r2,zero,80e738 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
  80e6bc:	e0fffd17 	ldw	r3,-12(fp)
  80e6c0:	e0bff817 	ldw	r2,-32(fp)
  80e6c4:	1880022e 	bgeu	r3,r2,80e6d0 <altera_avalon_jtag_uart_read+0x94>
        n = space;
  80e6c8:	e0bffd17 	ldw	r2,-12(fp)
  80e6cc:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e6d0:	e0bffb17 	ldw	r2,-20(fp)
  80e6d4:	10c00e04 	addi	r3,r2,56
  80e6d8:	e0bff617 	ldw	r2,-40(fp)
  80e6dc:	1887883a 	add	r3,r3,r2
  80e6e0:	e0bffa17 	ldw	r2,-24(fp)
  80e6e4:	1009883a 	mov	r4,r2
  80e6e8:	180b883a 	mov	r5,r3
  80e6ec:	e1bff817 	ldw	r6,-32(fp)
  80e6f0:	0809bfc0 	call	809bfc <memcpy>
      ptr   += n;
  80e6f4:	e0fff817 	ldw	r3,-32(fp)
  80e6f8:	e0bffa17 	ldw	r2,-24(fp)
  80e6fc:	10c5883a 	add	r2,r2,r3
  80e700:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
  80e704:	e0fffd17 	ldw	r3,-12(fp)
  80e708:	e0bff817 	ldw	r2,-32(fp)
  80e70c:	1885c83a 	sub	r2,r3,r2
  80e710:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e714:	e0fff617 	ldw	r3,-40(fp)
  80e718:	e0bff817 	ldw	r2,-32(fp)
  80e71c:	1885883a 	add	r2,r3,r2
  80e720:	10c1ffcc 	andi	r3,r2,2047
  80e724:	e0bffb17 	ldw	r2,-20(fp)
  80e728:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e72c:	e0bffd17 	ldw	r2,-12(fp)
  80e730:	10800048 	cmpgei	r2,r2,1
  80e734:	103fcc1e 	bne	r2,zero,80e668 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
  80e738:	e0fffa17 	ldw	r3,-24(fp)
  80e73c:	e0bffc17 	ldw	r2,-16(fp)
  80e740:	1880141e 	bne	r3,r2,80e794 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e744:	e0bffe17 	ldw	r2,-8(fp)
  80e748:	1090000c 	andi	r2,r2,16384
  80e74c:	1004c03a 	cmpne	r2,r2,zero
  80e750:	1000101e 	bne	r2,zero,80e794 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e754:	e0bffb17 	ldw	r2,-20(fp)
  80e758:	10c00a17 	ldw	r3,40(r2)
  80e75c:	e0bff717 	ldw	r2,-36(fp)
  80e760:	1880051e 	bne	r3,r2,80e778 <altera_avalon_jtag_uart_read+0x13c>
  80e764:	e0bffb17 	ldw	r2,-20(fp)
  80e768:	10c00917 	ldw	r3,36(r2)
  80e76c:	e0bffb17 	ldw	r2,-20(fp)
  80e770:	10800117 	ldw	r2,4(r2)
  80e774:	18bff736 	bltu	r3,r2,80e754 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e778:	e0bffb17 	ldw	r2,-20(fp)
  80e77c:	10c00a17 	ldw	r3,40(r2)
  80e780:	e0bff717 	ldw	r2,-36(fp)
  80e784:	18800326 	beq	r3,r2,80e794 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e788:	e0bffd17 	ldw	r2,-12(fp)
  80e78c:	10800048 	cmpgei	r2,r2,1
  80e790:	103fb51e 	bne	r2,zero,80e668 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e794:	e0fffa17 	ldw	r3,-24(fp)
  80e798:	e0bffc17 	ldw	r2,-16(fp)
  80e79c:	18801926 	beq	r3,r2,80e804 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e7a0:	0005303a 	rdctl	r2,status
  80e7a4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e7a8:	e0fff517 	ldw	r3,-44(fp)
  80e7ac:	00bfff84 	movi	r2,-2
  80e7b0:	1884703a 	and	r2,r3,r2
  80e7b4:	1001703a 	wrctl	status,r2
  
  return context;
  80e7b8:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e7bc:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e7c0:	e0bffb17 	ldw	r2,-20(fp)
  80e7c4:	10800817 	ldw	r2,32(r2)
  80e7c8:	10c00054 	ori	r3,r2,1
  80e7cc:	e0bffb17 	ldw	r2,-20(fp)
  80e7d0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e7d4:	e0bffb17 	ldw	r2,-20(fp)
  80e7d8:	10800017 	ldw	r2,0(r2)
  80e7dc:	11000104 	addi	r4,r2,4
  80e7e0:	e0bffb17 	ldw	r2,-20(fp)
  80e7e4:	10800817 	ldw	r2,32(r2)
  80e7e8:	1007883a 	mov	r3,r2
  80e7ec:	2005883a 	mov	r2,r4
  80e7f0:	10c00035 	stwio	r3,0(r2)
  80e7f4:	e0bff917 	ldw	r2,-28(fp)
  80e7f8:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e7fc:	e0bff417 	ldw	r2,-48(fp)
  80e800:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e804:	e0fffa17 	ldw	r3,-24(fp)
  80e808:	e0bffc17 	ldw	r2,-16(fp)
  80e80c:	18800526 	beq	r3,r2,80e824 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
  80e810:	e0fffa17 	ldw	r3,-24(fp)
  80e814:	e0bffc17 	ldw	r2,-16(fp)
  80e818:	1887c83a 	sub	r3,r3,r2
  80e81c:	e0ffff15 	stw	r3,-4(fp)
  80e820:	00000906 	br	80e848 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80e824:	e0bffe17 	ldw	r2,-8(fp)
  80e828:	1090000c 	andi	r2,r2,16384
  80e82c:	1005003a 	cmpeq	r2,r2,zero
  80e830:	1000031e 	bne	r2,zero,80e840 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e834:	00bffd44 	movi	r2,-11
  80e838:	e0bfff15 	stw	r2,-4(fp)
  80e83c:	00000206 	br	80e848 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80e840:	00bffec4 	movi	r2,-5
  80e844:	e0bfff15 	stw	r2,-4(fp)
  80e848:	e0bfff17 	ldw	r2,-4(fp)
}
  80e84c:	e037883a 	mov	sp,fp
  80e850:	dfc00117 	ldw	ra,4(sp)
  80e854:	df000017 	ldw	fp,0(sp)
  80e858:	dec00204 	addi	sp,sp,8
  80e85c:	f800283a 	ret

0080e860 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e860:	defff204 	addi	sp,sp,-56
  80e864:	dfc00d15 	stw	ra,52(sp)
  80e868:	df000c15 	stw	fp,48(sp)
  80e86c:	df000c04 	addi	fp,sp,48
  80e870:	e13ffb15 	stw	r4,-20(fp)
  80e874:	e17ffc15 	stw	r5,-16(fp)
  80e878:	e1bffd15 	stw	r6,-12(fp)
  80e87c:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e880:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e884:	e0bffc17 	ldw	r2,-16(fp)
  80e888:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e88c:	00003a06 	br	80e978 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e890:	e0bffb17 	ldw	r2,-20(fp)
  80e894:	10800c17 	ldw	r2,48(r2)
  80e898:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
  80e89c:	e0bffb17 	ldw	r2,-20(fp)
  80e8a0:	10800d17 	ldw	r2,52(r2)
  80e8a4:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
  80e8a8:	e0fffa17 	ldw	r3,-24(fp)
  80e8ac:	e0bff917 	ldw	r2,-28(fp)
  80e8b0:	1880062e 	bgeu	r3,r2,80e8cc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e8b4:	e0fff917 	ldw	r3,-28(fp)
  80e8b8:	e0bffa17 	ldw	r2,-24(fp)
  80e8bc:	1885c83a 	sub	r2,r3,r2
  80e8c0:	10bfffc4 	addi	r2,r2,-1
  80e8c4:	e0bff815 	stw	r2,-32(fp)
  80e8c8:	00000c06 	br	80e8fc <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
  80e8cc:	e0bff917 	ldw	r2,-28(fp)
  80e8d0:	1005003a 	cmpeq	r2,r2,zero
  80e8d4:	1000051e 	bne	r2,zero,80e8ec <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e8d8:	00820004 	movi	r2,2048
  80e8dc:	e0fffa17 	ldw	r3,-24(fp)
  80e8e0:	10c5c83a 	sub	r2,r2,r3
  80e8e4:	e0bff815 	stw	r2,-32(fp)
  80e8e8:	00000406 	br	80e8fc <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e8ec:	0081ffc4 	movi	r2,2047
  80e8f0:	e0fffa17 	ldw	r3,-24(fp)
  80e8f4:	10c5c83a 	sub	r2,r2,r3
  80e8f8:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
  80e8fc:	e0bff817 	ldw	r2,-32(fp)
  80e900:	1005003a 	cmpeq	r2,r2,zero
  80e904:	10001f1e 	bne	r2,zero,80e984 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
  80e908:	e0fffd17 	ldw	r3,-12(fp)
  80e90c:	e0bff817 	ldw	r2,-32(fp)
  80e910:	1880022e 	bgeu	r3,r2,80e91c <altera_avalon_jtag_uart_write+0xbc>
        n = count;
  80e914:	e0bffd17 	ldw	r2,-12(fp)
  80e918:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e91c:	e0bffb17 	ldw	r2,-20(fp)
  80e920:	10c20e04 	addi	r3,r2,2104
  80e924:	e0bffa17 	ldw	r2,-24(fp)
  80e928:	1885883a 	add	r2,r3,r2
  80e92c:	e0fffc17 	ldw	r3,-16(fp)
  80e930:	1009883a 	mov	r4,r2
  80e934:	180b883a 	mov	r5,r3
  80e938:	e1bff817 	ldw	r6,-32(fp)
  80e93c:	0809bfc0 	call	809bfc <memcpy>
      ptr   += n;
  80e940:	e0fff817 	ldw	r3,-32(fp)
  80e944:	e0bffc17 	ldw	r2,-16(fp)
  80e948:	10c5883a 	add	r2,r2,r3
  80e94c:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
  80e950:	e0fffd17 	ldw	r3,-12(fp)
  80e954:	e0bff817 	ldw	r2,-32(fp)
  80e958:	1885c83a 	sub	r2,r3,r2
  80e95c:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e960:	e0fffa17 	ldw	r3,-24(fp)
  80e964:	e0bff817 	ldw	r2,-32(fp)
  80e968:	1885883a 	add	r2,r3,r2
  80e96c:	10c1ffcc 	andi	r3,r2,2047
  80e970:	e0bffb17 	ldw	r2,-20(fp)
  80e974:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e978:	e0bffd17 	ldw	r2,-12(fp)
  80e97c:	10800048 	cmpgei	r2,r2,1
  80e980:	103fc31e 	bne	r2,zero,80e890 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e984:	0005303a 	rdctl	r2,status
  80e988:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e98c:	e0fff517 	ldw	r3,-44(fp)
  80e990:	00bfff84 	movi	r2,-2
  80e994:	1884703a 	and	r2,r3,r2
  80e998:	1001703a 	wrctl	status,r2
  
  return context;
  80e99c:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e9a0:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e9a4:	e0bffb17 	ldw	r2,-20(fp)
  80e9a8:	10800817 	ldw	r2,32(r2)
  80e9ac:	10c00094 	ori	r3,r2,2
  80e9b0:	e0bffb17 	ldw	r2,-20(fp)
  80e9b4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e9b8:	e0bffb17 	ldw	r2,-20(fp)
  80e9bc:	10800017 	ldw	r2,0(r2)
  80e9c0:	11000104 	addi	r4,r2,4
  80e9c4:	e0bffb17 	ldw	r2,-20(fp)
  80e9c8:	10800817 	ldw	r2,32(r2)
  80e9cc:	1007883a 	mov	r3,r2
  80e9d0:	2005883a 	mov	r2,r4
  80e9d4:	10c00035 	stwio	r3,0(r2)
  80e9d8:	e0bff717 	ldw	r2,-36(fp)
  80e9dc:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e9e0:	e0bff417 	ldw	r2,-48(fp)
  80e9e4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80e9e8:	e0bffd17 	ldw	r2,-12(fp)
  80e9ec:	10800050 	cmplti	r2,r2,1
  80e9f0:	1000111e 	bne	r2,zero,80ea38 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
  80e9f4:	e0bffe17 	ldw	r2,-8(fp)
  80e9f8:	1090000c 	andi	r2,r2,16384
  80e9fc:	1004c03a 	cmpne	r2,r2,zero
  80ea00:	1000101e 	bne	r2,zero,80ea44 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80ea04:	e0bffb17 	ldw	r2,-20(fp)
  80ea08:	10c00d17 	ldw	r3,52(r2)
  80ea0c:	e0bff917 	ldw	r2,-28(fp)
  80ea10:	1880051e 	bne	r3,r2,80ea28 <altera_avalon_jtag_uart_write+0x1c8>
  80ea14:	e0bffb17 	ldw	r2,-20(fp)
  80ea18:	10c00917 	ldw	r3,36(r2)
  80ea1c:	e0bffb17 	ldw	r2,-20(fp)
  80ea20:	10800117 	ldw	r2,4(r2)
  80ea24:	18bff736 	bltu	r3,r2,80ea04 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
  80ea28:	e0bffb17 	ldw	r2,-20(fp)
  80ea2c:	10c00d17 	ldw	r3,52(r2)
  80ea30:	e0bff917 	ldw	r2,-28(fp)
  80ea34:	18800326 	beq	r3,r2,80ea44 <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
  80ea38:	e0bffd17 	ldw	r2,-12(fp)
  80ea3c:	10800048 	cmpgei	r2,r2,1
  80ea40:	103fcd1e 	bne	r2,zero,80e978 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80ea44:	e0fffc17 	ldw	r3,-16(fp)
  80ea48:	e0bff617 	ldw	r2,-40(fp)
  80ea4c:	18800526 	beq	r3,r2,80ea64 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
  80ea50:	e0fffc17 	ldw	r3,-16(fp)
  80ea54:	e0bff617 	ldw	r2,-40(fp)
  80ea58:	1887c83a 	sub	r3,r3,r2
  80ea5c:	e0ffff15 	stw	r3,-4(fp)
  80ea60:	00000906 	br	80ea88 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
  80ea64:	e0bffe17 	ldw	r2,-8(fp)
  80ea68:	1090000c 	andi	r2,r2,16384
  80ea6c:	1005003a 	cmpeq	r2,r2,zero
  80ea70:	1000031e 	bne	r2,zero,80ea80 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
  80ea74:	00bffd44 	movi	r2,-11
  80ea78:	e0bfff15 	stw	r2,-4(fp)
  80ea7c:	00000206 	br	80ea88 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80ea80:	00bffec4 	movi	r2,-5
  80ea84:	e0bfff15 	stw	r2,-4(fp)
  80ea88:	e0bfff17 	ldw	r2,-4(fp)
}
  80ea8c:	e037883a 	mov	sp,fp
  80ea90:	dfc00117 	ldw	ra,4(sp)
  80ea94:	df000017 	ldw	fp,0(sp)
  80ea98:	dec00204 	addi	sp,sp,8
  80ea9c:	f800283a 	ret

0080eaa0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80eaa0:	defffa04 	addi	sp,sp,-24
  80eaa4:	dfc00515 	stw	ra,20(sp)
  80eaa8:	df000415 	stw	fp,16(sp)
  80eaac:	df000404 	addi	fp,sp,16
  80eab0:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80eab4:	e0bfff17 	ldw	r2,-4(fp)
  80eab8:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80eabc:	e0bfff17 	ldw	r2,-4(fp)
  80eac0:	10800104 	addi	r2,r2,4
  80eac4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eac8:	0005303a 	rdctl	r2,status
  80eacc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ead0:	e0fffd17 	ldw	r3,-12(fp)
  80ead4:	00bfff84 	movi	r2,-2
  80ead8:	1884703a 	and	r2,r3,r2
  80eadc:	1001703a 	wrctl	status,r2
  
  return context;
  80eae0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80eae4:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
  80eae8:	080f6b40 	call	80f6b4 <alt_tick>
  80eaec:	e0bffe17 	ldw	r2,-8(fp)
  80eaf0:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eaf4:	e0bffc17 	ldw	r2,-16(fp)
  80eaf8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80eafc:	e037883a 	mov	sp,fp
  80eb00:	dfc00117 	ldw	ra,4(sp)
  80eb04:	df000017 	ldw	fp,0(sp)
  80eb08:	dec00204 	addi	sp,sp,8
  80eb0c:	f800283a 	ret

0080eb10 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80eb10:	defff804 	addi	sp,sp,-32
  80eb14:	dfc00715 	stw	ra,28(sp)
  80eb18:	df000615 	stw	fp,24(sp)
  80eb1c:	df000604 	addi	fp,sp,24
  80eb20:	e13ffc15 	stw	r4,-16(fp)
  80eb24:	e17ffd15 	stw	r5,-12(fp)
  80eb28:	e1bffe15 	stw	r6,-8(fp)
  80eb2c:	e1ffff15 	stw	r7,-4(fp)
  80eb30:	e0bfff17 	ldw	r2,-4(fp)
  80eb34:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80eb38:	00802074 	movhi	r2,129
  80eb3c:	108ef404 	addi	r2,r2,15312
  80eb40:	10800017 	ldw	r2,0(r2)
  80eb44:	1004c03a 	cmpne	r2,r2,zero
  80eb48:	1000041e 	bne	r2,zero,80eb5c <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
  80eb4c:	00c02074 	movhi	r3,129
  80eb50:	18cef404 	addi	r3,r3,15312
  80eb54:	e0bffb17 	ldw	r2,-20(fp)
  80eb58:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80eb5c:	e0bffc17 	ldw	r2,-16(fp)
  80eb60:	10800104 	addi	r2,r2,4
  80eb64:	1007883a 	mov	r3,r2
  80eb68:	008001c4 	movi	r2,7
  80eb6c:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80eb70:	d8000015 	stw	zero,0(sp)
  80eb74:	e13ffd17 	ldw	r4,-12(fp)
  80eb78:	e17ffe17 	ldw	r5,-8(fp)
  80eb7c:	01802074 	movhi	r6,129
  80eb80:	31baa804 	addi	r6,r6,-5472
  80eb84:	e1fffc17 	ldw	r7,-16(fp)
  80eb88:	080ef1c0 	call	80ef1c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80eb8c:	e037883a 	mov	sp,fp
  80eb90:	dfc00117 	ldw	ra,4(sp)
  80eb94:	df000017 	ldw	fp,0(sp)
  80eb98:	dec00204 	addi	sp,sp,8
  80eb9c:	f800283a 	ret

0080eba0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80eba0:	defff404 	addi	sp,sp,-48
  80eba4:	df000b15 	stw	fp,44(sp)
  80eba8:	df000b04 	addi	fp,sp,44
  80ebac:	e13ffb15 	stw	r4,-20(fp)
  80ebb0:	e17ffc15 	stw	r5,-16(fp)
  80ebb4:	e1bffd15 	stw	r6,-12(fp)
  80ebb8:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80ebbc:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80ebc0:	00802074 	movhi	r2,129
  80ebc4:	108ef404 	addi	r2,r2,15312
  80ebc8:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  80ebcc:	1005003a 	cmpeq	r2,r2,zero
  80ebd0:	1000411e 	bne	r2,zero,80ecd8 <alt_alarm_start+0x138>
  {
    if (alarm)
  80ebd4:	e0bffb17 	ldw	r2,-20(fp)
  80ebd8:	1005003a 	cmpeq	r2,r2,zero
  80ebdc:	10003b1e 	bne	r2,zero,80eccc <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
  80ebe0:	e0fffb17 	ldw	r3,-20(fp)
  80ebe4:	e0bffd17 	ldw	r2,-12(fp)
  80ebe8:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
  80ebec:	e0fffb17 	ldw	r3,-20(fp)
  80ebf0:	e0bffe17 	ldw	r2,-8(fp)
  80ebf4:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ebf8:	0005303a 	rdctl	r2,status
  80ebfc:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ec00:	e0fff817 	ldw	r3,-32(fp)
  80ec04:	00bfff84 	movi	r2,-2
  80ec08:	1884703a 	and	r2,r3,r2
  80ec0c:	1001703a 	wrctl	status,r2
  
  return context;
  80ec10:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  80ec14:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80ec18:	00802074 	movhi	r2,129
  80ec1c:	108ef504 	addi	r2,r2,15316
  80ec20:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  80ec24:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80ec28:	e0fffc17 	ldw	r3,-16(fp)
  80ec2c:	e0bff917 	ldw	r2,-28(fp)
  80ec30:	1885883a 	add	r2,r3,r2
  80ec34:	10c00044 	addi	r3,r2,1
  80ec38:	e0bffb17 	ldw	r2,-20(fp)
  80ec3c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80ec40:	e0bffb17 	ldw	r2,-20(fp)
  80ec44:	10c00217 	ldw	r3,8(r2)
  80ec48:	e0bff917 	ldw	r2,-28(fp)
  80ec4c:	1880042e 	bgeu	r3,r2,80ec60 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
  80ec50:	e0fffb17 	ldw	r3,-20(fp)
  80ec54:	00800044 	movi	r2,1
  80ec58:	18800405 	stb	r2,16(r3)
  80ec5c:	00000206 	br	80ec68 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
  80ec60:	e0bffb17 	ldw	r2,-20(fp)
  80ec64:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80ec68:	e0fffb17 	ldw	r3,-20(fp)
  80ec6c:	00802074 	movhi	r2,129
  80ec70:	10885004 	addi	r2,r2,8512
  80ec74:	e0bff615 	stw	r2,-40(fp)
  80ec78:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ec7c:	e0fff717 	ldw	r3,-36(fp)
  80ec80:	e0bff617 	ldw	r2,-40(fp)
  80ec84:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
  80ec88:	e0bff617 	ldw	r2,-40(fp)
  80ec8c:	10c00017 	ldw	r3,0(r2)
  80ec90:	e0bff717 	ldw	r2,-36(fp)
  80ec94:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80ec98:	e0bff617 	ldw	r2,-40(fp)
  80ec9c:	10c00017 	ldw	r3,0(r2)
  80eca0:	e0bff717 	ldw	r2,-36(fp)
  80eca4:	18800115 	stw	r2,4(r3)
  list->next           = entry;
  80eca8:	e0fff617 	ldw	r3,-40(fp)
  80ecac:	e0bff717 	ldw	r2,-36(fp)
  80ecb0:	18800015 	stw	r2,0(r3)
  80ecb4:	e0bffa17 	ldw	r2,-24(fp)
  80ecb8:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ecbc:	e0bff517 	ldw	r2,-44(fp)
  80ecc0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80ecc4:	e03fff15 	stw	zero,-4(fp)
  80ecc8:	00000506 	br	80ece0 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
  80eccc:	00bffa84 	movi	r2,-22
  80ecd0:	e0bfff15 	stw	r2,-4(fp)
  80ecd4:	00000206 	br	80ece0 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
  80ecd8:	00bfde84 	movi	r2,-134
  80ecdc:	e0bfff15 	stw	r2,-4(fp)
  80ece0:	e0bfff17 	ldw	r2,-4(fp)
  }
}
  80ece4:	e037883a 	mov	sp,fp
  80ece8:	df000017 	ldw	fp,0(sp)
  80ecec:	dec00104 	addi	sp,sp,4
  80ecf0:	f800283a 	ret

0080ecf4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80ecf4:	deffff04 	addi	sp,sp,-4
  80ecf8:	df000015 	stw	fp,0(sp)
  80ecfc:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80ed00:	e037883a 	mov	sp,fp
  80ed04:	df000017 	ldw	fp,0(sp)
  80ed08:	dec00104 	addi	sp,sp,4
  80ed0c:	f800283a 	ret

0080ed10 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80ed10:	defff904 	addi	sp,sp,-28
  80ed14:	dfc00615 	stw	ra,24(sp)
  80ed18:	df000515 	stw	fp,20(sp)
  80ed1c:	df000504 	addi	fp,sp,20
  80ed20:	e13ffd15 	stw	r4,-12(fp)
  80ed24:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80ed28:	e0bffd17 	ldw	r2,-12(fp)
  80ed2c:	1005003a 	cmpeq	r2,r2,zero
  80ed30:	1000041e 	bne	r2,zero,80ed44 <alt_dev_llist_insert+0x34>
  80ed34:	e0bffd17 	ldw	r2,-12(fp)
  80ed38:	10800217 	ldw	r2,8(r2)
  80ed3c:	1004c03a 	cmpne	r2,r2,zero
  80ed40:	1000071e 	bne	r2,zero,80ed60 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
  80ed44:	080edc40 	call	80edc4 <alt_get_errno>
  80ed48:	1007883a 	mov	r3,r2
  80ed4c:	00800584 	movi	r2,22
  80ed50:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80ed54:	00bffa84 	movi	r2,-22
  80ed58:	e0bfff15 	stw	r2,-4(fp)
  80ed5c:	00001306 	br	80edac <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80ed60:	e0fffd17 	ldw	r3,-12(fp)
  80ed64:	e0bffe17 	ldw	r2,-8(fp)
  80ed68:	e0bffb15 	stw	r2,-20(fp)
  80ed6c:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ed70:	e0fffc17 	ldw	r3,-16(fp)
  80ed74:	e0bffb17 	ldw	r2,-20(fp)
  80ed78:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
  80ed7c:	e0bffb17 	ldw	r2,-20(fp)
  80ed80:	10c00017 	ldw	r3,0(r2)
  80ed84:	e0bffc17 	ldw	r2,-16(fp)
  80ed88:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80ed8c:	e0bffb17 	ldw	r2,-20(fp)
  80ed90:	10c00017 	ldw	r3,0(r2)
  80ed94:	e0bffc17 	ldw	r2,-16(fp)
  80ed98:	18800115 	stw	r2,4(r3)
  list->next           = entry;
  80ed9c:	e0fffb17 	ldw	r3,-20(fp)
  80eda0:	e0bffc17 	ldw	r2,-16(fp)
  80eda4:	18800015 	stw	r2,0(r3)

  return 0;  
  80eda8:	e03fff15 	stw	zero,-4(fp)
  80edac:	e0bfff17 	ldw	r2,-4(fp)
}
  80edb0:	e037883a 	mov	sp,fp
  80edb4:	dfc00117 	ldw	ra,4(sp)
  80edb8:	df000017 	ldw	fp,0(sp)
  80edbc:	dec00204 	addi	sp,sp,8
  80edc0:	f800283a 	ret

0080edc4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80edc4:	defffd04 	addi	sp,sp,-12
  80edc8:	dfc00215 	stw	ra,8(sp)
  80edcc:	df000115 	stw	fp,4(sp)
  80edd0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80edd4:	00802074 	movhi	r2,129
  80edd8:	10884d04 	addi	r2,r2,8500
  80eddc:	10800017 	ldw	r2,0(r2)
  80ede0:	1005003a 	cmpeq	r2,r2,zero
  80ede4:	1000061e 	bne	r2,zero,80ee00 <alt_get_errno+0x3c>
  80ede8:	00802074 	movhi	r2,129
  80edec:	10884d04 	addi	r2,r2,8500
  80edf0:	10800017 	ldw	r2,0(r2)
  80edf4:	103ee83a 	callr	r2
  80edf8:	e0bfff15 	stw	r2,-4(fp)
  80edfc:	00000306 	br	80ee0c <alt_get_errno+0x48>
  80ee00:	00802074 	movhi	r2,129
  80ee04:	108eef04 	addi	r2,r2,15292
  80ee08:	e0bfff15 	stw	r2,-4(fp)
  80ee0c:	e0bfff17 	ldw	r2,-4(fp)
}
  80ee10:	e037883a 	mov	sp,fp
  80ee14:	dfc00117 	ldw	ra,4(sp)
  80ee18:	df000017 	ldw	fp,0(sp)
  80ee1c:	dec00204 	addi	sp,sp,8
  80ee20:	f800283a 	ret

0080ee24 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80ee24:	defffd04 	addi	sp,sp,-12
  80ee28:	dfc00215 	stw	ra,8(sp)
  80ee2c:	df000115 	stw	fp,4(sp)
  80ee30:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ee34:	00bfff04 	movi	r2,-4
  80ee38:	00c02074 	movhi	r3,129
  80ee3c:	18ffe404 	addi	r3,r3,-112
  80ee40:	1885883a 	add	r2,r3,r2
  80ee44:	e0bfff15 	stw	r2,-4(fp)
  80ee48:	00000606 	br	80ee64 <_do_ctors+0x40>
        (*ctor) (); 
  80ee4c:	e0bfff17 	ldw	r2,-4(fp)
  80ee50:	10800017 	ldw	r2,0(r2)
  80ee54:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ee58:	e0bfff17 	ldw	r2,-4(fp)
  80ee5c:	10bfff04 	addi	r2,r2,-4
  80ee60:	e0bfff15 	stw	r2,-4(fp)
  80ee64:	e0ffff17 	ldw	r3,-4(fp)
  80ee68:	00802074 	movhi	r2,129
  80ee6c:	10bfe304 	addi	r2,r2,-116
  80ee70:	18bff62e 	bgeu	r3,r2,80ee4c <_do_ctors+0x28>
        (*ctor) (); 
}
  80ee74:	e037883a 	mov	sp,fp
  80ee78:	dfc00117 	ldw	ra,4(sp)
  80ee7c:	df000017 	ldw	fp,0(sp)
  80ee80:	dec00204 	addi	sp,sp,8
  80ee84:	f800283a 	ret

0080ee88 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ee88:	defffd04 	addi	sp,sp,-12
  80ee8c:	dfc00215 	stw	ra,8(sp)
  80ee90:	df000115 	stw	fp,4(sp)
  80ee94:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ee98:	00bfff04 	movi	r2,-4
  80ee9c:	00c02074 	movhi	r3,129
  80eea0:	18ffe404 	addi	r3,r3,-112
  80eea4:	1885883a 	add	r2,r3,r2
  80eea8:	e0bfff15 	stw	r2,-4(fp)
  80eeac:	00000606 	br	80eec8 <_do_dtors+0x40>
        (*dtor) (); 
  80eeb0:	e0bfff17 	ldw	r2,-4(fp)
  80eeb4:	10800017 	ldw	r2,0(r2)
  80eeb8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80eebc:	e0bfff17 	ldw	r2,-4(fp)
  80eec0:	10bfff04 	addi	r2,r2,-4
  80eec4:	e0bfff15 	stw	r2,-4(fp)
  80eec8:	e0ffff17 	ldw	r3,-4(fp)
  80eecc:	00802074 	movhi	r2,129
  80eed0:	10bfe404 	addi	r2,r2,-112
  80eed4:	18bff62e 	bgeu	r3,r2,80eeb0 <_do_dtors+0x28>
        (*dtor) (); 
}
  80eed8:	e037883a 	mov	sp,fp
  80eedc:	dfc00117 	ldw	ra,4(sp)
  80eee0:	df000017 	ldw	fp,0(sp)
  80eee4:	dec00204 	addi	sp,sp,8
  80eee8:	f800283a 	ret

0080eeec <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80eeec:	defffe04 	addi	sp,sp,-8
  80eef0:	dfc00115 	stw	ra,4(sp)
  80eef4:	df000015 	stw	fp,0(sp)
  80eef8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80eefc:	0009883a 	mov	r4,zero
  80ef00:	01480004 	movi	r5,8192
  80ef04:	080fa640 	call	80fa64 <alt_icache_flush>
#endif
}
  80ef08:	e037883a 	mov	sp,fp
  80ef0c:	dfc00117 	ldw	ra,4(sp)
  80ef10:	df000017 	ldw	fp,0(sp)
  80ef14:	dec00204 	addi	sp,sp,8
  80ef18:	f800283a 	ret

0080ef1c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ef1c:	defff904 	addi	sp,sp,-28
  80ef20:	dfc00615 	stw	ra,24(sp)
  80ef24:	df000515 	stw	fp,20(sp)
  80ef28:	df000504 	addi	fp,sp,20
  80ef2c:	e13ffc15 	stw	r4,-16(fp)
  80ef30:	e17ffd15 	stw	r5,-12(fp)
  80ef34:	e1bffe15 	stw	r6,-8(fp)
  80ef38:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80ef3c:	e0800217 	ldw	r2,8(fp)
  80ef40:	d8800015 	stw	r2,0(sp)
  80ef44:	e13ffc17 	ldw	r4,-16(fp)
  80ef48:	e17ffd17 	ldw	r5,-12(fp)
  80ef4c:	e1bffe17 	ldw	r6,-8(fp)
  80ef50:	e1ffff17 	ldw	r7,-4(fp)
  80ef54:	080f0f00 	call	80f0f0 <alt_iic_isr_register>
}  
  80ef58:	e037883a 	mov	sp,fp
  80ef5c:	dfc00117 	ldw	ra,4(sp)
  80ef60:	df000017 	ldw	fp,0(sp)
  80ef64:	dec00204 	addi	sp,sp,8
  80ef68:	f800283a 	ret

0080ef6c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80ef6c:	defff904 	addi	sp,sp,-28
  80ef70:	df000615 	stw	fp,24(sp)
  80ef74:	df000604 	addi	fp,sp,24
  80ef78:	e13ffe15 	stw	r4,-8(fp)
  80ef7c:	e17fff15 	stw	r5,-4(fp)
  80ef80:	e0bfff17 	ldw	r2,-4(fp)
  80ef84:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ef88:	0005303a 	rdctl	r2,status
  80ef8c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ef90:	e0fffb17 	ldw	r3,-20(fp)
  80ef94:	00bfff84 	movi	r2,-2
  80ef98:	1884703a 	and	r2,r3,r2
  80ef9c:	1001703a 	wrctl	status,r2
  
  return context;
  80efa0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80efa4:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  80efa8:	e0fffc17 	ldw	r3,-16(fp)
  80efac:	00800044 	movi	r2,1
  80efb0:	10c4983a 	sll	r2,r2,r3
  80efb4:	1007883a 	mov	r3,r2
  80efb8:	00802074 	movhi	r2,129
  80efbc:	108ef304 	addi	r2,r2,15308
  80efc0:	10800017 	ldw	r2,0(r2)
  80efc4:	1886b03a 	or	r3,r3,r2
  80efc8:	00802074 	movhi	r2,129
  80efcc:	108ef304 	addi	r2,r2,15308
  80efd0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80efd4:	00802074 	movhi	r2,129
  80efd8:	108ef304 	addi	r2,r2,15308
  80efdc:	10800017 	ldw	r2,0(r2)
  80efe0:	100170fa 	wrctl	ienable,r2
  80efe4:	e0bffd17 	ldw	r2,-12(fp)
  80efe8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80efec:	e0bffa17 	ldw	r2,-24(fp)
  80eff0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80eff4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  80eff8:	e037883a 	mov	sp,fp
  80effc:	df000017 	ldw	fp,0(sp)
  80f000:	dec00104 	addi	sp,sp,4
  80f004:	f800283a 	ret

0080f008 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80f008:	defff904 	addi	sp,sp,-28
  80f00c:	df000615 	stw	fp,24(sp)
  80f010:	df000604 	addi	fp,sp,24
  80f014:	e13ffe15 	stw	r4,-8(fp)
  80f018:	e17fff15 	stw	r5,-4(fp)
  80f01c:	e0bfff17 	ldw	r2,-4(fp)
  80f020:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f024:	0005303a 	rdctl	r2,status
  80f028:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f02c:	e0fffb17 	ldw	r3,-20(fp)
  80f030:	00bfff84 	movi	r2,-2
  80f034:	1884703a 	and	r2,r3,r2
  80f038:	1001703a 	wrctl	status,r2
  
  return context;
  80f03c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f040:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
  80f044:	e0fffc17 	ldw	r3,-16(fp)
  80f048:	00800044 	movi	r2,1
  80f04c:	10c4983a 	sll	r2,r2,r3
  80f050:	0084303a 	nor	r2,zero,r2
  80f054:	1007883a 	mov	r3,r2
  80f058:	00802074 	movhi	r2,129
  80f05c:	108ef304 	addi	r2,r2,15308
  80f060:	10800017 	ldw	r2,0(r2)
  80f064:	1886703a 	and	r3,r3,r2
  80f068:	00802074 	movhi	r2,129
  80f06c:	108ef304 	addi	r2,r2,15308
  80f070:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f074:	00802074 	movhi	r2,129
  80f078:	108ef304 	addi	r2,r2,15308
  80f07c:	10800017 	ldw	r2,0(r2)
  80f080:	100170fa 	wrctl	ienable,r2
  80f084:	e0bffd17 	ldw	r2,-12(fp)
  80f088:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f08c:	e0bffa17 	ldw	r2,-24(fp)
  80f090:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80f094:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  80f098:	e037883a 	mov	sp,fp
  80f09c:	df000017 	ldw	fp,0(sp)
  80f0a0:	dec00104 	addi	sp,sp,4
  80f0a4:	f800283a 	ret

0080f0a8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80f0a8:	defffc04 	addi	sp,sp,-16
  80f0ac:	df000315 	stw	fp,12(sp)
  80f0b0:	df000304 	addi	fp,sp,12
  80f0b4:	e13ffe15 	stw	r4,-8(fp)
  80f0b8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80f0bc:	000530fa 	rdctl	r2,ienable
  80f0c0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80f0c4:	e0ffff17 	ldw	r3,-4(fp)
  80f0c8:	00800044 	movi	r2,1
  80f0cc:	10c4983a 	sll	r2,r2,r3
  80f0d0:	1007883a 	mov	r3,r2
  80f0d4:	e0bffd17 	ldw	r2,-12(fp)
  80f0d8:	1884703a 	and	r2,r3,r2
  80f0dc:	1004c03a 	cmpne	r2,r2,zero
}
  80f0e0:	e037883a 	mov	sp,fp
  80f0e4:	df000017 	ldw	fp,0(sp)
  80f0e8:	dec00104 	addi	sp,sp,4
  80f0ec:	f800283a 	ret

0080f0f0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f0f0:	defff404 	addi	sp,sp,-48
  80f0f4:	dfc00b15 	stw	ra,44(sp)
  80f0f8:	df000a15 	stw	fp,40(sp)
  80f0fc:	df000a04 	addi	fp,sp,40
  80f100:	e13ffb15 	stw	r4,-20(fp)
  80f104:	e17ffc15 	stw	r5,-16(fp)
  80f108:	e1bffd15 	stw	r6,-12(fp)
  80f10c:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
  80f110:	00bffa84 	movi	r2,-22
  80f114:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80f118:	e0bffc17 	ldw	r2,-16(fp)
  80f11c:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80f120:	e0bff917 	ldw	r2,-28(fp)
  80f124:	10800808 	cmpgei	r2,r2,32
  80f128:	1000291e 	bne	r2,zero,80f1d0 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f12c:	0005303a 	rdctl	r2,status
  80f130:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f134:	e0fff717 	ldw	r3,-36(fp)
  80f138:	00bfff84 	movi	r2,-2
  80f13c:	1884703a 	and	r2,r3,r2
  80f140:	1001703a 	wrctl	status,r2
  
  return context;
  80f144:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80f148:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
  80f14c:	e0bff917 	ldw	r2,-28(fp)
  80f150:	00c02074 	movhi	r3,129
  80f154:	18cf0004 	addi	r3,r3,15360
  80f158:	100490fa 	slli	r2,r2,3
  80f15c:	10c7883a 	add	r3,r2,r3
  80f160:	e0bffd17 	ldw	r2,-12(fp)
  80f164:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
  80f168:	e0bff917 	ldw	r2,-28(fp)
  80f16c:	00c02074 	movhi	r3,129
  80f170:	18cf0004 	addi	r3,r3,15360
  80f174:	100490fa 	slli	r2,r2,3
  80f178:	10c5883a 	add	r2,r2,r3
  80f17c:	10c00104 	addi	r3,r2,4
  80f180:	e0bffe17 	ldw	r2,-8(fp)
  80f184:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80f188:	e0bffd17 	ldw	r2,-12(fp)
  80f18c:	1005003a 	cmpeq	r2,r2,zero
  80f190:	1000051e 	bne	r2,zero,80f1a8 <alt_iic_isr_register+0xb8>
  80f194:	e17ff917 	ldw	r5,-28(fp)
  80f198:	e13ffb17 	ldw	r4,-20(fp)
  80f19c:	080ef6c0 	call	80ef6c <alt_ic_irq_enable>
  80f1a0:	e0bfff15 	stw	r2,-4(fp)
  80f1a4:	00000406 	br	80f1b8 <alt_iic_isr_register+0xc8>
  80f1a8:	e17ff917 	ldw	r5,-28(fp)
  80f1ac:	e13ffb17 	ldw	r4,-20(fp)
  80f1b0:	080f0080 	call	80f008 <alt_ic_irq_disable>
  80f1b4:	e0bfff15 	stw	r2,-4(fp)
  80f1b8:	e0bfff17 	ldw	r2,-4(fp)
  80f1bc:	e0bffa15 	stw	r2,-24(fp)
  80f1c0:	e0bff817 	ldw	r2,-32(fp)
  80f1c4:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f1c8:	e0bff617 	ldw	r2,-40(fp)
  80f1cc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80f1d0:	e0bffa17 	ldw	r2,-24(fp)
}
  80f1d4:	e037883a 	mov	sp,fp
  80f1d8:	dfc00117 	ldw	ra,4(sp)
  80f1dc:	df000017 	ldw	fp,0(sp)
  80f1e0:	dec00204 	addi	sp,sp,8
  80f1e4:	f800283a 	ret

0080f1e8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80f1e8:	defff804 	addi	sp,sp,-32
  80f1ec:	dfc00715 	stw	ra,28(sp)
  80f1f0:	df000615 	stw	fp,24(sp)
  80f1f4:	dc000515 	stw	r16,20(sp)
  80f1f8:	df000504 	addi	fp,sp,20
  80f1fc:	e13ffc15 	stw	r4,-16(fp)
  80f200:	e17ffd15 	stw	r5,-12(fp)
  80f204:	e1bffe15 	stw	r6,-8(fp)
  80f208:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80f20c:	e13ffd17 	ldw	r4,-12(fp)
  80f210:	e17ffe17 	ldw	r5,-8(fp)
  80f214:	e1bfff17 	ldw	r6,-4(fp)
  80f218:	080f4300 	call	80f430 <open>
  80f21c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80f220:	e0bffb17 	ldw	r2,-20(fp)
  80f224:	1004803a 	cmplt	r2,r2,zero
  80f228:	10001f1e 	bne	r2,zero,80f2a8 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
  80f22c:	e13ffb17 	ldw	r4,-20(fp)
  80f230:	04002074 	movhi	r16,129
  80f234:	8403ca04 	addi	r16,r16,3880
  80f238:	01400304 	movi	r5,12
  80f23c:	08032000 	call	803200 <__mulsi3>
  80f240:	1405883a 	add	r2,r2,r16
  80f244:	10c00017 	ldw	r3,0(r2)
  80f248:	e0bffc17 	ldw	r2,-16(fp)
  80f24c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80f250:	e13ffb17 	ldw	r4,-20(fp)
  80f254:	04002074 	movhi	r16,129
  80f258:	8403ca04 	addi	r16,r16,3880
  80f25c:	01400304 	movi	r5,12
  80f260:	08032000 	call	803200 <__mulsi3>
  80f264:	1405883a 	add	r2,r2,r16
  80f268:	10800104 	addi	r2,r2,4
  80f26c:	10c00017 	ldw	r3,0(r2)
  80f270:	e0bffc17 	ldw	r2,-16(fp)
  80f274:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80f278:	e13ffb17 	ldw	r4,-20(fp)
  80f27c:	04002074 	movhi	r16,129
  80f280:	8403ca04 	addi	r16,r16,3880
  80f284:	01400304 	movi	r5,12
  80f288:	08032000 	call	803200 <__mulsi3>
  80f28c:	1405883a 	add	r2,r2,r16
  80f290:	10800204 	addi	r2,r2,8
  80f294:	10c00017 	ldw	r3,0(r2)
  80f298:	e0bffc17 	ldw	r2,-16(fp)
  80f29c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80f2a0:	e13ffb17 	ldw	r4,-20(fp)
  80f2a4:	080db800 	call	80db80 <alt_release_fd>
  }
} 
  80f2a8:	e037883a 	mov	sp,fp
  80f2ac:	dfc00217 	ldw	ra,8(sp)
  80f2b0:	df000117 	ldw	fp,4(sp)
  80f2b4:	dc000017 	ldw	r16,0(sp)
  80f2b8:	dec00304 	addi	sp,sp,12
  80f2bc:	f800283a 	ret

0080f2c0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80f2c0:	defffb04 	addi	sp,sp,-20
  80f2c4:	dfc00415 	stw	ra,16(sp)
  80f2c8:	df000315 	stw	fp,12(sp)
  80f2cc:	df000304 	addi	fp,sp,12
  80f2d0:	e13ffd15 	stw	r4,-12(fp)
  80f2d4:	e17ffe15 	stw	r5,-8(fp)
  80f2d8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80f2dc:	01002074 	movhi	r4,129
  80f2e0:	2103cd04 	addi	r4,r4,3892
  80f2e4:	e17ffd17 	ldw	r5,-12(fp)
  80f2e8:	01800044 	movi	r6,1
  80f2ec:	01c07fc4 	movi	r7,511
  80f2f0:	080f1e80 	call	80f1e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80f2f4:	01002074 	movhi	r4,129
  80f2f8:	2103ca04 	addi	r4,r4,3880
  80f2fc:	e17ffe17 	ldw	r5,-8(fp)
  80f300:	000d883a 	mov	r6,zero
  80f304:	01c07fc4 	movi	r7,511
  80f308:	080f1e80 	call	80f1e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80f30c:	01002074 	movhi	r4,129
  80f310:	2103d004 	addi	r4,r4,3904
  80f314:	e17fff17 	ldw	r5,-4(fp)
  80f318:	01800044 	movi	r6,1
  80f31c:	01c07fc4 	movi	r7,511
  80f320:	080f1e80 	call	80f1e8 <alt_open_fd>
}  
  80f324:	e037883a 	mov	sp,fp
  80f328:	dfc00117 	ldw	ra,4(sp)
  80f32c:	df000017 	ldw	fp,0(sp)
  80f330:	dec00204 	addi	sp,sp,8
  80f334:	f800283a 	ret

0080f338 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80f338:	defffa04 	addi	sp,sp,-24
  80f33c:	dfc00515 	stw	ra,20(sp)
  80f340:	df000415 	stw	fp,16(sp)
  80f344:	dc000315 	stw	r16,12(sp)
  80f348:	df000304 	addi	fp,sp,12
  80f34c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80f350:	e0bffe17 	ldw	r2,-8(fp)
  80f354:	10800217 	ldw	r2,8(r2)
  80f358:	10d00034 	orhi	r3,r2,16384
  80f35c:	e0bffe17 	ldw	r2,-8(fp)
  80f360:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f364:	e03ffd15 	stw	zero,-12(fp)
  80f368:	00002306 	br	80f3f8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f36c:	e13ffd17 	ldw	r4,-12(fp)
  80f370:	04002074 	movhi	r16,129
  80f374:	8403ca04 	addi	r16,r16,3880
  80f378:	01400304 	movi	r5,12
  80f37c:	08032000 	call	803200 <__mulsi3>
  80f380:	1405883a 	add	r2,r2,r16
  80f384:	10c00017 	ldw	r3,0(r2)
  80f388:	e0bffe17 	ldw	r2,-8(fp)
  80f38c:	10800017 	ldw	r2,0(r2)
  80f390:	1880161e 	bne	r3,r2,80f3ec <alt_file_locked+0xb4>
  80f394:	e13ffd17 	ldw	r4,-12(fp)
  80f398:	04002074 	movhi	r16,129
  80f39c:	8403ca04 	addi	r16,r16,3880
  80f3a0:	01400304 	movi	r5,12
  80f3a4:	08032000 	call	803200 <__mulsi3>
  80f3a8:	1405883a 	add	r2,r2,r16
  80f3ac:	10800204 	addi	r2,r2,8
  80f3b0:	10800017 	ldw	r2,0(r2)
  80f3b4:	1004403a 	cmpge	r2,r2,zero
  80f3b8:	10000c1e 	bne	r2,zero,80f3ec <alt_file_locked+0xb4>
  80f3bc:	e13ffd17 	ldw	r4,-12(fp)
  80f3c0:	01400304 	movi	r5,12
  80f3c4:	08032000 	call	803200 <__mulsi3>
  80f3c8:	1007883a 	mov	r3,r2
  80f3cc:	00802074 	movhi	r2,129
  80f3d0:	1083ca04 	addi	r2,r2,3880
  80f3d4:	1887883a 	add	r3,r3,r2
  80f3d8:	e0bffe17 	ldw	r2,-8(fp)
  80f3dc:	18800326 	beq	r3,r2,80f3ec <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80f3e0:	00bffcc4 	movi	r2,-13
  80f3e4:	e0bfff15 	stw	r2,-4(fp)
  80f3e8:	00000a06 	br	80f414 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f3ec:	e0bffd17 	ldw	r2,-12(fp)
  80f3f0:	10800044 	addi	r2,r2,1
  80f3f4:	e0bffd15 	stw	r2,-12(fp)
  80f3f8:	00802074 	movhi	r2,129
  80f3fc:	10884c04 	addi	r2,r2,8496
  80f400:	10800017 	ldw	r2,0(r2)
  80f404:	1007883a 	mov	r3,r2
  80f408:	e0bffd17 	ldw	r2,-12(fp)
  80f40c:	18bfd72e 	bgeu	r3,r2,80f36c <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80f410:	e03fff15 	stw	zero,-4(fp)
  80f414:	e0bfff17 	ldw	r2,-4(fp)
}
  80f418:	e037883a 	mov	sp,fp
  80f41c:	dfc00217 	ldw	ra,8(sp)
  80f420:	df000117 	ldw	fp,4(sp)
  80f424:	dc000017 	ldw	r16,0(sp)
  80f428:	dec00304 	addi	sp,sp,12
  80f42c:	f800283a 	ret

0080f430 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80f430:	defff404 	addi	sp,sp,-48
  80f434:	dfc00b15 	stw	ra,44(sp)
  80f438:	df000a15 	stw	fp,40(sp)
  80f43c:	df000a04 	addi	fp,sp,40
  80f440:	e13ffb15 	stw	r4,-20(fp)
  80f444:	e17ffc15 	stw	r5,-16(fp)
  80f448:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80f44c:	00bfffc4 	movi	r2,-1
  80f450:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
  80f454:	00bffb44 	movi	r2,-19
  80f458:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
  80f45c:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80f460:	e13ffb17 	ldw	r4,-20(fp)
  80f464:	01402074 	movhi	r5,129
  80f468:	29484a04 	addi	r5,r5,8488
  80f46c:	080f7e00 	call	80f7e0 <alt_find_dev>
  80f470:	e0bffa15 	stw	r2,-24(fp)
  80f474:	e0bffa17 	ldw	r2,-24(fp)
  80f478:	1004c03a 	cmpne	r2,r2,zero
  80f47c:	1000051e 	bne	r2,zero,80f494 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80f480:	e13ffb17 	ldw	r4,-20(fp)
  80f484:	080f8740 	call	80f874 <alt_find_file>
  80f488:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
  80f48c:	00800044 	movi	r2,1
  80f490:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80f494:	e0bffa17 	ldw	r2,-24(fp)
  80f498:	1005003a 	cmpeq	r2,r2,zero
  80f49c:	1000311e 	bne	r2,zero,80f564 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80f4a0:	e13ffa17 	ldw	r4,-24(fp)
  80f4a4:	080f9940 	call	80f994 <alt_get_fd>
  80f4a8:	e0bff815 	stw	r2,-32(fp)
  80f4ac:	e0bff817 	ldw	r2,-32(fp)
  80f4b0:	1004403a 	cmpge	r2,r2,zero
  80f4b4:	1000031e 	bne	r2,zero,80f4c4 <open+0x94>
    {
      status = index;
  80f4b8:	e0bff817 	ldw	r2,-32(fp)
  80f4bc:	e0bff715 	stw	r2,-36(fp)
  80f4c0:	00002a06 	br	80f56c <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
  80f4c4:	e13ff817 	ldw	r4,-32(fp)
  80f4c8:	01400304 	movi	r5,12
  80f4cc:	08032000 	call	803200 <__mulsi3>
  80f4d0:	1007883a 	mov	r3,r2
  80f4d4:	00802074 	movhi	r2,129
  80f4d8:	1083ca04 	addi	r2,r2,3880
  80f4dc:	1885883a 	add	r2,r3,r2
  80f4e0:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80f4e4:	e0fffc17 	ldw	r3,-16(fp)
  80f4e8:	00900034 	movhi	r2,16384
  80f4ec:	10bfffc4 	addi	r2,r2,-1
  80f4f0:	1886703a 	and	r3,r3,r2
  80f4f4:	e0bff917 	ldw	r2,-28(fp)
  80f4f8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f4fc:	e0bff617 	ldw	r2,-40(fp)
  80f500:	1004c03a 	cmpne	r2,r2,zero
  80f504:	1000061e 	bne	r2,zero,80f520 <open+0xf0>
  80f508:	e13ff917 	ldw	r4,-28(fp)
  80f50c:	080f3380 	call	80f338 <alt_file_locked>
  80f510:	e0bff715 	stw	r2,-36(fp)
  80f514:	e0bff717 	ldw	r2,-36(fp)
  80f518:	1004803a 	cmplt	r2,r2,zero
  80f51c:	1000131e 	bne	r2,zero,80f56c <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f520:	e0bffa17 	ldw	r2,-24(fp)
  80f524:	10800317 	ldw	r2,12(r2)
  80f528:	1005003a 	cmpeq	r2,r2,zero
  80f52c:	1000091e 	bne	r2,zero,80f554 <open+0x124>
  80f530:	e0bffa17 	ldw	r2,-24(fp)
  80f534:	10800317 	ldw	r2,12(r2)
  80f538:	e13ff917 	ldw	r4,-28(fp)
  80f53c:	e17ffb17 	ldw	r5,-20(fp)
  80f540:	e1bffc17 	ldw	r6,-16(fp)
  80f544:	e1fffd17 	ldw	r7,-12(fp)
  80f548:	103ee83a 	callr	r2
  80f54c:	e0bfff15 	stw	r2,-4(fp)
  80f550:	00000106 	br	80f558 <open+0x128>
  80f554:	e03fff15 	stw	zero,-4(fp)
  80f558:	e0bfff17 	ldw	r2,-4(fp)
  80f55c:	e0bff715 	stw	r2,-36(fp)
  80f560:	00000206 	br	80f56c <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f564:	00bffb44 	movi	r2,-19
  80f568:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f56c:	e0bff717 	ldw	r2,-36(fp)
  80f570:	1004403a 	cmpge	r2,r2,zero
  80f574:	1000091e 	bne	r2,zero,80f59c <open+0x16c>
  {
    alt_release_fd (index);  
  80f578:	e13ff817 	ldw	r4,-32(fp)
  80f57c:	080db800 	call	80db80 <alt_release_fd>
    ALT_ERRNO = -status;
  80f580:	080f5bc0 	call	80f5bc <alt_get_errno>
  80f584:	e0fff717 	ldw	r3,-36(fp)
  80f588:	00c7c83a 	sub	r3,zero,r3
  80f58c:	10c00015 	stw	r3,0(r2)
    return -1;
  80f590:	00bfffc4 	movi	r2,-1
  80f594:	e0bffe15 	stw	r2,-8(fp)
  80f598:	00000206 	br	80f5a4 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
  80f59c:	e0bff817 	ldw	r2,-32(fp)
  80f5a0:	e0bffe15 	stw	r2,-8(fp)
  80f5a4:	e0bffe17 	ldw	r2,-8(fp)
}
  80f5a8:	e037883a 	mov	sp,fp
  80f5ac:	dfc00117 	ldw	ra,4(sp)
  80f5b0:	df000017 	ldw	fp,0(sp)
  80f5b4:	dec00204 	addi	sp,sp,8
  80f5b8:	f800283a 	ret

0080f5bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f5bc:	defffd04 	addi	sp,sp,-12
  80f5c0:	dfc00215 	stw	ra,8(sp)
  80f5c4:	df000115 	stw	fp,4(sp)
  80f5c8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80f5cc:	00802074 	movhi	r2,129
  80f5d0:	10884d04 	addi	r2,r2,8500
  80f5d4:	10800017 	ldw	r2,0(r2)
  80f5d8:	1005003a 	cmpeq	r2,r2,zero
  80f5dc:	1000061e 	bne	r2,zero,80f5f8 <alt_get_errno+0x3c>
  80f5e0:	00802074 	movhi	r2,129
  80f5e4:	10884d04 	addi	r2,r2,8500
  80f5e8:	10800017 	ldw	r2,0(r2)
  80f5ec:	103ee83a 	callr	r2
  80f5f0:	e0bfff15 	stw	r2,-4(fp)
  80f5f4:	00000306 	br	80f604 <alt_get_errno+0x48>
  80f5f8:	00802074 	movhi	r2,129
  80f5fc:	108eef04 	addi	r2,r2,15292
  80f600:	e0bfff15 	stw	r2,-4(fp)
  80f604:	e0bfff17 	ldw	r2,-4(fp)
}
  80f608:	e037883a 	mov	sp,fp
  80f60c:	dfc00117 	ldw	ra,4(sp)
  80f610:	df000017 	ldw	fp,0(sp)
  80f614:	dec00204 	addi	sp,sp,8
  80f618:	f800283a 	ret

0080f61c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f61c:	defffa04 	addi	sp,sp,-24
  80f620:	df000515 	stw	fp,20(sp)
  80f624:	df000504 	addi	fp,sp,20
  80f628:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f62c:	0005303a 	rdctl	r2,status
  80f630:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f634:	e0fffd17 	ldw	r3,-12(fp)
  80f638:	00bfff84 	movi	r2,-2
  80f63c:	1884703a 	and	r2,r3,r2
  80f640:	1001703a 	wrctl	status,r2
  
  return context;
  80f644:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f648:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
  80f64c:	e0bfff17 	ldw	r2,-4(fp)
  80f650:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f654:	e0bffc17 	ldw	r2,-16(fp)
  80f658:	10c00017 	ldw	r3,0(r2)
  80f65c:	e0bffc17 	ldw	r2,-16(fp)
  80f660:	10800117 	ldw	r2,4(r2)
  80f664:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
  80f668:	e0bffc17 	ldw	r2,-16(fp)
  80f66c:	10c00117 	ldw	r3,4(r2)
  80f670:	e0bffc17 	ldw	r2,-16(fp)
  80f674:	10800017 	ldw	r2,0(r2)
  80f678:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f67c:	e0fffc17 	ldw	r3,-16(fp)
  80f680:	e0bffc17 	ldw	r2,-16(fp)
  80f684:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
  80f688:	e0fffc17 	ldw	r3,-16(fp)
  80f68c:	e0bffc17 	ldw	r2,-16(fp)
  80f690:	18800015 	stw	r2,0(r3)
  80f694:	e0bffe17 	ldw	r2,-8(fp)
  80f698:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f69c:	e0bffb17 	ldw	r2,-20(fp)
  80f6a0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80f6a4:	e037883a 	mov	sp,fp
  80f6a8:	df000017 	ldw	fp,0(sp)
  80f6ac:	dec00104 	addi	sp,sp,4
  80f6b0:	f800283a 	ret

0080f6b4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f6b4:	defffb04 	addi	sp,sp,-20
  80f6b8:	dfc00415 	stw	ra,16(sp)
  80f6bc:	df000315 	stw	fp,12(sp)
  80f6c0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f6c4:	d0a00e17 	ldw	r2,-32712(gp)
  80f6c8:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f6cc:	d0a6b317 	ldw	r2,-25908(gp)
  80f6d0:	10800044 	addi	r2,r2,1
  80f6d4:	d0a6b315 	stw	r2,-25908(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f6d8:	00003106 	br	80f7a0 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f6dc:	e0bffe17 	ldw	r2,-8(fp)
  80f6e0:	10800017 	ldw	r2,0(r2)
  80f6e4:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f6e8:	e0bffe17 	ldw	r2,-8(fp)
  80f6ec:	10800403 	ldbu	r2,16(r2)
  80f6f0:	10803fcc 	andi	r2,r2,255
  80f6f4:	1005003a 	cmpeq	r2,r2,zero
  80f6f8:	1000051e 	bne	r2,zero,80f710 <alt_tick+0x5c>
  80f6fc:	d0a6b317 	ldw	r2,-25908(gp)
  80f700:	1004c03a 	cmpne	r2,r2,zero
  80f704:	1000021e 	bne	r2,zero,80f710 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
  80f708:	e0bffe17 	ldw	r2,-8(fp)
  80f70c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f710:	e0bffe17 	ldw	r2,-8(fp)
  80f714:	10c00217 	ldw	r3,8(r2)
  80f718:	d0a6b317 	ldw	r2,-25908(gp)
  80f71c:	10c01e36 	bltu	r2,r3,80f798 <alt_tick+0xe4>
  80f720:	e0bffe17 	ldw	r2,-8(fp)
  80f724:	10800403 	ldbu	r2,16(r2)
  80f728:	10803fcc 	andi	r2,r2,255
  80f72c:	1004c03a 	cmpne	r2,r2,zero
  80f730:	1000191e 	bne	r2,zero,80f798 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
  80f734:	e0bffe17 	ldw	r2,-8(fp)
  80f738:	10c00317 	ldw	r3,12(r2)
  80f73c:	e0bffe17 	ldw	r2,-8(fp)
  80f740:	11000517 	ldw	r4,20(r2)
  80f744:	183ee83a 	callr	r3
  80f748:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f74c:	e0bffd17 	ldw	r2,-12(fp)
  80f750:	1004c03a 	cmpne	r2,r2,zero
  80f754:	1000031e 	bne	r2,zero,80f764 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
  80f758:	e13ffe17 	ldw	r4,-8(fp)
  80f75c:	080f61c0 	call	80f61c <alt_alarm_stop>
  80f760:	00000d06 	br	80f798 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
  80f764:	e0bffe17 	ldw	r2,-8(fp)
  80f768:	10c00217 	ldw	r3,8(r2)
  80f76c:	e0bffd17 	ldw	r2,-12(fp)
  80f770:	1887883a 	add	r3,r3,r2
  80f774:	e0bffe17 	ldw	r2,-8(fp)
  80f778:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f77c:	e0bffe17 	ldw	r2,-8(fp)
  80f780:	10c00217 	ldw	r3,8(r2)
  80f784:	d0a6b317 	ldw	r2,-25908(gp)
  80f788:	1880032e 	bgeu	r3,r2,80f798 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
  80f78c:	e0fffe17 	ldw	r3,-8(fp)
  80f790:	00800044 	movi	r2,1
  80f794:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
  80f798:	e0bfff17 	ldw	r2,-4(fp)
  80f79c:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f7a0:	d0e00e04 	addi	r3,gp,-32712
  80f7a4:	e0bffe17 	ldw	r2,-8(fp)
  80f7a8:	10ffcc1e 	bne	r2,r3,80f6dc <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
  80f7ac:	e037883a 	mov	sp,fp
  80f7b0:	dfc00117 	ldw	ra,4(sp)
  80f7b4:	df000017 	ldw	fp,0(sp)
  80f7b8:	dec00204 	addi	sp,sp,8
  80f7bc:	f800283a 	ret

0080f7c0 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80f7c0:	deffff04 	addi	sp,sp,-4
  80f7c4:	df000015 	stw	fp,0(sp)
  80f7c8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f7cc:	000170fa 	wrctl	ienable,zero
}
  80f7d0:	e037883a 	mov	sp,fp
  80f7d4:	df000017 	ldw	fp,0(sp)
  80f7d8:	dec00104 	addi	sp,sp,4
  80f7dc:	f800283a 	ret

0080f7e0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f7e0:	defff904 	addi	sp,sp,-28
  80f7e4:	dfc00615 	stw	ra,24(sp)
  80f7e8:	df000515 	stw	fp,20(sp)
  80f7ec:	df000504 	addi	fp,sp,20
  80f7f0:	e13ffd15 	stw	r4,-12(fp)
  80f7f4:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f7f8:	e0bffe17 	ldw	r2,-8(fp)
  80f7fc:	10800017 	ldw	r2,0(r2)
  80f800:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f804:	e13ffd17 	ldw	r4,-12(fp)
  80f808:	0803e4c0 	call	803e4c <strlen>
  80f80c:	10800044 	addi	r2,r2,1
  80f810:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f814:	00000d06 	br	80f84c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f818:	e0bffc17 	ldw	r2,-16(fp)
  80f81c:	11000217 	ldw	r4,8(r2)
  80f820:	e1bffb17 	ldw	r6,-20(fp)
  80f824:	e17ffd17 	ldw	r5,-12(fp)
  80f828:	080fbd00 	call	80fbd0 <memcmp>
  80f82c:	1004c03a 	cmpne	r2,r2,zero
  80f830:	1000031e 	bne	r2,zero,80f840 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f834:	e0bffc17 	ldw	r2,-16(fp)
  80f838:	e0bfff15 	stw	r2,-4(fp)
  80f83c:	00000706 	br	80f85c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f840:	e0bffc17 	ldw	r2,-16(fp)
  80f844:	10800017 	ldw	r2,0(r2)
  80f848:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f84c:	e0fffe17 	ldw	r3,-8(fp)
  80f850:	e0bffc17 	ldw	r2,-16(fp)
  80f854:	10fff01e 	bne	r2,r3,80f818 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80f858:	e03fff15 	stw	zero,-4(fp)
  80f85c:	e0bfff17 	ldw	r2,-4(fp)
}
  80f860:	e037883a 	mov	sp,fp
  80f864:	dfc00117 	ldw	ra,4(sp)
  80f868:	df000017 	ldw	fp,0(sp)
  80f86c:	dec00204 	addi	sp,sp,8
  80f870:	f800283a 	ret

0080f874 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f874:	defffa04 	addi	sp,sp,-24
  80f878:	dfc00515 	stw	ra,20(sp)
  80f87c:	df000415 	stw	fp,16(sp)
  80f880:	df000404 	addi	fp,sp,16
  80f884:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f888:	00802074 	movhi	r2,129
  80f88c:	10884804 	addi	r2,r2,8480
  80f890:	10800017 	ldw	r2,0(r2)
  80f894:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f898:	00003306 	br	80f968 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
  80f89c:	e0bffd17 	ldw	r2,-12(fp)
  80f8a0:	11000217 	ldw	r4,8(r2)
  80f8a4:	0803e4c0 	call	803e4c <strlen>
  80f8a8:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
  80f8ac:	e0bffd17 	ldw	r2,-12(fp)
  80f8b0:	10c00217 	ldw	r3,8(r2)
  80f8b4:	e0bffc17 	ldw	r2,-16(fp)
  80f8b8:	1885883a 	add	r2,r3,r2
  80f8bc:	10bfffc4 	addi	r2,r2,-1
  80f8c0:	10800003 	ldbu	r2,0(r2)
  80f8c4:	10803fcc 	andi	r2,r2,255
  80f8c8:	1080201c 	xori	r2,r2,128
  80f8cc:	10bfe004 	addi	r2,r2,-128
  80f8d0:	10800bd8 	cmpnei	r2,r2,47
  80f8d4:	1000031e 	bne	r2,zero,80f8e4 <alt_find_file+0x70>
    {
      len -= 1;
  80f8d8:	e0bffc17 	ldw	r2,-16(fp)
  80f8dc:	10bfffc4 	addi	r2,r2,-1
  80f8e0:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f8e4:	e0bffc17 	ldw	r2,-16(fp)
  80f8e8:	1007883a 	mov	r3,r2
  80f8ec:	e0bffe17 	ldw	r2,-8(fp)
  80f8f0:	1885883a 	add	r2,r3,r2
  80f8f4:	10800003 	ldbu	r2,0(r2)
  80f8f8:	10803fcc 	andi	r2,r2,255
  80f8fc:	1080201c 	xori	r2,r2,128
  80f900:	10bfe004 	addi	r2,r2,-128
  80f904:	10800be0 	cmpeqi	r2,r2,47
  80f908:	10000a1e 	bne	r2,zero,80f934 <alt_find_file+0xc0>
  80f90c:	e0bffc17 	ldw	r2,-16(fp)
  80f910:	1007883a 	mov	r3,r2
  80f914:	e0bffe17 	ldw	r2,-8(fp)
  80f918:	1885883a 	add	r2,r3,r2
  80f91c:	10800003 	ldbu	r2,0(r2)
  80f920:	10803fcc 	andi	r2,r2,255
  80f924:	1080201c 	xori	r2,r2,128
  80f928:	10bfe004 	addi	r2,r2,-128
  80f92c:	1004c03a 	cmpne	r2,r2,zero
  80f930:	10000a1e 	bne	r2,zero,80f95c <alt_find_file+0xe8>
  80f934:	e0bffd17 	ldw	r2,-12(fp)
  80f938:	11000217 	ldw	r4,8(r2)
  80f93c:	e1bffc17 	ldw	r6,-16(fp)
  80f940:	e17ffe17 	ldw	r5,-8(fp)
  80f944:	080fbd00 	call	80fbd0 <memcmp>
  80f948:	1004c03a 	cmpne	r2,r2,zero
  80f94c:	1000031e 	bne	r2,zero,80f95c <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80f950:	e0bffd17 	ldw	r2,-12(fp)
  80f954:	e0bfff15 	stw	r2,-4(fp)
  80f958:	00000806 	br	80f97c <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
  80f95c:	e0bffd17 	ldw	r2,-12(fp)
  80f960:	10800017 	ldw	r2,0(r2)
  80f964:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f968:	00c02074 	movhi	r3,129
  80f96c:	18c84804 	addi	r3,r3,8480
  80f970:	e0bffd17 	ldw	r2,-12(fp)
  80f974:	10ffc91e 	bne	r2,r3,80f89c <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80f978:	e03fff15 	stw	zero,-4(fp)
  80f97c:	e0bfff17 	ldw	r2,-4(fp)
}
  80f980:	e037883a 	mov	sp,fp
  80f984:	dfc00117 	ldw	ra,4(sp)
  80f988:	df000017 	ldw	fp,0(sp)
  80f98c:	dec00204 	addi	sp,sp,8
  80f990:	f800283a 	ret

0080f994 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80f994:	defffa04 	addi	sp,sp,-24
  80f998:	dfc00515 	stw	ra,20(sp)
  80f99c:	df000415 	stw	fp,16(sp)
  80f9a0:	dc000315 	stw	r16,12(sp)
  80f9a4:	df000304 	addi	fp,sp,12
  80f9a8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80f9ac:	00bffa04 	movi	r2,-24
  80f9b0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f9b4:	e03ffe15 	stw	zero,-8(fp)
  80f9b8:	00002006 	br	80fa3c <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
  80f9bc:	e13ffe17 	ldw	r4,-8(fp)
  80f9c0:	04002074 	movhi	r16,129
  80f9c4:	8403ca04 	addi	r16,r16,3880
  80f9c8:	01400304 	movi	r5,12
  80f9cc:	08032000 	call	803200 <__mulsi3>
  80f9d0:	1405883a 	add	r2,r2,r16
  80f9d4:	10800017 	ldw	r2,0(r2)
  80f9d8:	1004c03a 	cmpne	r2,r2,zero
  80f9dc:	1000141e 	bne	r2,zero,80fa30 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
  80f9e0:	e13ffe17 	ldw	r4,-8(fp)
  80f9e4:	04002074 	movhi	r16,129
  80f9e8:	8403ca04 	addi	r16,r16,3880
  80f9ec:	01400304 	movi	r5,12
  80f9f0:	08032000 	call	803200 <__mulsi3>
  80f9f4:	1407883a 	add	r3,r2,r16
  80f9f8:	e0bfff17 	ldw	r2,-4(fp)
  80f9fc:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
  80fa00:	00802074 	movhi	r2,129
  80fa04:	10884c04 	addi	r2,r2,8496
  80fa08:	10c00017 	ldw	r3,0(r2)
  80fa0c:	e0bffe17 	ldw	r2,-8(fp)
  80fa10:	1880040e 	bge	r3,r2,80fa24 <alt_get_fd+0x90>
      {
        alt_max_fd = i;
  80fa14:	00c02074 	movhi	r3,129
  80fa18:	18c84c04 	addi	r3,r3,8496
  80fa1c:	e0bffe17 	ldw	r2,-8(fp)
  80fa20:	18800015 	stw	r2,0(r3)
      }
      rc = i;
  80fa24:	e0bffe17 	ldw	r2,-8(fp)
  80fa28:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
  80fa2c:	00000606 	br	80fa48 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80fa30:	e0bffe17 	ldw	r2,-8(fp)
  80fa34:	10800044 	addi	r2,r2,1
  80fa38:	e0bffe15 	stw	r2,-8(fp)
  80fa3c:	e0bffe17 	ldw	r2,-8(fp)
  80fa40:	10800810 	cmplti	r2,r2,32
  80fa44:	103fdd1e 	bne	r2,zero,80f9bc <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80fa48:	e0bffd17 	ldw	r2,-12(fp)
}
  80fa4c:	e037883a 	mov	sp,fp
  80fa50:	dfc00217 	ldw	ra,8(sp)
  80fa54:	df000117 	ldw	fp,4(sp)
  80fa58:	dc000017 	ldw	r16,0(sp)
  80fa5c:	dec00304 	addi	sp,sp,12
  80fa60:	f800283a 	ret

0080fa64 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80fa64:	defffb04 	addi	sp,sp,-20
  80fa68:	df000415 	stw	fp,16(sp)
  80fa6c:	df000404 	addi	fp,sp,16
  80fa70:	e13ffe15 	stw	r4,-8(fp)
  80fa74:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80fa78:	e0bfff17 	ldw	r2,-4(fp)
  80fa7c:	10880070 	cmpltui	r2,r2,8193
  80fa80:	1000021e 	bne	r2,zero,80fa8c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80fa84:	00880004 	movi	r2,8192
  80fa88:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80fa8c:	e0fffe17 	ldw	r3,-8(fp)
  80fa90:	e0bfff17 	ldw	r2,-4(fp)
  80fa94:	1885883a 	add	r2,r3,r2
  80fa98:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80fa9c:	e0bffe17 	ldw	r2,-8(fp)
  80faa0:	e0bffd15 	stw	r2,-12(fp)
  80faa4:	00000506 	br	80fabc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80faa8:	e0bffd17 	ldw	r2,-12(fp)
  80faac:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80fab0:	e0bffd17 	ldw	r2,-12(fp)
  80fab4:	10800804 	addi	r2,r2,32
  80fab8:	e0bffd15 	stw	r2,-12(fp)
  80fabc:	e0fffd17 	ldw	r3,-12(fp)
  80fac0:	e0bffc17 	ldw	r2,-16(fp)
  80fac4:	18bff836 	bltu	r3,r2,80faa8 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80fac8:	e0bffe17 	ldw	r2,-8(fp)
  80facc:	108007cc 	andi	r2,r2,31
  80fad0:	1005003a 	cmpeq	r2,r2,zero
  80fad4:	1000021e 	bne	r2,zero,80fae0 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80fad8:	e0bffd17 	ldw	r2,-12(fp)
  80fadc:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80fae0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80fae4:	e037883a 	mov	sp,fp
  80fae8:	df000017 	ldw	fp,0(sp)
  80faec:	dec00104 	addi	sp,sp,4
  80faf0:	f800283a 	ret

0080faf4 <atexit>:
  80faf4:	200b883a 	mov	r5,r4
  80faf8:	000d883a 	mov	r6,zero
  80fafc:	0009883a 	mov	r4,zero
  80fb00:	000f883a 	mov	r7,zero
  80fb04:	080fc441 	jmpi	80fc44 <__register_exitproc>

0080fb08 <exit>:
  80fb08:	defffe04 	addi	sp,sp,-8
  80fb0c:	000b883a 	mov	r5,zero
  80fb10:	dc000015 	stw	r16,0(sp)
  80fb14:	dfc00115 	stw	ra,4(sp)
  80fb18:	2021883a 	mov	r16,r4
  80fb1c:	080fd7c0 	call	80fd7c <__call_exitprocs>
  80fb20:	00802074 	movhi	r2,129
  80fb24:	10884304 	addi	r2,r2,8460
  80fb28:	11000017 	ldw	r4,0(r2)
  80fb2c:	20800f17 	ldw	r2,60(r4)
  80fb30:	10000126 	beq	r2,zero,80fb38 <exit+0x30>
  80fb34:	103ee83a 	callr	r2
  80fb38:	8009883a 	mov	r4,r16
  80fb3c:	080ff6c0 	call	80ff6c <_exit>

0080fb40 <_fputs_r>:
  80fb40:	defff804 	addi	sp,sp,-32
  80fb44:	dc000515 	stw	r16,20(sp)
  80fb48:	2021883a 	mov	r16,r4
  80fb4c:	2809883a 	mov	r4,r5
  80fb50:	dc400615 	stw	r17,24(sp)
  80fb54:	dfc00715 	stw	ra,28(sp)
  80fb58:	3023883a 	mov	r17,r6
  80fb5c:	d9400015 	stw	r5,0(sp)
  80fb60:	0803e4c0 	call	803e4c <strlen>
  80fb64:	00c00044 	movi	r3,1
  80fb68:	d8800115 	stw	r2,4(sp)
  80fb6c:	d8c00315 	stw	r3,12(sp)
  80fb70:	d8800415 	stw	r2,16(sp)
  80fb74:	dec00215 	stw	sp,8(sp)
  80fb78:	80000326 	beq	r16,zero,80fb88 <_fputs_r+0x48>
  80fb7c:	80800e17 	ldw	r2,56(r16)
  80fb80:	8009883a 	mov	r4,r16
  80fb84:	10000926 	beq	r2,zero,80fbac <_fputs_r+0x6c>
  80fb88:	8009883a 	mov	r4,r16
  80fb8c:	880b883a 	mov	r5,r17
  80fb90:	d9800204 	addi	r6,sp,8
  80fb94:	0808b640 	call	808b64 <__sfvwrite_r>
  80fb98:	dfc00717 	ldw	ra,28(sp)
  80fb9c:	dc400617 	ldw	r17,24(sp)
  80fba0:	dc000517 	ldw	r16,20(sp)
  80fba4:	dec00804 	addi	sp,sp,32
  80fba8:	f800283a 	ret
  80fbac:	08084980 	call	808498 <__sinit>
  80fbb0:	003ff506 	br	80fb88 <_fputs_r+0x48>

0080fbb4 <fputs>:
  80fbb4:	01802074 	movhi	r6,129
  80fbb8:	31884204 	addi	r6,r6,8456
  80fbbc:	2007883a 	mov	r3,r4
  80fbc0:	31000017 	ldw	r4,0(r6)
  80fbc4:	280d883a 	mov	r6,r5
  80fbc8:	180b883a 	mov	r5,r3
  80fbcc:	080fb401 	jmpi	80fb40 <_fputs_r>

0080fbd0 <memcmp>:
  80fbd0:	00c000c4 	movi	r3,3
  80fbd4:	1980032e 	bgeu	r3,r6,80fbe4 <memcmp+0x14>
  80fbd8:	2144b03a 	or	r2,r4,r5
  80fbdc:	10c4703a 	and	r2,r2,r3
  80fbe0:	10000f26 	beq	r2,zero,80fc20 <memcmp+0x50>
  80fbe4:	31ffffc4 	addi	r7,r6,-1
  80fbe8:	3000061e 	bne	r6,zero,80fc04 <memcmp+0x34>
  80fbec:	00000a06 	br	80fc18 <memcmp+0x48>
  80fbf0:	39ffffc4 	addi	r7,r7,-1
  80fbf4:	00bfffc4 	movi	r2,-1
  80fbf8:	21000044 	addi	r4,r4,1
  80fbfc:	29400044 	addi	r5,r5,1
  80fc00:	38800526 	beq	r7,r2,80fc18 <memcmp+0x48>
  80fc04:	20c00003 	ldbu	r3,0(r4)
  80fc08:	28800003 	ldbu	r2,0(r5)
  80fc0c:	18bff826 	beq	r3,r2,80fbf0 <memcmp+0x20>
  80fc10:	1885c83a 	sub	r2,r3,r2
  80fc14:	f800283a 	ret
  80fc18:	0005883a 	mov	r2,zero
  80fc1c:	f800283a 	ret
  80fc20:	180f883a 	mov	r7,r3
  80fc24:	20c00017 	ldw	r3,0(r4)
  80fc28:	28800017 	ldw	r2,0(r5)
  80fc2c:	18bfed1e 	bne	r3,r2,80fbe4 <memcmp+0x14>
  80fc30:	31bfff04 	addi	r6,r6,-4
  80fc34:	21000104 	addi	r4,r4,4
  80fc38:	29400104 	addi	r5,r5,4
  80fc3c:	39bff936 	bltu	r7,r6,80fc24 <memcmp+0x54>
  80fc40:	003fe806 	br	80fbe4 <memcmp+0x14>

0080fc44 <__register_exitproc>:
  80fc44:	defffa04 	addi	sp,sp,-24
  80fc48:	00802074 	movhi	r2,129
  80fc4c:	10884304 	addi	r2,r2,8460
  80fc50:	dc000015 	stw	r16,0(sp)
  80fc54:	14000017 	ldw	r16,0(r2)
  80fc58:	dd000415 	stw	r20,16(sp)
  80fc5c:	2829883a 	mov	r20,r5
  80fc60:	81405217 	ldw	r5,328(r16)
  80fc64:	dcc00315 	stw	r19,12(sp)
  80fc68:	dc800215 	stw	r18,8(sp)
  80fc6c:	dc400115 	stw	r17,4(sp)
  80fc70:	dfc00515 	stw	ra,20(sp)
  80fc74:	2023883a 	mov	r17,r4
  80fc78:	3027883a 	mov	r19,r6
  80fc7c:	3825883a 	mov	r18,r7
  80fc80:	28002526 	beq	r5,zero,80fd18 <__register_exitproc+0xd4>
  80fc84:	29000117 	ldw	r4,4(r5)
  80fc88:	008007c4 	movi	r2,31
  80fc8c:	11002716 	blt	r2,r4,80fd2c <__register_exitproc+0xe8>
  80fc90:	8800101e 	bne	r17,zero,80fcd4 <__register_exitproc+0x90>
  80fc94:	2105883a 	add	r2,r4,r4
  80fc98:	1085883a 	add	r2,r2,r2
  80fc9c:	20c00044 	addi	r3,r4,1
  80fca0:	1145883a 	add	r2,r2,r5
  80fca4:	0009883a 	mov	r4,zero
  80fca8:	15000215 	stw	r20,8(r2)
  80fcac:	28c00115 	stw	r3,4(r5)
  80fcb0:	2005883a 	mov	r2,r4
  80fcb4:	dfc00517 	ldw	ra,20(sp)
  80fcb8:	dd000417 	ldw	r20,16(sp)
  80fcbc:	dcc00317 	ldw	r19,12(sp)
  80fcc0:	dc800217 	ldw	r18,8(sp)
  80fcc4:	dc400117 	ldw	r17,4(sp)
  80fcc8:	dc000017 	ldw	r16,0(sp)
  80fccc:	dec00604 	addi	sp,sp,24
  80fcd0:	f800283a 	ret
  80fcd4:	29802204 	addi	r6,r5,136
  80fcd8:	00800044 	movi	r2,1
  80fcdc:	110e983a 	sll	r7,r2,r4
  80fce0:	30c04017 	ldw	r3,256(r6)
  80fce4:	2105883a 	add	r2,r4,r4
  80fce8:	1085883a 	add	r2,r2,r2
  80fcec:	1185883a 	add	r2,r2,r6
  80fcf0:	19c6b03a 	or	r3,r3,r7
  80fcf4:	14802015 	stw	r18,128(r2)
  80fcf8:	14c00015 	stw	r19,0(r2)
  80fcfc:	00800084 	movi	r2,2
  80fd00:	30c04015 	stw	r3,256(r6)
  80fd04:	88bfe31e 	bne	r17,r2,80fc94 <__register_exitproc+0x50>
  80fd08:	30804117 	ldw	r2,260(r6)
  80fd0c:	11c4b03a 	or	r2,r2,r7
  80fd10:	30804115 	stw	r2,260(r6)
  80fd14:	003fdf06 	br	80fc94 <__register_exitproc+0x50>
  80fd18:	00802074 	movhi	r2,129
  80fd1c:	108f4004 	addi	r2,r2,15616
  80fd20:	100b883a 	mov	r5,r2
  80fd24:	80805215 	stw	r2,328(r16)
  80fd28:	003fd606 	br	80fc84 <__register_exitproc+0x40>
  80fd2c:	00800034 	movhi	r2,0
  80fd30:	10800004 	addi	r2,r2,0
  80fd34:	1000021e 	bne	r2,zero,80fd40 <__register_exitproc+0xfc>
  80fd38:	013fffc4 	movi	r4,-1
  80fd3c:	003fdc06 	br	80fcb0 <__register_exitproc+0x6c>
  80fd40:	01006404 	movi	r4,400
  80fd44:	103ee83a 	callr	r2
  80fd48:	1007883a 	mov	r3,r2
  80fd4c:	103ffa26 	beq	r2,zero,80fd38 <__register_exitproc+0xf4>
  80fd50:	80805217 	ldw	r2,328(r16)
  80fd54:	180b883a 	mov	r5,r3
  80fd58:	18000115 	stw	zero,4(r3)
  80fd5c:	18800015 	stw	r2,0(r3)
  80fd60:	80c05215 	stw	r3,328(r16)
  80fd64:	18006215 	stw	zero,392(r3)
  80fd68:	18006315 	stw	zero,396(r3)
  80fd6c:	0009883a 	mov	r4,zero
  80fd70:	883fc826 	beq	r17,zero,80fc94 <__register_exitproc+0x50>
  80fd74:	003fd706 	br	80fcd4 <__register_exitproc+0x90>

0080fd78 <register_fini>:
  80fd78:	f800283a 	ret

0080fd7c <__call_exitprocs>:
  80fd7c:	00802074 	movhi	r2,129
  80fd80:	10884304 	addi	r2,r2,8460
  80fd84:	10800017 	ldw	r2,0(r2)
  80fd88:	defff304 	addi	sp,sp,-52
  80fd8c:	df000b15 	stw	fp,44(sp)
  80fd90:	d8800115 	stw	r2,4(sp)
  80fd94:	00800034 	movhi	r2,0
  80fd98:	10800004 	addi	r2,r2,0
  80fd9c:	1005003a 	cmpeq	r2,r2,zero
  80fda0:	d8800215 	stw	r2,8(sp)
  80fda4:	d8800117 	ldw	r2,4(sp)
  80fda8:	dd400815 	stw	r21,32(sp)
  80fdac:	dd000715 	stw	r20,28(sp)
  80fdb0:	10805204 	addi	r2,r2,328
  80fdb4:	dfc00c15 	stw	ra,48(sp)
  80fdb8:	ddc00a15 	stw	r23,40(sp)
  80fdbc:	dd800915 	stw	r22,36(sp)
  80fdc0:	dcc00615 	stw	r19,24(sp)
  80fdc4:	dc800515 	stw	r18,20(sp)
  80fdc8:	dc400415 	stw	r17,16(sp)
  80fdcc:	dc000315 	stw	r16,12(sp)
  80fdd0:	282b883a 	mov	r21,r5
  80fdd4:	2039883a 	mov	fp,r4
  80fdd8:	d8800015 	stw	r2,0(sp)
  80fddc:	2829003a 	cmpeq	r20,r5,zero
  80fde0:	d8800117 	ldw	r2,4(sp)
  80fde4:	14405217 	ldw	r17,328(r2)
  80fde8:	88001026 	beq	r17,zero,80fe2c <__call_exitprocs+0xb0>
  80fdec:	ddc00017 	ldw	r23,0(sp)
  80fdf0:	88800117 	ldw	r2,4(r17)
  80fdf4:	8c802204 	addi	r18,r17,136
  80fdf8:	143fffc4 	addi	r16,r2,-1
  80fdfc:	80000916 	blt	r16,zero,80fe24 <__call_exitprocs+0xa8>
  80fe00:	05bfffc4 	movi	r22,-1
  80fe04:	a000151e 	bne	r20,zero,80fe5c <__call_exitprocs+0xe0>
  80fe08:	8409883a 	add	r4,r16,r16
  80fe0c:	2105883a 	add	r2,r4,r4
  80fe10:	1485883a 	add	r2,r2,r18
  80fe14:	10c02017 	ldw	r3,128(r2)
  80fe18:	a8c01126 	beq	r21,r3,80fe60 <__call_exitprocs+0xe4>
  80fe1c:	843fffc4 	addi	r16,r16,-1
  80fe20:	85bff81e 	bne	r16,r22,80fe04 <__call_exitprocs+0x88>
  80fe24:	d8800217 	ldw	r2,8(sp)
  80fe28:	10003126 	beq	r2,zero,80fef0 <__call_exitprocs+0x174>
  80fe2c:	dfc00c17 	ldw	ra,48(sp)
  80fe30:	df000b17 	ldw	fp,44(sp)
  80fe34:	ddc00a17 	ldw	r23,40(sp)
  80fe38:	dd800917 	ldw	r22,36(sp)
  80fe3c:	dd400817 	ldw	r21,32(sp)
  80fe40:	dd000717 	ldw	r20,28(sp)
  80fe44:	dcc00617 	ldw	r19,24(sp)
  80fe48:	dc800517 	ldw	r18,20(sp)
  80fe4c:	dc400417 	ldw	r17,16(sp)
  80fe50:	dc000317 	ldw	r16,12(sp)
  80fe54:	dec00d04 	addi	sp,sp,52
  80fe58:	f800283a 	ret
  80fe5c:	8409883a 	add	r4,r16,r16
  80fe60:	88c00117 	ldw	r3,4(r17)
  80fe64:	2105883a 	add	r2,r4,r4
  80fe68:	1445883a 	add	r2,r2,r17
  80fe6c:	18ffffc4 	addi	r3,r3,-1
  80fe70:	11800217 	ldw	r6,8(r2)
  80fe74:	1c001526 	beq	r3,r16,80fecc <__call_exitprocs+0x150>
  80fe78:	10000215 	stw	zero,8(r2)
  80fe7c:	303fe726 	beq	r6,zero,80fe1c <__call_exitprocs+0xa0>
  80fe80:	00c00044 	movi	r3,1
  80fe84:	1c06983a 	sll	r3,r3,r16
  80fe88:	90804017 	ldw	r2,256(r18)
  80fe8c:	8cc00117 	ldw	r19,4(r17)
  80fe90:	1884703a 	and	r2,r3,r2
  80fe94:	10001426 	beq	r2,zero,80fee8 <__call_exitprocs+0x16c>
  80fe98:	90804117 	ldw	r2,260(r18)
  80fe9c:	1884703a 	and	r2,r3,r2
  80fea0:	10000c1e 	bne	r2,zero,80fed4 <__call_exitprocs+0x158>
  80fea4:	2105883a 	add	r2,r4,r4
  80fea8:	1485883a 	add	r2,r2,r18
  80feac:	11400017 	ldw	r5,0(r2)
  80feb0:	e009883a 	mov	r4,fp
  80feb4:	303ee83a 	callr	r6
  80feb8:	88800117 	ldw	r2,4(r17)
  80febc:	98bfc81e 	bne	r19,r2,80fde0 <__call_exitprocs+0x64>
  80fec0:	b8800017 	ldw	r2,0(r23)
  80fec4:	147fd526 	beq	r2,r17,80fe1c <__call_exitprocs+0xa0>
  80fec8:	003fc506 	br	80fde0 <__call_exitprocs+0x64>
  80fecc:	8c000115 	stw	r16,4(r17)
  80fed0:	003fea06 	br	80fe7c <__call_exitprocs+0x100>
  80fed4:	2105883a 	add	r2,r4,r4
  80fed8:	1485883a 	add	r2,r2,r18
  80fedc:	11000017 	ldw	r4,0(r2)
  80fee0:	303ee83a 	callr	r6
  80fee4:	003ff406 	br	80feb8 <__call_exitprocs+0x13c>
  80fee8:	303ee83a 	callr	r6
  80feec:	003ff206 	br	80feb8 <__call_exitprocs+0x13c>
  80fef0:	88800117 	ldw	r2,4(r17)
  80fef4:	1000081e 	bne	r2,zero,80ff18 <__call_exitprocs+0x19c>
  80fef8:	89000017 	ldw	r4,0(r17)
  80fefc:	20000726 	beq	r4,zero,80ff1c <__call_exitprocs+0x1a0>
  80ff00:	b9000015 	stw	r4,0(r23)
  80ff04:	8809883a 	mov	r4,r17
  80ff08:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80ff0c:	bc400017 	ldw	r17,0(r23)
  80ff10:	883fb71e 	bne	r17,zero,80fdf0 <__call_exitprocs+0x74>
  80ff14:	003fc506 	br	80fe2c <__call_exitprocs+0xb0>
  80ff18:	89000017 	ldw	r4,0(r17)
  80ff1c:	882f883a 	mov	r23,r17
  80ff20:	2023883a 	mov	r17,r4
  80ff24:	883fb21e 	bne	r17,zero,80fdf0 <__call_exitprocs+0x74>
  80ff28:	003fc006 	br	80fe2c <__call_exitprocs+0xb0>

0080ff2c <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  80ff2c:	defffd04 	addi	sp,sp,-12
  80ff30:	df000215 	stw	fp,8(sp)
  80ff34:	df000204 	addi	fp,sp,8
  80ff38:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
  80ff3c:	e0bfff17 	ldw	r2,-4(fp)
  80ff40:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80ff44:	e0bffe17 	ldw	r2,-8(fp)
  80ff48:	1005003a 	cmpeq	r2,r2,zero
  80ff4c:	1000021e 	bne	r2,zero,80ff58 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
  80ff50:	002af070 	cmpltui	zero,zero,43969
  80ff54:	00000106 	br	80ff5c <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
  80ff58:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
  80ff5c:	e037883a 	mov	sp,fp
  80ff60:	df000017 	ldw	fp,0(sp)
  80ff64:	dec00104 	addi	sp,sp,4
  80ff68:	f800283a 	ret

0080ff6c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80ff6c:	defffd04 	addi	sp,sp,-12
  80ff70:	dfc00215 	stw	ra,8(sp)
  80ff74:	df000115 	stw	fp,4(sp)
  80ff78:	df000104 	addi	fp,sp,4
  80ff7c:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
  80ff80:	e13fff17 	ldw	r4,-4(fp)
  80ff84:	080ff2c0 	call	80ff2c <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80ff88:	003fff06 	br	80ff88 <_exit+0x1c>
  80ff8c:	0080fd78 	rdprs	r2,zero,1013
