
Task4.elf:     file format elf32-littlenios2
Task4.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00010c50 memsz 0x00010c50 flags r-x
    LOAD off    0x00011c70 vaddr 0x00810c70 paddr 0x008126cc align 2**12
         filesz 0x00001a5c memsz 0x00001a5c flags rw-
    LOAD off    0x00014128 vaddr 0x00814128 paddr 0x00814128 align 2**12
         filesz 0x00000000 memsz 0x000002ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010544  008001b4  008001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000578  008106f8  008106f8  000116f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a5c  00810c70  008126cc  00011c70  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002ec  00814128  00814128  00014128  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  000136cc  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000f98  00000000  00000000  000136f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000016e0  00000000  00000000  00014690  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000287c0  00000000  00000000  00015d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009815  00000000  00000000  0003e530  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00017e0b  00000000  00000000  00047d45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001e10  00000000  00000000  0005fb50  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000284d  00000000  00000000  00061960  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000ebcb  00000000  00000000  000641ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  00072d78  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000bc0  00000000  00000000  00072d98  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00076e9c  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00076e9f  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00076ea2  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00076ea3  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00076ea4  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00076ea8  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00076eac  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00076eb0  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00076eb9  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00076ec2  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  00076ecb  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000021  00000000  00000000  00076edd  2**0
                  CONTENTS, READONLY
 29 .jdi          00004fae  00000000  00000000  00076efe  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003c17f  00000000  00000000  0007beac  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001b4 l    d  .text	00000000 .text
008106f8 l    d  .rodata	00000000 .rodata
00810c70 l    d  .rwdata	00000000 .rwdata
00814128 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
008001ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 task4.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
008107cc l     O .rodata	00000108 two_over_pi
0081074c l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
008108d4 l     O .rodata	00000010 init_jk
008108e4 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00802f08 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00803d78 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 efgcvt.c
00000000 l    df *ABS*	00000000 impure.c
00810c70 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00804ba4 l     F .text	00000058 __sprint_r
00810abe l     O .rodata	00000010 blanks.3452
00810aae l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00806c20 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 ecvtbuf.c
00808418 l     F .text	00000204 print_e
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00809114 l     F .text	00000058 std
00809220 l     F .text	00000008 __fp_lock
00809228 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
00812698 l     O .rwdata	00000004 charset
00810af0 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810c38 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0080db50 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080dbb0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080dcb4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080ddd8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080deb8 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080e018 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
0080e288 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008126bc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080e4b0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080e634 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0081162c l     O .rwdata	00001060 jtag_uart
0080e724 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e964 l     F .text	00000228 altera_avalon_jtag_uart_irq
0080eb8c l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080f208 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080f52c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080f950 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080faa0 l     F .text	000000f8 alt_file_locked
0080fd24 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
008104e0 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
00810694 l     F .text	00000040 alt_sim_halt
0080af04 g     F .text	00000094 _mprec_log10
0080aff0 g     F .text	00000088 __any_on
0080c834 g     F .text	00000070 _isatty_r
00810c10 g     O .rodata	00000028 __mprec_tinytens
0080e078 g     F .text	0000006c alt_main
0080c460 g     F .text	0000008c strcpy
00804a7c g     F .text	000000a0 _puts_r
00814184 g     O .bss	00000100 alt_irq
00802944 g     F .text	00000018 fabs
0080c8a4 g     F .text	00000078 _lseek_r
008126cc g       *ABS*	00000000 __flash_rwdata_start
008037d0 g     F .text	00000088 __eqdf2
00814414 g       *ABS*	00000000 __alt_heap_start
00804a04 g     F .text	00000044 printf
0080c260 g     F .text	00000068 __sseek
0080917c g     F .text	000000a4 __sinit
00808d3c g     F .text	000001a8 fcvtbuf
00809e88 g     F .text	00000084 _setlocale_r
0080927c g     F .text	0000009c __sfmoreglue
0080e104 g     F .text	00000020 __malloc_unlock
00802d40 g     F .text	00000174 __divsf3
0080a980 g     F .text	000000e0 memmove
0080926c g     F .text	00000010 _cleanup
0080b078 g     F .text	000000bc _Balloc
0080e124 g     F .text	00000040 alt_putstr
00803858 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000001c __reset
0080e41c g     F .text	00000094 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080c7c0 g     F .text	00000074 _fstat_r
00814140 g     O .bss	00000004 errno
00803b38 g     F .text	00000038 __make_dp
00800830 g     F .text	00000224 floor
008042c8 g     F .text	0000002c __make_fp
00814148 g     O .bss	00000004 alt_argv
0081a68c g       *ABS*	00000000 _gp
008114ac g     O .rwdata	00000180 alt_fd_list
00800a54 g     F .text	00000828 __ieee754_rem_pio2
0080ff48 g     F .text	00000094 alt_find_dev
0080a8e0 g     F .text	000000a0 memcpy
00809260 g     F .text	0000000c _cleanup_r
00803968 g     F .text	000000f8 __floatsidf
0080fa28 g     F .text	00000078 alt_io_redirect
0080d940 g     F .text	00000088 __ltdf2
008106f8 g       *ABS*	00000000 __DTOR_END__
00804b1c g     F .text	00000014 puts
0080ae54 g     F .text	000000b0 __ratio
0080eda4 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00804a48 g     F .text	00000034 _printf_r
00803eb4 g     F .text	00000008 __udivsi3
0080dd14 g     F .text	000000c4 isatty
00810b20 g     O .rodata	000000c8 __mprec_tens
00809e64 g     F .text	00000008 __locale_charset
0080127c g     F .text	0000052c __kernel_cos
008048d4 g     F .text	00000040 gcvtf
008101cc g     F .text	00000090 alt_icache_flush
00814134 g     O .bss	00000004 __malloc_top_pad
00812694 g     O .rwdata	00000004 __mb_cur_max
00809e6c g     F .text	0000000c _localeconv_r
0080b7dc g     F .text	0000003c __i2b
00809848 g     F .text	0000049c __sfvwrite_r
0080c1e8 g     F .text	00000070 _sbrk_r
0080c91c g     F .text	00000078 _read_r
00811070 g     O .rwdata	0000000c __lc_ctype
008126b4 g     O .rwdata	00000004 alt_max_fd
00804608 g     F .text	00000138 __unpack_d
0080c69c g     F .text	00000110 _fclose_r
008090e0 g     F .text	00000034 fflush
00814138 g     O .bss	00000004 __malloc_max_sbrked_mem
0080262c g     F .text	00000318 __kernel_sin
00802eb4 g     F .text	00000054 __extendsfdf2
00803398 g     F .text	00000074 __adddf3
0080ad34 g     F .text	00000120 __b2d
0080d000 g     F .text	00000660 __umoddi3
0080df24 g     F .text	000000f4 lseek
00812690 g     O .rwdata	00000004 _global_impure_ptr
0080bb84 g     F .text	000005f4 _realloc_r
00814414 g       *ABS*	00000000 __bss_end
0080f858 g     F .text	000000f8 alt_iic_isr_register
0080fe1c g     F .text	0000010c alt_tick
0080c994 g     F .text	0000066c __udivdi3
00810be8 g     O .rodata	00000028 __mprec_bigtens
0080ba64 g     F .text	00000120 __s2b
00803be4 g     F .text	00000194 __floatunsidf
0080ac54 g     F .text	00000060 __mcmp
00809248 g     F .text	00000018 __fp_lock_all
0080f810 g     F .text	00000048 alt_ic_irq_enabled
0080fd84 g     F .text	00000098 alt_alarm_stop
00814150 g     O .bss	00000004 alt_irq_active
01010000 g       *ABS*	00000000 __alt_mem_onchip_mem
008000ec g     F .exceptions	000000c8 alt_irq_handler
00811484 g     O .rwdata	00000028 alt_dev_null
008017a8 g     F .text	00000e84 __kernel_rem_pio2
00804200 g     F .text	000000c8 __unpack_f
0080f45c g     F .text	0000001c alt_dcache_flush_all
0080ab20 g     F .text	00000070 __hi0bits
00803a60 g     F .text	000000d8 __fixdfsi
008126cc g       *ABS*	00000000 __ram_rwdata_end
008126ac g     O .rwdata	00000008 alt_dev_list
0080e510 g     F .text	00000124 write
00810c70 g       *ABS*	00000000 __ram_rodata_end
0080dbdc g     F .text	000000d8 fstat
0080d9c8 g     F .text	00000088 __ledf2
0080b944 g     F .text	00000120 __pow5mult
00814128 g     O .bss	00000004 __nlocale_changed
00803ebc g     F .text	00000008 __umodsi3
00814414 g       *ABS*	00000000 end
008040a0 g     F .text	00000160 __pack_f
0080e8a4 g     F .text	000000c0 altera_avalon_jtag_uart_init
008106f4 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
008088fc g     F .text	000002f8 _dcvt
0080f278 g     F .text	00000090 alt_avalon_timer_sc_init
00804020 g     F .text	00000080 __clzsi2
0080efc8 g     F .text	00000240 altera_avalon_jtag_uart_write
008006c8 g     F .text	00000168 cos
0080916c g     F .text	00000004 __sfp_lock_acquire
0080a7fc g     F .text	000000e4 memchr
00804bfc g     F .text	00001ec4 ___vfprintf_internal_r
00809534 g     F .text	00000314 _free_r
008104e4 g     F .text	000001b0 __call_exitprocs
0081412c g     O .bss	00000004 __mlocale_changed
008126a0 g     O .rwdata	00000004 __malloc_sbrk_base
008001b4 g     F .text	0000003c _start
00814154 g     O .bss	00000004 _alt_tick_rate
0080861c g     F .text	000002e0 _gcvt
0080b43c g     F .text	0000014c __lshift
00814158 g     O .bss	00000004 _alt_nticks
0080e164 g     F .text	00000124 read
0080e6c8 g     F .text	0000005c alt_sys_init
008103ac g     F .text	00000134 __register_exitproc
0080b588 g     F .text	00000254 __multiply
0080ec3c g     F .text	00000074 altera_avalon_jtag_uart_close
00803ec4 g     F .text	00000038 __mulsi3
00810c70 g       *ABS*	00000000 __ram_rwdata_start
008106f8 g       *ABS*	00000000 __ram_rodata_start
0081415c g     O .bss	00000028 __malloc_current_mallinfo
0080b134 g     F .text	0000017c __d2b
0080e75c g     F .text	00000058 altera_avalon_jtag_uart_read_fd
008100fc g     F .text	000000d0 alt_get_fd
00804740 g     F .text	000000c8 __fpcmp_parts_d
0080c62c g     F .text	00000070 _close_r
008001f0 g     F .text	000000e4 generateVector
00810338 g     F .text	00000074 memcmp
0080e80c g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00814414 g       *ABS*	00000000 __alt_stack_base
0080e854 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00806ae4 g     F .text	0000013c __swsetup_r
0080d660 g     F .text	00000258 __divdf3
00809318 g     F .text	000000f0 __sfp
0080af98 g     F .text	00000058 __copybits
0081107c g     O .rwdata	00000408 __malloc_av_
00809178 g     F .text	00000004 __sinit_lock_release
0080340c g     F .text	000003c4 __muldf3
0080c344 g     F .text	00000060 __sread
00810924 g     O .rodata	00000010 __thenan_sf
0080ffdc g     F .text	00000120 alt_find_file
0080f478 g     F .text	000000b4 alt_dev_llist_insert
0080e0e4 g     F .text	00000020 __malloc_lock
0080e360 g     F .text	000000bc sbrk
00808ee4 g     F .text	000001fc _fflush_r
0080c564 g     F .text	000000c8 _calloc_r
00814128 g       *ABS*	00000000 __bss_start
0080aa60 g     F .text	00000098 memset
00800508 g     F .text	000001c0 main
0080498c g     F .text	00000024 fcvt
0081414c g     O .bss	00000004 alt_envp
0081413c g     O .bss	00000004 __malloc_max_total_mem
0080e7b4 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
00808bf4 g     F .text	00000148 ecvtbuf
0080c258 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080c7ac g     F .text	00000014 fclose
00803b70 g     F .text	00000074 __truncdfsf2
00814284 g     O .bss	00000190 _atexit0
00806e64 g     F .text	000015b4 _dtoa_r
0080a0bc g     F .text	00000740 _malloc_r
008126b8 g     O .rwdata	00000004 alt_errno
00804938 g     F .text	00000054 ecvtf
00809dac g     F .text	000000b8 _fwalk
00803df4 g     F .text	00000060 __divsi3
00810934 g     O .rodata	00000014 __thenan_df
00809408 g     F .text	0000012c _malloc_trim_r
008106f8 g       *ABS*	00000000 __CTOR_END__
00802b60 g     F .text	000001e0 __mulsf3
0080c3a4 g     F .text	000000bc strcmp
008106f8 g       *ABS*	00000000 __flash_rodata_start
008106f8 g       *ABS*	00000000 __DTOR_LIST__
00802b3c g     F .text	00000024 copysign
0080d8b8 g     F .text	00000088 __nedf2
0080e694 g     F .text	00000034 alt_irq_init
0080e2e8 g     F .text	00000078 alt_release_fd
00810948 g     O .rodata	00000100 __clz_tab
00814130 g     O .bss	00000004 _PathLocale
0081025c g     F .text	00000014 atexit
008002d4 g     F .text	00000234 sumVector
0080c4ec g     F .text	00000078 _write_r
00809f0c g     F .text	0000001c setlocale
0081268c g     O .rwdata	00000004 _impure_ptr
00814144 g     O .bss	00000004 alt_argc
0080295c g     F .text	000001e0 scalbn
0080f5f0 g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
0080acb4 g     F .text	00000080 __ulp
0080c178 g     F .text	00000040 __isinfd
00809230 g     F .text	00000018 __fp_unlock_all
00804914 g     F .text	00000024 ecvt
008126a4 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00809e78 g     F .text	00000010 localeconv
0080f684 g     F .text	00000050 alt_ic_isr_register
008126cc g       *ABS*	00000000 _edata
00814414 g       *ABS*	00000000 _end
008001b4 g       *ABS*	00000000 __ram_exceptions_end
0080ecb0 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
008102a8 g     F .text	00000074 _fputs_r
0080f770 g     F .text	000000a0 alt_ic_irq_disable
0080c2c8 g     F .text	0000007c __swrite
0081269c g     O .rwdata	00000004 __malloc_trim_threshold
008049b0 g     F .text	00000054 fcvtf
0080ff28 g     F .text	00000020 altera_nios2_qsys_irq_init
00810270 g     F .text	00000038 exit
00809ce4 g     F .text	000000c8 _fwalk_reent
0080b2b0 g     F .text	0000018c __mdiff
00803e54 g     F .text	00000060 __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00809170 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00804808 g     F .text	000000cc gcvt
008106d4 g     F .text	00000020 _exit
0080c1b8 g     F .text	00000030 __isnand
0080f308 g     F .text	00000154 alt_alarm_start
00803efc g     F .text	00000124 __muldi3
00809f28 g     F .text	00000194 __smakebuf_r
00804b30 g     F .text	00000074 strlen
0080fb98 g     F .text	0000018c open
008038e0 g     F .text	00000088 __gedf2
0080f654 g     F .text	00000030 alt_icache_flush_all
0081031c g     F .text	0000001c fputs
008126c0 g     O .rwdata	00000004 alt_priority_mask
0080f6d4 g     F .text	0000009c alt_ic_irq_enable
00806ac0 g     F .text	00000024 __vfprintf_internal
00803318 g     F .text	00000080 __subdf3
0080ab90 g     F .text	000000c4 __lo0bits
008126c4 g     O .rwdata	00000008 alt_alarm_list
0080f58c g     F .text	00000064 _do_ctors
0080da50 g     F .text	00000100 close
0080de38 g     F .text	00000080 alt_load
008042f4 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00809174 g     F .text	00000004 __sinit_lock_acquire
0080b818 g     F .text	0000012c __multadd
0080aaf8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08406d14 	ori	at,at,436
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__reset-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  800044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  8000fc:	0005313a 	rdctl	r2,ipending
  800100:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  800108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  80010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800110:	00800044 	movi	r2,1
  800114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  800118:	e0ffff17 	ldw	r3,-4(fp)
  80011c:	e0bffe17 	ldw	r2,-8(fp)
  800120:	1884703a 	and	r2,r3,r2
  800124:	1005003a 	cmpeq	r2,r2,zero
  800128:	1000161e 	bne	r2,zero,800184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	e0bffd17 	ldw	r2,-12(fp)
  800130:	00c02074 	movhi	r3,129
  800134:	18d06104 	addi	r3,r3,16772
  800138:	100490fa 	slli	r2,r2,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	11400017 	ldw	r5,0(r2)
  800144:	e0bffd17 	ldw	r2,-12(fp)
  800148:	00c02074 	movhi	r3,129
  80014c:	18d06104 	addi	r3,r3,16772
  800150:	100490fa 	slli	r2,r2,3
  800154:	10c5883a 	add	r2,r2,r3
  800158:	10800104 	addi	r2,r2,4
  80015c:	11000017 	ldw	r4,0(r2)
  800160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800164:	0005313a 	rdctl	r2,ipending
  800168:	e0bffb15 	stw	r2,-20(fp)

  return active;
  80016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
  800170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	1004c03a 	cmpne	r2,r2,zero
  80017c:	103fe31e 	bne	r2,zero,80010c <alt_irq_handler+0x20>
  800180:	00000706 	br	8001a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
  800184:	e0bffe17 	ldw	r2,-8(fp)
  800188:	1085883a 	add	r2,r2,r2
  80018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
  800190:	e0bffd17 	ldw	r2,-12(fp)
  800194:	10800044 	addi	r2,r2,1
  800198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  80019c:	003fde06 	br	800118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
  8001a0:	e037883a 	mov	sp,fp
  8001a4:	dfc00117 	ldw	ra,4(sp)
  8001a8:	df000017 	ldw	fp,0(sp)
  8001ac:	dec00204 	addi	sp,sp,8
  8001b0:	f800283a 	ret

Disassembly of section .text:

008001b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001b4:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
  8001bc:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001c0:	d6a9a314 	ori	gp,gp,42636
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001c4:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001c8:	10904a14 	ori	r2,r2,16680

    movhi r3, %hi(__bss_end)
  8001cc:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001d0:	18d10514 	ori	r3,r3,17428

    beq r2, r3, 1f
  8001d4:	10c00326 	beq	r2,r3,8001e4 <_start+0x30>

0:
    stw zero, (r2)
  8001d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001e0:	10fffd36 	bltu	r2,r3,8001d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  8001e4:	080de380 	call	80de38 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  8001e8:	080e0780 	call	80e078 <alt_main>

008001ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  8001ec:	003fff06 	br	8001ec <alt_after_alt_main>

008001f0 <generateVector>:
//Test case 3
#define step 0.001
#define N 255001
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  8001f0:	defffb04 	addi	sp,sp,-20
  8001f4:	dfc00415 	stw	ra,16(sp)
  8001f8:	df000315 	stw	fp,12(sp)
  8001fc:	dc000215 	stw	r16,8(sp)
  800200:	df000204 	addi	fp,sp,8
  800204:	e13fff15 	stw	r4,-4(fp)
	int i;
	x[0] = 0;
  800208:	e0bfff17 	ldw	r2,-4(fp)
  80020c:	10000015 	stw	zero,0(r2)
	for (i=1; i<N; i++){
  800210:	00800044 	movi	r2,1
  800214:	e0bffe15 	stw	r2,-8(fp)
  800218:	00002406 	br	8002ac <generateVector+0xbc>
		x[i] = x[i-1] + step;
  80021c:	e0bffe17 	ldw	r2,-8(fp)
  800220:	1085883a 	add	r2,r2,r2
  800224:	1085883a 	add	r2,r2,r2
  800228:	1007883a 	mov	r3,r2
  80022c:	e0bfff17 	ldw	r2,-4(fp)
  800230:	18a1883a 	add	r16,r3,r2
  800234:	e0bffe17 	ldw	r2,-8(fp)
  800238:	1085883a 	add	r2,r2,r2
  80023c:	1085883a 	add	r2,r2,r2
  800240:	1007883a 	mov	r3,r2
  800244:	e0bfff17 	ldw	r2,-4(fp)
  800248:	1885883a 	add	r2,r3,r2
  80024c:	10bfff04 	addi	r2,r2,-4
  800250:	10800017 	ldw	r2,0(r2)
  800254:	1009883a 	mov	r4,r2
  800258:	0802eb40 	call	802eb4 <__extendsfdf2>
  80025c:	100b883a 	mov	r5,r2
  800260:	180d883a 	mov	r6,r3
  800264:	2809883a 	mov	r4,r5
  800268:	300b883a 	mov	r5,r6
  80026c:	01b4bcb4 	movhi	r6,54002
  800270:	31aa7f04 	addi	r6,r6,-22020
  800274:	01cfd434 	movhi	r7,16208
  800278:	39d89344 	addi	r7,r7,25165
  80027c:	08033980 	call	803398 <__adddf3>
  800280:	1009883a 	mov	r4,r2
  800284:	180b883a 	mov	r5,r3
  800288:	2005883a 	mov	r2,r4
  80028c:	2807883a 	mov	r3,r5
  800290:	1009883a 	mov	r4,r2
  800294:	180b883a 	mov	r5,r3
  800298:	0803b700 	call	803b70 <__truncdfsf2>
  80029c:	80800015 	stw	r2,0(r16)
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++){
  8002a0:	e0bffe17 	ldw	r2,-8(fp)
  8002a4:	10800044 	addi	r2,r2,1
  8002a8:	e0bffe15 	stw	r2,-8(fp)
  8002ac:	e0fffe17 	ldw	r3,-8(fp)
  8002b0:	00800134 	movhi	r2,4
  8002b4:	10b90604 	addi	r2,r2,-7144
  8002b8:	10ffd80e 	bge	r2,r3,80021c <generateVector+0x2c>
		x[i] = x[i-1] + step;
	}
}
  8002bc:	e037883a 	mov	sp,fp
  8002c0:	dfc00217 	ldw	ra,8(sp)
  8002c4:	df000117 	ldw	fp,4(sp)
  8002c8:	dc000017 	ldw	r16,0(sp)
  8002cc:	dec00304 	addi	sp,sp,12
  8002d0:	f800283a 	ret

008002d4 <sumVector>:

float sumVector(float x[], int M)
{
  8002d4:	defff404 	addi	sp,sp,-48
  8002d8:	dfc00b15 	stw	ra,44(sp)
  8002dc:	df000a15 	stw	fp,40(sp)
  8002e0:	dd400915 	stw	r21,36(sp)
  8002e4:	dd000815 	stw	r20,32(sp)
  8002e8:	dcc00715 	stw	r19,28(sp)
  8002ec:	dc800615 	stw	r18,24(sp)
  8002f0:	dc400515 	stw	r17,20(sp)
  8002f4:	dc000415 	stw	r16,16(sp)
  8002f8:	df000404 	addi	fp,sp,16
  8002fc:	e13ffe15 	stw	r4,-8(fp)
  800300:	e17fff15 	stw	r5,-4(fp)
	float sum = 0.00;
  800304:	e03ffd15 	stw	zero,-12(fp)
	int i;
	for(i = 0; i<M; i++){
  800308:	e03ffc15 	stw	zero,-16(fp)
  80030c:	00006f06 	br	8004cc <sumVector+0x1f8>
		sum = sum + ((0.5*x[i]) +(x[i]*x[i]*cos(floor(x[i]/4)-32)));
  800310:	e13ffd17 	ldw	r4,-12(fp)
  800314:	0802eb40 	call	802eb4 <__extendsfdf2>
  800318:	1025883a 	mov	r18,r2
  80031c:	1827883a 	mov	r19,r3
  800320:	e0bffc17 	ldw	r2,-16(fp)
  800324:	1085883a 	add	r2,r2,r2
  800328:	1085883a 	add	r2,r2,r2
  80032c:	1007883a 	mov	r3,r2
  800330:	e0bffe17 	ldw	r2,-8(fp)
  800334:	1885883a 	add	r2,r3,r2
  800338:	10800017 	ldw	r2,0(r2)
  80033c:	1009883a 	mov	r4,r2
  800340:	0802eb40 	call	802eb4 <__extendsfdf2>
  800344:	100b883a 	mov	r5,r2
  800348:	180d883a 	mov	r6,r3
  80034c:	2809883a 	mov	r4,r5
  800350:	300b883a 	mov	r5,r6
  800354:	000d883a 	mov	r6,zero
  800358:	01cff834 	movhi	r7,16352
  80035c:	080340c0 	call	80340c <__muldf3>
  800360:	1009883a 	mov	r4,r2
  800364:	180b883a 	mov	r5,r3
  800368:	2029883a 	mov	r20,r4
  80036c:	282b883a 	mov	r21,r5
  800370:	e0bffc17 	ldw	r2,-16(fp)
  800374:	1085883a 	add	r2,r2,r2
  800378:	1085883a 	add	r2,r2,r2
  80037c:	1007883a 	mov	r3,r2
  800380:	e0bffe17 	ldw	r2,-8(fp)
  800384:	1885883a 	add	r2,r3,r2
  800388:	11000017 	ldw	r4,0(r2)
  80038c:	e0bffc17 	ldw	r2,-16(fp)
  800390:	1085883a 	add	r2,r2,r2
  800394:	1085883a 	add	r2,r2,r2
  800398:	1007883a 	mov	r3,r2
  80039c:	e0bffe17 	ldw	r2,-8(fp)
  8003a0:	1885883a 	add	r2,r3,r2
  8003a4:	10800017 	ldw	r2,0(r2)
  8003a8:	100b883a 	mov	r5,r2
  8003ac:	0802b600 	call	802b60 <__mulsf3>
  8003b0:	1009883a 	mov	r4,r2
  8003b4:	0802eb40 	call	802eb4 <__extendsfdf2>
  8003b8:	1021883a 	mov	r16,r2
  8003bc:	1823883a 	mov	r17,r3
  8003c0:	e0bffc17 	ldw	r2,-16(fp)
  8003c4:	1085883a 	add	r2,r2,r2
  8003c8:	1085883a 	add	r2,r2,r2
  8003cc:	1007883a 	mov	r3,r2
  8003d0:	e0bffe17 	ldw	r2,-8(fp)
  8003d4:	1885883a 	add	r2,r3,r2
  8003d8:	10800017 	ldw	r2,0(r2)
  8003dc:	1009883a 	mov	r4,r2
  8003e0:	01502034 	movhi	r5,16512
  8003e4:	0802d400 	call	802d40 <__divsf3>
  8003e8:	1009883a 	mov	r4,r2
  8003ec:	0802eb40 	call	802eb4 <__extendsfdf2>
  8003f0:	100b883a 	mov	r5,r2
  8003f4:	180d883a 	mov	r6,r3
  8003f8:	2809883a 	mov	r4,r5
  8003fc:	300b883a 	mov	r5,r6
  800400:	08008300 	call	800830 <floor>
  800404:	100b883a 	mov	r5,r2
  800408:	180d883a 	mov	r6,r3
  80040c:	2809883a 	mov	r4,r5
  800410:	300b883a 	mov	r5,r6
  800414:	000d883a 	mov	r6,zero
  800418:	01d01034 	movhi	r7,16448
  80041c:	08033180 	call	803318 <__subdf3>
  800420:	1009883a 	mov	r4,r2
  800424:	180b883a 	mov	r5,r3
  800428:	2005883a 	mov	r2,r4
  80042c:	2807883a 	mov	r3,r5
  800430:	1009883a 	mov	r4,r2
  800434:	180b883a 	mov	r5,r3
  800438:	08006c80 	call	8006c8 <cos>
  80043c:	100f883a 	mov	r7,r2
  800440:	1811883a 	mov	r8,r3
  800444:	8009883a 	mov	r4,r16
  800448:	880b883a 	mov	r5,r17
  80044c:	380d883a 	mov	r6,r7
  800450:	400f883a 	mov	r7,r8
  800454:	080340c0 	call	80340c <__muldf3>
  800458:	1009883a 	mov	r4,r2
  80045c:	180b883a 	mov	r5,r3
  800460:	2005883a 	mov	r2,r4
  800464:	2807883a 	mov	r3,r5
  800468:	a009883a 	mov	r4,r20
  80046c:	a80b883a 	mov	r5,r21
  800470:	100d883a 	mov	r6,r2
  800474:	180f883a 	mov	r7,r3
  800478:	08033980 	call	803398 <__adddf3>
  80047c:	1009883a 	mov	r4,r2
  800480:	180b883a 	mov	r5,r3
  800484:	2005883a 	mov	r2,r4
  800488:	2807883a 	mov	r3,r5
  80048c:	9009883a 	mov	r4,r18
  800490:	980b883a 	mov	r5,r19
  800494:	100d883a 	mov	r6,r2
  800498:	180f883a 	mov	r7,r3
  80049c:	08033980 	call	803398 <__adddf3>
  8004a0:	1009883a 	mov	r4,r2
  8004a4:	180b883a 	mov	r5,r3
  8004a8:	2005883a 	mov	r2,r4
  8004ac:	2807883a 	mov	r3,r5
  8004b0:	1009883a 	mov	r4,r2
  8004b4:	180b883a 	mov	r5,r3
  8004b8:	0803b700 	call	803b70 <__truncdfsf2>
  8004bc:	e0bffd15 	stw	r2,-12(fp)

float sumVector(float x[], int M)
{
	float sum = 0.00;
	int i;
	for(i = 0; i<M; i++){
  8004c0:	e0bffc17 	ldw	r2,-16(fp)
  8004c4:	10800044 	addi	r2,r2,1
  8004c8:	e0bffc15 	stw	r2,-16(fp)
  8004cc:	e0fffc17 	ldw	r3,-16(fp)
  8004d0:	e0bfff17 	ldw	r2,-4(fp)
  8004d4:	18bf8e16 	blt	r3,r2,800310 <sumVector+0x3c>
		sum = sum + ((0.5*x[i]) +(x[i]*x[i]*cos(floor(x[i]/4)-32)));
	}

	return sum;
  8004d8:	e0bffd17 	ldw	r2,-12(fp)
}
  8004dc:	e037883a 	mov	sp,fp
  8004e0:	dfc00717 	ldw	ra,28(sp)
  8004e4:	df000617 	ldw	fp,24(sp)
  8004e8:	dd400517 	ldw	r21,20(sp)
  8004ec:	dd000417 	ldw	r20,16(sp)
  8004f0:	dcc00317 	ldw	r19,12(sp)
  8004f4:	dc800217 	ldw	r18,8(sp)
  8004f8:	dc400117 	ldw	r17,4(sp)
  8004fc:	dc000017 	ldw	r16,0(sp)
  800500:	dec00804 	addi	sp,sp,32
  800504:	f800283a 	ret

00800508 <main>:


int main()
{
  800508:	defffe04 	addi	sp,sp,-8
  80050c:	dfc00115 	stw	ra,4(sp)
  800510:	df000015 	stw	fp,0(sp)
  800514:	d839883a 	mov	fp,sp
  800518:	023ffc34 	movhi	r8,65520
  80051c:	421bd604 	addi	r8,r8,28504
  800520:	da37883a 	add	sp,sp,r8
	printf("Task 3!\n");
  800524:	01002074 	movhi	r4,129
  800528:	2101be04 	addi	r4,r4,1784
  80052c:	0804b1c0 	call	804b1c <puts>

	float x[N];

	// Returned result
	float y;
	generateVector(x);
  800530:	00bffc34 	movhi	r2,65520
  800534:	109bda04 	addi	r2,r2,28520
  800538:	e089883a 	add	r4,fp,r2
  80053c:	08001f00 	call	8001f0 <generateVector>
	// The following is used for timing
	char buf[50];
	clock_t exec_t1, exec_t2;

	exec_t1 = times(NULL); // get system time before starting the process
  800540:	0009883a 	mov	r4,zero
  800544:	080e41c0 	call	80e41c <times>
  800548:	00fffc34 	movhi	r3,65520
  80054c:	18dbd804 	addi	r3,r3,28512
  800550:	1f07883a 	add	r3,r3,fp
  800554:	18800015 	stw	r2,0(r3)
	// The code that you want to time goes here
	int i;
	for (i=0; i<1;i++){
  800558:	013ffc34 	movhi	r4,65520
  80055c:	211bd604 	addi	r4,r4,28504
  800560:	2709883a 	add	r4,r4,fp
  800564:	20000015 	stw	zero,0(r4)
  800568:	00001306 	br	8005b8 <main+0xb0>
		y = sumVector(x, N);
  80056c:	00bffc34 	movhi	r2,65520
  800570:	109bda04 	addi	r2,r2,28520
  800574:	e089883a 	add	r4,fp,r2
  800578:	01400134 	movhi	r5,4
  80057c:	29790644 	addi	r5,r5,-7143
  800580:	08002d40 	call	8002d4 <sumVector>
  800584:	00fffc34 	movhi	r3,65520
  800588:	18dbd904 	addi	r3,r3,28516
  80058c:	1f07883a 	add	r3,r3,fp
  800590:	18800015 	stw	r2,0(r3)
	clock_t exec_t1, exec_t2;

	exec_t1 = times(NULL); // get system time before starting the process
	// The code that you want to time goes here
	int i;
	for (i=0; i<1;i++){
  800594:	013ffc34 	movhi	r4,65520
  800598:	211bd604 	addi	r4,r4,28504
  80059c:	2709883a 	add	r4,r4,fp
  8005a0:	20800017 	ldw	r2,0(r4)
  8005a4:	10800044 	addi	r2,r2,1
  8005a8:	00fffc34 	movhi	r3,65520
  8005ac:	18dbd604 	addi	r3,r3,28504
  8005b0:	1f07883a 	add	r3,r3,fp
  8005b4:	18800015 	stw	r2,0(r3)
  8005b8:	013ffc34 	movhi	r4,65520
  8005bc:	211bd604 	addi	r4,r4,28504
  8005c0:	2709883a 	add	r4,r4,fp
  8005c4:	20800017 	ldw	r2,0(r4)
  8005c8:	10800050 	cmplti	r2,r2,1
  8005cc:	103fe71e 	bne	r2,zero,80056c <main+0x64>
		y = sumVector(x, N);
	}
	// till here
	exec_t2 = times(NULL); // get system time after finishing the process
  8005d0:	0009883a 	mov	r4,zero
  8005d4:	080e41c0 	call	80e41c <times>
  8005d8:	00fffc34 	movhi	r3,65520
  8005dc:	18dbd704 	addi	r3,r3,28508
  8005e0:	1f07883a 	add	r3,r3,fp
  8005e4:	18800015 	stw	r2,0(r3)
	gcvt((exec_t2 - exec_t1), 10, buf);
  8005e8:	013ffc34 	movhi	r4,65520
  8005ec:	211bd704 	addi	r4,r4,28508
  8005f0:	2709883a 	add	r4,r4,fp
  8005f4:	20c00017 	ldw	r3,0(r4)
  8005f8:	013ffc34 	movhi	r4,65520
  8005fc:	211bd804 	addi	r4,r4,28512
  800600:	2709883a 	add	r4,r4,fp
  800604:	20800017 	ldw	r2,0(r4)
  800608:	1889c83a 	sub	r4,r3,r2
  80060c:	0803be40 	call	803be4 <__floatunsidf>
  800610:	100b883a 	mov	r5,r2
  800614:	180d883a 	mov	r6,r3
  800618:	00800434 	movhi	r2,16
  80061c:	10a41d04 	addi	r2,r2,-28556
  800620:	00fffc34 	movhi	r3,65520
  800624:	18dbd604 	addi	r3,r3,28504
  800628:	1f07883a 	add	r3,r3,fp
  80062c:	188f883a 	add	r7,r3,r2
  800630:	2809883a 	mov	r4,r5
  800634:	300b883a 	mov	r5,r6
  800638:	01800284 	movi	r6,10
  80063c:	08048080 	call	804808 <gcvt>
	alt_putstr(" proc time = ");
  800640:	01002074 	movhi	r4,129
  800644:	2101c004 	addi	r4,r4,1792
  800648:	080e1240 	call	80e124 <alt_putstr>
	alt_putstr(buf);
  80064c:	00800434 	movhi	r2,16
  800650:	10a41d04 	addi	r2,r2,-28556
  800654:	00fffc34 	movhi	r3,65520
  800658:	18dbd604 	addi	r3,r3,28504
  80065c:	1f07883a 	add	r3,r3,fp
  800660:	1889883a 	add	r4,r3,r2
  800664:	080e1240 	call	80e124 <alt_putstr>
	alt_putstr(" ticks \n");
  800668:	01002074 	movhi	r4,129
  80066c:	2101c404 	addi	r4,r4,1808
  800670:	080e1240 	call	80e124 <alt_putstr>
//	for (i=0; i<10; i++){
//		y = y/2.0;
//	}

//	gcvt((int) y, 10, buf);
	alt_putstr(" Result (divided by 1024) = ");
  800674:	01002074 	movhi	r4,129
  800678:	2101c704 	addi	r4,r4,1820
  80067c:	080e1240 	call	80e124 <alt_putstr>
//	alt_putstr(buf);
	printf("result: %f \n",y);
  800680:	00bffc34 	movhi	r2,65520
  800684:	109bd904 	addi	r2,r2,28516
  800688:	1705883a 	add	r2,r2,fp
  80068c:	11000017 	ldw	r4,0(r2)
  800690:	0802eb40 	call	802eb4 <__extendsfdf2>
  800694:	100d883a 	mov	r6,r2
  800698:	180f883a 	mov	r7,r3
  80069c:	01002074 	movhi	r4,129
  8006a0:	2101cf04 	addi	r4,r4,1852
  8006a4:	300b883a 	mov	r5,r6
  8006a8:	380d883a 	mov	r6,r7
  8006ac:	0804a040 	call	804a04 <printf>
	// printf could be used if there was enough memory
	return 0;
  8006b0:	0005883a 	mov	r2,zero
}
  8006b4:	e037883a 	mov	sp,fp
  8006b8:	dfc00117 	ldw	ra,4(sp)
  8006bc:	df000017 	ldw	fp,0(sp)
  8006c0:	dec00204 	addi	sp,sp,8
  8006c4:	f800283a 	ret

008006c8 <cos>:
  8006c8:	00a00034 	movhi	r2,32768
  8006cc:	10bfffc4 	addi	r2,r2,-1
  8006d0:	defffa04 	addi	sp,sp,-24
  8006d4:	114c703a 	and	r6,r2,r5
  8006d8:	008ffa74 	movhi	r2,16361
  8006dc:	10887ec4 	addi	r2,r2,8699
  8006e0:	dfc00515 	stw	ra,20(sp)
  8006e4:	2011883a 	mov	r8,r4
  8006e8:	1180210e 	bge	r2,r6,800770 <cos+0xa8>
  8006ec:	009ffc34 	movhi	r2,32752
  8006f0:	10bfffc4 	addi	r2,r2,-1
  8006f4:	11800a0e 	bge	r2,r6,800720 <cos+0x58>
  8006f8:	280f883a 	mov	r7,r5
  8006fc:	400d883a 	mov	r6,r8
  800700:	08033180 	call	803318 <__subdf3>
  800704:	100d883a 	mov	r6,r2
  800708:	180f883a 	mov	r7,r3
  80070c:	3005883a 	mov	r2,r6
  800710:	3807883a 	mov	r3,r7
  800714:	dfc00517 	ldw	ra,20(sp)
  800718:	dec00604 	addi	sp,sp,24
  80071c:	f800283a 	ret
  800720:	d9800104 	addi	r6,sp,4
  800724:	0800a540 	call	800a54 <__ieee754_rem_pio2>
  800728:	10c000cc 	andi	r3,r2,3
  80072c:	01000044 	movi	r4,1
  800730:	19001926 	beq	r3,r4,800798 <cos+0xd0>
  800734:	00800084 	movi	r2,2
  800738:	18803126 	beq	r3,r2,800800 <cos+0x138>
  80073c:	1800231e 	bne	r3,zero,8007cc <cos+0x104>
  800740:	d8800117 	ldw	r2,4(sp)
  800744:	da000317 	ldw	r8,12(sp)
  800748:	d8c00217 	ldw	r3,8(sp)
  80074c:	da400417 	ldw	r9,16(sp)
  800750:	400d883a 	mov	r6,r8
  800754:	180b883a 	mov	r5,r3
  800758:	480f883a 	mov	r7,r9
  80075c:	1009883a 	mov	r4,r2
  800760:	080127c0 	call	80127c <__kernel_cos>
  800764:	100d883a 	mov	r6,r2
  800768:	180f883a 	mov	r7,r3
  80076c:	003fe706 	br	80070c <cos+0x44>
  800770:	000d883a 	mov	r6,zero
  800774:	000f883a 	mov	r7,zero
  800778:	080127c0 	call	80127c <__kernel_cos>
  80077c:	100d883a 	mov	r6,r2
  800780:	180f883a 	mov	r7,r3
  800784:	3005883a 	mov	r2,r6
  800788:	3807883a 	mov	r3,r7
  80078c:	dfc00517 	ldw	ra,20(sp)
  800790:	dec00604 	addi	sp,sp,24
  800794:	f800283a 	ret
  800798:	d8800117 	ldw	r2,4(sp)
  80079c:	da000317 	ldw	r8,12(sp)
  8007a0:	d8c00217 	ldw	r3,8(sp)
  8007a4:	da400417 	ldw	r9,16(sp)
  8007a8:	d9000015 	stw	r4,0(sp)
  8007ac:	400d883a 	mov	r6,r8
  8007b0:	480f883a 	mov	r7,r9
  8007b4:	180b883a 	mov	r5,r3
  8007b8:	1009883a 	mov	r4,r2
  8007bc:	080262c0 	call	80262c <__kernel_sin>
  8007c0:	100d883a 	mov	r6,r2
  8007c4:	19e0003c 	xorhi	r7,r3,32768
  8007c8:	003fd006 	br	80070c <cos+0x44>
  8007cc:	d8800117 	ldw	r2,4(sp)
  8007d0:	da000317 	ldw	r8,12(sp)
  8007d4:	d8c00217 	ldw	r3,8(sp)
  8007d8:	da400417 	ldw	r9,16(sp)
  8007dc:	d9000015 	stw	r4,0(sp)
  8007e0:	400d883a 	mov	r6,r8
  8007e4:	480f883a 	mov	r7,r9
  8007e8:	180b883a 	mov	r5,r3
  8007ec:	1009883a 	mov	r4,r2
  8007f0:	080262c0 	call	80262c <__kernel_sin>
  8007f4:	100d883a 	mov	r6,r2
  8007f8:	180f883a 	mov	r7,r3
  8007fc:	003fc306 	br	80070c <cos+0x44>
  800800:	d8800117 	ldw	r2,4(sp)
  800804:	da000317 	ldw	r8,12(sp)
  800808:	d8c00217 	ldw	r3,8(sp)
  80080c:	da400417 	ldw	r9,16(sp)
  800810:	400d883a 	mov	r6,r8
  800814:	180b883a 	mov	r5,r3
  800818:	480f883a 	mov	r7,r9
  80081c:	1009883a 	mov	r4,r2
  800820:	080127c0 	call	80127c <__kernel_cos>
  800824:	100d883a 	mov	r6,r2
  800828:	19e0003c 	xorhi	r7,r3,32768
  80082c:	003fb706 	br	80070c <cos+0x44>

00800830 <floor>:
  800830:	2805d53a 	srai	r2,r5,20
  800834:	defff604 	addi	sp,sp,-40
  800838:	dd800615 	stw	r22,24(sp)
  80083c:	10c1ffcc 	andi	r3,r2,2047
  800840:	1dbf0044 	addi	r22,r3,-1023
  800844:	008004c4 	movi	r2,19
  800848:	ddc00715 	stw	r23,28(sp)
  80084c:	dc800215 	stw	r18,8(sp)
  800850:	dc400115 	stw	r17,4(sp)
  800854:	dc000015 	stw	r16,0(sp)
  800858:	dfc00915 	stw	ra,36(sp)
  80085c:	df000815 	stw	fp,32(sp)
  800860:	dd400515 	stw	r21,20(sp)
  800864:	dd000415 	stw	r20,16(sp)
  800868:	dcc00315 	stw	r19,12(sp)
  80086c:	2021883a 	mov	r16,r4
  800870:	2823883a 	mov	r17,r5
  800874:	282f883a 	mov	r23,r5
  800878:	2025883a 	mov	r18,r4
  80087c:	15802916 	blt	r2,r22,800924 <floor+0xf4>
  800880:	b0004816 	blt	r22,zero,8009a4 <floor+0x174>
  800884:	00800434 	movhi	r2,16
  800888:	10bfffc4 	addi	r2,r2,-1
  80088c:	15b9d83a 	sra	fp,r2,r22
  800890:	282f883a 	mov	r23,r5
  800894:	e144703a 	and	r2,fp,r5
  800898:	1104b03a 	or	r2,r2,r4
  80089c:	10001326 	beq	r2,zero,8008ec <floor+0xbc>
  8008a0:	00a20034 	movhi	r2,34816
  8008a4:	109d6704 	addi	r2,r2,30108
  8008a8:	00df8e34 	movhi	r3,32312
  8008ac:	18f90f04 	addi	r3,r3,-7108
  8008b0:	180f883a 	mov	r7,r3
  8008b4:	100d883a 	mov	r6,r2
  8008b8:	08033980 	call	803398 <__adddf3>
  8008bc:	180b883a 	mov	r5,r3
  8008c0:	000d883a 	mov	r6,zero
  8008c4:	000f883a 	mov	r7,zero
  8008c8:	1009883a 	mov	r4,r2
  8008cc:	08038580 	call	803858 <__gtdf2>
  8008d0:	0080040e 	bge	zero,r2,8008e4 <floor+0xb4>
  8008d4:	88004416 	blt	r17,zero,8009e8 <floor+0x1b8>
  8008d8:	0704303a 	nor	r2,zero,fp
  8008dc:	b8ae703a 	and	r23,r23,r2
  8008e0:	0025883a 	mov	r18,zero
  8008e4:	9021883a 	mov	r16,r18
  8008e8:	b823883a 	mov	r17,r23
  8008ec:	8005883a 	mov	r2,r16
  8008f0:	8807883a 	mov	r3,r17
  8008f4:	dfc00917 	ldw	ra,36(sp)
  8008f8:	df000817 	ldw	fp,32(sp)
  8008fc:	ddc00717 	ldw	r23,28(sp)
  800900:	dd800617 	ldw	r22,24(sp)
  800904:	dd400517 	ldw	r21,20(sp)
  800908:	dd000417 	ldw	r20,16(sp)
  80090c:	dcc00317 	ldw	r19,12(sp)
  800910:	dc800217 	ldw	r18,8(sp)
  800914:	dc400117 	ldw	r17,4(sp)
  800918:	dc000017 	ldw	r16,0(sp)
  80091c:	dec00a04 	addi	sp,sp,40
  800920:	f800283a 	ret
  800924:	00800cc4 	movi	r2,51
  800928:	15801616 	blt	r2,r22,800984 <floor+0x154>
  80092c:	18befb44 	addi	r2,r3,-1043
  800930:	00ffffc4 	movi	r3,-1
  800934:	18b8d83a 	srl	fp,r3,r2
  800938:	e104703a 	and	r2,fp,r4
  80093c:	103feb26 	beq	r2,zero,8008ec <floor+0xbc>
  800940:	00a20034 	movhi	r2,34816
  800944:	109d6704 	addi	r2,r2,30108
  800948:	00df8e34 	movhi	r3,32312
  80094c:	18f90f04 	addi	r3,r3,-7108
  800950:	180f883a 	mov	r7,r3
  800954:	100d883a 	mov	r6,r2
  800958:	08033980 	call	803398 <__adddf3>
  80095c:	180b883a 	mov	r5,r3
  800960:	000d883a 	mov	r6,zero
  800964:	000f883a 	mov	r7,zero
  800968:	1009883a 	mov	r4,r2
  80096c:	08038580 	call	803858 <__gtdf2>
  800970:	0080210e 	bge	zero,r2,8009f8 <floor+0x1c8>
  800974:	88002216 	blt	r17,zero,800a00 <floor+0x1d0>
  800978:	0704303a 	nor	r2,zero,fp
  80097c:	90a4703a 	and	r18,r18,r2
  800980:	003fd806 	br	8008e4 <floor+0xb4>
  800984:	00810004 	movi	r2,1024
  800988:	b0bfd81e 	bne	r22,r2,8008ec <floor+0xbc>
  80098c:	800d883a 	mov	r6,r16
  800990:	280f883a 	mov	r7,r5
  800994:	08033980 	call	803398 <__adddf3>
  800998:	1021883a 	mov	r16,r2
  80099c:	1823883a 	mov	r17,r3
  8009a0:	003fd206 	br	8008ec <floor+0xbc>
  8009a4:	00a20034 	movhi	r2,34816
  8009a8:	109d6704 	addi	r2,r2,30108
  8009ac:	00df8e34 	movhi	r3,32312
  8009b0:	18f90f04 	addi	r3,r3,-7108
  8009b4:	180f883a 	mov	r7,r3
  8009b8:	100d883a 	mov	r6,r2
  8009bc:	08033980 	call	803398 <__adddf3>
  8009c0:	180b883a 	mov	r5,r3
  8009c4:	000d883a 	mov	r6,zero
  8009c8:	000f883a 	mov	r7,zero
  8009cc:	1009883a 	mov	r4,r2
  8009d0:	08038580 	call	803858 <__gtdf2>
  8009d4:	00bfc30e 	bge	zero,r2,8008e4 <floor+0xb4>
  8009d8:	88001416 	blt	r17,zero,800a2c <floor+0x1fc>
  8009dc:	002f883a 	mov	r23,zero
  8009e0:	0025883a 	mov	r18,zero
  8009e4:	003fbf06 	br	8008e4 <floor+0xb4>
  8009e8:	00800434 	movhi	r2,16
  8009ec:	1585d83a 	sra	r2,r2,r22
  8009f0:	88af883a 	add	r23,r17,r2
  8009f4:	003fb806 	br	8008d8 <floor+0xa8>
  8009f8:	882f883a 	mov	r23,r17
  8009fc:	003fb906 	br	8008e4 <floor+0xb4>
  800a00:	00800504 	movi	r2,20
  800a04:	b0801126 	beq	r22,r2,800a4c <floor+0x21c>
  800a08:	00c00d04 	movi	r3,52
  800a0c:	1d87c83a 	sub	r3,r3,r22
  800a10:	00800044 	movi	r2,1
  800a14:	10c4983a 	sll	r2,r2,r3
  800a18:	8085883a 	add	r2,r16,r2
  800a1c:	1400012e 	bgeu	r2,r16,800a24 <floor+0x1f4>
  800a20:	8dc00044 	addi	r23,r17,1
  800a24:	1025883a 	mov	r18,r2
  800a28:	003fd306 	br	800978 <floor+0x148>
  800a2c:	00a00034 	movhi	r2,32768
  800a30:	10bfffc4 	addi	r2,r2,-1
  800a34:	8884703a 	and	r2,r17,r2
  800a38:	8084b03a 	or	r2,r16,r2
  800a3c:	103fee26 	beq	r2,zero,8009f8 <floor+0x1c8>
  800a40:	05effc34 	movhi	r23,49136
  800a44:	0025883a 	mov	r18,zero
  800a48:	003fa606 	br	8008e4 <floor+0xb4>
  800a4c:	8dc00044 	addi	r23,r17,1
  800a50:	003fc906 	br	800978 <floor+0x148>

00800a54 <__ieee754_rem_pio2>:
  800a54:	deffe304 	addi	sp,sp,-116
  800a58:	00a00034 	movhi	r2,32768
  800a5c:	10bfffc4 	addi	r2,r2,-1
  800a60:	dd801915 	stw	r22,100(sp)
  800a64:	28ac703a 	and	r22,r5,r2
  800a68:	008ffa74 	movhi	r2,16361
  800a6c:	10887ec4 	addi	r2,r2,8699
  800a70:	df001b15 	stw	fp,108(sp)
  800a74:	dfc01c15 	stw	ra,112(sp)
  800a78:	ddc01a15 	stw	r23,104(sp)
  800a7c:	dd401815 	stw	r21,96(sp)
  800a80:	dd001715 	stw	r20,92(sp)
  800a84:	dcc01615 	stw	r19,88(sp)
  800a88:	dc801515 	stw	r18,84(sp)
  800a8c:	dc401415 	stw	r17,80(sp)
  800a90:	dc001315 	stw	r16,76(sp)
  800a94:	2013883a 	mov	r9,r4
  800a98:	d9400a15 	stw	r5,40(sp)
  800a9c:	3039883a 	mov	fp,r6
  800aa0:	15801216 	blt	r2,r22,800aec <__ieee754_rem_pio2+0x98>
  800aa4:	e1400115 	stw	r5,4(fp)
  800aa8:	30000315 	stw	zero,12(r6)
  800aac:	e1000015 	stw	r4,0(fp)
  800ab0:	d8000b15 	stw	zero,44(sp)
  800ab4:	30000215 	stw	zero,8(r6)
  800ab8:	d8800b17 	ldw	r2,44(sp)
  800abc:	dfc01c17 	ldw	ra,112(sp)
  800ac0:	df001b17 	ldw	fp,108(sp)
  800ac4:	ddc01a17 	ldw	r23,104(sp)
  800ac8:	dd801917 	ldw	r22,100(sp)
  800acc:	dd401817 	ldw	r21,96(sp)
  800ad0:	dd001717 	ldw	r20,92(sp)
  800ad4:	dcc01617 	ldw	r19,88(sp)
  800ad8:	dc801517 	ldw	r18,84(sp)
  800adc:	dc401417 	ldw	r17,80(sp)
  800ae0:	dc001317 	ldw	r16,76(sp)
  800ae4:	dec01d04 	addi	sp,sp,116
  800ae8:	f800283a 	ret
  800aec:	009000f4 	movhi	r2,16387
  800af0:	10b65ec4 	addi	r2,r2,-9861
  800af4:	15800f0e 	bge	r2,r22,800b34 <__ieee754_rem_pio2+0xe0>
  800af8:	00904e74 	movhi	r2,16697
  800afc:	10887ec4 	addi	r2,r2,8699
  800b00:	1580330e 	bge	r2,r22,800bd0 <__ieee754_rem_pio2+0x17c>
  800b04:	009ffc34 	movhi	r2,32752
  800b08:	10bfffc4 	addi	r2,r2,-1
  800b0c:	1580fe0e 	bge	r2,r22,800f08 <__ieee754_rem_pio2+0x4b4>
  800b10:	280f883a 	mov	r7,r5
  800b14:	480d883a 	mov	r6,r9
  800b18:	08033180 	call	803318 <__subdf3>
  800b1c:	e0c00115 	stw	r3,4(fp)
  800b20:	d8000b15 	stw	zero,44(sp)
  800b24:	e0800015 	stw	r2,0(fp)
  800b28:	e0800215 	stw	r2,8(fp)
  800b2c:	e0c00315 	stw	r3,12(fp)
  800b30:	003fe106 	br	800ab8 <__ieee754_rem_pio2+0x64>
  800b34:	d9000a17 	ldw	r4,40(sp)
  800b38:	0100ce0e 	bge	zero,r4,800e74 <__ieee754_rem_pio2+0x420>
  800b3c:	04151034 	movhi	r16,21568
  800b40:	044ffe74 	movhi	r17,16377
  800b44:	8c487ec4 	addi	r17,r17,8699
  800b48:	4809883a 	mov	r4,r9
  800b4c:	800d883a 	mov	r6,r16
  800b50:	880f883a 	mov	r7,r17
  800b54:	08033180 	call	803318 <__subdf3>
  800b58:	1025883a 	mov	r18,r2
  800b5c:	1827883a 	mov	r19,r3
  800b60:	b4413c26 	beq	r22,r17,801054 <__ieee754_rem_pio2+0x600>
  800b64:	040698b4 	movhi	r16,6754
  800b68:	8418cc44 	addi	r16,r16,25393
  800b6c:	044f7474 	movhi	r17,15825
  800b70:	8c6d1844 	addi	r17,r17,-19359
  800b74:	1009883a 	mov	r4,r2
  800b78:	180b883a 	mov	r5,r3
  800b7c:	800d883a 	mov	r6,r16
  800b80:	880f883a 	mov	r7,r17
  800b84:	08033180 	call	803318 <__subdf3>
  800b88:	100d883a 	mov	r6,r2
  800b8c:	9009883a 	mov	r4,r18
  800b90:	980b883a 	mov	r5,r19
  800b94:	180f883a 	mov	r7,r3
  800b98:	e0800015 	stw	r2,0(fp)
  800b9c:	e0c00115 	stw	r3,4(fp)
  800ba0:	08033180 	call	803318 <__subdf3>
  800ba4:	1009883a 	mov	r4,r2
  800ba8:	800d883a 	mov	r6,r16
  800bac:	880f883a 	mov	r7,r17
  800bb0:	180b883a 	mov	r5,r3
  800bb4:	08033180 	call	803318 <__subdf3>
  800bb8:	1009883a 	mov	r4,r2
  800bbc:	00800044 	movi	r2,1
  800bc0:	d8800b15 	stw	r2,44(sp)
  800bc4:	e0c00315 	stw	r3,12(fp)
  800bc8:	e1000215 	stw	r4,8(fp)
  800bcc:	003fba06 	br	800ab8 <__ieee754_rem_pio2+0x64>
  800bd0:	08029440 	call	802944 <fabs>
  800bd4:	021b72b4 	movhi	r8,28106
  800bd8:	423220c4 	addi	r8,r8,-14205
  800bdc:	024ff934 	movhi	r9,16356
  800be0:	4a57cc04 	addi	r9,r9,24368
  800be4:	480f883a 	mov	r7,r9
  800be8:	400d883a 	mov	r6,r8
  800bec:	1009883a 	mov	r4,r2
  800bf0:	180b883a 	mov	r5,r3
  800bf4:	1025883a 	mov	r18,r2
  800bf8:	1827883a 	mov	r19,r3
  800bfc:	080340c0 	call	80340c <__muldf3>
  800c00:	0011883a 	mov	r8,zero
  800c04:	024ff834 	movhi	r9,16352
  800c08:	480f883a 	mov	r7,r9
  800c0c:	400d883a 	mov	r6,r8
  800c10:	180b883a 	mov	r5,r3
  800c14:	1009883a 	mov	r4,r2
  800c18:	08033980 	call	803398 <__adddf3>
  800c1c:	180b883a 	mov	r5,r3
  800c20:	1009883a 	mov	r4,r2
  800c24:	0803a600 	call	803a60 <__fixdfsi>
  800c28:	1009883a 	mov	r4,r2
  800c2c:	d8800b15 	stw	r2,44(sp)
  800c30:	08039680 	call	803968 <__floatsidf>
  800c34:	1823883a 	mov	r17,r3
  800c38:	1009883a 	mov	r4,r2
  800c3c:	d8800c15 	stw	r2,48(sp)
  800c40:	00effe74 	movhi	r3,49145
  800c44:	18c87ec4 	addi	r3,r3,8699
  800c48:	00951034 	movhi	r2,21568
  800c4c:	880b883a 	mov	r5,r17
  800c50:	180f883a 	mov	r7,r3
  800c54:	100d883a 	mov	r6,r2
  800c58:	dc400d15 	stw	r17,52(sp)
  800c5c:	080340c0 	call	80340c <__muldf3>
  800c60:	180f883a 	mov	r7,r3
  800c64:	980b883a 	mov	r5,r19
  800c68:	9009883a 	mov	r4,r18
  800c6c:	100d883a 	mov	r6,r2
  800c70:	08033980 	call	803398 <__adddf3>
  800c74:	d9000c17 	ldw	r4,48(sp)
  800c78:	020698b4 	movhi	r8,6754
  800c7c:	4218cc44 	addi	r8,r8,25393
  800c80:	024f7474 	movhi	r9,15825
  800c84:	4a6d1844 	addi	r9,r9,-19359
  800c88:	880b883a 	mov	r5,r17
  800c8c:	480f883a 	mov	r7,r9
  800c90:	400d883a 	mov	r6,r8
  800c94:	1025883a 	mov	r18,r2
  800c98:	1827883a 	mov	r19,r3
  800c9c:	080340c0 	call	80340c <__muldf3>
  800ca0:	d9000b17 	ldw	r4,44(sp)
  800ca4:	100f883a 	mov	r7,r2
  800ca8:	1811883a 	mov	r8,r3
  800cac:	008007c4 	movi	r2,31
  800cb0:	dc800e15 	stw	r18,56(sp)
  800cb4:	3821883a 	mov	r16,r7
  800cb8:	dcc00f15 	stw	r19,60(sp)
  800cbc:	4023883a 	mov	r17,r8
  800cc0:	11010a0e 	bge	r2,r4,8010ec <__ieee754_rem_pio2+0x698>
  800cc4:	d9000e17 	ldw	r4,56(sp)
  800cc8:	d9400f17 	ldw	r5,60(sp)
  800ccc:	800d883a 	mov	r6,r16
  800cd0:	880f883a 	mov	r7,r17
  800cd4:	08033180 	call	803318 <__subdf3>
  800cd8:	1810d53a 	srli	r8,r3,20
  800cdc:	b02dd53a 	srai	r22,r22,20
  800ce0:	1009883a 	mov	r4,r2
  800ce4:	4201ffcc 	andi	r8,r8,2047
  800ce8:	180b883a 	mov	r5,r3
  800cec:	b211c83a 	sub	r8,r22,r8
  800cf0:	00800404 	movi	r2,16
  800cf4:	dd801015 	stw	r22,64(sp)
  800cf8:	e1000015 	stw	r4,0(fp)
  800cfc:	e1400115 	stw	r5,4(fp)
  800d00:	1200430e 	bge	r2,r8,800e10 <__ieee754_rem_pio2+0x3bc>
  800d04:	d9000c17 	ldw	r4,48(sp)
  800d08:	d9400d17 	ldw	r5,52(sp)
  800d0c:	00869834 	movhi	r2,6752
  800d10:	00cf7474 	movhi	r3,15825
  800d14:	18ed1844 	addi	r3,r3,-19359
  800d18:	180f883a 	mov	r7,r3
  800d1c:	100d883a 	mov	r6,r2
  800d20:	080340c0 	call	80340c <__muldf3>
  800d24:	d9000e17 	ldw	r4,56(sp)
  800d28:	d9400f17 	ldw	r5,60(sp)
  800d2c:	100d883a 	mov	r6,r2
  800d30:	180f883a 	mov	r7,r3
  800d34:	1025883a 	mov	r18,r2
  800d38:	1827883a 	mov	r19,r3
  800d3c:	08033180 	call	803318 <__subdf3>
  800d40:	d9000c17 	ldw	r4,48(sp)
  800d44:	d9400d17 	ldw	r5,52(sp)
  800d48:	058b80f4 	movhi	r22,11779
  800d4c:	b59c1cc4 	addi	r22,r22,28787
  800d50:	05cee8f4 	movhi	r23,15267
  800d54:	bdc66284 	addi	r23,r23,6538
  800d58:	b00d883a 	mov	r6,r22
  800d5c:	b80f883a 	mov	r7,r23
  800d60:	d8801115 	stw	r2,68(sp)
  800d64:	d8c01215 	stw	r3,72(sp)
  800d68:	d8800815 	stw	r2,32(sp)
  800d6c:	080340c0 	call	80340c <__muldf3>
  800d70:	d9001217 	ldw	r4,72(sp)
  800d74:	d9400f17 	ldw	r5,60(sp)
  800d78:	d9800817 	ldw	r6,32(sp)
  800d7c:	d9000915 	stw	r4,36(sp)
  800d80:	d9c01217 	ldw	r7,72(sp)
  800d84:	d9000e17 	ldw	r4,56(sp)
  800d88:	1021883a 	mov	r16,r2
  800d8c:	1823883a 	mov	r17,r3
  800d90:	08033180 	call	803318 <__subdf3>
  800d94:	180b883a 	mov	r5,r3
  800d98:	900d883a 	mov	r6,r18
  800d9c:	980f883a 	mov	r7,r19
  800da0:	1009883a 	mov	r4,r2
  800da4:	08033180 	call	803318 <__subdf3>
  800da8:	180f883a 	mov	r7,r3
  800dac:	880b883a 	mov	r5,r17
  800db0:	8009883a 	mov	r4,r16
  800db4:	100d883a 	mov	r6,r2
  800db8:	08033180 	call	803318 <__subdf3>
  800dbc:	d9000817 	ldw	r4,32(sp)
  800dc0:	d9401217 	ldw	r5,72(sp)
  800dc4:	180f883a 	mov	r7,r3
  800dc8:	100d883a 	mov	r6,r2
  800dcc:	1021883a 	mov	r16,r2
  800dd0:	1823883a 	mov	r17,r3
  800dd4:	08033180 	call	803318 <__subdf3>
  800dd8:	1810d53a 	srli	r8,r3,20
  800ddc:	1009883a 	mov	r4,r2
  800de0:	d8801017 	ldw	r2,64(sp)
  800de4:	4201ffcc 	andi	r8,r8,2047
  800de8:	180b883a 	mov	r5,r3
  800dec:	1211c83a 	sub	r8,r2,r8
  800df0:	00800c44 	movi	r2,49
  800df4:	e1000015 	stw	r4,0(fp)
  800df8:	e1400115 	stw	r5,4(fp)
  800dfc:	1200f016 	blt	r2,r8,8011c0 <__ieee754_rem_pio2+0x76c>
  800e00:	d8c00817 	ldw	r3,32(sp)
  800e04:	d9001217 	ldw	r4,72(sp)
  800e08:	d8c00e15 	stw	r3,56(sp)
  800e0c:	d9000f15 	stw	r4,60(sp)
  800e10:	e1800017 	ldw	r6,0(fp)
  800e14:	e1c00117 	ldw	r7,4(fp)
  800e18:	d9400f17 	ldw	r5,60(sp)
  800e1c:	d9000e17 	ldw	r4,56(sp)
  800e20:	08033180 	call	803318 <__subdf3>
  800e24:	180b883a 	mov	r5,r3
  800e28:	800d883a 	mov	r6,r16
  800e2c:	880f883a 	mov	r7,r17
  800e30:	1009883a 	mov	r4,r2
  800e34:	08033180 	call	803318 <__subdf3>
  800e38:	d9400a17 	ldw	r5,40(sp)
  800e3c:	e0800215 	stw	r2,8(fp)
  800e40:	e1800204 	addi	r6,fp,8
  800e44:	30c00115 	stw	r3,4(r6)
  800e48:	283f1b0e 	bge	r5,zero,800ab8 <__ieee754_rem_pio2+0x64>
  800e4c:	e0c00117 	ldw	r3,4(fp)
  800e50:	d8800b17 	ldw	r2,44(sp)
  800e54:	18e0003c 	xorhi	r3,r3,32768
  800e58:	0085c83a 	sub	r2,zero,r2
  800e5c:	e0c00115 	stw	r3,4(fp)
  800e60:	d8800b15 	stw	r2,44(sp)
  800e64:	30800117 	ldw	r2,4(r6)
  800e68:	10a0003c 	xorhi	r2,r2,32768
  800e6c:	30800115 	stw	r2,4(r6)
  800e70:	003f1106 	br	800ab8 <__ieee754_rem_pio2+0x64>
  800e74:	04151034 	movhi	r16,21568
  800e78:	044ffe74 	movhi	r17,16377
  800e7c:	8c487ec4 	addi	r17,r17,8699
  800e80:	4809883a 	mov	r4,r9
  800e84:	800d883a 	mov	r6,r16
  800e88:	880f883a 	mov	r7,r17
  800e8c:	08033980 	call	803398 <__adddf3>
  800e90:	1025883a 	mov	r18,r2
  800e94:	1827883a 	mov	r19,r3
  800e98:	b440a326 	beq	r22,r17,801128 <__ieee754_rem_pio2+0x6d4>
  800e9c:	040698b4 	movhi	r16,6754
  800ea0:	8418cc44 	addi	r16,r16,25393
  800ea4:	044f7474 	movhi	r17,15825
  800ea8:	8c6d1844 	addi	r17,r17,-19359
  800eac:	1009883a 	mov	r4,r2
  800eb0:	180b883a 	mov	r5,r3
  800eb4:	800d883a 	mov	r6,r16
  800eb8:	880f883a 	mov	r7,r17
  800ebc:	08033980 	call	803398 <__adddf3>
  800ec0:	100d883a 	mov	r6,r2
  800ec4:	9009883a 	mov	r4,r18
  800ec8:	980b883a 	mov	r5,r19
  800ecc:	180f883a 	mov	r7,r3
  800ed0:	e0800015 	stw	r2,0(fp)
  800ed4:	e0c00115 	stw	r3,4(fp)
  800ed8:	08033180 	call	803318 <__subdf3>
  800edc:	1009883a 	mov	r4,r2
  800ee0:	800d883a 	mov	r6,r16
  800ee4:	880f883a 	mov	r7,r17
  800ee8:	180b883a 	mov	r5,r3
  800eec:	08033980 	call	803398 <__adddf3>
  800ef0:	1009883a 	mov	r4,r2
  800ef4:	00bfffc4 	movi	r2,-1
  800ef8:	d8800b15 	stw	r2,44(sp)
  800efc:	e0c00315 	stw	r3,12(fp)
  800f00:	e1000215 	stw	r4,8(fp)
  800f04:	003eec06 	br	800ab8 <__ieee754_rem_pio2+0x64>
  800f08:	b005d53a 	srai	r2,r22,20
  800f0c:	4821883a 	mov	r16,r9
  800f10:	05505c34 	movhi	r21,16752
  800f14:	15fefa84 	addi	r23,r2,-1046
  800f18:	b826953a 	slli	r19,r23,20
  800f1c:	0029883a 	mov	r20,zero
  800f20:	048000c4 	movi	r18,3
  800f24:	b4e7c83a 	sub	r19,r22,r19
  800f28:	980b883a 	mov	r5,r19
  800f2c:	0803a600 	call	803a60 <__fixdfsi>
  800f30:	1009883a 	mov	r4,r2
  800f34:	08039680 	call	803968 <__floatsidf>
  800f38:	980b883a 	mov	r5,r19
  800f3c:	8009883a 	mov	r4,r16
  800f40:	180f883a 	mov	r7,r3
  800f44:	100d883a 	mov	r6,r2
  800f48:	d8800215 	stw	r2,8(sp)
  800f4c:	d8c00315 	stw	r3,12(sp)
  800f50:	08033180 	call	803318 <__subdf3>
  800f54:	180b883a 	mov	r5,r3
  800f58:	a00d883a 	mov	r6,r20
  800f5c:	a80f883a 	mov	r7,r21
  800f60:	1009883a 	mov	r4,r2
  800f64:	080340c0 	call	80340c <__muldf3>
  800f68:	180b883a 	mov	r5,r3
  800f6c:	1009883a 	mov	r4,r2
  800f70:	1823883a 	mov	r17,r3
  800f74:	1021883a 	mov	r16,r2
  800f78:	0803a600 	call	803a60 <__fixdfsi>
  800f7c:	1009883a 	mov	r4,r2
  800f80:	08039680 	call	803968 <__floatsidf>
  800f84:	880b883a 	mov	r5,r17
  800f88:	8009883a 	mov	r4,r16
  800f8c:	180f883a 	mov	r7,r3
  800f90:	100d883a 	mov	r6,r2
  800f94:	d8800415 	stw	r2,16(sp)
  800f98:	d8c00515 	stw	r3,20(sp)
  800f9c:	08033180 	call	803318 <__subdf3>
  800fa0:	180b883a 	mov	r5,r3
  800fa4:	000d883a 	mov	r6,zero
  800fa8:	a80f883a 	mov	r7,r21
  800fac:	1009883a 	mov	r4,r2
  800fb0:	080340c0 	call	80340c <__muldf3>
  800fb4:	d8c00715 	stw	r3,28(sp)
  800fb8:	d8800615 	stw	r2,24(sp)
  800fbc:	00000106 	br	800fc4 <__ieee754_rem_pio2+0x570>
  800fc0:	8025883a 	mov	r18,r16
  800fc4:	943fffc4 	addi	r16,r18,-1
  800fc8:	800890fa 	slli	r4,r16,3
  800fcc:	d9400204 	addi	r5,sp,8
  800fd0:	000d883a 	mov	r6,zero
  800fd4:	2149883a 	add	r4,r4,r5
  800fd8:	20c00117 	ldw	r3,4(r4)
  800fdc:	20800017 	ldw	r2,0(r4)
  800fe0:	000f883a 	mov	r7,zero
  800fe4:	180b883a 	mov	r5,r3
  800fe8:	1009883a 	mov	r4,r2
  800fec:	08037d00 	call	8037d0 <__eqdf2>
  800ff0:	103ff326 	beq	r2,zero,800fc0 <__ieee754_rem_pio2+0x56c>
  800ff4:	00800084 	movi	r2,2
  800ff8:	00c02074 	movhi	r3,129
  800ffc:	18c1f304 	addi	r3,r3,1996
  801000:	b80d883a 	mov	r6,r23
  801004:	900f883a 	mov	r7,r18
  801008:	d9000204 	addi	r4,sp,8
  80100c:	e00b883a 	mov	r5,fp
  801010:	d8800015 	stw	r2,0(sp)
  801014:	d8c00115 	stw	r3,4(sp)
  801018:	08017a80 	call	8017a8 <__kernel_rem_pio2>
  80101c:	d8800b15 	stw	r2,44(sp)
  801020:	d8800a17 	ldw	r2,40(sp)
  801024:	103ea40e 	bge	r2,zero,800ab8 <__ieee754_rem_pio2+0x64>
  801028:	e0800117 	ldw	r2,4(fp)
  80102c:	d8c00b17 	ldw	r3,44(sp)
  801030:	e1000204 	addi	r4,fp,8
  801034:	10a0003c 	xorhi	r2,r2,32768
  801038:	00c7c83a 	sub	r3,zero,r3
  80103c:	e0800115 	stw	r2,4(fp)
  801040:	d8c00b15 	stw	r3,44(sp)
  801044:	20c00117 	ldw	r3,4(r4)
  801048:	18e0003c 	xorhi	r3,r3,32768
  80104c:	20c00115 	stw	r3,4(r4)
  801050:	003e9906 	br	800ab8 <__ieee754_rem_pio2+0x64>
  801054:	00869834 	movhi	r2,6752
  801058:	00cf7474 	movhi	r3,15825
  80105c:	18ed1844 	addi	r3,r3,-19359
  801060:	9009883a 	mov	r4,r18
  801064:	980b883a 	mov	r5,r19
  801068:	180f883a 	mov	r7,r3
  80106c:	100d883a 	mov	r6,r2
  801070:	08033180 	call	803318 <__subdf3>
  801074:	048b80f4 	movhi	r18,11779
  801078:	949c1cc4 	addi	r18,r18,28787
  80107c:	04cee8f4 	movhi	r19,15267
  801080:	9cc66284 	addi	r19,r19,6538
  801084:	1009883a 	mov	r4,r2
  801088:	180b883a 	mov	r5,r3
  80108c:	900d883a 	mov	r6,r18
  801090:	980f883a 	mov	r7,r19
  801094:	1021883a 	mov	r16,r2
  801098:	1823883a 	mov	r17,r3
  80109c:	08033180 	call	803318 <__subdf3>
  8010a0:	100d883a 	mov	r6,r2
  8010a4:	8009883a 	mov	r4,r16
  8010a8:	880b883a 	mov	r5,r17
  8010ac:	180f883a 	mov	r7,r3
  8010b0:	e0800015 	stw	r2,0(fp)
  8010b4:	e0c00115 	stw	r3,4(fp)
  8010b8:	08033180 	call	803318 <__subdf3>
  8010bc:	180b883a 	mov	r5,r3
  8010c0:	1009883a 	mov	r4,r2
  8010c4:	900d883a 	mov	r6,r18
  8010c8:	980f883a 	mov	r7,r19
  8010cc:	08033180 	call	803318 <__subdf3>
  8010d0:	180b883a 	mov	r5,r3
  8010d4:	1009883a 	mov	r4,r2
  8010d8:	00c00044 	movi	r3,1
  8010dc:	d8c00b15 	stw	r3,44(sp)
  8010e0:	e1400315 	stw	r5,12(fp)
  8010e4:	e1000215 	stw	r4,8(fp)
  8010e8:	003e7306 	br	800ab8 <__ieee754_rem_pio2+0x64>
  8010ec:	2105883a 	add	r2,r4,r4
  8010f0:	1085883a 	add	r2,r2,r2
  8010f4:	00c02074 	movhi	r3,129
  8010f8:	18c1d304 	addi	r3,r3,1868
  8010fc:	10c5883a 	add	r2,r2,r3
  801100:	113fff17 	ldw	r4,-4(r2)
  801104:	b13eef26 	beq	r22,r4,800cc4 <__ieee754_rem_pio2+0x270>
  801108:	980b883a 	mov	r5,r19
  80110c:	400f883a 	mov	r7,r8
  801110:	9009883a 	mov	r4,r18
  801114:	800d883a 	mov	r6,r16
  801118:	08033180 	call	803318 <__subdf3>
  80111c:	e0c00115 	stw	r3,4(fp)
  801120:	e0800015 	stw	r2,0(fp)
  801124:	003f3a06 	br	800e10 <__ieee754_rem_pio2+0x3bc>
  801128:	00869834 	movhi	r2,6752
  80112c:	00cf7474 	movhi	r3,15825
  801130:	18ed1844 	addi	r3,r3,-19359
  801134:	9009883a 	mov	r4,r18
  801138:	980b883a 	mov	r5,r19
  80113c:	180f883a 	mov	r7,r3
  801140:	100d883a 	mov	r6,r2
  801144:	08033980 	call	803398 <__adddf3>
  801148:	048b80f4 	movhi	r18,11779
  80114c:	949c1cc4 	addi	r18,r18,28787
  801150:	04cee8f4 	movhi	r19,15267
  801154:	9cc66284 	addi	r19,r19,6538
  801158:	1009883a 	mov	r4,r2
  80115c:	180b883a 	mov	r5,r3
  801160:	900d883a 	mov	r6,r18
  801164:	980f883a 	mov	r7,r19
  801168:	1021883a 	mov	r16,r2
  80116c:	1823883a 	mov	r17,r3
  801170:	08033980 	call	803398 <__adddf3>
  801174:	100d883a 	mov	r6,r2
  801178:	8009883a 	mov	r4,r16
  80117c:	880b883a 	mov	r5,r17
  801180:	180f883a 	mov	r7,r3
  801184:	e0800015 	stw	r2,0(fp)
  801188:	e0c00115 	stw	r3,4(fp)
  80118c:	08033180 	call	803318 <__subdf3>
  801190:	180b883a 	mov	r5,r3
  801194:	1009883a 	mov	r4,r2
  801198:	900d883a 	mov	r6,r18
  80119c:	980f883a 	mov	r7,r19
  8011a0:	08033980 	call	803398 <__adddf3>
  8011a4:	180b883a 	mov	r5,r3
  8011a8:	1009883a 	mov	r4,r2
  8011ac:	00ffffc4 	movi	r3,-1
  8011b0:	d8c00b15 	stw	r3,44(sp)
  8011b4:	e1400315 	stw	r5,12(fp)
  8011b8:	e1000215 	stw	r4,8(fp)
  8011bc:	003e3e06 	br	800ab8 <__ieee754_rem_pio2+0x64>
  8011c0:	d9000c17 	ldw	r4,48(sp)
  8011c4:	d9400d17 	ldw	r5,52(sp)
  8011c8:	018b8034 	movhi	r6,11776
  8011cc:	b80f883a 	mov	r7,r23
  8011d0:	080340c0 	call	80340c <__muldf3>
  8011d4:	d9000817 	ldw	r4,32(sp)
  8011d8:	d9401217 	ldw	r5,72(sp)
  8011dc:	100d883a 	mov	r6,r2
  8011e0:	180f883a 	mov	r7,r3
  8011e4:	1025883a 	mov	r18,r2
  8011e8:	1827883a 	mov	r19,r3
  8011ec:	08033180 	call	803318 <__subdf3>
  8011f0:	d9400d17 	ldw	r5,52(sp)
  8011f4:	d9000c17 	ldw	r4,48(sp)
  8011f8:	02094834 	movhi	r8,9504
  8011fc:	42127044 	addi	r8,r8,18881
  801200:	024e5f34 	movhi	r9,14716
  801204:	4a60e684 	addi	r9,r9,-31846
  801208:	480f883a 	mov	r7,r9
  80120c:	400d883a 	mov	r6,r8
  801210:	182b883a 	mov	r21,r3
  801214:	d8800e15 	stw	r2,56(sp)
  801218:	080340c0 	call	80340c <__muldf3>
  80121c:	d9000817 	ldw	r4,32(sp)
  801220:	d9401217 	ldw	r5,72(sp)
  801224:	d9800e17 	ldw	r6,56(sp)
  801228:	a80f883a 	mov	r7,r21
  80122c:	1021883a 	mov	r16,r2
  801230:	1823883a 	mov	r17,r3
  801234:	dd400f15 	stw	r21,60(sp)
  801238:	08033180 	call	803318 <__subdf3>
  80123c:	180b883a 	mov	r5,r3
  801240:	900d883a 	mov	r6,r18
  801244:	980f883a 	mov	r7,r19
  801248:	1009883a 	mov	r4,r2
  80124c:	08033180 	call	803318 <__subdf3>
  801250:	180f883a 	mov	r7,r3
  801254:	880b883a 	mov	r5,r17
  801258:	8009883a 	mov	r4,r16
  80125c:	100d883a 	mov	r6,r2
  801260:	08033180 	call	803318 <__subdf3>
  801264:	d9000e17 	ldw	r4,56(sp)
  801268:	1021883a 	mov	r16,r2
  80126c:	1823883a 	mov	r17,r3
  801270:	a80b883a 	mov	r5,r21
  801274:	180f883a 	mov	r7,r3
  801278:	003fa606 	br	801114 <__ieee754_rem_pio2+0x6c0>

0080127c <__kernel_cos>:
  80127c:	defff104 	addi	sp,sp,-60
  801280:	00a00034 	movhi	r2,32768
  801284:	10bfffc4 	addi	r2,r2,-1
  801288:	dd800c15 	stw	r22,48(sp)
  80128c:	116c703a 	and	r22,r2,r5
  801290:	0005883a 	mov	r2,zero
  801294:	dd000a15 	stw	r20,40(sp)
  801298:	d8800215 	stw	r2,8(sp)
  80129c:	2029883a 	mov	r20,r4
  8012a0:	008f9034 	movhi	r2,15936
  8012a4:	10bfffc4 	addi	r2,r2,-1
  8012a8:	0009883a 	mov	r4,zero
  8012ac:	dd400b15 	stw	r21,44(sp)
  8012b0:	dfc00e15 	stw	ra,56(sp)
  8012b4:	ddc00d15 	stw	r23,52(sp)
  8012b8:	dcc00915 	stw	r19,36(sp)
  8012bc:	dc800815 	stw	r18,32(sp)
  8012c0:	dc400715 	stw	r17,28(sp)
  8012c4:	dc000615 	stw	r16,24(sp)
  8012c8:	282b883a 	mov	r21,r5
  8012cc:	d9800415 	stw	r6,16(sp)
  8012d0:	d9c00515 	stw	r7,20(sp)
  8012d4:	d9000315 	stw	r4,12(sp)
  8012d8:	15809216 	blt	r2,r22,801524 <__kernel_cos+0x2a8>
  8012dc:	a009883a 	mov	r4,r20
  8012e0:	0803a600 	call	803a60 <__fixdfsi>
  8012e4:	10011c26 	beq	r2,zero,801758 <__kernel_cos+0x4dc>
  8012e8:	a009883a 	mov	r4,r20
  8012ec:	a80b883a 	mov	r5,r21
  8012f0:	a00d883a 	mov	r6,r20
  8012f4:	a80f883a 	mov	r7,r21
  8012f8:	080340c0 	call	80340c <__muldf3>
  8012fc:	1021883a 	mov	r16,r2
  801300:	1823883a 	mov	r17,r3
  801304:	1025883a 	mov	r18,r2
  801308:	1827883a 	mov	r19,r3
  80130c:	00afa234 	movhi	r2,48776
  801310:	108e3504 	addi	r2,r2,14548
  801314:	00ef6a74 	movhi	r3,48553
  801318:	18feba44 	addi	r3,r3,-1303
  80131c:	8009883a 	mov	r4,r16
  801320:	880b883a 	mov	r5,r17
  801324:	180f883a 	mov	r7,r3
  801328:	100d883a 	mov	r6,r2
  80132c:	080340c0 	call	80340c <__muldf3>
  801330:	022f6d74 	movhi	r8,48565
  801334:	422c7104 	addi	r8,r8,-20028
  801338:	024f88b4 	movhi	r9,15906
  80133c:	4a7ba784 	addi	r9,r9,-4450
  801340:	480f883a 	mov	r7,r9
  801344:	400d883a 	mov	r6,r8
  801348:	180b883a 	mov	r5,r3
  80134c:	1009883a 	mov	r4,r2
  801350:	08033980 	call	803398 <__adddf3>
  801354:	180f883a 	mov	r7,r3
  801358:	8009883a 	mov	r4,r16
  80135c:	880b883a 	mov	r5,r17
  801360:	100d883a 	mov	r6,r2
  801364:	080340c0 	call	80340c <__muldf3>
  801368:	02202734 	movhi	r8,32924
  80136c:	4214ab44 	addi	r8,r8,21165
  801370:	024fa4b4 	movhi	r9,16018
  801374:	4a5f93c4 	addi	r9,r9,32335
  801378:	480f883a 	mov	r7,r9
  80137c:	400d883a 	mov	r6,r8
  801380:	180b883a 	mov	r5,r3
  801384:	1009883a 	mov	r4,r2
  801388:	08033180 	call	803318 <__subdf3>
  80138c:	180f883a 	mov	r7,r3
  801390:	8009883a 	mov	r4,r16
  801394:	880b883a 	mov	r5,r17
  801398:	100d883a 	mov	r6,r2
  80139c:	080340c0 	call	80340c <__muldf3>
  8013a0:	020672f4 	movhi	r8,6603
  8013a4:	42056404 	addi	r8,r8,5520
  8013a8:	024fbeb4 	movhi	r9,16122
  8013ac:	4a406804 	addi	r9,r9,416
  8013b0:	480f883a 	mov	r7,r9
  8013b4:	400d883a 	mov	r6,r8
  8013b8:	180b883a 	mov	r5,r3
  8013bc:	1009883a 	mov	r4,r2
  8013c0:	08033980 	call	803398 <__adddf3>
  8013c4:	180f883a 	mov	r7,r3
  8013c8:	8009883a 	mov	r4,r16
  8013cc:	880b883a 	mov	r5,r17
  8013d0:	100d883a 	mov	r6,r2
  8013d4:	080340c0 	call	80340c <__muldf3>
  8013d8:	0205b074 	movhi	r8,5825
  8013dc:	42145dc4 	addi	r8,r8,20855
  8013e0:	024fd5f4 	movhi	r9,16215
  8013e4:	4a705b04 	addi	r9,r9,-16020
  8013e8:	480f883a 	mov	r7,r9
  8013ec:	400d883a 	mov	r6,r8
  8013f0:	180b883a 	mov	r5,r3
  8013f4:	1009883a 	mov	r4,r2
  8013f8:	08033180 	call	803318 <__subdf3>
  8013fc:	180f883a 	mov	r7,r3
  801400:	8009883a 	mov	r4,r16
  801404:	880b883a 	mov	r5,r17
  801408:	100d883a 	mov	r6,r2
  80140c:	080340c0 	call	80340c <__muldf3>
  801410:	02155574 	movhi	r8,21845
  801414:	42155304 	addi	r8,r8,21836
  801418:	024fe974 	movhi	r9,16293
  80141c:	4a555544 	addi	r9,r9,21845
  801420:	480f883a 	mov	r7,r9
  801424:	400d883a 	mov	r6,r8
  801428:	180b883a 	mov	r5,r3
  80142c:	1009883a 	mov	r4,r2
  801430:	08033980 	call	803398 <__adddf3>
  801434:	180f883a 	mov	r7,r3
  801438:	880b883a 	mov	r5,r17
  80143c:	8009883a 	mov	r4,r16
  801440:	100d883a 	mov	r6,r2
  801444:	080340c0 	call	80340c <__muldf3>
  801448:	1021883a 	mov	r16,r2
  80144c:	1823883a 	mov	r17,r3
  801450:	0005883a 	mov	r2,zero
  801454:	00cff834 	movhi	r3,16352
  801458:	9009883a 	mov	r4,r18
  80145c:	980b883a 	mov	r5,r19
  801460:	180f883a 	mov	r7,r3
  801464:	100d883a 	mov	r6,r2
  801468:	080340c0 	call	80340c <__muldf3>
  80146c:	980b883a 	mov	r5,r19
  801470:	880f883a 	mov	r7,r17
  801474:	9009883a 	mov	r4,r18
  801478:	800d883a 	mov	r6,r16
  80147c:	1025883a 	mov	r18,r2
  801480:	1827883a 	mov	r19,r3
  801484:	080340c0 	call	80340c <__muldf3>
  801488:	d9c00517 	ldw	r7,20(sp)
  80148c:	d9800417 	ldw	r6,16(sp)
  801490:	a80b883a 	mov	r5,r21
  801494:	a009883a 	mov	r4,r20
  801498:	1021883a 	mov	r16,r2
  80149c:	1823883a 	mov	r17,r3
  8014a0:	080340c0 	call	80340c <__muldf3>
  8014a4:	180f883a 	mov	r7,r3
  8014a8:	880b883a 	mov	r5,r17
  8014ac:	8009883a 	mov	r4,r16
  8014b0:	100d883a 	mov	r6,r2
  8014b4:	08033180 	call	803318 <__subdf3>
  8014b8:	180f883a 	mov	r7,r3
  8014bc:	980b883a 	mov	r5,r19
  8014c0:	9009883a 	mov	r4,r18
  8014c4:	100d883a 	mov	r6,r2
  8014c8:	08033180 	call	803318 <__subdf3>
  8014cc:	0011883a 	mov	r8,zero
  8014d0:	024ffc34 	movhi	r9,16368
  8014d4:	480b883a 	mov	r5,r9
  8014d8:	180f883a 	mov	r7,r3
  8014dc:	4009883a 	mov	r4,r8
  8014e0:	100d883a 	mov	r6,r2
  8014e4:	08033180 	call	803318 <__subdf3>
  8014e8:	100d883a 	mov	r6,r2
  8014ec:	180f883a 	mov	r7,r3
  8014f0:	3005883a 	mov	r2,r6
  8014f4:	3807883a 	mov	r3,r7
  8014f8:	dfc00e17 	ldw	ra,56(sp)
  8014fc:	ddc00d17 	ldw	r23,52(sp)
  801500:	dd800c17 	ldw	r22,48(sp)
  801504:	dd400b17 	ldw	r21,44(sp)
  801508:	dd000a17 	ldw	r20,40(sp)
  80150c:	dcc00917 	ldw	r19,36(sp)
  801510:	dc800817 	ldw	r18,32(sp)
  801514:	dc400717 	ldw	r17,28(sp)
  801518:	dc000617 	ldw	r16,24(sp)
  80151c:	dec00f04 	addi	sp,sp,60
  801520:	f800283a 	ret
  801524:	280f883a 	mov	r7,r5
  801528:	a009883a 	mov	r4,r20
  80152c:	a00d883a 	mov	r6,r20
  801530:	080340c0 	call	80340c <__muldf3>
  801534:	1021883a 	mov	r16,r2
  801538:	1823883a 	mov	r17,r3
  80153c:	1025883a 	mov	r18,r2
  801540:	1827883a 	mov	r19,r3
  801544:	00afa234 	movhi	r2,48776
  801548:	108e3504 	addi	r2,r2,14548
  80154c:	00ef6a74 	movhi	r3,48553
  801550:	18feba44 	addi	r3,r3,-1303
  801554:	8009883a 	mov	r4,r16
  801558:	880b883a 	mov	r5,r17
  80155c:	180f883a 	mov	r7,r3
  801560:	100d883a 	mov	r6,r2
  801564:	080340c0 	call	80340c <__muldf3>
  801568:	022f6d74 	movhi	r8,48565
  80156c:	422c7104 	addi	r8,r8,-20028
  801570:	024f88b4 	movhi	r9,15906
  801574:	4a7ba784 	addi	r9,r9,-4450
  801578:	480f883a 	mov	r7,r9
  80157c:	400d883a 	mov	r6,r8
  801580:	180b883a 	mov	r5,r3
  801584:	1009883a 	mov	r4,r2
  801588:	08033980 	call	803398 <__adddf3>
  80158c:	180f883a 	mov	r7,r3
  801590:	8009883a 	mov	r4,r16
  801594:	880b883a 	mov	r5,r17
  801598:	100d883a 	mov	r6,r2
  80159c:	080340c0 	call	80340c <__muldf3>
  8015a0:	02202734 	movhi	r8,32924
  8015a4:	4214ab44 	addi	r8,r8,21165
  8015a8:	024fa4b4 	movhi	r9,16018
  8015ac:	4a5f93c4 	addi	r9,r9,32335
  8015b0:	480f883a 	mov	r7,r9
  8015b4:	400d883a 	mov	r6,r8
  8015b8:	180b883a 	mov	r5,r3
  8015bc:	1009883a 	mov	r4,r2
  8015c0:	08033180 	call	803318 <__subdf3>
  8015c4:	180f883a 	mov	r7,r3
  8015c8:	8009883a 	mov	r4,r16
  8015cc:	880b883a 	mov	r5,r17
  8015d0:	100d883a 	mov	r6,r2
  8015d4:	080340c0 	call	80340c <__muldf3>
  8015d8:	020672f4 	movhi	r8,6603
  8015dc:	42056404 	addi	r8,r8,5520
  8015e0:	024fbeb4 	movhi	r9,16122
  8015e4:	4a406804 	addi	r9,r9,416
  8015e8:	480f883a 	mov	r7,r9
  8015ec:	400d883a 	mov	r6,r8
  8015f0:	180b883a 	mov	r5,r3
  8015f4:	1009883a 	mov	r4,r2
  8015f8:	08033980 	call	803398 <__adddf3>
  8015fc:	180f883a 	mov	r7,r3
  801600:	8009883a 	mov	r4,r16
  801604:	880b883a 	mov	r5,r17
  801608:	100d883a 	mov	r6,r2
  80160c:	080340c0 	call	80340c <__muldf3>
  801610:	0205b074 	movhi	r8,5825
  801614:	42145dc4 	addi	r8,r8,20855
  801618:	024fd5f4 	movhi	r9,16215
  80161c:	4a705b04 	addi	r9,r9,-16020
  801620:	480f883a 	mov	r7,r9
  801624:	400d883a 	mov	r6,r8
  801628:	180b883a 	mov	r5,r3
  80162c:	1009883a 	mov	r4,r2
  801630:	08033180 	call	803318 <__subdf3>
  801634:	180f883a 	mov	r7,r3
  801638:	8009883a 	mov	r4,r16
  80163c:	880b883a 	mov	r5,r17
  801640:	100d883a 	mov	r6,r2
  801644:	080340c0 	call	80340c <__muldf3>
  801648:	02155574 	movhi	r8,21845
  80164c:	42155304 	addi	r8,r8,21836
  801650:	024fe974 	movhi	r9,16293
  801654:	4a555544 	addi	r9,r9,21845
  801658:	480f883a 	mov	r7,r9
  80165c:	400d883a 	mov	r6,r8
  801660:	180b883a 	mov	r5,r3
  801664:	1009883a 	mov	r4,r2
  801668:	08033980 	call	803398 <__adddf3>
  80166c:	180f883a 	mov	r7,r3
  801670:	880b883a 	mov	r5,r17
  801674:	8009883a 	mov	r4,r16
  801678:	100d883a 	mov	r6,r2
  80167c:	080340c0 	call	80340c <__muldf3>
  801680:	1021883a 	mov	r16,r2
  801684:	008ff4f4 	movhi	r2,16339
  801688:	108ccc84 	addi	r2,r2,13106
  80168c:	1823883a 	mov	r17,r3
  801690:	15bf6f0e 	bge	r2,r22,801450 <__kernel_cos+0x1d4>
  801694:	008ffa74 	movhi	r2,16361
  801698:	1580320e 	bge	r2,r22,801764 <__kernel_cos+0x4e8>
  80169c:	0005883a 	mov	r2,zero
  8016a0:	010ff9f4 	movhi	r4,16359
  8016a4:	002d883a 	mov	r22,zero
  8016a8:	d8800015 	stw	r2,0(sp)
  8016ac:	05cff4b4 	movhi	r23,16338
  8016b0:	d9000115 	stw	r4,4(sp)
  8016b4:	0005883a 	mov	r2,zero
  8016b8:	00cff834 	movhi	r3,16352
  8016bc:	9009883a 	mov	r4,r18
  8016c0:	980b883a 	mov	r5,r19
  8016c4:	180f883a 	mov	r7,r3
  8016c8:	100d883a 	mov	r6,r2
  8016cc:	080340c0 	call	80340c <__muldf3>
  8016d0:	180b883a 	mov	r5,r3
  8016d4:	b80f883a 	mov	r7,r23
  8016d8:	1009883a 	mov	r4,r2
  8016dc:	b00d883a 	mov	r6,r22
  8016e0:	08033180 	call	803318 <__subdf3>
  8016e4:	980b883a 	mov	r5,r19
  8016e8:	880f883a 	mov	r7,r17
  8016ec:	9009883a 	mov	r4,r18
  8016f0:	800d883a 	mov	r6,r16
  8016f4:	1025883a 	mov	r18,r2
  8016f8:	1827883a 	mov	r19,r3
  8016fc:	080340c0 	call	80340c <__muldf3>
  801700:	d9c00517 	ldw	r7,20(sp)
  801704:	d9800417 	ldw	r6,16(sp)
  801708:	a80b883a 	mov	r5,r21
  80170c:	a009883a 	mov	r4,r20
  801710:	1021883a 	mov	r16,r2
  801714:	1823883a 	mov	r17,r3
  801718:	080340c0 	call	80340c <__muldf3>
  80171c:	180f883a 	mov	r7,r3
  801720:	880b883a 	mov	r5,r17
  801724:	8009883a 	mov	r4,r16
  801728:	100d883a 	mov	r6,r2
  80172c:	08033180 	call	803318 <__subdf3>
  801730:	180f883a 	mov	r7,r3
  801734:	980b883a 	mov	r5,r19
  801738:	9009883a 	mov	r4,r18
  80173c:	100d883a 	mov	r6,r2
  801740:	08033180 	call	803318 <__subdf3>
  801744:	d9400117 	ldw	r5,4(sp)
  801748:	d9000017 	ldw	r4,0(sp)
  80174c:	180f883a 	mov	r7,r3
  801750:	100d883a 	mov	r6,r2
  801754:	003f6306 	br	8014e4 <__kernel_cos+0x268>
  801758:	000d883a 	mov	r6,zero
  80175c:	01cffc34 	movhi	r7,16368
  801760:	003f6306 	br	8014f0 <__kernel_cos+0x274>
  801764:	00bff834 	movhi	r2,65504
  801768:	b0ad883a 	add	r22,r22,r2
  80176c:	dd800315 	stw	r22,12(sp)
  801770:	d9000317 	ldw	r4,12(sp)
  801774:	0005883a 	mov	r2,zero
  801778:	00cffc34 	movhi	r3,16368
  80177c:	002d883a 	mov	r22,zero
  801780:	200f883a 	mov	r7,r4
  801784:	202f883a 	mov	r23,r4
  801788:	180b883a 	mov	r5,r3
  80178c:	1009883a 	mov	r4,r2
  801790:	b00d883a 	mov	r6,r22
  801794:	d8800215 	stw	r2,8(sp)
  801798:	08033180 	call	803318 <__subdf3>
  80179c:	d8800015 	stw	r2,0(sp)
  8017a0:	d8c00115 	stw	r3,4(sp)
  8017a4:	003fc306 	br	8016b4 <__kernel_cos+0x438>

008017a8 <__kernel_rem_pio2>:
  8017a8:	deff5304 	addi	sp,sp,-692
  8017ac:	d880ad17 	ldw	r2,692(sp)
  8017b0:	d9009615 	stw	r4,600(sp)
  8017b4:	d9409715 	stw	r5,604(sp)
  8017b8:	1087883a 	add	r3,r2,r2
  8017bc:	18c7883a 	add	r3,r3,r3
  8017c0:	00802074 	movhi	r2,129
  8017c4:	10823504 	addi	r2,r2,2260
  8017c8:	1887883a 	add	r3,r3,r2
  8017cc:	18c00017 	ldw	r3,0(r3)
  8017d0:	313fff44 	addi	r4,r6,-3
  8017d4:	01400604 	movi	r5,24
  8017d8:	df00ab15 	stw	fp,684(sp)
  8017dc:	dc00a315 	stw	r16,652(sp)
  8017e0:	d8c09515 	stw	r3,596(sp)
  8017e4:	dfc0ac15 	stw	ra,688(sp)
  8017e8:	ddc0aa15 	stw	r23,680(sp)
  8017ec:	dd80a915 	stw	r22,676(sp)
  8017f0:	dd40a815 	stw	r21,672(sp)
  8017f4:	dd00a715 	stw	r20,668(sp)
  8017f8:	dcc0a615 	stw	r19,664(sp)
  8017fc:	dc80a515 	stw	r18,660(sp)
  801800:	dc40a415 	stw	r17,656(sp)
  801804:	3021883a 	mov	r16,r6
  801808:	d9c09815 	stw	r7,608(sp)
  80180c:	0803df40 	call	803df4 <__divsi3>
  801810:	d8c09817 	ldw	r3,608(sp)
  801814:	d8808c15 	stw	r2,560(sp)
  801818:	1f3fffc4 	addi	fp,r3,-1
  80181c:	10031a16 	blt	r2,zero,802488 <__kernel_rem_pio2+0xce0>
  801820:	d9008c17 	ldw	r4,560(sp)
  801824:	017ffa04 	movi	r5,-24
  801828:	0803ec40 	call	803ec4 <__mulsi3>
  80182c:	d9009517 	ldw	r4,596(sp)
  801830:	8085883a 	add	r2,r16,r2
  801834:	10bffa04 	addi	r2,r2,-24
  801838:	2707883a 	add	r3,r4,fp
  80183c:	d8809315 	stw	r2,588(sp)
  801840:	18001616 	blt	r3,zero,80189c <__kernel_rem_pio2+0xf4>
  801844:	d9408c17 	ldw	r5,560(sp)
  801848:	d980ae17 	ldw	r6,696(sp)
  80184c:	dc801404 	addi	r18,sp,80
  801850:	2f21c83a 	sub	r16,r5,fp
  801854:	8405883a 	add	r2,r16,r16
  801858:	1085883a 	add	r2,r2,r2
  80185c:	30a3883a 	add	r17,r6,r2
  801860:	80e7883a 	add	r19,r16,r3
  801864:	00000106 	br	80186c <__kernel_rem_pio2+0xc4>
  801868:	84000044 	addi	r16,r16,1
  80186c:	0009883a 	mov	r4,zero
  801870:	000b883a 	mov	r5,zero
  801874:	80000416 	blt	r16,zero,801888 <__kernel_rem_pio2+0xe0>
  801878:	89000017 	ldw	r4,0(r17)
  80187c:	08039680 	call	803968 <__floatsidf>
  801880:	1009883a 	mov	r4,r2
  801884:	180b883a 	mov	r5,r3
  801888:	91400115 	stw	r5,4(r18)
  80188c:	91000015 	stw	r4,0(r18)
  801890:	8c400104 	addi	r17,r17,4
  801894:	94800204 	addi	r18,r18,8
  801898:	84fff31e 	bne	r16,r19,801868 <__kernel_rem_pio2+0xc0>
  80189c:	d9c09517 	ldw	r7,596(sp)
  8018a0:	38002416 	blt	r7,zero,801934 <__kernel_rem_pio2+0x18c>
  8018a4:	da809817 	ldw	r10,608(sp)
  8018a8:	e029883a 	mov	r20,fp
  8018ac:	dd406404 	addi	r21,sp,400
  8018b0:	3aaf883a 	add	r23,r7,r10
  8018b4:	e02c403a 	cmpge	r22,fp,zero
  8018b8:	b0023e26 	beq	r22,zero,8021b4 <__kernel_rem_pio2+0xa0c>
  8018bc:	dcc09617 	ldw	r19,600(sp)
  8018c0:	0021883a 	mov	r16,zero
  8018c4:	0025883a 	mov	r18,zero
  8018c8:	0023883a 	mov	r17,zero
  8018cc:	a489c83a 	sub	r4,r20,r18
  8018d0:	200890fa 	slli	r4,r4,3
  8018d4:	99800017 	ldw	r6,0(r19)
  8018d8:	99c00117 	ldw	r7,4(r19)
  8018dc:	26c9883a 	add	r4,r4,sp
  8018e0:	20c01517 	ldw	r3,84(r4)
  8018e4:	20801417 	ldw	r2,80(r4)
  8018e8:	94800044 	addi	r18,r18,1
  8018ec:	180b883a 	mov	r5,r3
  8018f0:	1009883a 	mov	r4,r2
  8018f4:	080340c0 	call	80340c <__muldf3>
  8018f8:	180f883a 	mov	r7,r3
  8018fc:	880b883a 	mov	r5,r17
  801900:	8009883a 	mov	r4,r16
  801904:	100d883a 	mov	r6,r2
  801908:	08033980 	call	803398 <__adddf3>
  80190c:	1021883a 	mov	r16,r2
  801910:	d8809817 	ldw	r2,608(sp)
  801914:	9cc00204 	addi	r19,r19,8
  801918:	1823883a 	mov	r17,r3
  80191c:	14bfeb1e 	bne	r2,r18,8018cc <__kernel_rem_pio2+0x124>
  801920:	a5000044 	addi	r20,r20,1
  801924:	ac400115 	stw	r17,4(r21)
  801928:	ac000015 	stw	r16,0(r21)
  80192c:	ad400204 	addi	r21,r21,8
  801930:	a5ffe11e 	bne	r20,r23,8018b8 <__kernel_rem_pio2+0x110>
  801934:	d8c09517 	ldw	r3,596(sp)
  801938:	d9409317 	ldw	r5,588(sp)
  80193c:	e038403a 	cmpge	fp,fp,zero
  801940:	d8c08d15 	stw	r3,564(sp)
  801944:	d9008d17 	ldw	r4,564(sp)
  801948:	18c5883a 	add	r2,r3,r3
  80194c:	10c7883a 	add	r3,r2,r3
  801950:	1907883a 	add	r3,r3,r4
  801954:	1085883a 	add	r2,r2,r2
  801958:	16c5883a 	add	r2,r2,sp
  80195c:	1ec7883a 	add	r3,r3,sp
  801960:	29400050 	cmplti	r5,r5,1
  801964:	df00a215 	stw	fp,648(sp)
  801968:	d8809915 	stw	r2,612(sp)
  80196c:	d8c0a115 	stw	r3,644(sp)
  801970:	d940a015 	stw	r5,640(sp)
  801974:	d9808d17 	ldw	r6,564(sp)
  801978:	300490fa 	slli	r2,r6,3
  80197c:	16c5883a 	add	r2,r2,sp
  801980:	15006417 	ldw	r20,400(r2)
  801984:	15406517 	ldw	r21,404(r2)
  801988:	01802e0e 	bge	zero,r6,801a44 <__kernel_rem_pio2+0x29c>
  80198c:	102d883a 	mov	r22,r2
  801990:	302f883a 	mov	r23,r6
  801994:	d839883a 	mov	fp,sp
  801998:	0005883a 	mov	r2,zero
  80199c:	00cf9c34 	movhi	r3,15984
  8019a0:	180f883a 	mov	r7,r3
  8019a4:	100d883a 	mov	r6,r2
  8019a8:	a009883a 	mov	r4,r20
  8019ac:	a80b883a 	mov	r5,r21
  8019b0:	080340c0 	call	80340c <__muldf3>
  8019b4:	180b883a 	mov	r5,r3
  8019b8:	1009883a 	mov	r4,r2
  8019bc:	0803a600 	call	803a60 <__fixdfsi>
  8019c0:	1009883a 	mov	r4,r2
  8019c4:	08039680 	call	803968 <__floatsidf>
  8019c8:	1021883a 	mov	r16,r2
  8019cc:	1823883a 	mov	r17,r3
  8019d0:	0005883a 	mov	r2,zero
  8019d4:	00f05c34 	movhi	r3,49520
  8019d8:	180f883a 	mov	r7,r3
  8019dc:	8009883a 	mov	r4,r16
  8019e0:	880b883a 	mov	r5,r17
  8019e4:	100d883a 	mov	r6,r2
  8019e8:	080340c0 	call	80340c <__muldf3>
  8019ec:	180b883a 	mov	r5,r3
  8019f0:	a80f883a 	mov	r7,r21
  8019f4:	a00d883a 	mov	r6,r20
  8019f8:	1009883a 	mov	r4,r2
  8019fc:	08033980 	call	803398 <__adddf3>
  801a00:	180b883a 	mov	r5,r3
  801a04:	1009883a 	mov	r4,r2
  801a08:	0803a600 	call	803a60 <__fixdfsi>
  801a0c:	e0800015 	stw	r2,0(fp)
  801a10:	b5bffe04 	addi	r22,r22,-8
  801a14:	b0806417 	ldw	r2,400(r22)
  801a18:	b0c06517 	ldw	r3,404(r22)
  801a1c:	8009883a 	mov	r4,r16
  801a20:	880b883a 	mov	r5,r17
  801a24:	180f883a 	mov	r7,r3
  801a28:	100d883a 	mov	r6,r2
  801a2c:	08033980 	call	803398 <__adddf3>
  801a30:	bdffffc4 	addi	r23,r23,-1
  801a34:	e7000104 	addi	fp,fp,4
  801a38:	1029883a 	mov	r20,r2
  801a3c:	182b883a 	mov	r21,r3
  801a40:	b83fd51e 	bne	r23,zero,801998 <__kernel_rem_pio2+0x1f0>
  801a44:	d9809317 	ldw	r6,588(sp)
  801a48:	a80b883a 	mov	r5,r21
  801a4c:	a009883a 	mov	r4,r20
  801a50:	080295c0 	call	80295c <scalbn>
  801a54:	0009883a 	mov	r4,zero
  801a58:	014ff034 	movhi	r5,16320
  801a5c:	280f883a 	mov	r7,r5
  801a60:	200d883a 	mov	r6,r4
  801a64:	180b883a 	mov	r5,r3
  801a68:	1009883a 	mov	r4,r2
  801a6c:	1021883a 	mov	r16,r2
  801a70:	1823883a 	mov	r17,r3
  801a74:	080340c0 	call	80340c <__muldf3>
  801a78:	180b883a 	mov	r5,r3
  801a7c:	1009883a 	mov	r4,r2
  801a80:	08008300 	call	800830 <floor>
  801a84:	0011883a 	mov	r8,zero
  801a88:	02700834 	movhi	r9,49184
  801a8c:	480f883a 	mov	r7,r9
  801a90:	400d883a 	mov	r6,r8
  801a94:	180b883a 	mov	r5,r3
  801a98:	1009883a 	mov	r4,r2
  801a9c:	080340c0 	call	80340c <__muldf3>
  801aa0:	180f883a 	mov	r7,r3
  801aa4:	100d883a 	mov	r6,r2
  801aa8:	880b883a 	mov	r5,r17
  801aac:	8009883a 	mov	r4,r16
  801ab0:	08033980 	call	803398 <__adddf3>
  801ab4:	180b883a 	mov	r5,r3
  801ab8:	1009883a 	mov	r4,r2
  801abc:	1823883a 	mov	r17,r3
  801ac0:	1021883a 	mov	r16,r2
  801ac4:	0803a600 	call	803a60 <__fixdfsi>
  801ac8:	1009883a 	mov	r4,r2
  801acc:	d8809415 	stw	r2,592(sp)
  801ad0:	08039680 	call	803968 <__floatsidf>
  801ad4:	880b883a 	mov	r5,r17
  801ad8:	8009883a 	mov	r4,r16
  801adc:	180f883a 	mov	r7,r3
  801ae0:	100d883a 	mov	r6,r2
  801ae4:	08033180 	call	803318 <__subdf3>
  801ae8:	d9c0a017 	ldw	r7,640(sp)
  801aec:	180d883a 	mov	r6,r3
  801af0:	1021883a 	mov	r16,r2
  801af4:	1823883a 	mov	r17,r3
  801af8:	38017d1e 	bne	r7,zero,8020f0 <__kernel_rem_pio2+0x948>
  801afc:	da808d17 	ldw	r10,564(sp)
  801b00:	d9009317 	ldw	r4,588(sp)
  801b04:	00c00604 	movi	r3,24
  801b08:	50bfffc4 	addi	r2,r10,-1
  801b0c:	1085883a 	add	r2,r2,r2
  801b10:	1085883a 	add	r2,r2,r2
  801b14:	16c5883a 	add	r2,r2,sp
  801b18:	11400017 	ldw	r5,0(r2)
  801b1c:	1907c83a 	sub	r3,r3,r4
  801b20:	d9c09317 	ldw	r7,588(sp)
  801b24:	28cdd83a 	sra	r6,r5,r3
  801b28:	010005c4 	movi	r4,23
  801b2c:	da809417 	ldw	r10,592(sp)
  801b30:	30c6983a 	sll	r3,r6,r3
  801b34:	21c9c83a 	sub	r4,r4,r7
  801b38:	5195883a 	add	r10,r10,r6
  801b3c:	28cbc83a 	sub	r5,r5,r3
  801b40:	2909d83a 	sra	r4,r5,r4
  801b44:	da809415 	stw	r10,592(sp)
  801b48:	11400015 	stw	r5,0(r2)
  801b4c:	d9009215 	stw	r4,584(sp)
  801b50:	d9409217 	ldw	r5,584(sp)
  801b54:	0140270e 	bge	zero,r5,801bf4 <__kernel_rem_pio2+0x44c>
  801b58:	d9809417 	ldw	r6,592(sp)
  801b5c:	d9c08d17 	ldw	r7,564(sp)
  801b60:	31800044 	addi	r6,r6,1
  801b64:	d9809415 	stw	r6,592(sp)
  801b68:	01c1a50e 	bge	zero,r7,802200 <__kernel_rem_pio2+0xa58>
  801b6c:	002d883a 	mov	r22,zero
  801b70:	000b883a 	mov	r5,zero
  801b74:	d809883a 	mov	r4,sp
  801b78:	01c04034 	movhi	r7,256
  801b7c:	01804034 	movhi	r6,256
  801b80:	31bfffc4 	addi	r6,r6,-1
  801b84:	00000806 	br	801ba8 <__kernel_rem_pio2+0x400>
  801b88:	38c5c83a 	sub	r2,r7,r3
  801b8c:	18000226 	beq	r3,zero,801b98 <__kernel_rem_pio2+0x3f0>
  801b90:	05800044 	movi	r22,1
  801b94:	20800015 	stw	r2,0(r4)
  801b98:	da808d17 	ldw	r10,564(sp)
  801b9c:	29400044 	addi	r5,r5,1
  801ba0:	21000104 	addi	r4,r4,4
  801ba4:	51400926 	beq	r10,r5,801bcc <__kernel_rem_pio2+0x424>
  801ba8:	b004c03a 	cmpne	r2,r22,zero
  801bac:	20c00017 	ldw	r3,0(r4)
  801bb0:	103ff526 	beq	r2,zero,801b88 <__kernel_rem_pio2+0x3e0>
  801bb4:	da808d17 	ldw	r10,564(sp)
  801bb8:	30c5c83a 	sub	r2,r6,r3
  801bbc:	29400044 	addi	r5,r5,1
  801bc0:	20800015 	stw	r2,0(r4)
  801bc4:	21000104 	addi	r4,r4,4
  801bc8:	517ff71e 	bne	r10,r5,801ba8 <__kernel_rem_pio2+0x400>
  801bcc:	d880a017 	ldw	r2,640(sp)
  801bd0:	1000051e 	bne	r2,zero,801be8 <__kernel_rem_pio2+0x440>
  801bd4:	d8c09317 	ldw	r3,588(sp)
  801bd8:	00800044 	movi	r2,1
  801bdc:	18814e26 	beq	r3,r2,802118 <__kernel_rem_pio2+0x970>
  801be0:	00800084 	movi	r2,2
  801be4:	18815826 	beq	r3,r2,802148 <__kernel_rem_pio2+0x9a0>
  801be8:	d9c09217 	ldw	r7,584(sp)
  801bec:	00800084 	movi	r2,2
  801bf0:	38806926 	beq	r7,r2,801d98 <__kernel_rem_pio2+0x5f0>
  801bf4:	000d883a 	mov	r6,zero
  801bf8:	000f883a 	mov	r7,zero
  801bfc:	8009883a 	mov	r4,r16
  801c00:	880b883a 	mov	r5,r17
  801c04:	08037d00 	call	8037d0 <__eqdf2>
  801c08:	1000811e 	bne	r2,zero,801e10 <__kernel_rem_pio2+0x668>
  801c0c:	da808d17 	ldw	r10,564(sp)
  801c10:	d8809517 	ldw	r2,596(sp)
  801c14:	51bfffc4 	addi	r6,r10,-1
  801c18:	30800c16 	blt	r6,r2,801c4c <__kernel_rem_pio2+0x4a4>
  801c1c:	3185883a 	add	r2,r6,r6
  801c20:	1085883a 	add	r2,r2,r2
  801c24:	16c9883a 	add	r4,r2,sp
  801c28:	3007883a 	mov	r3,r6
  801c2c:	000b883a 	mov	r5,zero
  801c30:	20800017 	ldw	r2,0(r4)
  801c34:	d9c09517 	ldw	r7,596(sp)
  801c38:	18ffffc4 	addi	r3,r3,-1
  801c3c:	213fff04 	addi	r4,r4,-4
  801c40:	288ab03a 	or	r5,r5,r2
  801c44:	19fffa0e 	bge	r3,r7,801c30 <__kernel_rem_pio2+0x488>
  801c48:	2800791e 	bne	r5,zero,801e30 <__kernel_rem_pio2+0x688>
  801c4c:	da809917 	ldw	r10,612(sp)
  801c50:	50bfff17 	ldw	r2,-4(r10)
  801c54:	1001511e 	bne	r2,zero,80219c <__kernel_rem_pio2+0x9f4>
  801c58:	d880a117 	ldw	r2,644(sp)
  801c5c:	01000044 	movi	r4,1
  801c60:	10ffff04 	addi	r3,r2,-4
  801c64:	18ffff04 	addi	r3,r3,-4
  801c68:	18800017 	ldw	r2,0(r3)
  801c6c:	21000044 	addi	r4,r4,1
  801c70:	103ffc26 	beq	r2,zero,801c64 <__kernel_rem_pio2+0x4bc>
  801c74:	d8c08d17 	ldw	r3,564(sp)
  801c78:	192f883a 	add	r23,r3,r4
  801c7c:	1f000044 	addi	fp,r3,1
  801c80:	bf00020e 	bge	r23,fp,801c8c <__kernel_rem_pio2+0x4e4>
  801c84:	ddc08d15 	stw	r23,564(sp)
  801c88:	003f3a06 	br	801974 <__kernel_rem_pio2+0x1cc>
  801c8c:	d9408c17 	ldw	r5,560(sp)
  801c90:	d9009817 	ldw	r4,608(sp)
  801c94:	da80ae17 	ldw	r10,696(sp)
  801c98:	1945883a 	add	r2,r3,r5
  801c9c:	190f883a 	add	r7,r3,r4
  801ca0:	1085883a 	add	r2,r2,r2
  801ca4:	380a90fa 	slli	r5,r7,3
  801ca8:	e00c90fa 	slli	r6,fp,3
  801cac:	1085883a 	add	r2,r2,r2
  801cb0:	5085883a 	add	r2,r10,r2
  801cb4:	d8c01404 	addi	r3,sp,80
  801cb8:	d9006404 	addi	r4,sp,400
  801cbc:	10800104 	addi	r2,r2,4
  801cc0:	196b883a 	add	r21,r3,r5
  801cc4:	21a1883a 	add	r16,r4,r6
  801cc8:	d8809115 	stw	r2,580(sp)
  801ccc:	d9c09015 	stw	r7,576(sp)
  801cd0:	d8809117 	ldw	r2,580(sp)
  801cd4:	11000017 	ldw	r4,0(r2)
  801cd8:	08039680 	call	803968 <__floatsidf>
  801cdc:	a8c00115 	stw	r3,4(r21)
  801ce0:	d8c0a217 	ldw	r3,648(sp)
  801ce4:	a8800015 	stw	r2,0(r21)
  801ce8:	18002826 	beq	r3,zero,801d8c <__kernel_rem_pio2+0x5e4>
  801cec:	d9009017 	ldw	r4,576(sp)
  801cf0:	dd009617 	ldw	r20,600(sp)
  801cf4:	0023883a 	mov	r17,zero
  801cf8:	200490fa 	slli	r2,r4,3
  801cfc:	002d883a 	mov	r22,zero
  801d00:	0025883a 	mov	r18,zero
  801d04:	16e7883a 	add	r19,r2,sp
  801d08:	98801417 	ldw	r2,80(r19)
  801d0c:	98c01517 	ldw	r3,84(r19)
  801d10:	a1800017 	ldw	r6,0(r20)
  801d14:	a1c00117 	ldw	r7,4(r20)
  801d18:	180b883a 	mov	r5,r3
  801d1c:	1009883a 	mov	r4,r2
  801d20:	080340c0 	call	80340c <__muldf3>
  801d24:	180f883a 	mov	r7,r3
  801d28:	900b883a 	mov	r5,r18
  801d2c:	8809883a 	mov	r4,r17
  801d30:	100d883a 	mov	r6,r2
  801d34:	08033980 	call	803398 <__adddf3>
  801d38:	d9409817 	ldw	r5,608(sp)
  801d3c:	b5800044 	addi	r22,r22,1
  801d40:	9cfffe04 	addi	r19,r19,-8
  801d44:	1023883a 	mov	r17,r2
  801d48:	1825883a 	mov	r18,r3
  801d4c:	a5000204 	addi	r20,r20,8
  801d50:	2dbfed1e 	bne	r5,r22,801d08 <__kernel_rem_pio2+0x560>
  801d54:	d9809117 	ldw	r6,580(sp)
  801d58:	d9c09017 	ldw	r7,576(sp)
  801d5c:	e7000044 	addi	fp,fp,1
  801d60:	31800104 	addi	r6,r6,4
  801d64:	39c00044 	addi	r7,r7,1
  801d68:	84800115 	stw	r18,4(r16)
  801d6c:	84400015 	stw	r17,0(r16)
  801d70:	d9809115 	stw	r6,580(sp)
  801d74:	ad400204 	addi	r21,r21,8
  801d78:	84000204 	addi	r16,r16,8
  801d7c:	d9c09015 	stw	r7,576(sp)
  801d80:	bf3fd30e 	bge	r23,fp,801cd0 <__kernel_rem_pio2+0x528>
  801d84:	ddc08d15 	stw	r23,564(sp)
  801d88:	003efa06 	br	801974 <__kernel_rem_pio2+0x1cc>
  801d8c:	0023883a 	mov	r17,zero
  801d90:	0025883a 	mov	r18,zero
  801d94:	003fef06 	br	801d54 <__kernel_rem_pio2+0x5ac>
  801d98:	0029883a 	mov	r20,zero
  801d9c:	054ffc34 	movhi	r21,16368
  801da0:	880f883a 	mov	r7,r17
  801da4:	800d883a 	mov	r6,r16
  801da8:	a009883a 	mov	r4,r20
  801dac:	a80b883a 	mov	r5,r21
  801db0:	08033180 	call	803318 <__subdf3>
  801db4:	1025883a 	mov	r18,r2
  801db8:	b005003a 	cmpeq	r2,r22,zero
  801dbc:	1827883a 	mov	r19,r3
  801dc0:	9021883a 	mov	r16,r18
  801dc4:	1823883a 	mov	r17,r3
  801dc8:	103f8a1e 	bne	r2,zero,801bf4 <__kernel_rem_pio2+0x44c>
  801dcc:	d9809317 	ldw	r6,588(sp)
  801dd0:	0009883a 	mov	r4,zero
  801dd4:	a80b883a 	mov	r5,r21
  801dd8:	080295c0 	call	80295c <scalbn>
  801ddc:	180f883a 	mov	r7,r3
  801de0:	9009883a 	mov	r4,r18
  801de4:	980b883a 	mov	r5,r19
  801de8:	100d883a 	mov	r6,r2
  801dec:	08033180 	call	803318 <__subdf3>
  801df0:	1021883a 	mov	r16,r2
  801df4:	1823883a 	mov	r17,r3
  801df8:	000d883a 	mov	r6,zero
  801dfc:	000f883a 	mov	r7,zero
  801e00:	8009883a 	mov	r4,r16
  801e04:	880b883a 	mov	r5,r17
  801e08:	08037d00 	call	8037d0 <__eqdf2>
  801e0c:	103f7f26 	beq	r2,zero,801c0c <__kernel_rem_pio2+0x464>
  801e10:	000d883a 	mov	r6,zero
  801e14:	000f883a 	mov	r7,zero
  801e18:	8009883a 	mov	r4,r16
  801e1c:	880b883a 	mov	r5,r17
  801e20:	08037d00 	call	8037d0 <__eqdf2>
  801e24:	10019a1e 	bne	r2,zero,802490 <__kernel_rem_pio2+0xce8>
  801e28:	da808d17 	ldw	r10,564(sp)
  801e2c:	51bfffc4 	addi	r6,r10,-1
  801e30:	3185883a 	add	r2,r6,r6
  801e34:	1085883a 	add	r2,r2,r2
  801e38:	d9009317 	ldw	r4,588(sp)
  801e3c:	16c5883a 	add	r2,r2,sp
  801e40:	10c00017 	ldw	r3,0(r2)
  801e44:	213ffa04 	addi	r4,r4,-24
  801e48:	d9009315 	stw	r4,588(sp)
  801e4c:	1801d41e 	bne	r3,zero,8025a0 <__kernel_rem_pio2+0xdf8>
  801e50:	d9808d15 	stw	r6,564(sp)
  801e54:	1007883a 	mov	r3,r2
  801e58:	d9408d17 	ldw	r5,564(sp)
  801e5c:	d9809317 	ldw	r6,588(sp)
  801e60:	18ffff04 	addi	r3,r3,-4
  801e64:	18800017 	ldw	r2,0(r3)
  801e68:	297fffc4 	addi	r5,r5,-1
  801e6c:	31bffa04 	addi	r6,r6,-24
  801e70:	d9408d15 	stw	r5,564(sp)
  801e74:	d9809315 	stw	r6,588(sp)
  801e78:	103ff726 	beq	r2,zero,801e58 <__kernel_rem_pio2+0x6b0>
  801e7c:	d9809317 	ldw	r6,588(sp)
  801e80:	0005883a 	mov	r2,zero
  801e84:	00cffc34 	movhi	r3,16368
  801e88:	180b883a 	mov	r5,r3
  801e8c:	1009883a 	mov	r4,r2
  801e90:	080295c0 	call	80295c <scalbn>
  801e94:	d9808d17 	ldw	r6,564(sp)
  801e98:	1021883a 	mov	r16,r2
  801e9c:	1823883a 	mov	r17,r3
  801ea0:	30004616 	blt	r6,zero,801fbc <__kernel_rem_pio2+0x814>
  801ea4:	300690fa 	slli	r3,r6,3
  801ea8:	3185883a 	add	r2,r6,r6
  801eac:	1085883a 	add	r2,r2,r2
  801eb0:	16e9883a 	add	r20,r2,sp
  801eb4:	1ee5883a 	add	r18,r3,sp
  801eb8:	3027883a 	mov	r19,r6
  801ebc:	057fffc4 	movi	r21,-1
  801ec0:	a1000017 	ldw	r4,0(r20)
  801ec4:	9cffffc4 	addi	r19,r19,-1
  801ec8:	a53fff04 	addi	r20,r20,-4
  801ecc:	08039680 	call	803968 <__floatsidf>
  801ed0:	800d883a 	mov	r6,r16
  801ed4:	880f883a 	mov	r7,r17
  801ed8:	180b883a 	mov	r5,r3
  801edc:	1009883a 	mov	r4,r2
  801ee0:	080340c0 	call	80340c <__muldf3>
  801ee4:	0015883a 	mov	r10,zero
  801ee8:	02cf9c34 	movhi	r11,15984
  801eec:	880b883a 	mov	r5,r17
  801ef0:	8009883a 	mov	r4,r16
  801ef4:	90c06515 	stw	r3,404(r18)
  801ef8:	90806415 	stw	r2,400(r18)
  801efc:	580f883a 	mov	r7,r11
  801f00:	500d883a 	mov	r6,r10
  801f04:	080340c0 	call	80340c <__muldf3>
  801f08:	1021883a 	mov	r16,r2
  801f0c:	1823883a 	mov	r17,r3
  801f10:	94bffe04 	addi	r18,r18,-8
  801f14:	9d7fea1e 	bne	r19,r21,801ec0 <__kernel_rem_pio2+0x718>
  801f18:	d9c09517 	ldw	r7,596(sp)
  801f1c:	dd808d17 	ldw	r22,564(sp)
  801f20:	002b883a 	mov	r21,zero
  801f24:	382e403a 	cmpge	r23,r7,zero
  801f28:	b800aa26 	beq	r23,zero,8021d4 <__kernel_rem_pio2+0xa2c>
  801f2c:	a800a916 	blt	r21,zero,8021d4 <__kernel_rem_pio2+0xa2c>
  801f30:	b00690fa 	slli	r3,r22,3
  801f34:	d8806404 	addi	r2,sp,400
  801f38:	0021883a 	mov	r16,zero
  801f3c:	10e9883a 	add	r20,r2,r3
  801f40:	0027883a 	mov	r19,zero
  801f44:	0023883a 	mov	r17,zero
  801f48:	04802074 	movhi	r18,129
  801f4c:	94823904 	addi	r18,r18,2276
  801f50:	00000106 	br	801f58 <__kernel_rem_pio2+0x7b0>
  801f54:	acc01116 	blt	r21,r19,801f9c <__kernel_rem_pio2+0x7f4>
  801f58:	91000017 	ldw	r4,0(r18)
  801f5c:	91400117 	ldw	r5,4(r18)
  801f60:	a1800017 	ldw	r6,0(r20)
  801f64:	a1c00117 	ldw	r7,4(r20)
  801f68:	9cc00044 	addi	r19,r19,1
  801f6c:	94800204 	addi	r18,r18,8
  801f70:	080340c0 	call	80340c <__muldf3>
  801f74:	180f883a 	mov	r7,r3
  801f78:	880b883a 	mov	r5,r17
  801f7c:	8009883a 	mov	r4,r16
  801f80:	100d883a 	mov	r6,r2
  801f84:	08033980 	call	803398 <__adddf3>
  801f88:	da809517 	ldw	r10,596(sp)
  801f8c:	a5000204 	addi	r20,r20,8
  801f90:	1021883a 	mov	r16,r2
  801f94:	1823883a 	mov	r17,r3
  801f98:	54ffee0e 	bge	r10,r19,801f54 <__kernel_rem_pio2+0x7ac>
  801f9c:	a80490fa 	slli	r2,r21,3
  801fa0:	b5bfffc4 	addi	r22,r22,-1
  801fa4:	ad400044 	addi	r21,r21,1
  801fa8:	16c5883a 	add	r2,r2,sp
  801fac:	14403d15 	stw	r17,244(r2)
  801fb0:	14003c15 	stw	r16,240(r2)
  801fb4:	00bfffc4 	movi	r2,-1
  801fb8:	b0bfdb1e 	bne	r22,r2,801f28 <__kernel_rem_pio2+0x780>
  801fbc:	d8c0ad17 	ldw	r3,692(sp)
  801fc0:	00800084 	movi	r2,2
  801fc4:	10c09316 	blt	r2,r3,802214 <__kernel_rem_pio2+0xa6c>
  801fc8:	00c1120e 	bge	zero,r3,802414 <__kernel_rem_pio2+0xc6c>
  801fcc:	d9808d17 	ldw	r6,564(sp)
  801fd0:	30018d16 	blt	r6,zero,802608 <__kernel_rem_pio2+0xe60>
  801fd4:	d8c08d17 	ldw	r3,564(sp)
  801fd8:	0011883a 	mov	r8,zero
  801fdc:	0013883a 	mov	r9,zero
  801fe0:	180490fa 	slli	r2,r3,3
  801fe4:	1823883a 	mov	r17,r3
  801fe8:	04bfffc4 	movi	r18,-1
  801fec:	16e1883a 	add	r16,r2,sp
  801ff0:	80803c17 	ldw	r2,240(r16)
  801ff4:	80c03d17 	ldw	r3,244(r16)
  801ff8:	480b883a 	mov	r5,r9
  801ffc:	4009883a 	mov	r4,r8
  802000:	180f883a 	mov	r7,r3
  802004:	100d883a 	mov	r6,r2
  802008:	08033980 	call	803398 <__adddf3>
  80200c:	8c7fffc4 	addi	r17,r17,-1
  802010:	843ffe04 	addi	r16,r16,-8
  802014:	1011883a 	mov	r8,r2
  802018:	1813883a 	mov	r9,r3
  80201c:	8cbff41e 	bne	r17,r18,801ff0 <__kernel_rem_pio2+0x848>
  802020:	d9009217 	ldw	r4,584(sp)
  802024:	20015b1e 	bne	r4,zero,802594 <__kernel_rem_pio2+0xdec>
  802028:	4009883a 	mov	r4,r8
  80202c:	480b883a 	mov	r5,r9
  802030:	d9809717 	ldw	r6,604(sp)
  802034:	d8803c17 	ldw	r2,240(sp)
  802038:	480f883a 	mov	r7,r9
  80203c:	31400115 	stw	r5,4(r6)
  802040:	31000015 	stw	r4,0(r6)
  802044:	d8c03d17 	ldw	r3,244(sp)
  802048:	400d883a 	mov	r6,r8
  80204c:	1009883a 	mov	r4,r2
  802050:	180b883a 	mov	r5,r3
  802054:	08033180 	call	803318 <__subdf3>
  802058:	d9c08d17 	ldw	r7,564(sp)
  80205c:	1011883a 	mov	r8,r2
  802060:	1813883a 	mov	r9,r3
  802064:	01c00d0e 	bge	zero,r7,80209c <__kernel_rem_pio2+0x8f4>
  802068:	0023883a 	mov	r17,zero
  80206c:	dc003e04 	addi	r16,sp,248
  802070:	81800017 	ldw	r6,0(r16)
  802074:	81c00117 	ldw	r7,4(r16)
  802078:	480b883a 	mov	r5,r9
  80207c:	4009883a 	mov	r4,r8
  802080:	08033980 	call	803398 <__adddf3>
  802084:	da808d17 	ldw	r10,564(sp)
  802088:	8c400044 	addi	r17,r17,1
  80208c:	1011883a 	mov	r8,r2
  802090:	1813883a 	mov	r9,r3
  802094:	84000204 	addi	r16,r16,8
  802098:	8abff51e 	bne	r17,r10,802070 <__kernel_rem_pio2+0x8c8>
  80209c:	d8809217 	ldw	r2,584(sp)
  8020a0:	10000226 	beq	r2,zero,8020ac <__kernel_rem_pio2+0x904>
  8020a4:	48e0003c 	xorhi	r3,r9,32768
  8020a8:	1813883a 	mov	r9,r3
  8020ac:	d8c09717 	ldw	r3,604(sp)
  8020b0:	1a400315 	stw	r9,12(r3)
  8020b4:	1a000215 	stw	r8,8(r3)
  8020b8:	d8c09417 	ldw	r3,592(sp)
  8020bc:	188001cc 	andi	r2,r3,7
  8020c0:	dfc0ac17 	ldw	ra,688(sp)
  8020c4:	df00ab17 	ldw	fp,684(sp)
  8020c8:	ddc0aa17 	ldw	r23,680(sp)
  8020cc:	dd80a917 	ldw	r22,676(sp)
  8020d0:	dd40a817 	ldw	r21,672(sp)
  8020d4:	dd00a717 	ldw	r20,668(sp)
  8020d8:	dcc0a617 	ldw	r19,664(sp)
  8020dc:	dc80a517 	ldw	r18,660(sp)
  8020e0:	dc40a417 	ldw	r17,656(sp)
  8020e4:	dc00a317 	ldw	r16,652(sp)
  8020e8:	dec0ad04 	addi	sp,sp,692
  8020ec:	f800283a 	ret
  8020f0:	d8809317 	ldw	r2,588(sp)
  8020f4:	10001f1e 	bne	r2,zero,802174 <__kernel_rem_pio2+0x9cc>
  8020f8:	d8c08d17 	ldw	r3,564(sp)
  8020fc:	18c5883a 	add	r2,r3,r3
  802100:	1085883a 	add	r2,r2,r2
  802104:	16c5883a 	add	r2,r2,sp
  802108:	10ffff17 	ldw	r3,-4(r2)
  80210c:	1807d5fa 	srai	r3,r3,23
  802110:	d8c09215 	stw	r3,584(sp)
  802114:	003e8e06 	br	801b50 <__kernel_rem_pio2+0x3a8>
  802118:	d9008d17 	ldw	r4,564(sp)
  80211c:	d9409317 	ldw	r5,588(sp)
  802120:	2145c83a 	sub	r2,r4,r5
  802124:	1085883a 	add	r2,r2,r2
  802128:	1085883a 	add	r2,r2,r2
  80212c:	16c5883a 	add	r2,r2,sp
  802130:	10c00017 	ldw	r3,0(r2)
  802134:	01002034 	movhi	r4,128
  802138:	213fffc4 	addi	r4,r4,-1
  80213c:	1906703a 	and	r3,r3,r4
  802140:	10c00015 	stw	r3,0(r2)
  802144:	003ea806 	br	801be8 <__kernel_rem_pio2+0x440>
  802148:	d9808d17 	ldw	r6,564(sp)
  80214c:	01001034 	movhi	r4,64
  802150:	213fffc4 	addi	r4,r4,-1
  802154:	30bfffc4 	addi	r2,r6,-1
  802158:	1085883a 	add	r2,r2,r2
  80215c:	1085883a 	add	r2,r2,r2
  802160:	16c5883a 	add	r2,r2,sp
  802164:	10c00017 	ldw	r3,0(r2)
  802168:	1906703a 	and	r3,r3,r4
  80216c:	10c00015 	stw	r3,0(r2)
  802170:	003e9d06 	br	801be8 <__kernel_rem_pio2+0x440>
  802174:	0005883a 	mov	r2,zero
  802178:	00cff834 	movhi	r3,16352
  80217c:	300b883a 	mov	r5,r6
  802180:	180f883a 	mov	r7,r3
  802184:	8009883a 	mov	r4,r16
  802188:	100d883a 	mov	r6,r2
  80218c:	08038e00 	call	8038e0 <__gedf2>
  802190:	10001d0e 	bge	r2,zero,802208 <__kernel_rem_pio2+0xa60>
  802194:	d8009215 	stw	zero,584(sp)
  802198:	003e9606 	br	801bf4 <__kernel_rem_pio2+0x44c>
  80219c:	d8c08d17 	ldw	r3,564(sp)
  8021a0:	01000044 	movi	r4,1
  8021a4:	192f883a 	add	r23,r3,r4
  8021a8:	1f000044 	addi	fp,r3,1
  8021ac:	bf3eb516 	blt	r23,fp,801c84 <__kernel_rem_pio2+0x4dc>
  8021b0:	003eb606 	br	801c8c <__kernel_rem_pio2+0x4e4>
  8021b4:	0021883a 	mov	r16,zero
  8021b8:	0023883a 	mov	r17,zero
  8021bc:	a5000044 	addi	r20,r20,1
  8021c0:	ac400115 	stw	r17,4(r21)
  8021c4:	ac000015 	stw	r16,0(r21)
  8021c8:	ad400204 	addi	r21,r21,8
  8021cc:	a5fdba1e 	bne	r20,r23,8018b8 <__kernel_rem_pio2+0x110>
  8021d0:	003dd806 	br	801934 <__kernel_rem_pio2+0x18c>
  8021d4:	a80490fa 	slli	r2,r21,3
  8021d8:	0021883a 	mov	r16,zero
  8021dc:	0023883a 	mov	r17,zero
  8021e0:	16c5883a 	add	r2,r2,sp
  8021e4:	14403d15 	stw	r17,244(r2)
  8021e8:	14003c15 	stw	r16,240(r2)
  8021ec:	b5bfffc4 	addi	r22,r22,-1
  8021f0:	00bfffc4 	movi	r2,-1
  8021f4:	ad400044 	addi	r21,r21,1
  8021f8:	b0bf4b1e 	bne	r22,r2,801f28 <__kernel_rem_pio2+0x780>
  8021fc:	003f6f06 	br	801fbc <__kernel_rem_pio2+0x814>
  802200:	002d883a 	mov	r22,zero
  802204:	003e7106 	br	801bcc <__kernel_rem_pio2+0x424>
  802208:	01000084 	movi	r4,2
  80220c:	d9009215 	stw	r4,584(sp)
  802210:	003e5106 	br	801b58 <__kernel_rem_pio2+0x3b0>
  802214:	d900ad17 	ldw	r4,692(sp)
  802218:	008000c4 	movi	r2,3
  80221c:	20bfa61e 	bne	r4,r2,8020b8 <__kernel_rem_pio2+0x910>
  802220:	d9c08d17 	ldw	r7,564(sp)
  802224:	01c02c0e 	bge	zero,r7,8022d8 <__kernel_rem_pio2+0xb30>
  802228:	3805883a 	mov	r2,r7
  80222c:	00000106 	br	802234 <__kernel_rem_pio2+0xa8c>
  802230:	d8808e17 	ldw	r2,568(sp)
  802234:	113fffc4 	addi	r4,r2,-1
  802238:	100690fa 	slli	r3,r2,3
  80223c:	200490fa 	slli	r2,r4,3
  802240:	d9008e15 	stw	r4,568(sp)
  802244:	1ef9883a 	add	fp,r3,sp
  802248:	16c5883a 	add	r2,r2,sp
  80224c:	d8809a15 	stw	r2,616(sp)
  802250:	11403c04 	addi	r5,r2,240
  802254:	e1803c04 	addi	r6,fp,240
  802258:	14003c17 	ldw	r16,240(r2)
  80225c:	e5003c17 	ldw	r20,240(fp)
  802260:	d9409b15 	stw	r5,620(sp)
  802264:	d9809c15 	stw	r6,624(sp)
  802268:	35400117 	ldw	r21,4(r6)
  80226c:	2c400117 	ldw	r17,4(r5)
  802270:	8009883a 	mov	r4,r16
  802274:	a00d883a 	mov	r6,r20
  802278:	880b883a 	mov	r5,r17
  80227c:	a80f883a 	mov	r7,r21
  802280:	08033980 	call	803398 <__adddf3>
  802284:	100d883a 	mov	r6,r2
  802288:	880b883a 	mov	r5,r17
  80228c:	8009883a 	mov	r4,r16
  802290:	180f883a 	mov	r7,r3
  802294:	1025883a 	mov	r18,r2
  802298:	1827883a 	mov	r19,r3
  80229c:	08033180 	call	803318 <__subdf3>
  8022a0:	180f883a 	mov	r7,r3
  8022a4:	a80b883a 	mov	r5,r21
  8022a8:	a009883a 	mov	r4,r20
  8022ac:	100d883a 	mov	r6,r2
  8022b0:	08033980 	call	803398 <__adddf3>
  8022b4:	e0803c15 	stw	r2,240(fp)
  8022b8:	d9c09c17 	ldw	r7,624(sp)
  8022bc:	38c00115 	stw	r3,4(r7)
  8022c0:	da809a17 	ldw	r10,616(sp)
  8022c4:	54803c15 	stw	r18,240(r10)
  8022c8:	d8809b17 	ldw	r2,620(sp)
  8022cc:	14c00115 	stw	r19,4(r2)
  8022d0:	d8c08e17 	ldw	r3,568(sp)
  8022d4:	183fd61e 	bne	r3,zero,802230 <__kernel_rem_pio2+0xa88>
  8022d8:	d9008d17 	ldw	r4,564(sp)
  8022dc:	00800044 	movi	r2,1
  8022e0:	1100cc0e 	bge	r2,r4,802614 <__kernel_rem_pio2+0xe6c>
  8022e4:	d8808d17 	ldw	r2,564(sp)
  8022e8:	117fffc4 	addi	r5,r2,-1
  8022ec:	100690fa 	slli	r3,r2,3
  8022f0:	280490fa 	slli	r2,r5,3
  8022f4:	d9408f15 	stw	r5,572(sp)
  8022f8:	1ef9883a 	add	fp,r3,sp
  8022fc:	16c5883a 	add	r2,r2,sp
  802300:	d8809d15 	stw	r2,628(sp)
  802304:	11803c04 	addi	r6,r2,240
  802308:	e1c03c04 	addi	r7,fp,240
  80230c:	14003c17 	ldw	r16,240(r2)
  802310:	e5003c17 	ldw	r20,240(fp)
  802314:	d9809e15 	stw	r6,632(sp)
  802318:	d9c09f15 	stw	r7,636(sp)
  80231c:	34400117 	ldw	r17,4(r6)
  802320:	3d400117 	ldw	r21,4(r7)
  802324:	8009883a 	mov	r4,r16
  802328:	880b883a 	mov	r5,r17
  80232c:	a00d883a 	mov	r6,r20
  802330:	a80f883a 	mov	r7,r21
  802334:	08033980 	call	803398 <__adddf3>
  802338:	100d883a 	mov	r6,r2
  80233c:	880b883a 	mov	r5,r17
  802340:	8009883a 	mov	r4,r16
  802344:	180f883a 	mov	r7,r3
  802348:	1025883a 	mov	r18,r2
  80234c:	1827883a 	mov	r19,r3
  802350:	08033180 	call	803318 <__subdf3>
  802354:	180f883a 	mov	r7,r3
  802358:	a80b883a 	mov	r5,r21
  80235c:	a009883a 	mov	r4,r20
  802360:	100d883a 	mov	r6,r2
  802364:	08033980 	call	803398 <__adddf3>
  802368:	e0803c15 	stw	r2,240(fp)
  80236c:	da809f17 	ldw	r10,636(sp)
  802370:	50c00115 	stw	r3,4(r10)
  802374:	d8c09d17 	ldw	r3,628(sp)
  802378:	d8808f17 	ldw	r2,572(sp)
  80237c:	1c803c15 	stw	r18,240(r3)
  802380:	d9009e17 	ldw	r4,632(sp)
  802384:	00c00044 	movi	r3,1
  802388:	24c00115 	stw	r19,4(r4)
  80238c:	d9408f17 	ldw	r5,572(sp)
  802390:	28ffd51e 	bne	r5,r3,8022e8 <__kernel_rem_pio2+0xb40>
  802394:	dc008d17 	ldw	r16,564(sp)
  802398:	0011883a 	mov	r8,zero
  80239c:	1825883a 	mov	r18,r3
  8023a0:	800490fa 	slli	r2,r16,3
  8023a4:	0013883a 	mov	r9,zero
  8023a8:	16e3883a 	add	r17,r2,sp
  8023ac:	88803c17 	ldw	r2,240(r17)
  8023b0:	88c03d17 	ldw	r3,244(r17)
  8023b4:	480b883a 	mov	r5,r9
  8023b8:	4009883a 	mov	r4,r8
  8023bc:	180f883a 	mov	r7,r3
  8023c0:	100d883a 	mov	r6,r2
  8023c4:	08033980 	call	803398 <__adddf3>
  8023c8:	843fffc4 	addi	r16,r16,-1
  8023cc:	8c7ffe04 	addi	r17,r17,-8
  8023d0:	1011883a 	mov	r8,r2
  8023d4:	1813883a 	mov	r9,r3
  8023d8:	84bff41e 	bne	r16,r18,8023ac <__kernel_rem_pio2+0xc04>
  8023dc:	d9809217 	ldw	r6,584(sp)
  8023e0:	30007a1e 	bne	r6,zero,8025cc <__kernel_rem_pio2+0xe24>
  8023e4:	d9c09717 	ldw	r7,604(sp)
  8023e8:	d8803c17 	ldw	r2,240(sp)
  8023ec:	d9003e17 	ldw	r4,248(sp)
  8023f0:	3a400515 	stw	r9,20(r7)
  8023f4:	d8c03d17 	ldw	r3,244(sp)
  8023f8:	d9403f17 	ldw	r5,252(sp)
  8023fc:	3a000415 	stw	r8,16(r7)
  802400:	38c00115 	stw	r3,4(r7)
  802404:	39400315 	stw	r5,12(r7)
  802408:	38800015 	stw	r2,0(r7)
  80240c:	39000215 	stw	r4,8(r7)
  802410:	003f2906 	br	8020b8 <__kernel_rem_pio2+0x910>
  802414:	183f281e 	bne	r3,zero,8020b8 <__kernel_rem_pio2+0x910>
  802418:	d9408d17 	ldw	r5,564(sp)
  80241c:	28008016 	blt	r5,zero,802620 <__kernel_rem_pio2+0xe78>
  802420:	dc008d17 	ldw	r16,564(sp)
  802424:	000d883a 	mov	r6,zero
  802428:	000f883a 	mov	r7,zero
  80242c:	800490fa 	slli	r2,r16,3
  802430:	04bfffc4 	movi	r18,-1
  802434:	16e3883a 	add	r17,r2,sp
  802438:	88803c17 	ldw	r2,240(r17)
  80243c:	88c03d17 	ldw	r3,244(r17)
  802440:	380b883a 	mov	r5,r7
  802444:	3009883a 	mov	r4,r6
  802448:	180f883a 	mov	r7,r3
  80244c:	100d883a 	mov	r6,r2
  802450:	08033980 	call	803398 <__adddf3>
  802454:	843fffc4 	addi	r16,r16,-1
  802458:	8c7ffe04 	addi	r17,r17,-8
  80245c:	100d883a 	mov	r6,r2
  802460:	180f883a 	mov	r7,r3
  802464:	84bff41e 	bne	r16,r18,802438 <__kernel_rem_pio2+0xc90>
  802468:	da809217 	ldw	r10,584(sp)
  80246c:	50000226 	beq	r10,zero,802478 <__kernel_rem_pio2+0xcd0>
  802470:	38e0003c 	xorhi	r3,r7,32768
  802474:	180f883a 	mov	r7,r3
  802478:	d8809717 	ldw	r2,604(sp)
  80247c:	11c00115 	stw	r7,4(r2)
  802480:	11800015 	stw	r6,0(r2)
  802484:	003f0c06 	br	8020b8 <__kernel_rem_pio2+0x910>
  802488:	d8008c15 	stw	zero,560(sp)
  80248c:	003ce406 	br	801820 <__kernel_rem_pio2+0x78>
  802490:	d9c09317 	ldw	r7,588(sp)
  802494:	880b883a 	mov	r5,r17
  802498:	8009883a 	mov	r4,r16
  80249c:	01cdc83a 	sub	r6,zero,r7
  8024a0:	080295c0 	call	80295c <scalbn>
  8024a4:	0011883a 	mov	r8,zero
  8024a8:	02505c34 	movhi	r9,16752
  8024ac:	480f883a 	mov	r7,r9
  8024b0:	1009883a 	mov	r4,r2
  8024b4:	180b883a 	mov	r5,r3
  8024b8:	400d883a 	mov	r6,r8
  8024bc:	102d883a 	mov	r22,r2
  8024c0:	182f883a 	mov	r23,r3
  8024c4:	08038e00 	call	8038e0 <__gedf2>
  8024c8:	10003716 	blt	r2,zero,8025a8 <__kernel_rem_pio2+0xe00>
  8024cc:	0005883a 	mov	r2,zero
  8024d0:	00cf9c34 	movhi	r3,15984
  8024d4:	180f883a 	mov	r7,r3
  8024d8:	100d883a 	mov	r6,r2
  8024dc:	b009883a 	mov	r4,r22
  8024e0:	b80b883a 	mov	r5,r23
  8024e4:	080340c0 	call	80340c <__muldf3>
  8024e8:	180b883a 	mov	r5,r3
  8024ec:	1009883a 	mov	r4,r2
  8024f0:	0803a600 	call	803a60 <__fixdfsi>
  8024f4:	1009883a 	mov	r4,r2
  8024f8:	08039680 	call	803968 <__floatsidf>
  8024fc:	da808d17 	ldw	r10,564(sp)
  802500:	1023883a 	mov	r17,r2
  802504:	1825883a 	mov	r18,r3
  802508:	0005883a 	mov	r2,zero
  80250c:	00f05c34 	movhi	r3,49520
  802510:	180f883a 	mov	r7,r3
  802514:	8809883a 	mov	r4,r17
  802518:	900b883a 	mov	r5,r18
  80251c:	100d883a 	mov	r6,r2
  802520:	52ab883a 	add	r21,r10,r10
  802524:	080340c0 	call	80340c <__muldf3>
  802528:	180f883a 	mov	r7,r3
  80252c:	b80b883a 	mov	r5,r23
  802530:	100d883a 	mov	r6,r2
  802534:	b009883a 	mov	r4,r22
  802538:	08033980 	call	803398 <__adddf3>
  80253c:	100d883a 	mov	r6,r2
  802540:	d8808d17 	ldw	r2,564(sp)
  802544:	180b883a 	mov	r5,r3
  802548:	3009883a 	mov	r4,r6
  80254c:	10800044 	addi	r2,r2,1
  802550:	ad6b883a 	add	r21,r21,r21
  802554:	d8808d15 	stw	r2,564(sp)
  802558:	0803a600 	call	803a60 <__fixdfsi>
  80255c:	d8c08d17 	ldw	r3,564(sp)
  802560:	aeeb883a 	add	r21,r21,sp
  802564:	8809883a 	mov	r4,r17
  802568:	900b883a 	mov	r5,r18
  80256c:	a8800015 	stw	r2,0(r21)
  802570:	18e1883a 	add	r16,r3,r3
  802574:	0803a600 	call	803a60 <__fixdfsi>
  802578:	d9009317 	ldw	r4,588(sp)
  80257c:	8421883a 	add	r16,r16,r16
  802580:	86e1883a 	add	r16,r16,sp
  802584:	21000604 	addi	r4,r4,24
  802588:	d9009315 	stw	r4,588(sp)
  80258c:	80800015 	stw	r2,0(r16)
  802590:	003e3a06 	br	801e7c <__kernel_rem_pio2+0x6d4>
  802594:	4009883a 	mov	r4,r8
  802598:	4960003c 	xorhi	r5,r9,32768
  80259c:	003ea406 	br	802030 <__kernel_rem_pio2+0x888>
  8025a0:	d9808d15 	stw	r6,564(sp)
  8025a4:	003e3506 	br	801e7c <__kernel_rem_pio2+0x6d4>
  8025a8:	d9408d17 	ldw	r5,564(sp)
  8025ac:	b009883a 	mov	r4,r22
  8025b0:	2961883a 	add	r16,r5,r5
  8025b4:	8421883a 	add	r16,r16,r16
  8025b8:	b80b883a 	mov	r5,r23
  8025bc:	86e1883a 	add	r16,r16,sp
  8025c0:	0803a600 	call	803a60 <__fixdfsi>
  8025c4:	80800015 	stw	r2,0(r16)
  8025c8:	003e2c06 	br	801e7c <__kernel_rem_pio2+0x6d4>
  8025cc:	d8c03d17 	ldw	r3,244(sp)
  8025d0:	d9403f17 	ldw	r5,252(sp)
  8025d4:	da809717 	ldw	r10,604(sp)
  8025d8:	d8803c17 	ldw	r2,240(sp)
  8025dc:	d9003e17 	ldw	r4,248(sp)
  8025e0:	49e0003c 	xorhi	r7,r9,32768
  8025e4:	51c00515 	stw	r7,20(r10)
  8025e8:	19a0003c 	xorhi	r6,r3,32768
  8025ec:	29e0003c 	xorhi	r7,r5,32768
  8025f0:	51800115 	stw	r6,4(r10)
  8025f4:	51c00315 	stw	r7,12(r10)
  8025f8:	50800015 	stw	r2,0(r10)
  8025fc:	51000215 	stw	r4,8(r10)
  802600:	52000415 	stw	r8,16(r10)
  802604:	003eac06 	br	8020b8 <__kernel_rem_pio2+0x910>
  802608:	0011883a 	mov	r8,zero
  80260c:	0013883a 	mov	r9,zero
  802610:	003e8306 	br	802020 <__kernel_rem_pio2+0x878>
  802614:	0011883a 	mov	r8,zero
  802618:	0013883a 	mov	r9,zero
  80261c:	003f6f06 	br	8023dc <__kernel_rem_pio2+0xc34>
  802620:	000d883a 	mov	r6,zero
  802624:	000f883a 	mov	r7,zero
  802628:	003f8f06 	br	802468 <__kernel_rem_pio2+0xcc0>

0080262c <__kernel_sin>:
  80262c:	00a00034 	movhi	r2,32768
  802630:	10bfffc4 	addi	r2,r2,-1
  802634:	deffef04 	addi	sp,sp,-68
  802638:	1144703a 	and	r2,r2,r5
  80263c:	00cf9034 	movhi	r3,15936
  802640:	18ffffc4 	addi	r3,r3,-1
  802644:	dd400d15 	stw	r21,52(sp)
  802648:	dd000c15 	stw	r20,48(sp)
  80264c:	dfc01015 	stw	ra,64(sp)
  802650:	ddc00f15 	stw	r23,60(sp)
  802654:	dd800e15 	stw	r22,56(sp)
  802658:	dcc00b15 	stw	r19,44(sp)
  80265c:	dc800a15 	stw	r18,40(sp)
  802660:	dc400915 	stw	r17,36(sp)
  802664:	dc000815 	stw	r16,32(sp)
  802668:	2029883a 	mov	r20,r4
  80266c:	282b883a 	mov	r21,r5
  802670:	d9800415 	stw	r6,16(sp)
  802674:	d9c00515 	stw	r7,20(sp)
  802678:	18800216 	blt	r3,r2,802684 <__kernel_sin+0x58>
  80267c:	0803a600 	call	803a60 <__fixdfsi>
  802680:	10008826 	beq	r2,zero,8028a4 <__kernel_sin+0x278>
  802684:	a009883a 	mov	r4,r20
  802688:	a80b883a 	mov	r5,r21
  80268c:	a00d883a 	mov	r6,r20
  802690:	a80f883a 	mov	r7,r21
  802694:	080340c0 	call	80340c <__muldf3>
  802698:	102d883a 	mov	r22,r2
  80269c:	a009883a 	mov	r4,r20
  8026a0:	a80b883a 	mov	r5,r21
  8026a4:	b00d883a 	mov	r6,r22
  8026a8:	180f883a 	mov	r7,r3
  8026ac:	182f883a 	mov	r23,r3
  8026b0:	d8800215 	stw	r2,8(sp)
  8026b4:	d8c00315 	stw	r3,12(sp)
  8026b8:	080340c0 	call	80340c <__muldf3>
  8026bc:	d9000217 	ldw	r4,8(sp)
  8026c0:	0216b434 	movhi	r8,23248
  8026c4:	42355f04 	addi	r8,r8,-10884
  8026c8:	024f79b4 	movhi	r9,15846
  8026cc:	4a764e84 	addi	r9,r9,-9926
  8026d0:	480f883a 	mov	r7,r9
  8026d4:	400d883a 	mov	r6,r8
  8026d8:	b80b883a 	mov	r5,r23
  8026dc:	d8800615 	stw	r2,24(sp)
  8026e0:	d8c00715 	stw	r3,28(sp)
  8026e4:	080340c0 	call	80340c <__muldf3>
  8026e8:	02228b34 	movhi	r8,35372
  8026ec:	42273ac4 	addi	r8,r8,-25365
  8026f0:	024f96f4 	movhi	r9,15963
  8026f4:	4a797984 	addi	r9,r9,-6682
  8026f8:	480f883a 	mov	r7,r9
  8026fc:	400d883a 	mov	r6,r8
  802700:	180b883a 	mov	r5,r3
  802704:	1009883a 	mov	r4,r2
  802708:	08033180 	call	803318 <__subdf3>
  80270c:	d9000217 	ldw	r4,8(sp)
  802710:	180f883a 	mov	r7,r3
  802714:	b80b883a 	mov	r5,r23
  802718:	100d883a 	mov	r6,r2
  80271c:	080340c0 	call	80340c <__muldf3>
  802720:	0215ecb4 	movhi	r8,22450
  802724:	423f9f44 	addi	r8,r8,-387
  802728:	024fb1f4 	movhi	r9,16071
  80272c:	4a4778c4 	addi	r9,r9,7651
  802730:	480f883a 	mov	r7,r9
  802734:	400d883a 	mov	r6,r8
  802738:	180b883a 	mov	r5,r3
  80273c:	1009883a 	mov	r4,r2
  802740:	08033980 	call	803398 <__adddf3>
  802744:	d9000217 	ldw	r4,8(sp)
  802748:	180f883a 	mov	r7,r3
  80274c:	b80b883a 	mov	r5,r23
  802750:	100d883a 	mov	r6,r2
  802754:	080340c0 	call	80340c <__muldf3>
  802758:	02067074 	movhi	r8,6593
  80275c:	42187544 	addi	r8,r8,25045
  802760:	024fcab4 	movhi	r9,16170
  802764:	4a406804 	addi	r9,r9,416
  802768:	480f883a 	mov	r7,r9
  80276c:	400d883a 	mov	r6,r8
  802770:	180b883a 	mov	r5,r3
  802774:	1009883a 	mov	r4,r2
  802778:	08033180 	call	803318 <__subdf3>
  80277c:	d9000217 	ldw	r4,8(sp)
  802780:	180f883a 	mov	r7,r3
  802784:	b80b883a 	mov	r5,r23
  802788:	100d883a 	mov	r6,r2
  80278c:	080340c0 	call	80340c <__muldf3>
  802790:	02044474 	movhi	r8,4369
  802794:	423e2984 	addi	r8,r8,-1882
  802798:	024fe074 	movhi	r9,16257
  80279c:	4a444444 	addi	r9,r9,4369
  8027a0:	180b883a 	mov	r5,r3
  8027a4:	480f883a 	mov	r7,r9
  8027a8:	1009883a 	mov	r4,r2
  8027ac:	400d883a 	mov	r6,r8
  8027b0:	08033980 	call	803398 <__adddf3>
  8027b4:	1021883a 	mov	r16,r2
  8027b8:	d8800617 	ldw	r2,24(sp)
  8027bc:	1823883a 	mov	r17,r3
  8027c0:	d8800015 	stw	r2,0(sp)
  8027c4:	d8800717 	ldw	r2,28(sp)
  8027c8:	d8800115 	stw	r2,4(sp)
  8027cc:	d8801117 	ldw	r2,68(sp)
  8027d0:	10004126 	beq	r2,zero,8028d8 <__kernel_sin+0x2ac>
  8027d4:	d9000417 	ldw	r4,16(sp)
  8027d8:	d9400517 	ldw	r5,20(sp)
  8027dc:	0005883a 	mov	r2,zero
  8027e0:	00cff834 	movhi	r3,16352
  8027e4:	180f883a 	mov	r7,r3
  8027e8:	100d883a 	mov	r6,r2
  8027ec:	080340c0 	call	80340c <__muldf3>
  8027f0:	d9000017 	ldw	r4,0(sp)
  8027f4:	d9400717 	ldw	r5,28(sp)
  8027f8:	800d883a 	mov	r6,r16
  8027fc:	880f883a 	mov	r7,r17
  802800:	1021883a 	mov	r16,r2
  802804:	1823883a 	mov	r17,r3
  802808:	080340c0 	call	80340c <__muldf3>
  80280c:	180f883a 	mov	r7,r3
  802810:	880b883a 	mov	r5,r17
  802814:	8009883a 	mov	r4,r16
  802818:	100d883a 	mov	r6,r2
  80281c:	08033180 	call	803318 <__subdf3>
  802820:	d9000217 	ldw	r4,8(sp)
  802824:	b80b883a 	mov	r5,r23
  802828:	180f883a 	mov	r7,r3
  80282c:	100d883a 	mov	r6,r2
  802830:	080340c0 	call	80340c <__muldf3>
  802834:	d9c00517 	ldw	r7,20(sp)
  802838:	d9800417 	ldw	r6,16(sp)
  80283c:	180b883a 	mov	r5,r3
  802840:	1009883a 	mov	r4,r2
  802844:	08033180 	call	803318 <__subdf3>
  802848:	d9000017 	ldw	r4,0(sp)
  80284c:	d9400717 	ldw	r5,28(sp)
  802850:	02155574 	movhi	r8,21845
  802854:	42155244 	addi	r8,r8,21833
  802858:	024ff174 	movhi	r9,16325
  80285c:	4a555544 	addi	r9,r9,21845
  802860:	480f883a 	mov	r7,r9
  802864:	400d883a 	mov	r6,r8
  802868:	1021883a 	mov	r16,r2
  80286c:	1823883a 	mov	r17,r3
  802870:	080340c0 	call	80340c <__muldf3>
  802874:	180f883a 	mov	r7,r3
  802878:	880b883a 	mov	r5,r17
  80287c:	8009883a 	mov	r4,r16
  802880:	100d883a 	mov	r6,r2
  802884:	08033980 	call	803398 <__adddf3>
  802888:	180f883a 	mov	r7,r3
  80288c:	a80b883a 	mov	r5,r21
  802890:	a009883a 	mov	r4,r20
  802894:	100d883a 	mov	r6,r2
  802898:	08033180 	call	803318 <__subdf3>
  80289c:	1029883a 	mov	r20,r2
  8028a0:	182b883a 	mov	r21,r3
  8028a4:	a005883a 	mov	r2,r20
  8028a8:	a807883a 	mov	r3,r21
  8028ac:	dfc01017 	ldw	ra,64(sp)
  8028b0:	ddc00f17 	ldw	r23,60(sp)
  8028b4:	dd800e17 	ldw	r22,56(sp)
  8028b8:	dd400d17 	ldw	r21,52(sp)
  8028bc:	dd000c17 	ldw	r20,48(sp)
  8028c0:	dcc00b17 	ldw	r19,44(sp)
  8028c4:	dc800a17 	ldw	r18,40(sp)
  8028c8:	dc400917 	ldw	r17,36(sp)
  8028cc:	dc000817 	ldw	r16,32(sp)
  8028d0:	dec01104 	addi	sp,sp,68
  8028d4:	f800283a 	ret
  8028d8:	d9000217 	ldw	r4,8(sp)
  8028dc:	b80b883a 	mov	r5,r23
  8028e0:	800d883a 	mov	r6,r16
  8028e4:	180f883a 	mov	r7,r3
  8028e8:	080340c0 	call	80340c <__muldf3>
  8028ec:	02155574 	movhi	r8,21845
  8028f0:	42155244 	addi	r8,r8,21833
  8028f4:	024ff174 	movhi	r9,16325
  8028f8:	4a555544 	addi	r9,r9,21845
  8028fc:	480f883a 	mov	r7,r9
  802900:	400d883a 	mov	r6,r8
  802904:	180b883a 	mov	r5,r3
  802908:	1009883a 	mov	r4,r2
  80290c:	08033180 	call	803318 <__subdf3>
  802910:	d9000017 	ldw	r4,0(sp)
  802914:	d9400717 	ldw	r5,28(sp)
  802918:	180f883a 	mov	r7,r3
  80291c:	100d883a 	mov	r6,r2
  802920:	080340c0 	call	80340c <__muldf3>
  802924:	180f883a 	mov	r7,r3
  802928:	a80b883a 	mov	r5,r21
  80292c:	a009883a 	mov	r4,r20
  802930:	100d883a 	mov	r6,r2
  802934:	08033980 	call	803398 <__adddf3>
  802938:	1029883a 	mov	r20,r2
  80293c:	182b883a 	mov	r21,r3
  802940:	003fd806 	br	8028a4 <__kernel_sin+0x278>

00802944 <fabs>:
  802944:	01e00034 	movhi	r7,32768
  802948:	39ffffc4 	addi	r7,r7,-1
  80294c:	394e703a 	and	r7,r7,r5
  802950:	2005883a 	mov	r2,r4
  802954:	3807883a 	mov	r3,r7
  802958:	f800283a 	ret

0080295c <scalbn>:
  80295c:	2011883a 	mov	r8,r4
  802960:	291ffc2c 	andhi	r4,r5,32752
  802964:	2009d53a 	srai	r4,r4,20
  802968:	defffd04 	addi	sp,sp,-12
  80296c:	dc000015 	stw	r16,0(sp)
  802970:	dfc00215 	stw	ra,8(sp)
  802974:	dc400115 	stw	r17,4(sp)
  802978:	2813883a 	mov	r9,r5
  80297c:	2815883a 	mov	r10,r5
  802980:	3021883a 	mov	r16,r6
  802984:	2000281e 	bne	r4,zero,802a28 <scalbn+0xcc>
  802988:	00a00034 	movhi	r2,32768
  80298c:	10bfffc4 	addi	r2,r2,-1
  802990:	2884703a 	and	r2,r5,r2
  802994:	4084b03a 	or	r2,r8,r2
  802998:	10001826 	beq	r2,zero,8029fc <scalbn+0xa0>
  80299c:	0005883a 	mov	r2,zero
  8029a0:	00d0d434 	movhi	r3,17232
  8029a4:	4009883a 	mov	r4,r8
  8029a8:	100d883a 	mov	r6,r2
  8029ac:	180f883a 	mov	r7,r3
  8029b0:	080340c0 	call	80340c <__muldf3>
  8029b4:	100b883a 	mov	r5,r2
  8029b8:	1011883a 	mov	r8,r2
  8029bc:	00bffff4 	movhi	r2,65535
  8029c0:	108f2c04 	addi	r2,r2,15536
  8029c4:	180d883a 	mov	r6,r3
  8029c8:	1813883a 	mov	r9,r3
  8029cc:	8080120e 	bge	r16,r2,802a18 <scalbn+0xbc>
  8029d0:	00b0be74 	movhi	r2,49913
  8029d4:	10bcd644 	addi	r2,r2,-3239
  8029d8:	00c06974 	movhi	r3,421
  8029dc:	18db87c4 	addi	r3,r3,28191
  8029e0:	2809883a 	mov	r4,r5
  8029e4:	180f883a 	mov	r7,r3
  8029e8:	300b883a 	mov	r5,r6
  8029ec:	100d883a 	mov	r6,r2
  8029f0:	080340c0 	call	80340c <__muldf3>
  8029f4:	1011883a 	mov	r8,r2
  8029f8:	1813883a 	mov	r9,r3
  8029fc:	4005883a 	mov	r2,r8
  802a00:	4807883a 	mov	r3,r9
  802a04:	dfc00217 	ldw	ra,8(sp)
  802a08:	dc400117 	ldw	r17,4(sp)
  802a0c:	dc000017 	ldw	r16,0(sp)
  802a10:	dec00304 	addi	sp,sp,12
  802a14:	f800283a 	ret
  802a18:	189ffc2c 	andhi	r2,r3,32752
  802a1c:	1005d53a 	srai	r2,r2,20
  802a20:	1815883a 	mov	r10,r3
  802a24:	113ff284 	addi	r4,r2,-54
  802a28:	0081ffc4 	movi	r2,2047
  802a2c:	20801126 	beq	r4,r2,802a74 <scalbn+0x118>
  802a30:	2409883a 	add	r4,r4,r16
  802a34:	0081ff84 	movi	r2,2046
  802a38:	11001c16 	blt	r2,r4,802aac <scalbn+0x150>
  802a3c:	0100290e 	bge	zero,r4,802ae4 <scalbn+0x188>
  802a40:	200a953a 	slli	r5,r4,20
  802a44:	01200434 	movhi	r4,32784
  802a48:	213fffc4 	addi	r4,r4,-1
  802a4c:	5108703a 	and	r4,r10,r4
  802a50:	2148b03a 	or	r4,r4,r5
  802a54:	2013883a 	mov	r9,r4
  802a58:	4005883a 	mov	r2,r8
  802a5c:	4807883a 	mov	r3,r9
  802a60:	dfc00217 	ldw	ra,8(sp)
  802a64:	dc400117 	ldw	r17,4(sp)
  802a68:	dc000017 	ldw	r16,0(sp)
  802a6c:	dec00304 	addi	sp,sp,12
  802a70:	f800283a 	ret
  802a74:	480f883a 	mov	r7,r9
  802a78:	4009883a 	mov	r4,r8
  802a7c:	480b883a 	mov	r5,r9
  802a80:	400d883a 	mov	r6,r8
  802a84:	08033980 	call	803398 <__adddf3>
  802a88:	1011883a 	mov	r8,r2
  802a8c:	1813883a 	mov	r9,r3
  802a90:	4005883a 	mov	r2,r8
  802a94:	4807883a 	mov	r3,r9
  802a98:	dfc00217 	ldw	ra,8(sp)
  802a9c:	dc400117 	ldw	r17,4(sp)
  802aa0:	dc000017 	ldw	r16,0(sp)
  802aa4:	dec00304 	addi	sp,sp,12
  802aa8:	f800283a 	ret
  802aac:	04220034 	movhi	r16,34816
  802ab0:	841d6704 	addi	r16,r16,30108
  802ab4:	045f8e34 	movhi	r17,32312
  802ab8:	8c790f04 	addi	r17,r17,-7108
  802abc:	480f883a 	mov	r7,r9
  802ac0:	400d883a 	mov	r6,r8
  802ac4:	8009883a 	mov	r4,r16
  802ac8:	880b883a 	mov	r5,r17
  802acc:	0802b3c0 	call	802b3c <copysign>
  802ad0:	180b883a 	mov	r5,r3
  802ad4:	800d883a 	mov	r6,r16
  802ad8:	880f883a 	mov	r7,r17
  802adc:	1009883a 	mov	r4,r2
  802ae0:	003fc306 	br	8029f0 <scalbn+0x94>
  802ae4:	00bff284 	movi	r2,-54
  802ae8:	11000716 	blt	r2,r4,802b08 <scalbn+0x1ac>
  802aec:	00b0d414 	movui	r2,50000
  802af0:	143fee16 	blt	r2,r16,802aac <scalbn+0x150>
  802af4:	0430be74 	movhi	r16,49913
  802af8:	843cd644 	addi	r16,r16,-3239
  802afc:	04406974 	movhi	r17,421
  802b00:	8c5b87c4 	addi	r17,r17,28191
  802b04:	003fed06 	br	802abc <scalbn+0x160>
  802b08:	21000d84 	addi	r4,r4,54
  802b0c:	2008953a 	slli	r4,r4,20
  802b10:	01e00434 	movhi	r7,32784
  802b14:	39ffffc4 	addi	r7,r7,-1
  802b18:	51ce703a 	and	r7,r10,r7
  802b1c:	390eb03a 	or	r7,r7,r4
  802b20:	024f2434 	movhi	r9,15504
  802b24:	4009883a 	mov	r4,r8
  802b28:	0011883a 	mov	r8,zero
  802b2c:	380b883a 	mov	r5,r7
  802b30:	400d883a 	mov	r6,r8
  802b34:	480f883a 	mov	r7,r9
  802b38:	003fad06 	br	8029f0 <scalbn+0x94>

00802b3c <copysign>:
  802b3c:	3813883a 	mov	r9,r7
  802b40:	01e00034 	movhi	r7,32768
  802b44:	39ffffc4 	addi	r7,r7,-1
  802b48:	394e703a 	and	r7,r7,r5
  802b4c:	4aa0002c 	andhi	r10,r9,32768
  802b50:	3a8eb03a 	or	r7,r7,r10
  802b54:	2005883a 	mov	r2,r4
  802b58:	3807883a 	mov	r3,r7
  802b5c:	f800283a 	ret

00802b60 <__mulsf3>:
  802b60:	deffef04 	addi	sp,sp,-68
  802b64:	dc400f15 	stw	r17,60(sp)
  802b68:	dc400204 	addi	r17,sp,8
  802b6c:	dc000e15 	stw	r16,56(sp)
  802b70:	d9000015 	stw	r4,0(sp)
  802b74:	d9400115 	stw	r5,4(sp)
  802b78:	d809883a 	mov	r4,sp
  802b7c:	880b883a 	mov	r5,r17
  802b80:	dc000604 	addi	r16,sp,24
  802b84:	dfc01015 	stw	ra,64(sp)
  802b88:	08042000 	call	804200 <__unpack_f>
  802b8c:	d9000104 	addi	r4,sp,4
  802b90:	800b883a 	mov	r5,r16
  802b94:	08042000 	call	804200 <__unpack_f>
  802b98:	d9000217 	ldw	r4,8(sp)
  802b9c:	00800044 	movi	r2,1
  802ba0:	01400104 	movi	r5,4
  802ba4:	1100142e 	bgeu	r2,r4,802bf8 <__mulsf3+0x98>
  802ba8:	d8c00617 	ldw	r3,24(sp)
  802bac:	10c0052e 	bgeu	r2,r3,802bc4 <__mulsf3+0x64>
  802bb0:	21400f26 	beq	r4,r5,802bf0 <__mulsf3+0x90>
  802bb4:	19405d26 	beq	r3,r5,802d2c <__mulsf3+0x1cc>
  802bb8:	00800084 	movi	r2,2
  802bbc:	20800e26 	beq	r4,r2,802bf8 <__mulsf3+0x98>
  802bc0:	1880181e 	bne	r3,r2,802c24 <__mulsf3+0xc4>
  802bc4:	d8c00717 	ldw	r3,28(sp)
  802bc8:	d8800317 	ldw	r2,12(sp)
  802bcc:	8009883a 	mov	r4,r16
  802bd0:	10c4c03a 	cmpne	r2,r2,r3
  802bd4:	d8800715 	stw	r2,28(sp)
  802bd8:	08040a00 	call	8040a0 <__pack_f>
  802bdc:	dfc01017 	ldw	ra,64(sp)
  802be0:	dc400f17 	ldw	r17,60(sp)
  802be4:	dc000e17 	ldw	r16,56(sp)
  802be8:	dec01104 	addi	sp,sp,68
  802bec:	f800283a 	ret
  802bf0:	00800084 	movi	r2,2
  802bf4:	18804f26 	beq	r3,r2,802d34 <__mulsf3+0x1d4>
  802bf8:	d8800317 	ldw	r2,12(sp)
  802bfc:	d8c00717 	ldw	r3,28(sp)
  802c00:	8809883a 	mov	r4,r17
  802c04:	10c4c03a 	cmpne	r2,r2,r3
  802c08:	d8800315 	stw	r2,12(sp)
  802c0c:	08040a00 	call	8040a0 <__pack_f>
  802c10:	dfc01017 	ldw	ra,64(sp)
  802c14:	dc400f17 	ldw	r17,60(sp)
  802c18:	dc000e17 	ldw	r16,56(sp)
  802c1c:	dec01104 	addi	sp,sp,68
  802c20:	f800283a 	ret
  802c24:	d8800517 	ldw	r2,20(sp)
  802c28:	da000917 	ldw	r8,36(sp)
  802c2c:	0013883a 	mov	r9,zero
  802c30:	0007883a 	mov	r3,zero
  802c34:	480f883a 	mov	r7,r9
  802c38:	180b883a 	mov	r5,r3
  802c3c:	400d883a 	mov	r6,r8
  802c40:	1009883a 	mov	r4,r2
  802c44:	0803efc0 	call	803efc <__muldi3>
  802c48:	da800417 	ldw	r10,16(sp)
  802c4c:	d9800817 	ldw	r6,32(sp)
  802c50:	da400317 	ldw	r9,12(sp)
  802c54:	52800084 	addi	r10,r10,2
  802c58:	3295883a 	add	r10,r6,r10
  802c5c:	d9800717 	ldw	r6,28(sp)
  802c60:	180b883a 	mov	r5,r3
  802c64:	180f883a 	mov	r7,r3
  802c68:	4992c03a 	cmpne	r9,r9,r6
  802c6c:	da400b15 	stw	r9,44(sp)
  802c70:	1007883a 	mov	r3,r2
  802c74:	da800c15 	stw	r10,48(sp)
  802c78:	2800070e 	bge	r5,zero,802c98 <__mulsf3+0x138>
  802c7c:	2880004c 	andi	r2,r5,1
  802c80:	1005003a 	cmpeq	r2,r2,zero
  802c84:	500d883a 	mov	r6,r10
  802c88:	10001e26 	beq	r2,zero,802d04 <__mulsf3+0x1a4>
  802c8c:	380ed07a 	srli	r7,r7,1
  802c90:	31800044 	addi	r6,r6,1
  802c94:	d9800c15 	stw	r6,48(sp)
  802c98:	01100034 	movhi	r4,16384
  802c9c:	213fffc4 	addi	r4,r4,-1
  802ca0:	21c00b36 	bltu	r4,r7,802cd0 <__mulsf3+0x170>
  802ca4:	d8800c17 	ldw	r2,48(sp)
  802ca8:	00000206 	br	802cb4 <__mulsf3+0x154>
  802cac:	18c7883a 	add	r3,r3,r3
  802cb0:	21c00636 	bltu	r4,r7,802ccc <__mulsf3+0x16c>
  802cb4:	10bfffc4 	addi	r2,r2,-1
  802cb8:	39cf883a 	add	r7,r7,r7
  802cbc:	183ffb0e 	bge	r3,zero,802cac <__mulsf3+0x14c>
  802cc0:	39c00054 	ori	r7,r7,1
  802cc4:	18c7883a 	add	r3,r3,r3
  802cc8:	21fffa2e 	bgeu	r4,r7,802cb4 <__mulsf3+0x154>
  802ccc:	d8800c15 	stw	r2,48(sp)
  802cd0:	39001fcc 	andi	r4,r7,127
  802cd4:	00801004 	movi	r2,64
  802cd8:	20800d26 	beq	r4,r2,802d10 <__mulsf3+0x1b0>
  802cdc:	008000c4 	movi	r2,3
  802ce0:	d9000a04 	addi	r4,sp,40
  802ce4:	d9c00d15 	stw	r7,52(sp)
  802ce8:	d8800a15 	stw	r2,40(sp)
  802cec:	08040a00 	call	8040a0 <__pack_f>
  802cf0:	dfc01017 	ldw	ra,64(sp)
  802cf4:	dc400f17 	ldw	r17,60(sp)
  802cf8:	dc000e17 	ldw	r16,56(sp)
  802cfc:	dec01104 	addi	sp,sp,68
  802d00:	f800283a 	ret
  802d04:	1804d07a 	srli	r2,r3,1
  802d08:	10e00034 	orhi	r3,r2,32768
  802d0c:	003fdf06 	br	802c8c <__mulsf3+0x12c>
  802d10:	3880200c 	andi	r2,r7,128
  802d14:	103ff11e 	bne	r2,zero,802cdc <__mulsf3+0x17c>
  802d18:	183ff026 	beq	r3,zero,802cdc <__mulsf3+0x17c>
  802d1c:	3907883a 	add	r3,r7,r4
  802d20:	00bfe004 	movi	r2,-128
  802d24:	188e703a 	and	r7,r3,r2
  802d28:	003fec06 	br	802cdc <__mulsf3+0x17c>
  802d2c:	00800084 	movi	r2,2
  802d30:	20bfa41e 	bne	r4,r2,802bc4 <__mulsf3+0x64>
  802d34:	01002074 	movhi	r4,129
  802d38:	21024904 	addi	r4,r4,2340
  802d3c:	003fb306 	br	802c0c <__mulsf3+0xac>

00802d40 <__divsf3>:
  802d40:	defff304 	addi	sp,sp,-52
  802d44:	dc400b15 	stw	r17,44(sp)
  802d48:	dc400204 	addi	r17,sp,8
  802d4c:	dc000a15 	stw	r16,40(sp)
  802d50:	d9000015 	stw	r4,0(sp)
  802d54:	d9400115 	stw	r5,4(sp)
  802d58:	d809883a 	mov	r4,sp
  802d5c:	880b883a 	mov	r5,r17
  802d60:	dc000604 	addi	r16,sp,24
  802d64:	dfc00c15 	stw	ra,48(sp)
  802d68:	08042000 	call	804200 <__unpack_f>
  802d6c:	d9000104 	addi	r4,sp,4
  802d70:	800b883a 	mov	r5,r16
  802d74:	08042000 	call	804200 <__unpack_f>
  802d78:	d9000217 	ldw	r4,8(sp)
  802d7c:	00800044 	movi	r2,1
  802d80:	01800104 	movi	r6,4
  802d84:	11000a2e 	bgeu	r2,r4,802db0 <__divsf3+0x70>
  802d88:	d9400617 	ldw	r5,24(sp)
  802d8c:	1140432e 	bgeu	r2,r5,802e9c <__divsf3+0x15c>
  802d90:	d8800317 	ldw	r2,12(sp)
  802d94:	d8c00717 	ldw	r3,28(sp)
  802d98:	10c4f03a 	xor	r2,r2,r3
  802d9c:	d8800315 	stw	r2,12(sp)
  802da0:	21800226 	beq	r4,r6,802dac <__divsf3+0x6c>
  802da4:	00800084 	movi	r2,2
  802da8:	2080101e 	bne	r4,r2,802dec <__divsf3+0xac>
  802dac:	29000726 	beq	r5,r4,802dcc <__divsf3+0x8c>
  802db0:	8809883a 	mov	r4,r17
  802db4:	08040a00 	call	8040a0 <__pack_f>
  802db8:	dfc00c17 	ldw	ra,48(sp)
  802dbc:	dc400b17 	ldw	r17,44(sp)
  802dc0:	dc000a17 	ldw	r16,40(sp)
  802dc4:	dec00d04 	addi	sp,sp,52
  802dc8:	f800283a 	ret
  802dcc:	01002074 	movhi	r4,129
  802dd0:	21024904 	addi	r4,r4,2340
  802dd4:	08040a00 	call	8040a0 <__pack_f>
  802dd8:	dfc00c17 	ldw	ra,48(sp)
  802ddc:	dc400b17 	ldw	r17,44(sp)
  802de0:	dc000a17 	ldw	r16,40(sp)
  802de4:	dec00d04 	addi	sp,sp,52
  802de8:	f800283a 	ret
  802dec:	29802d26 	beq	r5,r6,802ea4 <__divsf3+0x164>
  802df0:	28801a26 	beq	r5,r2,802e5c <__divsf3+0x11c>
  802df4:	d8c00417 	ldw	r3,16(sp)
  802df8:	d8800817 	ldw	r2,32(sp)
  802dfc:	d9000517 	ldw	r4,20(sp)
  802e00:	d9800917 	ldw	r6,36(sp)
  802e04:	1885c83a 	sub	r2,r3,r2
  802e08:	d8800415 	stw	r2,16(sp)
  802e0c:	2180032e 	bgeu	r4,r6,802e1c <__divsf3+0xdc>
  802e10:	10bfffc4 	addi	r2,r2,-1
  802e14:	d8800415 	stw	r2,16(sp)
  802e18:	2109883a 	add	r4,r4,r4
  802e1c:	01500034 	movhi	r5,16384
  802e20:	0007883a 	mov	r3,zero
  802e24:	0005883a 	mov	r2,zero
  802e28:	01c007c4 	movi	r7,31
  802e2c:	10800044 	addi	r2,r2,1
  802e30:	21800236 	bltu	r4,r6,802e3c <__divsf3+0xfc>
  802e34:	1946b03a 	or	r3,r3,r5
  802e38:	2189c83a 	sub	r4,r4,r6
  802e3c:	280ad07a 	srli	r5,r5,1
  802e40:	2109883a 	add	r4,r4,r4
  802e44:	11fff91e 	bne	r2,r7,802e2c <__divsf3+0xec>
  802e48:	19401fcc 	andi	r5,r3,127
  802e4c:	00801004 	movi	r2,64
  802e50:	28800a26 	beq	r5,r2,802e7c <__divsf3+0x13c>
  802e54:	d8c00515 	stw	r3,20(sp)
  802e58:	003fd506 	br	802db0 <__divsf3+0x70>
  802e5c:	8809883a 	mov	r4,r17
  802e60:	d9800215 	stw	r6,8(sp)
  802e64:	08040a00 	call	8040a0 <__pack_f>
  802e68:	dfc00c17 	ldw	ra,48(sp)
  802e6c:	dc400b17 	ldw	r17,44(sp)
  802e70:	dc000a17 	ldw	r16,40(sp)
  802e74:	dec00d04 	addi	sp,sp,52
  802e78:	f800283a 	ret
  802e7c:	1880200c 	andi	r2,r3,128
  802e80:	103ff41e 	bne	r2,zero,802e54 <__divsf3+0x114>
  802e84:	203ff326 	beq	r4,zero,802e54 <__divsf3+0x114>
  802e88:	1947883a 	add	r3,r3,r5
  802e8c:	00bfe004 	movi	r2,-128
  802e90:	1886703a 	and	r3,r3,r2
  802e94:	d8c00515 	stw	r3,20(sp)
  802e98:	003fc506 	br	802db0 <__divsf3+0x70>
  802e9c:	8009883a 	mov	r4,r16
  802ea0:	003fc406 	br	802db4 <__divsf3+0x74>
  802ea4:	8809883a 	mov	r4,r17
  802ea8:	d8000515 	stw	zero,20(sp)
  802eac:	d8000415 	stw	zero,16(sp)
  802eb0:	003fc006 	br	802db4 <__divsf3+0x74>

00802eb4 <__extendsfdf2>:
  802eb4:	defff904 	addi	sp,sp,-28
  802eb8:	d9000115 	stw	r4,4(sp)
  802ebc:	d9400204 	addi	r5,sp,8
  802ec0:	d9000104 	addi	r4,sp,4
  802ec4:	dfc00615 	stw	ra,24(sp)
  802ec8:	08042000 	call	804200 <__unpack_f>
  802ecc:	d9c00517 	ldw	r7,20(sp)
  802ed0:	0011883a 	mov	r8,zero
  802ed4:	400697ba 	slli	r3,r8,30
  802ed8:	3812d0ba 	srli	r9,r7,2
  802edc:	380497ba 	slli	r2,r7,30
  802ee0:	d9000217 	ldw	r4,8(sp)
  802ee4:	d9400317 	ldw	r5,12(sp)
  802ee8:	d9800417 	ldw	r6,16(sp)
  802eec:	48c6b03a 	or	r3,r9,r3
  802ef0:	100f883a 	mov	r7,r2
  802ef4:	d8c00015 	stw	r3,0(sp)
  802ef8:	0803b380 	call	803b38 <__make_dp>
  802efc:	dfc00617 	ldw	ra,24(sp)
  802f00:	dec00704 	addi	sp,sp,28
  802f04:	f800283a 	ret

00802f08 <_fpadd_parts>:
  802f08:	defff804 	addi	sp,sp,-32
  802f0c:	dcc00315 	stw	r19,12(sp)
  802f10:	2027883a 	mov	r19,r4
  802f14:	21000017 	ldw	r4,0(r4)
  802f18:	00c00044 	movi	r3,1
  802f1c:	dd400515 	stw	r21,20(sp)
  802f20:	dd000415 	stw	r20,16(sp)
  802f24:	ddc00715 	stw	r23,28(sp)
  802f28:	dd800615 	stw	r22,24(sp)
  802f2c:	dc800215 	stw	r18,8(sp)
  802f30:	dc400115 	stw	r17,4(sp)
  802f34:	dc000015 	stw	r16,0(sp)
  802f38:	282b883a 	mov	r21,r5
  802f3c:	3029883a 	mov	r20,r6
  802f40:	1900632e 	bgeu	r3,r4,8030d0 <_fpadd_parts+0x1c8>
  802f44:	28800017 	ldw	r2,0(r5)
  802f48:	1880812e 	bgeu	r3,r2,803150 <_fpadd_parts+0x248>
  802f4c:	00c00104 	movi	r3,4
  802f50:	20c0dc26 	beq	r4,r3,8032c4 <_fpadd_parts+0x3bc>
  802f54:	10c07e26 	beq	r2,r3,803150 <_fpadd_parts+0x248>
  802f58:	00c00084 	movi	r3,2
  802f5c:	10c06726 	beq	r2,r3,8030fc <_fpadd_parts+0x1f4>
  802f60:	20c07b26 	beq	r4,r3,803150 <_fpadd_parts+0x248>
  802f64:	9dc00217 	ldw	r23,8(r19)
  802f68:	28c00217 	ldw	r3,8(r5)
  802f6c:	9c400317 	ldw	r17,12(r19)
  802f70:	2bc00317 	ldw	r15,12(r5)
  802f74:	b8cdc83a 	sub	r6,r23,r3
  802f78:	9c800417 	ldw	r18,16(r19)
  802f7c:	2c000417 	ldw	r16,16(r5)
  802f80:	3009883a 	mov	r4,r6
  802f84:	30009716 	blt	r6,zero,8031e4 <_fpadd_parts+0x2dc>
  802f88:	00800fc4 	movi	r2,63
  802f8c:	11806b16 	blt	r2,r6,80313c <_fpadd_parts+0x234>
  802f90:	0100a40e 	bge	zero,r4,803224 <_fpadd_parts+0x31c>
  802f94:	35bff804 	addi	r22,r6,-32
  802f98:	b000bc16 	blt	r22,zero,80328c <_fpadd_parts+0x384>
  802f9c:	8596d83a 	srl	r11,r16,r22
  802fa0:	0019883a 	mov	r12,zero
  802fa4:	0013883a 	mov	r9,zero
  802fa8:	01000044 	movi	r4,1
  802fac:	0015883a 	mov	r10,zero
  802fb0:	b000be16 	blt	r22,zero,8032ac <_fpadd_parts+0x3a4>
  802fb4:	2590983a 	sll	r8,r4,r22
  802fb8:	000f883a 	mov	r7,zero
  802fbc:	00bfffc4 	movi	r2,-1
  802fc0:	3889883a 	add	r4,r7,r2
  802fc4:	408b883a 	add	r5,r8,r2
  802fc8:	21cd803a 	cmpltu	r6,r4,r7
  802fcc:	314b883a 	add	r5,r6,r5
  802fd0:	7904703a 	and	r2,r15,r4
  802fd4:	8146703a 	and	r3,r16,r5
  802fd8:	10c4b03a 	or	r2,r2,r3
  802fdc:	10000226 	beq	r2,zero,802fe8 <_fpadd_parts+0xe0>
  802fe0:	02400044 	movi	r9,1
  802fe4:	0015883a 	mov	r10,zero
  802fe8:	5a5eb03a 	or	r15,r11,r9
  802fec:	62a0b03a 	or	r16,r12,r10
  802ff0:	99400117 	ldw	r5,4(r19)
  802ff4:	a8800117 	ldw	r2,4(r21)
  802ff8:	28806e26 	beq	r5,r2,8031b4 <_fpadd_parts+0x2ac>
  802ffc:	28006626 	beq	r5,zero,803198 <_fpadd_parts+0x290>
  803000:	7c45c83a 	sub	r2,r15,r17
  803004:	7889803a 	cmpltu	r4,r15,r2
  803008:	8487c83a 	sub	r3,r16,r18
  80300c:	1909c83a 	sub	r4,r3,r4
  803010:	100d883a 	mov	r6,r2
  803014:	200f883a 	mov	r7,r4
  803018:	38007716 	blt	r7,zero,8031f8 <_fpadd_parts+0x2f0>
  80301c:	a5c00215 	stw	r23,8(r20)
  803020:	a1c00415 	stw	r7,16(r20)
  803024:	a0000115 	stw	zero,4(r20)
  803028:	a1800315 	stw	r6,12(r20)
  80302c:	a2000317 	ldw	r8,12(r20)
  803030:	a2400417 	ldw	r9,16(r20)
  803034:	00bfffc4 	movi	r2,-1
  803038:	408b883a 	add	r5,r8,r2
  80303c:	2a09803a 	cmpltu	r4,r5,r8
  803040:	488d883a 	add	r6,r9,r2
  803044:	01c40034 	movhi	r7,4096
  803048:	39ffffc4 	addi	r7,r7,-1
  80304c:	218d883a 	add	r6,r4,r6
  803050:	39801736 	bltu	r7,r6,8030b0 <_fpadd_parts+0x1a8>
  803054:	31c06526 	beq	r6,r7,8031ec <_fpadd_parts+0x2e4>
  803058:	a3000217 	ldw	r12,8(r20)
  80305c:	4209883a 	add	r4,r8,r8
  803060:	00bfffc4 	movi	r2,-1
  803064:	220f803a 	cmpltu	r7,r4,r8
  803068:	4a4b883a 	add	r5,r9,r9
  80306c:	394f883a 	add	r7,r7,r5
  803070:	2095883a 	add	r10,r4,r2
  803074:	3897883a 	add	r11,r7,r2
  803078:	510d803a 	cmpltu	r6,r10,r4
  80307c:	6099883a 	add	r12,r12,r2
  803080:	32d7883a 	add	r11,r6,r11
  803084:	00840034 	movhi	r2,4096
  803088:	10bfffc4 	addi	r2,r2,-1
  80308c:	2011883a 	mov	r8,r4
  803090:	3813883a 	mov	r9,r7
  803094:	a1000315 	stw	r4,12(r20)
  803098:	a1c00415 	stw	r7,16(r20)
  80309c:	a3000215 	stw	r12,8(r20)
  8030a0:	12c00336 	bltu	r2,r11,8030b0 <_fpadd_parts+0x1a8>
  8030a4:	58bfed1e 	bne	r11,r2,80305c <_fpadd_parts+0x154>
  8030a8:	00bfff84 	movi	r2,-2
  8030ac:	12bfeb2e 	bgeu	r2,r10,80305c <_fpadd_parts+0x154>
  8030b0:	a2800417 	ldw	r10,16(r20)
  8030b4:	008000c4 	movi	r2,3
  8030b8:	00c80034 	movhi	r3,8192
  8030bc:	18ffffc4 	addi	r3,r3,-1
  8030c0:	a2400317 	ldw	r9,12(r20)
  8030c4:	a0800015 	stw	r2,0(r20)
  8030c8:	1a802336 	bltu	r3,r10,803158 <_fpadd_parts+0x250>
  8030cc:	a027883a 	mov	r19,r20
  8030d0:	9805883a 	mov	r2,r19
  8030d4:	ddc00717 	ldw	r23,28(sp)
  8030d8:	dd800617 	ldw	r22,24(sp)
  8030dc:	dd400517 	ldw	r21,20(sp)
  8030e0:	dd000417 	ldw	r20,16(sp)
  8030e4:	dcc00317 	ldw	r19,12(sp)
  8030e8:	dc800217 	ldw	r18,8(sp)
  8030ec:	dc400117 	ldw	r17,4(sp)
  8030f0:	dc000017 	ldw	r16,0(sp)
  8030f4:	dec00804 	addi	sp,sp,32
  8030f8:	f800283a 	ret
  8030fc:	20fff41e 	bne	r4,r3,8030d0 <_fpadd_parts+0x1c8>
  803100:	31000015 	stw	r4,0(r6)
  803104:	98800117 	ldw	r2,4(r19)
  803108:	30800115 	stw	r2,4(r6)
  80310c:	98c00217 	ldw	r3,8(r19)
  803110:	30c00215 	stw	r3,8(r6)
  803114:	98800317 	ldw	r2,12(r19)
  803118:	30800315 	stw	r2,12(r6)
  80311c:	98c00417 	ldw	r3,16(r19)
  803120:	30c00415 	stw	r3,16(r6)
  803124:	98800117 	ldw	r2,4(r19)
  803128:	28c00117 	ldw	r3,4(r5)
  80312c:	3027883a 	mov	r19,r6
  803130:	10c4703a 	and	r2,r2,r3
  803134:	30800115 	stw	r2,4(r6)
  803138:	003fe506 	br	8030d0 <_fpadd_parts+0x1c8>
  80313c:	1dc02616 	blt	r3,r23,8031d8 <_fpadd_parts+0x2d0>
  803140:	0023883a 	mov	r17,zero
  803144:	182f883a 	mov	r23,r3
  803148:	0025883a 	mov	r18,zero
  80314c:	003fa806 	br	802ff0 <_fpadd_parts+0xe8>
  803150:	a827883a 	mov	r19,r21
  803154:	003fde06 	br	8030d0 <_fpadd_parts+0x1c8>
  803158:	01800044 	movi	r6,1
  80315c:	500497fa 	slli	r2,r10,31
  803160:	4808d07a 	srli	r4,r9,1
  803164:	518ad83a 	srl	r5,r10,r6
  803168:	a2000217 	ldw	r8,8(r20)
  80316c:	1108b03a 	or	r4,r2,r4
  803170:	0007883a 	mov	r3,zero
  803174:	4984703a 	and	r2,r9,r6
  803178:	208cb03a 	or	r6,r4,r2
  80317c:	28ceb03a 	or	r7,r5,r3
  803180:	42000044 	addi	r8,r8,1
  803184:	a027883a 	mov	r19,r20
  803188:	a1c00415 	stw	r7,16(r20)
  80318c:	a2000215 	stw	r8,8(r20)
  803190:	a1800315 	stw	r6,12(r20)
  803194:	003fce06 	br	8030d0 <_fpadd_parts+0x1c8>
  803198:	8bc5c83a 	sub	r2,r17,r15
  80319c:	8889803a 	cmpltu	r4,r17,r2
  8031a0:	9407c83a 	sub	r3,r18,r16
  8031a4:	1909c83a 	sub	r4,r3,r4
  8031a8:	100d883a 	mov	r6,r2
  8031ac:	200f883a 	mov	r7,r4
  8031b0:	003f9906 	br	803018 <_fpadd_parts+0x110>
  8031b4:	7c45883a 	add	r2,r15,r17
  8031b8:	13c9803a 	cmpltu	r4,r2,r15
  8031bc:	8487883a 	add	r3,r16,r18
  8031c0:	20c9883a 	add	r4,r4,r3
  8031c4:	a1400115 	stw	r5,4(r20)
  8031c8:	a5c00215 	stw	r23,8(r20)
  8031cc:	a0800315 	stw	r2,12(r20)
  8031d0:	a1000415 	stw	r4,16(r20)
  8031d4:	003fb606 	br	8030b0 <_fpadd_parts+0x1a8>
  8031d8:	001f883a 	mov	r15,zero
  8031dc:	0021883a 	mov	r16,zero
  8031e0:	003f8306 	br	802ff0 <_fpadd_parts+0xe8>
  8031e4:	018dc83a 	sub	r6,zero,r6
  8031e8:	003f6706 	br	802f88 <_fpadd_parts+0x80>
  8031ec:	00bfff84 	movi	r2,-2
  8031f0:	117faf36 	bltu	r2,r5,8030b0 <_fpadd_parts+0x1a8>
  8031f4:	003f9806 	br	803058 <_fpadd_parts+0x150>
  8031f8:	0005883a 	mov	r2,zero
  8031fc:	1189c83a 	sub	r4,r2,r6
  803200:	1105803a 	cmpltu	r2,r2,r4
  803204:	01cbc83a 	sub	r5,zero,r7
  803208:	2885c83a 	sub	r2,r5,r2
  80320c:	01800044 	movi	r6,1
  803210:	a1800115 	stw	r6,4(r20)
  803214:	a5c00215 	stw	r23,8(r20)
  803218:	a1000315 	stw	r4,12(r20)
  80321c:	a0800415 	stw	r2,16(r20)
  803220:	003f8206 	br	80302c <_fpadd_parts+0x124>
  803224:	203f7226 	beq	r4,zero,802ff0 <_fpadd_parts+0xe8>
  803228:	35bff804 	addi	r22,r6,-32
  80322c:	b9af883a 	add	r23,r23,r6
  803230:	b0003116 	blt	r22,zero,8032f8 <_fpadd_parts+0x3f0>
  803234:	959ad83a 	srl	r13,r18,r22
  803238:	001d883a 	mov	r14,zero
  80323c:	000f883a 	mov	r7,zero
  803240:	01000044 	movi	r4,1
  803244:	0011883a 	mov	r8,zero
  803248:	b0002516 	blt	r22,zero,8032e0 <_fpadd_parts+0x3d8>
  80324c:	2594983a 	sll	r10,r4,r22
  803250:	0013883a 	mov	r9,zero
  803254:	00bfffc4 	movi	r2,-1
  803258:	4889883a 	add	r4,r9,r2
  80325c:	508b883a 	add	r5,r10,r2
  803260:	224d803a 	cmpltu	r6,r4,r9
  803264:	314b883a 	add	r5,r6,r5
  803268:	8904703a 	and	r2,r17,r4
  80326c:	9146703a 	and	r3,r18,r5
  803270:	10c4b03a 	or	r2,r2,r3
  803274:	10000226 	beq	r2,zero,803280 <_fpadd_parts+0x378>
  803278:	01c00044 	movi	r7,1
  80327c:	0011883a 	mov	r8,zero
  803280:	69e2b03a 	or	r17,r13,r7
  803284:	7224b03a 	or	r18,r14,r8
  803288:	003f5906 	br	802ff0 <_fpadd_parts+0xe8>
  80328c:	8407883a 	add	r3,r16,r16
  803290:	008007c4 	movi	r2,31
  803294:	1185c83a 	sub	r2,r2,r6
  803298:	1886983a 	sll	r3,r3,r2
  80329c:	7996d83a 	srl	r11,r15,r6
  8032a0:	8198d83a 	srl	r12,r16,r6
  8032a4:	1ad6b03a 	or	r11,r3,r11
  8032a8:	003f3e06 	br	802fa4 <_fpadd_parts+0x9c>
  8032ac:	2006d07a 	srli	r3,r4,1
  8032b0:	008007c4 	movi	r2,31
  8032b4:	1185c83a 	sub	r2,r2,r6
  8032b8:	1890d83a 	srl	r8,r3,r2
  8032bc:	218e983a 	sll	r7,r4,r6
  8032c0:	003f3e06 	br	802fbc <_fpadd_parts+0xb4>
  8032c4:	113f821e 	bne	r2,r4,8030d0 <_fpadd_parts+0x1c8>
  8032c8:	28c00117 	ldw	r3,4(r5)
  8032cc:	98800117 	ldw	r2,4(r19)
  8032d0:	10ff7f26 	beq	r2,r3,8030d0 <_fpadd_parts+0x1c8>
  8032d4:	04c02074 	movhi	r19,129
  8032d8:	9cc24d04 	addi	r19,r19,2356
  8032dc:	003f7c06 	br	8030d0 <_fpadd_parts+0x1c8>
  8032e0:	2006d07a 	srli	r3,r4,1
  8032e4:	008007c4 	movi	r2,31
  8032e8:	1185c83a 	sub	r2,r2,r6
  8032ec:	1894d83a 	srl	r10,r3,r2
  8032f0:	2192983a 	sll	r9,r4,r6
  8032f4:	003fd706 	br	803254 <_fpadd_parts+0x34c>
  8032f8:	9487883a 	add	r3,r18,r18
  8032fc:	008007c4 	movi	r2,31
  803300:	1185c83a 	sub	r2,r2,r6
  803304:	1886983a 	sll	r3,r3,r2
  803308:	899ad83a 	srl	r13,r17,r6
  80330c:	919cd83a 	srl	r14,r18,r6
  803310:	1b5ab03a 	or	r13,r3,r13
  803314:	003fc906 	br	80323c <_fpadd_parts+0x334>

00803318 <__subdf3>:
  803318:	deffea04 	addi	sp,sp,-88
  80331c:	dcc01415 	stw	r19,80(sp)
  803320:	dcc00404 	addi	r19,sp,16
  803324:	2011883a 	mov	r8,r4
  803328:	2813883a 	mov	r9,r5
  80332c:	dc401315 	stw	r17,76(sp)
  803330:	d809883a 	mov	r4,sp
  803334:	980b883a 	mov	r5,r19
  803338:	dc400904 	addi	r17,sp,36
  80333c:	dfc01515 	stw	ra,84(sp)
  803340:	da400115 	stw	r9,4(sp)
  803344:	d9c00315 	stw	r7,12(sp)
  803348:	da000015 	stw	r8,0(sp)
  80334c:	d9800215 	stw	r6,8(sp)
  803350:	08046080 	call	804608 <__unpack_d>
  803354:	d9000204 	addi	r4,sp,8
  803358:	880b883a 	mov	r5,r17
  80335c:	08046080 	call	804608 <__unpack_d>
  803360:	d8800a17 	ldw	r2,40(sp)
  803364:	880b883a 	mov	r5,r17
  803368:	9809883a 	mov	r4,r19
  80336c:	d9800e04 	addi	r6,sp,56
  803370:	1080005c 	xori	r2,r2,1
  803374:	d8800a15 	stw	r2,40(sp)
  803378:	0802f080 	call	802f08 <_fpadd_parts>
  80337c:	1009883a 	mov	r4,r2
  803380:	08042f40 	call	8042f4 <__pack_d>
  803384:	dfc01517 	ldw	ra,84(sp)
  803388:	dcc01417 	ldw	r19,80(sp)
  80338c:	dc401317 	ldw	r17,76(sp)
  803390:	dec01604 	addi	sp,sp,88
  803394:	f800283a 	ret

00803398 <__adddf3>:
  803398:	deffea04 	addi	sp,sp,-88
  80339c:	dcc01415 	stw	r19,80(sp)
  8033a0:	dcc00404 	addi	r19,sp,16
  8033a4:	2011883a 	mov	r8,r4
  8033a8:	2813883a 	mov	r9,r5
  8033ac:	dc401315 	stw	r17,76(sp)
  8033b0:	d809883a 	mov	r4,sp
  8033b4:	980b883a 	mov	r5,r19
  8033b8:	dc400904 	addi	r17,sp,36
  8033bc:	dfc01515 	stw	ra,84(sp)
  8033c0:	da400115 	stw	r9,4(sp)
  8033c4:	d9c00315 	stw	r7,12(sp)
  8033c8:	da000015 	stw	r8,0(sp)
  8033cc:	d9800215 	stw	r6,8(sp)
  8033d0:	08046080 	call	804608 <__unpack_d>
  8033d4:	d9000204 	addi	r4,sp,8
  8033d8:	880b883a 	mov	r5,r17
  8033dc:	08046080 	call	804608 <__unpack_d>
  8033e0:	d9800e04 	addi	r6,sp,56
  8033e4:	9809883a 	mov	r4,r19
  8033e8:	880b883a 	mov	r5,r17
  8033ec:	0802f080 	call	802f08 <_fpadd_parts>
  8033f0:	1009883a 	mov	r4,r2
  8033f4:	08042f40 	call	8042f4 <__pack_d>
  8033f8:	dfc01517 	ldw	ra,84(sp)
  8033fc:	dcc01417 	ldw	r19,80(sp)
  803400:	dc401317 	ldw	r17,76(sp)
  803404:	dec01604 	addi	sp,sp,88
  803408:	f800283a 	ret

0080340c <__muldf3>:
  80340c:	deffe004 	addi	sp,sp,-128
  803410:	dc401815 	stw	r17,96(sp)
  803414:	dc400404 	addi	r17,sp,16
  803418:	2011883a 	mov	r8,r4
  80341c:	2813883a 	mov	r9,r5
  803420:	dc001715 	stw	r16,92(sp)
  803424:	d809883a 	mov	r4,sp
  803428:	880b883a 	mov	r5,r17
  80342c:	dc000904 	addi	r16,sp,36
  803430:	dfc01f15 	stw	ra,124(sp)
  803434:	da400115 	stw	r9,4(sp)
  803438:	d9c00315 	stw	r7,12(sp)
  80343c:	da000015 	stw	r8,0(sp)
  803440:	d9800215 	stw	r6,8(sp)
  803444:	ddc01e15 	stw	r23,120(sp)
  803448:	dd801d15 	stw	r22,116(sp)
  80344c:	dd401c15 	stw	r21,112(sp)
  803450:	dd001b15 	stw	r20,108(sp)
  803454:	dcc01a15 	stw	r19,104(sp)
  803458:	dc801915 	stw	r18,100(sp)
  80345c:	08046080 	call	804608 <__unpack_d>
  803460:	d9000204 	addi	r4,sp,8
  803464:	800b883a 	mov	r5,r16
  803468:	08046080 	call	804608 <__unpack_d>
  80346c:	d9000417 	ldw	r4,16(sp)
  803470:	00800044 	movi	r2,1
  803474:	1100102e 	bgeu	r2,r4,8034b8 <__muldf3+0xac>
  803478:	d8c00917 	ldw	r3,36(sp)
  80347c:	10c0062e 	bgeu	r2,r3,803498 <__muldf3+0x8c>
  803480:	00800104 	movi	r2,4
  803484:	20800a26 	beq	r4,r2,8034b0 <__muldf3+0xa4>
  803488:	1880cc26 	beq	r3,r2,8037bc <__muldf3+0x3b0>
  80348c:	00800084 	movi	r2,2
  803490:	20800926 	beq	r4,r2,8034b8 <__muldf3+0xac>
  803494:	1880191e 	bne	r3,r2,8034fc <__muldf3+0xf0>
  803498:	d8c00a17 	ldw	r3,40(sp)
  80349c:	d8800517 	ldw	r2,20(sp)
  8034a0:	8009883a 	mov	r4,r16
  8034a4:	10c4c03a 	cmpne	r2,r2,r3
  8034a8:	d8800a15 	stw	r2,40(sp)
  8034ac:	00000706 	br	8034cc <__muldf3+0xc0>
  8034b0:	00800084 	movi	r2,2
  8034b4:	1880c326 	beq	r3,r2,8037c4 <__muldf3+0x3b8>
  8034b8:	d8800517 	ldw	r2,20(sp)
  8034bc:	d8c00a17 	ldw	r3,40(sp)
  8034c0:	8809883a 	mov	r4,r17
  8034c4:	10c4c03a 	cmpne	r2,r2,r3
  8034c8:	d8800515 	stw	r2,20(sp)
  8034cc:	08042f40 	call	8042f4 <__pack_d>
  8034d0:	dfc01f17 	ldw	ra,124(sp)
  8034d4:	ddc01e17 	ldw	r23,120(sp)
  8034d8:	dd801d17 	ldw	r22,116(sp)
  8034dc:	dd401c17 	ldw	r21,112(sp)
  8034e0:	dd001b17 	ldw	r20,108(sp)
  8034e4:	dcc01a17 	ldw	r19,104(sp)
  8034e8:	dc801917 	ldw	r18,100(sp)
  8034ec:	dc401817 	ldw	r17,96(sp)
  8034f0:	dc001717 	ldw	r16,92(sp)
  8034f4:	dec02004 	addi	sp,sp,128
  8034f8:	f800283a 	ret
  8034fc:	dd800717 	ldw	r22,28(sp)
  803500:	dc800c17 	ldw	r18,48(sp)
  803504:	002b883a 	mov	r21,zero
  803508:	0023883a 	mov	r17,zero
  80350c:	a80b883a 	mov	r5,r21
  803510:	b00d883a 	mov	r6,r22
  803514:	880f883a 	mov	r7,r17
  803518:	ddc00817 	ldw	r23,32(sp)
  80351c:	dcc00d17 	ldw	r19,52(sp)
  803520:	9009883a 	mov	r4,r18
  803524:	0803efc0 	call	803efc <__muldi3>
  803528:	001b883a 	mov	r13,zero
  80352c:	680f883a 	mov	r7,r13
  803530:	b009883a 	mov	r4,r22
  803534:	000b883a 	mov	r5,zero
  803538:	980d883a 	mov	r6,r19
  80353c:	b82d883a 	mov	r22,r23
  803540:	002f883a 	mov	r23,zero
  803544:	db401615 	stw	r13,88(sp)
  803548:	d8801315 	stw	r2,76(sp)
  80354c:	d8c01415 	stw	r3,80(sp)
  803550:	dcc01515 	stw	r19,84(sp)
  803554:	0803efc0 	call	803efc <__muldi3>
  803558:	b00d883a 	mov	r6,r22
  80355c:	000b883a 	mov	r5,zero
  803560:	9009883a 	mov	r4,r18
  803564:	b80f883a 	mov	r7,r23
  803568:	1021883a 	mov	r16,r2
  80356c:	1823883a 	mov	r17,r3
  803570:	0803efc0 	call	803efc <__muldi3>
  803574:	8085883a 	add	r2,r16,r2
  803578:	140d803a 	cmpltu	r6,r2,r16
  80357c:	88c7883a 	add	r3,r17,r3
  803580:	30cd883a 	add	r6,r6,r3
  803584:	1029883a 	mov	r20,r2
  803588:	302b883a 	mov	r21,r6
  80358c:	da801317 	ldw	r10,76(sp)
  803590:	dac01417 	ldw	r11,80(sp)
  803594:	db001517 	ldw	r12,84(sp)
  803598:	db401617 	ldw	r13,88(sp)
  80359c:	3440612e 	bgeu	r6,r17,803724 <__muldf3+0x318>
  8035a0:	0009883a 	mov	r4,zero
  8035a4:	5105883a 	add	r2,r10,r4
  8035a8:	128d803a 	cmpltu	r6,r2,r10
  8035ac:	5d07883a 	add	r3,r11,r20
  8035b0:	30cd883a 	add	r6,r6,r3
  8035b4:	0021883a 	mov	r16,zero
  8035b8:	04400044 	movi	r17,1
  8035bc:	1025883a 	mov	r18,r2
  8035c0:	3027883a 	mov	r19,r6
  8035c4:	32c06236 	bltu	r6,r11,803750 <__muldf3+0x344>
  8035c8:	59807a26 	beq	r11,r6,8037b4 <__muldf3+0x3a8>
  8035cc:	680b883a 	mov	r5,r13
  8035d0:	b80f883a 	mov	r7,r23
  8035d4:	6009883a 	mov	r4,r12
  8035d8:	b00d883a 	mov	r6,r22
  8035dc:	0803efc0 	call	803efc <__muldi3>
  8035e0:	1009883a 	mov	r4,r2
  8035e4:	000f883a 	mov	r7,zero
  8035e8:	1545883a 	add	r2,r2,r21
  8035ec:	1111803a 	cmpltu	r8,r2,r4
  8035f0:	19c7883a 	add	r3,r3,r7
  8035f4:	40c7883a 	add	r3,r8,r3
  8035f8:	88cb883a 	add	r5,r17,r3
  8035fc:	d8c00617 	ldw	r3,24(sp)
  803600:	8089883a 	add	r4,r16,r2
  803604:	d8800b17 	ldw	r2,44(sp)
  803608:	18c00104 	addi	r3,r3,4
  80360c:	240d803a 	cmpltu	r6,r4,r16
  803610:	10c7883a 	add	r3,r2,r3
  803614:	2013883a 	mov	r9,r4
  803618:	d8800a17 	ldw	r2,40(sp)
  80361c:	d9000517 	ldw	r4,20(sp)
  803620:	314d883a 	add	r6,r6,r5
  803624:	3015883a 	mov	r10,r6
  803628:	2088c03a 	cmpne	r4,r4,r2
  80362c:	00880034 	movhi	r2,8192
  803630:	10bfffc4 	addi	r2,r2,-1
  803634:	d9000f15 	stw	r4,60(sp)
  803638:	d8c01015 	stw	r3,64(sp)
  80363c:	1180162e 	bgeu	r2,r6,803698 <__muldf3+0x28c>
  803640:	1811883a 	mov	r8,r3
  803644:	101f883a 	mov	r15,r2
  803648:	980497fa 	slli	r2,r19,31
  80364c:	9016d07a 	srli	r11,r18,1
  803650:	500697fa 	slli	r3,r10,31
  803654:	480cd07a 	srli	r6,r9,1
  803658:	500ed07a 	srli	r7,r10,1
  80365c:	12d6b03a 	or	r11,r2,r11
  803660:	00800044 	movi	r2,1
  803664:	198cb03a 	or	r6,r3,r6
  803668:	4888703a 	and	r4,r9,r2
  80366c:	9818d07a 	srli	r12,r19,1
  803670:	001b883a 	mov	r13,zero
  803674:	03a00034 	movhi	r14,32768
  803678:	3013883a 	mov	r9,r6
  80367c:	3815883a 	mov	r10,r7
  803680:	4091883a 	add	r8,r8,r2
  803684:	20000226 	beq	r4,zero,803690 <__muldf3+0x284>
  803688:	5b64b03a 	or	r18,r11,r13
  80368c:	63a6b03a 	or	r19,r12,r14
  803690:	7abfed36 	bltu	r15,r10,803648 <__muldf3+0x23c>
  803694:	da001015 	stw	r8,64(sp)
  803698:	00840034 	movhi	r2,4096
  80369c:	10bfffc4 	addi	r2,r2,-1
  8036a0:	12801436 	bltu	r2,r10,8036f4 <__muldf3+0x2e8>
  8036a4:	da001017 	ldw	r8,64(sp)
  8036a8:	101f883a 	mov	r15,r2
  8036ac:	4a45883a 	add	r2,r9,r9
  8036b0:	124d803a 	cmpltu	r6,r2,r9
  8036b4:	5287883a 	add	r3,r10,r10
  8036b8:	9497883a 	add	r11,r18,r18
  8036bc:	5c8f803a 	cmpltu	r7,r11,r18
  8036c0:	9cd9883a 	add	r12,r19,r19
  8036c4:	01000044 	movi	r4,1
  8036c8:	30cd883a 	add	r6,r6,r3
  8036cc:	3b0f883a 	add	r7,r7,r12
  8036d0:	423fffc4 	addi	r8,r8,-1
  8036d4:	1013883a 	mov	r9,r2
  8036d8:	3015883a 	mov	r10,r6
  8036dc:	111ab03a 	or	r13,r2,r4
  8036e0:	98003016 	blt	r19,zero,8037a4 <__muldf3+0x398>
  8036e4:	5825883a 	mov	r18,r11
  8036e8:	3827883a 	mov	r19,r7
  8036ec:	7abfef2e 	bgeu	r15,r10,8036ac <__muldf3+0x2a0>
  8036f0:	da001015 	stw	r8,64(sp)
  8036f4:	00803fc4 	movi	r2,255
  8036f8:	488e703a 	and	r7,r9,r2
  8036fc:	00802004 	movi	r2,128
  803700:	0007883a 	mov	r3,zero
  803704:	0011883a 	mov	r8,zero
  803708:	38801826 	beq	r7,r2,80376c <__muldf3+0x360>
  80370c:	008000c4 	movi	r2,3
  803710:	d9000e04 	addi	r4,sp,56
  803714:	da801215 	stw	r10,72(sp)
  803718:	d8800e15 	stw	r2,56(sp)
  80371c:	da401115 	stw	r9,68(sp)
  803720:	003f6a06 	br	8034cc <__muldf3+0xc0>
  803724:	89802126 	beq	r17,r6,8037ac <__muldf3+0x3a0>
  803728:	0009883a 	mov	r4,zero
  80372c:	5105883a 	add	r2,r10,r4
  803730:	128d803a 	cmpltu	r6,r2,r10
  803734:	5d07883a 	add	r3,r11,r20
  803738:	30cd883a 	add	r6,r6,r3
  80373c:	0021883a 	mov	r16,zero
  803740:	0023883a 	mov	r17,zero
  803744:	1025883a 	mov	r18,r2
  803748:	3027883a 	mov	r19,r6
  80374c:	32ff9e2e 	bgeu	r6,r11,8035c8 <__muldf3+0x1bc>
  803750:	00800044 	movi	r2,1
  803754:	8089883a 	add	r4,r16,r2
  803758:	240d803a 	cmpltu	r6,r4,r16
  80375c:	344d883a 	add	r6,r6,r17
  803760:	2021883a 	mov	r16,r4
  803764:	3023883a 	mov	r17,r6
  803768:	003f9806 	br	8035cc <__muldf3+0x1c0>
  80376c:	403fe71e 	bne	r8,zero,80370c <__muldf3+0x300>
  803770:	01004004 	movi	r4,256
  803774:	4904703a 	and	r2,r9,r4
  803778:	10c4b03a 	or	r2,r2,r3
  80377c:	103fe31e 	bne	r2,zero,80370c <__muldf3+0x300>
  803780:	94c4b03a 	or	r2,r18,r19
  803784:	103fe126 	beq	r2,zero,80370c <__muldf3+0x300>
  803788:	49c5883a 	add	r2,r9,r7
  80378c:	1251803a 	cmpltu	r8,r2,r9
  803790:	4291883a 	add	r8,r8,r10
  803794:	013fc004 	movi	r4,-256
  803798:	1112703a 	and	r9,r2,r4
  80379c:	4015883a 	mov	r10,r8
  8037a0:	003fda06 	br	80370c <__muldf3+0x300>
  8037a4:	6813883a 	mov	r9,r13
  8037a8:	003fce06 	br	8036e4 <__muldf3+0x2d8>
  8037ac:	143f7c36 	bltu	r2,r16,8035a0 <__muldf3+0x194>
  8037b0:	003fdd06 	br	803728 <__muldf3+0x31c>
  8037b4:	12bf852e 	bgeu	r2,r10,8035cc <__muldf3+0x1c0>
  8037b8:	003fe506 	br	803750 <__muldf3+0x344>
  8037bc:	00800084 	movi	r2,2
  8037c0:	20bf351e 	bne	r4,r2,803498 <__muldf3+0x8c>
  8037c4:	01002074 	movhi	r4,129
  8037c8:	21024d04 	addi	r4,r4,2356
  8037cc:	003f3f06 	br	8034cc <__muldf3+0xc0>

008037d0 <__eqdf2>:
  8037d0:	deffef04 	addi	sp,sp,-68
  8037d4:	dc400f15 	stw	r17,60(sp)
  8037d8:	dc400404 	addi	r17,sp,16
  8037dc:	2005883a 	mov	r2,r4
  8037e0:	2807883a 	mov	r3,r5
  8037e4:	dc000e15 	stw	r16,56(sp)
  8037e8:	d809883a 	mov	r4,sp
  8037ec:	880b883a 	mov	r5,r17
  8037f0:	dc000904 	addi	r16,sp,36
  8037f4:	d8c00115 	stw	r3,4(sp)
  8037f8:	d8800015 	stw	r2,0(sp)
  8037fc:	d9800215 	stw	r6,8(sp)
  803800:	dfc01015 	stw	ra,64(sp)
  803804:	d9c00315 	stw	r7,12(sp)
  803808:	08046080 	call	804608 <__unpack_d>
  80380c:	d9000204 	addi	r4,sp,8
  803810:	800b883a 	mov	r5,r16
  803814:	08046080 	call	804608 <__unpack_d>
  803818:	d8800417 	ldw	r2,16(sp)
  80381c:	00c00044 	movi	r3,1
  803820:	180d883a 	mov	r6,r3
  803824:	1880062e 	bgeu	r3,r2,803840 <__eqdf2+0x70>
  803828:	d8800917 	ldw	r2,36(sp)
  80382c:	8809883a 	mov	r4,r17
  803830:	800b883a 	mov	r5,r16
  803834:	1880022e 	bgeu	r3,r2,803840 <__eqdf2+0x70>
  803838:	08047400 	call	804740 <__fpcmp_parts_d>
  80383c:	100d883a 	mov	r6,r2
  803840:	3005883a 	mov	r2,r6
  803844:	dfc01017 	ldw	ra,64(sp)
  803848:	dc400f17 	ldw	r17,60(sp)
  80384c:	dc000e17 	ldw	r16,56(sp)
  803850:	dec01104 	addi	sp,sp,68
  803854:	f800283a 	ret

00803858 <__gtdf2>:
  803858:	deffef04 	addi	sp,sp,-68
  80385c:	dc400f15 	stw	r17,60(sp)
  803860:	dc400404 	addi	r17,sp,16
  803864:	2005883a 	mov	r2,r4
  803868:	2807883a 	mov	r3,r5
  80386c:	dc000e15 	stw	r16,56(sp)
  803870:	d809883a 	mov	r4,sp
  803874:	880b883a 	mov	r5,r17
  803878:	dc000904 	addi	r16,sp,36
  80387c:	d8c00115 	stw	r3,4(sp)
  803880:	d8800015 	stw	r2,0(sp)
  803884:	d9800215 	stw	r6,8(sp)
  803888:	dfc01015 	stw	ra,64(sp)
  80388c:	d9c00315 	stw	r7,12(sp)
  803890:	08046080 	call	804608 <__unpack_d>
  803894:	d9000204 	addi	r4,sp,8
  803898:	800b883a 	mov	r5,r16
  80389c:	08046080 	call	804608 <__unpack_d>
  8038a0:	d8800417 	ldw	r2,16(sp)
  8038a4:	00c00044 	movi	r3,1
  8038a8:	01bfffc4 	movi	r6,-1
  8038ac:	1880062e 	bgeu	r3,r2,8038c8 <__gtdf2+0x70>
  8038b0:	d8800917 	ldw	r2,36(sp)
  8038b4:	8809883a 	mov	r4,r17
  8038b8:	800b883a 	mov	r5,r16
  8038bc:	1880022e 	bgeu	r3,r2,8038c8 <__gtdf2+0x70>
  8038c0:	08047400 	call	804740 <__fpcmp_parts_d>
  8038c4:	100d883a 	mov	r6,r2
  8038c8:	3005883a 	mov	r2,r6
  8038cc:	dfc01017 	ldw	ra,64(sp)
  8038d0:	dc400f17 	ldw	r17,60(sp)
  8038d4:	dc000e17 	ldw	r16,56(sp)
  8038d8:	dec01104 	addi	sp,sp,68
  8038dc:	f800283a 	ret

008038e0 <__gedf2>:
  8038e0:	deffef04 	addi	sp,sp,-68
  8038e4:	dc400f15 	stw	r17,60(sp)
  8038e8:	dc400404 	addi	r17,sp,16
  8038ec:	2005883a 	mov	r2,r4
  8038f0:	2807883a 	mov	r3,r5
  8038f4:	dc000e15 	stw	r16,56(sp)
  8038f8:	d809883a 	mov	r4,sp
  8038fc:	880b883a 	mov	r5,r17
  803900:	dc000904 	addi	r16,sp,36
  803904:	d8c00115 	stw	r3,4(sp)
  803908:	d8800015 	stw	r2,0(sp)
  80390c:	d9800215 	stw	r6,8(sp)
  803910:	dfc01015 	stw	ra,64(sp)
  803914:	d9c00315 	stw	r7,12(sp)
  803918:	08046080 	call	804608 <__unpack_d>
  80391c:	d9000204 	addi	r4,sp,8
  803920:	800b883a 	mov	r5,r16
  803924:	08046080 	call	804608 <__unpack_d>
  803928:	d8800417 	ldw	r2,16(sp)
  80392c:	00c00044 	movi	r3,1
  803930:	01bfffc4 	movi	r6,-1
  803934:	1880062e 	bgeu	r3,r2,803950 <__gedf2+0x70>
  803938:	d8800917 	ldw	r2,36(sp)
  80393c:	8809883a 	mov	r4,r17
  803940:	800b883a 	mov	r5,r16
  803944:	1880022e 	bgeu	r3,r2,803950 <__gedf2+0x70>
  803948:	08047400 	call	804740 <__fpcmp_parts_d>
  80394c:	100d883a 	mov	r6,r2
  803950:	3005883a 	mov	r2,r6
  803954:	dfc01017 	ldw	ra,64(sp)
  803958:	dc400f17 	ldw	r17,60(sp)
  80395c:	dc000e17 	ldw	r16,56(sp)
  803960:	dec01104 	addi	sp,sp,68
  803964:	f800283a 	ret

00803968 <__floatsidf>:
  803968:	2006d7fa 	srli	r3,r4,31
  80396c:	defff604 	addi	sp,sp,-40
  803970:	008000c4 	movi	r2,3
  803974:	dfc00915 	stw	ra,36(sp)
  803978:	dcc00815 	stw	r19,32(sp)
  80397c:	dc800715 	stw	r18,28(sp)
  803980:	dc400615 	stw	r17,24(sp)
  803984:	dc000515 	stw	r16,20(sp)
  803988:	d8800015 	stw	r2,0(sp)
  80398c:	d8c00115 	stw	r3,4(sp)
  803990:	20000f1e 	bne	r4,zero,8039d0 <__floatsidf+0x68>
  803994:	00800084 	movi	r2,2
  803998:	d8800015 	stw	r2,0(sp)
  80399c:	d809883a 	mov	r4,sp
  8039a0:	08042f40 	call	8042f4 <__pack_d>
  8039a4:	1009883a 	mov	r4,r2
  8039a8:	180b883a 	mov	r5,r3
  8039ac:	2005883a 	mov	r2,r4
  8039b0:	2807883a 	mov	r3,r5
  8039b4:	dfc00917 	ldw	ra,36(sp)
  8039b8:	dcc00817 	ldw	r19,32(sp)
  8039bc:	dc800717 	ldw	r18,28(sp)
  8039c0:	dc400617 	ldw	r17,24(sp)
  8039c4:	dc000517 	ldw	r16,20(sp)
  8039c8:	dec00a04 	addi	sp,sp,40
  8039cc:	f800283a 	ret
  8039d0:	00800f04 	movi	r2,60
  8039d4:	1807003a 	cmpeq	r3,r3,zero
  8039d8:	d8800215 	stw	r2,8(sp)
  8039dc:	18001126 	beq	r3,zero,803a24 <__floatsidf+0xbc>
  8039e0:	0027883a 	mov	r19,zero
  8039e4:	2025883a 	mov	r18,r4
  8039e8:	d9000315 	stw	r4,12(sp)
  8039ec:	dcc00415 	stw	r19,16(sp)
  8039f0:	08040200 	call	804020 <__clzsi2>
  8039f4:	11000744 	addi	r4,r2,29
  8039f8:	013fe80e 	bge	zero,r4,80399c <__floatsidf+0x34>
  8039fc:	10bfff44 	addi	r2,r2,-3
  803a00:	10000c16 	blt	r2,zero,803a34 <__floatsidf+0xcc>
  803a04:	90a2983a 	sll	r17,r18,r2
  803a08:	0021883a 	mov	r16,zero
  803a0c:	d8800217 	ldw	r2,8(sp)
  803a10:	dc400415 	stw	r17,16(sp)
  803a14:	dc000315 	stw	r16,12(sp)
  803a18:	1105c83a 	sub	r2,r2,r4
  803a1c:	d8800215 	stw	r2,8(sp)
  803a20:	003fde06 	br	80399c <__floatsidf+0x34>
  803a24:	00a00034 	movhi	r2,32768
  803a28:	20800a26 	beq	r4,r2,803a54 <__floatsidf+0xec>
  803a2c:	0109c83a 	sub	r4,zero,r4
  803a30:	003feb06 	br	8039e0 <__floatsidf+0x78>
  803a34:	9006d07a 	srli	r3,r18,1
  803a38:	008007c4 	movi	r2,31
  803a3c:	1105c83a 	sub	r2,r2,r4
  803a40:	1886d83a 	srl	r3,r3,r2
  803a44:	9922983a 	sll	r17,r19,r4
  803a48:	9120983a 	sll	r16,r18,r4
  803a4c:	1c62b03a 	or	r17,r3,r17
  803a50:	003fee06 	br	803a0c <__floatsidf+0xa4>
  803a54:	0009883a 	mov	r4,zero
  803a58:	01707834 	movhi	r5,49632
  803a5c:	003fd306 	br	8039ac <__floatsidf+0x44>

00803a60 <__fixdfsi>:
  803a60:	defff804 	addi	sp,sp,-32
  803a64:	2005883a 	mov	r2,r4
  803a68:	2807883a 	mov	r3,r5
  803a6c:	d809883a 	mov	r4,sp
  803a70:	d9400204 	addi	r5,sp,8
  803a74:	d8c00115 	stw	r3,4(sp)
  803a78:	d8800015 	stw	r2,0(sp)
  803a7c:	dfc00715 	stw	ra,28(sp)
  803a80:	08046080 	call	804608 <__unpack_d>
  803a84:	d8c00217 	ldw	r3,8(sp)
  803a88:	00800084 	movi	r2,2
  803a8c:	1880051e 	bne	r3,r2,803aa4 <__fixdfsi+0x44>
  803a90:	0007883a 	mov	r3,zero
  803a94:	1805883a 	mov	r2,r3
  803a98:	dfc00717 	ldw	ra,28(sp)
  803a9c:	dec00804 	addi	sp,sp,32
  803aa0:	f800283a 	ret
  803aa4:	00800044 	movi	r2,1
  803aa8:	10fff92e 	bgeu	r2,r3,803a90 <__fixdfsi+0x30>
  803aac:	00800104 	movi	r2,4
  803ab0:	18800426 	beq	r3,r2,803ac4 <__fixdfsi+0x64>
  803ab4:	d8c00417 	ldw	r3,16(sp)
  803ab8:	183ff516 	blt	r3,zero,803a90 <__fixdfsi+0x30>
  803abc:	00800784 	movi	r2,30
  803ac0:	10c0080e 	bge	r2,r3,803ae4 <__fixdfsi+0x84>
  803ac4:	d8800317 	ldw	r2,12(sp)
  803ac8:	1000121e 	bne	r2,zero,803b14 <__fixdfsi+0xb4>
  803acc:	00e00034 	movhi	r3,32768
  803ad0:	18ffffc4 	addi	r3,r3,-1
  803ad4:	1805883a 	mov	r2,r3
  803ad8:	dfc00717 	ldw	ra,28(sp)
  803adc:	dec00804 	addi	sp,sp,32
  803ae0:	f800283a 	ret
  803ae4:	00800f04 	movi	r2,60
  803ae8:	10d1c83a 	sub	r8,r2,r3
  803aec:	40bff804 	addi	r2,r8,-32
  803af0:	d9800517 	ldw	r6,20(sp)
  803af4:	d9c00617 	ldw	r7,24(sp)
  803af8:	10000816 	blt	r2,zero,803b1c <__fixdfsi+0xbc>
  803afc:	3888d83a 	srl	r4,r7,r2
  803b00:	d8800317 	ldw	r2,12(sp)
  803b04:	2007883a 	mov	r3,r4
  803b08:	103fe226 	beq	r2,zero,803a94 <__fixdfsi+0x34>
  803b0c:	0107c83a 	sub	r3,zero,r4
  803b10:	003fe006 	br	803a94 <__fixdfsi+0x34>
  803b14:	00e00034 	movhi	r3,32768
  803b18:	003fde06 	br	803a94 <__fixdfsi+0x34>
  803b1c:	39c7883a 	add	r3,r7,r7
  803b20:	008007c4 	movi	r2,31
  803b24:	1205c83a 	sub	r2,r2,r8
  803b28:	1886983a 	sll	r3,r3,r2
  803b2c:	3208d83a 	srl	r4,r6,r8
  803b30:	1908b03a 	or	r4,r3,r4
  803b34:	003ff206 	br	803b00 <__fixdfsi+0xa0>

00803b38 <__make_dp>:
  803b38:	defff904 	addi	sp,sp,-28
  803b3c:	d8c00717 	ldw	r3,28(sp)
  803b40:	d9000015 	stw	r4,0(sp)
  803b44:	d809883a 	mov	r4,sp
  803b48:	dfc00515 	stw	ra,20(sp)
  803b4c:	d9c00615 	stw	r7,24(sp)
  803b50:	d9400115 	stw	r5,4(sp)
  803b54:	d9800215 	stw	r6,8(sp)
  803b58:	d8c00415 	stw	r3,16(sp)
  803b5c:	d9c00315 	stw	r7,12(sp)
  803b60:	08042f40 	call	8042f4 <__pack_d>
  803b64:	dfc00517 	ldw	ra,20(sp)
  803b68:	dec00704 	addi	sp,sp,28
  803b6c:	f800283a 	ret

00803b70 <__truncdfsf2>:
  803b70:	defff804 	addi	sp,sp,-32
  803b74:	2005883a 	mov	r2,r4
  803b78:	2807883a 	mov	r3,r5
  803b7c:	d809883a 	mov	r4,sp
  803b80:	d9400204 	addi	r5,sp,8
  803b84:	d8c00115 	stw	r3,4(sp)
  803b88:	d8800015 	stw	r2,0(sp)
  803b8c:	dfc00715 	stw	ra,28(sp)
  803b90:	08046080 	call	804608 <__unpack_d>
  803b94:	d9c00517 	ldw	r7,20(sp)
  803b98:	da000617 	ldw	r8,24(sp)
  803b9c:	02d00034 	movhi	r11,16384
  803ba0:	5affffc4 	addi	r11,r11,-1
  803ba4:	3812d7ba 	srli	r9,r7,30
  803ba8:	401a90ba 	slli	r13,r8,2
  803bac:	3ac4703a 	and	r2,r7,r11
  803bb0:	0007883a 	mov	r3,zero
  803bb4:	6a52b03a 	or	r9,r13,r9
  803bb8:	10c4b03a 	or	r2,r2,r3
  803bbc:	d9000217 	ldw	r4,8(sp)
  803bc0:	d9400317 	ldw	r5,12(sp)
  803bc4:	d9800417 	ldw	r6,16(sp)
  803bc8:	480f883a 	mov	r7,r9
  803bcc:	10000126 	beq	r2,zero,803bd4 <__truncdfsf2+0x64>
  803bd0:	49c00054 	ori	r7,r9,1
  803bd4:	08042c80 	call	8042c8 <__make_fp>
  803bd8:	dfc00717 	ldw	ra,28(sp)
  803bdc:	dec00804 	addi	sp,sp,32
  803be0:	f800283a 	ret

00803be4 <__floatunsidf>:
  803be4:	defff204 	addi	sp,sp,-56
  803be8:	dfc00d15 	stw	ra,52(sp)
  803bec:	ddc00c15 	stw	r23,48(sp)
  803bf0:	dd800b15 	stw	r22,44(sp)
  803bf4:	dd400a15 	stw	r21,40(sp)
  803bf8:	dd000915 	stw	r20,36(sp)
  803bfc:	dcc00815 	stw	r19,32(sp)
  803c00:	dc800715 	stw	r18,28(sp)
  803c04:	dc400615 	stw	r17,24(sp)
  803c08:	dc000515 	stw	r16,20(sp)
  803c0c:	d8000115 	stw	zero,4(sp)
  803c10:	20000f1e 	bne	r4,zero,803c50 <__floatunsidf+0x6c>
  803c14:	00800084 	movi	r2,2
  803c18:	d8800015 	stw	r2,0(sp)
  803c1c:	d809883a 	mov	r4,sp
  803c20:	08042f40 	call	8042f4 <__pack_d>
  803c24:	dfc00d17 	ldw	ra,52(sp)
  803c28:	ddc00c17 	ldw	r23,48(sp)
  803c2c:	dd800b17 	ldw	r22,44(sp)
  803c30:	dd400a17 	ldw	r21,40(sp)
  803c34:	dd000917 	ldw	r20,36(sp)
  803c38:	dcc00817 	ldw	r19,32(sp)
  803c3c:	dc800717 	ldw	r18,28(sp)
  803c40:	dc400617 	ldw	r17,24(sp)
  803c44:	dc000517 	ldw	r16,20(sp)
  803c48:	dec00e04 	addi	sp,sp,56
  803c4c:	f800283a 	ret
  803c50:	008000c4 	movi	r2,3
  803c54:	00c00f04 	movi	r3,60
  803c58:	002f883a 	mov	r23,zero
  803c5c:	202d883a 	mov	r22,r4
  803c60:	d8800015 	stw	r2,0(sp)
  803c64:	d8c00215 	stw	r3,8(sp)
  803c68:	d9000315 	stw	r4,12(sp)
  803c6c:	ddc00415 	stw	r23,16(sp)
  803c70:	08040200 	call	804020 <__clzsi2>
  803c74:	12400744 	addi	r9,r2,29
  803c78:	48000b16 	blt	r9,zero,803ca8 <__floatunsidf+0xc4>
  803c7c:	483fe726 	beq	r9,zero,803c1c <__floatunsidf+0x38>
  803c80:	10bfff44 	addi	r2,r2,-3
  803c84:	10002e16 	blt	r2,zero,803d40 <__floatunsidf+0x15c>
  803c88:	b0a2983a 	sll	r17,r22,r2
  803c8c:	0021883a 	mov	r16,zero
  803c90:	d8800217 	ldw	r2,8(sp)
  803c94:	dc400415 	stw	r17,16(sp)
  803c98:	dc000315 	stw	r16,12(sp)
  803c9c:	1245c83a 	sub	r2,r2,r9
  803ca0:	d8800215 	stw	r2,8(sp)
  803ca4:	003fdd06 	br	803c1c <__floatunsidf+0x38>
  803ca8:	0255c83a 	sub	r10,zero,r9
  803cac:	51bff804 	addi	r6,r10,-32
  803cb0:	30001b16 	blt	r6,zero,803d20 <__floatunsidf+0x13c>
  803cb4:	b9a8d83a 	srl	r20,r23,r6
  803cb8:	002b883a 	mov	r21,zero
  803cbc:	000f883a 	mov	r7,zero
  803cc0:	01000044 	movi	r4,1
  803cc4:	0011883a 	mov	r8,zero
  803cc8:	30002516 	blt	r6,zero,803d60 <__floatunsidf+0x17c>
  803ccc:	21a6983a 	sll	r19,r4,r6
  803cd0:	0025883a 	mov	r18,zero
  803cd4:	00bfffc4 	movi	r2,-1
  803cd8:	9089883a 	add	r4,r18,r2
  803cdc:	988b883a 	add	r5,r19,r2
  803ce0:	248d803a 	cmpltu	r6,r4,r18
  803ce4:	314b883a 	add	r5,r6,r5
  803ce8:	b104703a 	and	r2,r22,r4
  803cec:	b946703a 	and	r3,r23,r5
  803cf0:	10c4b03a 	or	r2,r2,r3
  803cf4:	10000226 	beq	r2,zero,803d00 <__floatunsidf+0x11c>
  803cf8:	01c00044 	movi	r7,1
  803cfc:	0011883a 	mov	r8,zero
  803d00:	d9000217 	ldw	r4,8(sp)
  803d04:	a1c4b03a 	or	r2,r20,r7
  803d08:	aa06b03a 	or	r3,r21,r8
  803d0c:	2249c83a 	sub	r4,r4,r9
  803d10:	d8c00415 	stw	r3,16(sp)
  803d14:	d9000215 	stw	r4,8(sp)
  803d18:	d8800315 	stw	r2,12(sp)
  803d1c:	003fbf06 	br	803c1c <__floatunsidf+0x38>
  803d20:	bdc7883a 	add	r3,r23,r23
  803d24:	008007c4 	movi	r2,31
  803d28:	1285c83a 	sub	r2,r2,r10
  803d2c:	1886983a 	sll	r3,r3,r2
  803d30:	b2a8d83a 	srl	r20,r22,r10
  803d34:	baaad83a 	srl	r21,r23,r10
  803d38:	1d28b03a 	or	r20,r3,r20
  803d3c:	003fdf06 	br	803cbc <__floatunsidf+0xd8>
  803d40:	b006d07a 	srli	r3,r22,1
  803d44:	008007c4 	movi	r2,31
  803d48:	1245c83a 	sub	r2,r2,r9
  803d4c:	1886d83a 	srl	r3,r3,r2
  803d50:	ba62983a 	sll	r17,r23,r9
  803d54:	b260983a 	sll	r16,r22,r9
  803d58:	1c62b03a 	or	r17,r3,r17
  803d5c:	003fcc06 	br	803c90 <__floatunsidf+0xac>
  803d60:	2006d07a 	srli	r3,r4,1
  803d64:	008007c4 	movi	r2,31
  803d68:	1285c83a 	sub	r2,r2,r10
  803d6c:	18a6d83a 	srl	r19,r3,r2
  803d70:	22a4983a 	sll	r18,r4,r10
  803d74:	003fd706 	br	803cd4 <__floatunsidf+0xf0>

00803d78 <udivmodsi4>:
  803d78:	29001b2e 	bgeu	r5,r4,803de8 <udivmodsi4+0x70>
  803d7c:	28001a16 	blt	r5,zero,803de8 <udivmodsi4+0x70>
  803d80:	00800044 	movi	r2,1
  803d84:	0007883a 	mov	r3,zero
  803d88:	01c007c4 	movi	r7,31
  803d8c:	00000306 	br	803d9c <udivmodsi4+0x24>
  803d90:	19c01326 	beq	r3,r7,803de0 <udivmodsi4+0x68>
  803d94:	18c00044 	addi	r3,r3,1
  803d98:	28000416 	blt	r5,zero,803dac <udivmodsi4+0x34>
  803d9c:	294b883a 	add	r5,r5,r5
  803da0:	1085883a 	add	r2,r2,r2
  803da4:	293ffa36 	bltu	r5,r4,803d90 <udivmodsi4+0x18>
  803da8:	10000d26 	beq	r2,zero,803de0 <udivmodsi4+0x68>
  803dac:	0007883a 	mov	r3,zero
  803db0:	21400236 	bltu	r4,r5,803dbc <udivmodsi4+0x44>
  803db4:	2149c83a 	sub	r4,r4,r5
  803db8:	1886b03a 	or	r3,r3,r2
  803dbc:	1004d07a 	srli	r2,r2,1
  803dc0:	280ad07a 	srli	r5,r5,1
  803dc4:	103ffa1e 	bne	r2,zero,803db0 <udivmodsi4+0x38>
  803dc8:	30000226 	beq	r6,zero,803dd4 <udivmodsi4+0x5c>
  803dcc:	2005883a 	mov	r2,r4
  803dd0:	f800283a 	ret
  803dd4:	1809883a 	mov	r4,r3
  803dd8:	2005883a 	mov	r2,r4
  803ddc:	f800283a 	ret
  803de0:	0007883a 	mov	r3,zero
  803de4:	003ff806 	br	803dc8 <udivmodsi4+0x50>
  803de8:	00800044 	movi	r2,1
  803dec:	0007883a 	mov	r3,zero
  803df0:	003fef06 	br	803db0 <udivmodsi4+0x38>

00803df4 <__divsi3>:
  803df4:	defffe04 	addi	sp,sp,-8
  803df8:	dc000015 	stw	r16,0(sp)
  803dfc:	dfc00115 	stw	ra,4(sp)
  803e00:	0021883a 	mov	r16,zero
  803e04:	20000c16 	blt	r4,zero,803e38 <__divsi3+0x44>
  803e08:	000d883a 	mov	r6,zero
  803e0c:	28000e16 	blt	r5,zero,803e48 <__divsi3+0x54>
  803e10:	0803d780 	call	803d78 <udivmodsi4>
  803e14:	1007883a 	mov	r3,r2
  803e18:	8005003a 	cmpeq	r2,r16,zero
  803e1c:	1000011e 	bne	r2,zero,803e24 <__divsi3+0x30>
  803e20:	00c7c83a 	sub	r3,zero,r3
  803e24:	1805883a 	mov	r2,r3
  803e28:	dfc00117 	ldw	ra,4(sp)
  803e2c:	dc000017 	ldw	r16,0(sp)
  803e30:	dec00204 	addi	sp,sp,8
  803e34:	f800283a 	ret
  803e38:	0109c83a 	sub	r4,zero,r4
  803e3c:	04000044 	movi	r16,1
  803e40:	000d883a 	mov	r6,zero
  803e44:	283ff20e 	bge	r5,zero,803e10 <__divsi3+0x1c>
  803e48:	014bc83a 	sub	r5,zero,r5
  803e4c:	8021003a 	cmpeq	r16,r16,zero
  803e50:	003fef06 	br	803e10 <__divsi3+0x1c>

00803e54 <__modsi3>:
  803e54:	deffff04 	addi	sp,sp,-4
  803e58:	dfc00015 	stw	ra,0(sp)
  803e5c:	01800044 	movi	r6,1
  803e60:	2807883a 	mov	r3,r5
  803e64:	20000416 	blt	r4,zero,803e78 <__modsi3+0x24>
  803e68:	28000c16 	blt	r5,zero,803e9c <__modsi3+0x48>
  803e6c:	dfc00017 	ldw	ra,0(sp)
  803e70:	dec00104 	addi	sp,sp,4
  803e74:	0803d781 	jmpi	803d78 <udivmodsi4>
  803e78:	0109c83a 	sub	r4,zero,r4
  803e7c:	28000b16 	blt	r5,zero,803eac <__modsi3+0x58>
  803e80:	180b883a 	mov	r5,r3
  803e84:	01800044 	movi	r6,1
  803e88:	0803d780 	call	803d78 <udivmodsi4>
  803e8c:	0085c83a 	sub	r2,zero,r2
  803e90:	dfc00017 	ldw	ra,0(sp)
  803e94:	dec00104 	addi	sp,sp,4
  803e98:	f800283a 	ret
  803e9c:	014bc83a 	sub	r5,zero,r5
  803ea0:	dfc00017 	ldw	ra,0(sp)
  803ea4:	dec00104 	addi	sp,sp,4
  803ea8:	0803d781 	jmpi	803d78 <udivmodsi4>
  803eac:	0147c83a 	sub	r3,zero,r5
  803eb0:	003ff306 	br	803e80 <__modsi3+0x2c>

00803eb4 <__udivsi3>:
  803eb4:	000d883a 	mov	r6,zero
  803eb8:	0803d781 	jmpi	803d78 <udivmodsi4>

00803ebc <__umodsi3>:
  803ebc:	01800044 	movi	r6,1
  803ec0:	0803d781 	jmpi	803d78 <udivmodsi4>

00803ec4 <__mulsi3>:
  803ec4:	20000a26 	beq	r4,zero,803ef0 <__mulsi3+0x2c>
  803ec8:	0007883a 	mov	r3,zero
  803ecc:	2080004c 	andi	r2,r4,1
  803ed0:	1005003a 	cmpeq	r2,r2,zero
  803ed4:	2008d07a 	srli	r4,r4,1
  803ed8:	1000011e 	bne	r2,zero,803ee0 <__mulsi3+0x1c>
  803edc:	1947883a 	add	r3,r3,r5
  803ee0:	294b883a 	add	r5,r5,r5
  803ee4:	203ff91e 	bne	r4,zero,803ecc <__mulsi3+0x8>
  803ee8:	1805883a 	mov	r2,r3
  803eec:	f800283a 	ret
  803ef0:	0007883a 	mov	r3,zero
  803ef4:	1805883a 	mov	r2,r3
  803ef8:	f800283a 	ret

00803efc <__muldi3>:
  803efc:	defff204 	addi	sp,sp,-56
  803f00:	df000c15 	stw	fp,48(sp)
  803f04:	3038d43a 	srli	fp,r6,16
  803f08:	dd000815 	stw	r20,32(sp)
  803f0c:	dc400515 	stw	r17,20(sp)
  803f10:	2028d43a 	srli	r20,r4,16
  803f14:	247fffcc 	andi	r17,r4,65535
  803f18:	dc000415 	stw	r16,16(sp)
  803f1c:	343fffcc 	andi	r16,r6,65535
  803f20:	dcc00715 	stw	r19,28(sp)
  803f24:	d9000015 	stw	r4,0(sp)
  803f28:	2827883a 	mov	r19,r5
  803f2c:	8809883a 	mov	r4,r17
  803f30:	d9400115 	stw	r5,4(sp)
  803f34:	800b883a 	mov	r5,r16
  803f38:	d9800215 	stw	r6,8(sp)
  803f3c:	dfc00d15 	stw	ra,52(sp)
  803f40:	d9c00315 	stw	r7,12(sp)
  803f44:	dd800a15 	stw	r22,40(sp)
  803f48:	dd400915 	stw	r21,36(sp)
  803f4c:	302d883a 	mov	r22,r6
  803f50:	ddc00b15 	stw	r23,44(sp)
  803f54:	dc800615 	stw	r18,24(sp)
  803f58:	0803ec40 	call	803ec4 <__mulsi3>
  803f5c:	8809883a 	mov	r4,r17
  803f60:	e00b883a 	mov	r5,fp
  803f64:	102b883a 	mov	r21,r2
  803f68:	0803ec40 	call	803ec4 <__mulsi3>
  803f6c:	800b883a 	mov	r5,r16
  803f70:	a009883a 	mov	r4,r20
  803f74:	1023883a 	mov	r17,r2
  803f78:	0803ec40 	call	803ec4 <__mulsi3>
  803f7c:	a009883a 	mov	r4,r20
  803f80:	e00b883a 	mov	r5,fp
  803f84:	1021883a 	mov	r16,r2
  803f88:	0803ec40 	call	803ec4 <__mulsi3>
  803f8c:	a8ffffcc 	andi	r3,r21,65535
  803f90:	a82ad43a 	srli	r21,r21,16
  803f94:	8c23883a 	add	r17,r17,r16
  803f98:	1011883a 	mov	r8,r2
  803f9c:	ac6b883a 	add	r21,r21,r17
  803fa0:	a804943a 	slli	r2,r21,16
  803fa4:	b009883a 	mov	r4,r22
  803fa8:	980b883a 	mov	r5,r19
  803fac:	10c7883a 	add	r3,r2,r3
  803fb0:	a812d43a 	srli	r9,r21,16
  803fb4:	180d883a 	mov	r6,r3
  803fb8:	ac00022e 	bgeu	r21,r16,803fc4 <__muldi3+0xc8>
  803fbc:	00800074 	movhi	r2,1
  803fc0:	4091883a 	add	r8,r8,r2
  803fc4:	4267883a 	add	r19,r8,r9
  803fc8:	302d883a 	mov	r22,r6
  803fcc:	0803ec40 	call	803ec4 <__mulsi3>
  803fd0:	d9400317 	ldw	r5,12(sp)
  803fd4:	d9000017 	ldw	r4,0(sp)
  803fd8:	1023883a 	mov	r17,r2
  803fdc:	0803ec40 	call	803ec4 <__mulsi3>
  803fe0:	14cb883a 	add	r5,r2,r19
  803fe4:	894b883a 	add	r5,r17,r5
  803fe8:	b005883a 	mov	r2,r22
  803fec:	2807883a 	mov	r3,r5
  803ff0:	dfc00d17 	ldw	ra,52(sp)
  803ff4:	df000c17 	ldw	fp,48(sp)
  803ff8:	ddc00b17 	ldw	r23,44(sp)
  803ffc:	dd800a17 	ldw	r22,40(sp)
  804000:	dd400917 	ldw	r21,36(sp)
  804004:	dd000817 	ldw	r20,32(sp)
  804008:	dcc00717 	ldw	r19,28(sp)
  80400c:	dc800617 	ldw	r18,24(sp)
  804010:	dc400517 	ldw	r17,20(sp)
  804014:	dc000417 	ldw	r16,16(sp)
  804018:	dec00e04 	addi	sp,sp,56
  80401c:	f800283a 	ret

00804020 <__clzsi2>:
  804020:	00bfffd4 	movui	r2,65535
  804024:	11000e36 	bltu	r2,r4,804060 <__clzsi2+0x40>
  804028:	00803fc4 	movi	r2,255
  80402c:	01400204 	movi	r5,8
  804030:	0007883a 	mov	r3,zero
  804034:	11001036 	bltu	r2,r4,804078 <__clzsi2+0x58>
  804038:	000b883a 	mov	r5,zero
  80403c:	20c6d83a 	srl	r3,r4,r3
  804040:	00802074 	movhi	r2,129
  804044:	10825204 	addi	r2,r2,2376
  804048:	1887883a 	add	r3,r3,r2
  80404c:	18800003 	ldbu	r2,0(r3)
  804050:	00c00804 	movi	r3,32
  804054:	2885883a 	add	r2,r5,r2
  804058:	1885c83a 	sub	r2,r3,r2
  80405c:	f800283a 	ret
  804060:	01400404 	movi	r5,16
  804064:	00804034 	movhi	r2,256
  804068:	10bfffc4 	addi	r2,r2,-1
  80406c:	2807883a 	mov	r3,r5
  804070:	113ff22e 	bgeu	r2,r4,80403c <__clzsi2+0x1c>
  804074:	01400604 	movi	r5,24
  804078:	2807883a 	mov	r3,r5
  80407c:	20c6d83a 	srl	r3,r4,r3
  804080:	00802074 	movhi	r2,129
  804084:	10825204 	addi	r2,r2,2376
  804088:	1887883a 	add	r3,r3,r2
  80408c:	18800003 	ldbu	r2,0(r3)
  804090:	00c00804 	movi	r3,32
  804094:	2885883a 	add	r2,r5,r2
  804098:	1885c83a 	sub	r2,r3,r2
  80409c:	f800283a 	ret

008040a0 <__pack_f>:
  8040a0:	20c00017 	ldw	r3,0(r4)
  8040a4:	01c00044 	movi	r7,1
  8040a8:	21800317 	ldw	r6,12(r4)
  8040ac:	21400117 	ldw	r5,4(r4)
  8040b0:	38c02d2e 	bgeu	r7,r3,804168 <__pack_f+0xc8>
  8040b4:	00800104 	movi	r2,4
  8040b8:	18802826 	beq	r3,r2,80415c <__pack_f+0xbc>
  8040bc:	00800084 	movi	r2,2
  8040c0:	18800126 	beq	r3,r2,8040c8 <__pack_f+0x28>
  8040c4:	3000101e 	bne	r6,zero,804108 <__pack_f+0x68>
  8040c8:	000d883a 	mov	r6,zero
  8040cc:	0007883a 	mov	r3,zero
  8040d0:	19003fcc 	andi	r4,r3,255
  8040d4:	200895fa 	slli	r4,r4,23
  8040d8:	00c02034 	movhi	r3,128
  8040dc:	18ffffc4 	addi	r3,r3,-1
  8040e0:	30c6703a 	and	r3,r6,r3
  8040e4:	10a0002c 	andhi	r2,r2,32768
  8040e8:	10c4b03a 	or	r2,r2,r3
  8040ec:	280a97fa 	slli	r5,r5,31
  8040f0:	1104b03a 	or	r2,r2,r4
  8040f4:	00e00034 	movhi	r3,32768
  8040f8:	18ffffc4 	addi	r3,r3,-1
  8040fc:	10c4703a 	and	r2,r2,r3
  804100:	1144b03a 	or	r2,r2,r5
  804104:	f800283a 	ret
  804108:	21000217 	ldw	r4,8(r4)
  80410c:	00bfe084 	movi	r2,-126
  804110:	20801b16 	blt	r4,r2,804180 <__pack_f+0xe0>
  804114:	00801fc4 	movi	r2,127
  804118:	11001016 	blt	r2,r4,80415c <__pack_f+0xbc>
  80411c:	308e703a 	and	r7,r6,r2
  804120:	2087883a 	add	r3,r4,r2
  804124:	00801004 	movi	r2,64
  804128:	38800526 	beq	r7,r2,804140 <__pack_f+0xa0>
  80412c:	31800fc4 	addi	r6,r6,63
  804130:	30000716 	blt	r6,zero,804150 <__pack_f+0xb0>
  804134:	300490ba 	slli	r2,r6,2
  804138:	100cd27a 	srli	r6,r2,9
  80413c:	003fe406 	br	8040d0 <__pack_f+0x30>
  804140:	3080200c 	andi	r2,r6,128
  804144:	103ffa26 	beq	r2,zero,804130 <__pack_f+0x90>
  804148:	31cd883a 	add	r6,r6,r7
  80414c:	003ff806 	br	804130 <__pack_f+0x90>
  804150:	300cd07a 	srli	r6,r6,1
  804154:	18c00044 	addi	r3,r3,1
  804158:	003ff606 	br	804134 <__pack_f+0x94>
  80415c:	000d883a 	mov	r6,zero
  804160:	00ffffc4 	movi	r3,-1
  804164:	003fda06 	br	8040d0 <__pack_f+0x30>
  804168:	31800434 	orhi	r6,r6,16
  80416c:	00802034 	movhi	r2,128
  804170:	10bfffc4 	addi	r2,r2,-1
  804174:	308c703a 	and	r6,r6,r2
  804178:	00ffffc4 	movi	r3,-1
  80417c:	003fd406 	br	8040d0 <__pack_f+0x30>
  804180:	1109c83a 	sub	r4,r2,r4
  804184:	00800644 	movi	r2,25
  804188:	11001216 	blt	r2,r4,8041d4 <__pack_f+0x134>
  80418c:	3904983a 	sll	r2,r7,r4
  804190:	3106d83a 	srl	r3,r6,r4
  804194:	10bfffc4 	addi	r2,r2,-1
  804198:	3084703a 	and	r2,r6,r2
  80419c:	1004c03a 	cmpne	r2,r2,zero
  8041a0:	1886b03a 	or	r3,r3,r2
  8041a4:	19001fcc 	andi	r4,r3,127
  8041a8:	00801004 	movi	r2,64
  8041ac:	20800c26 	beq	r4,r2,8041e0 <__pack_f+0x140>
  8041b0:	18c00fc4 	addi	r3,r3,63
  8041b4:	00900034 	movhi	r2,16384
  8041b8:	10bfffc4 	addi	r2,r2,-1
  8041bc:	180cd1fa 	srli	r6,r3,7
  8041c0:	10c7803a 	cmpltu	r3,r2,r3
  8041c4:	00802034 	movhi	r2,128
  8041c8:	10bfffc4 	addi	r2,r2,-1
  8041cc:	308c703a 	and	r6,r6,r2
  8041d0:	003fbf06 	br	8040d0 <__pack_f+0x30>
  8041d4:	0007883a 	mov	r3,zero
  8041d8:	000d883a 	mov	r6,zero
  8041dc:	003ff906 	br	8041c4 <__pack_f+0x124>
  8041e0:	1880200c 	andi	r2,r3,128
  8041e4:	10000126 	beq	r2,zero,8041ec <__pack_f+0x14c>
  8041e8:	1907883a 	add	r3,r3,r4
  8041ec:	180cd1fa 	srli	r6,r3,7
  8041f0:	00900034 	movhi	r2,16384
  8041f4:	10bfffc4 	addi	r2,r2,-1
  8041f8:	10c7803a 	cmpltu	r3,r2,r3
  8041fc:	003ff106 	br	8041c4 <__pack_f+0x124>

00804200 <__unpack_f>:
  804200:	21800017 	ldw	r6,0(r4)
  804204:	00c02034 	movhi	r3,128
  804208:	18ffffc4 	addi	r3,r3,-1
  80420c:	3004d5fa 	srli	r2,r6,23
  804210:	3008d7fa 	srli	r4,r6,31
  804214:	30ce703a 	and	r7,r6,r3
  804218:	10c03fcc 	andi	r3,r2,255
  80421c:	29000115 	stw	r4,4(r5)
  804220:	1800131e 	bne	r3,zero,804270 <__unpack_f+0x70>
  804224:	38000f26 	beq	r7,zero,804264 <__unpack_f+0x64>
  804228:	380691fa 	slli	r3,r7,7
  80422c:	01bfe084 	movi	r6,-126
  804230:	008000c4 	movi	r2,3
  804234:	01100034 	movhi	r4,16384
  804238:	213fffc4 	addi	r4,r4,-1
  80423c:	28800015 	stw	r2,0(r5)
  804240:	29800215 	stw	r6,8(r5)
  804244:	20c00536 	bltu	r4,r3,80425c <__unpack_f+0x5c>
  804248:	3005883a 	mov	r2,r6
  80424c:	18c7883a 	add	r3,r3,r3
  804250:	10bfffc4 	addi	r2,r2,-1
  804254:	20fffd2e 	bgeu	r4,r3,80424c <__unpack_f+0x4c>
  804258:	28800215 	stw	r2,8(r5)
  80425c:	28c00315 	stw	r3,12(r5)
  804260:	f800283a 	ret
  804264:	00800084 	movi	r2,2
  804268:	28800015 	stw	r2,0(r5)
  80426c:	f800283a 	ret
  804270:	00803fc4 	movi	r2,255
  804274:	18800826 	beq	r3,r2,804298 <__unpack_f+0x98>
  804278:	380491fa 	slli	r2,r7,7
  80427c:	18ffe044 	addi	r3,r3,-127
  804280:	28c00215 	stw	r3,8(r5)
  804284:	10900034 	orhi	r2,r2,16384
  804288:	28800315 	stw	r2,12(r5)
  80428c:	008000c4 	movi	r2,3
  804290:	28800015 	stw	r2,0(r5)
  804294:	f800283a 	ret
  804298:	3800031e 	bne	r7,zero,8042a8 <__unpack_f+0xa8>
  80429c:	00800104 	movi	r2,4
  8042a0:	28800015 	stw	r2,0(r5)
  8042a4:	f800283a 	ret
  8042a8:	3080042c 	andhi	r2,r6,16
  8042ac:	10000426 	beq	r2,zero,8042c0 <__unpack_f+0xc0>
  8042b0:	00800044 	movi	r2,1
  8042b4:	28800015 	stw	r2,0(r5)
  8042b8:	29c00315 	stw	r7,12(r5)
  8042bc:	f800283a 	ret
  8042c0:	28000015 	stw	zero,0(r5)
  8042c4:	003ffc06 	br	8042b8 <__unpack_f+0xb8>

008042c8 <__make_fp>:
  8042c8:	defffb04 	addi	sp,sp,-20
  8042cc:	d9000015 	stw	r4,0(sp)
  8042d0:	d809883a 	mov	r4,sp
  8042d4:	dfc00415 	stw	ra,16(sp)
  8042d8:	d9400115 	stw	r5,4(sp)
  8042dc:	d9800215 	stw	r6,8(sp)
  8042e0:	d9c00315 	stw	r7,12(sp)
  8042e4:	08040a00 	call	8040a0 <__pack_f>
  8042e8:	dfc00417 	ldw	ra,16(sp)
  8042ec:	dec00504 	addi	sp,sp,20
  8042f0:	f800283a 	ret

008042f4 <__pack_d>:
  8042f4:	20c00017 	ldw	r3,0(r4)
  8042f8:	defffd04 	addi	sp,sp,-12
  8042fc:	dc000015 	stw	r16,0(sp)
  804300:	dc800215 	stw	r18,8(sp)
  804304:	dc400115 	stw	r17,4(sp)
  804308:	00800044 	movi	r2,1
  80430c:	22000317 	ldw	r8,12(r4)
  804310:	001f883a 	mov	r15,zero
  804314:	22400417 	ldw	r9,16(r4)
  804318:	24000117 	ldw	r16,4(r4)
  80431c:	10c0552e 	bgeu	r2,r3,804474 <__pack_d+0x180>
  804320:	00800104 	movi	r2,4
  804324:	18804f26 	beq	r3,r2,804464 <__pack_d+0x170>
  804328:	00800084 	movi	r2,2
  80432c:	18800226 	beq	r3,r2,804338 <__pack_d+0x44>
  804330:	4244b03a 	or	r2,r8,r9
  804334:	10001a1e 	bne	r2,zero,8043a0 <__pack_d+0xac>
  804338:	000d883a 	mov	r6,zero
  80433c:	000f883a 	mov	r7,zero
  804340:	0011883a 	mov	r8,zero
  804344:	00800434 	movhi	r2,16
  804348:	10bfffc4 	addi	r2,r2,-1
  80434c:	301d883a 	mov	r14,r6
  804350:	3884703a 	and	r2,r7,r2
  804354:	400a953a 	slli	r5,r8,20
  804358:	79bffc2c 	andhi	r6,r15,65520
  80435c:	308cb03a 	or	r6,r6,r2
  804360:	00e00434 	movhi	r3,32784
  804364:	18ffffc4 	addi	r3,r3,-1
  804368:	800497fa 	slli	r2,r16,31
  80436c:	30c6703a 	and	r3,r6,r3
  804370:	1946b03a 	or	r3,r3,r5
  804374:	01600034 	movhi	r5,32768
  804378:	297fffc4 	addi	r5,r5,-1
  80437c:	194a703a 	and	r5,r3,r5
  804380:	288ab03a 	or	r5,r5,r2
  804384:	2807883a 	mov	r3,r5
  804388:	7005883a 	mov	r2,r14
  80438c:	dc800217 	ldw	r18,8(sp)
  804390:	dc400117 	ldw	r17,4(sp)
  804394:	dc000017 	ldw	r16,0(sp)
  804398:	dec00304 	addi	sp,sp,12
  80439c:	f800283a 	ret
  8043a0:	21000217 	ldw	r4,8(r4)
  8043a4:	00bf0084 	movi	r2,-1022
  8043a8:	20803f16 	blt	r4,r2,8044a8 <__pack_d+0x1b4>
  8043ac:	0080ffc4 	movi	r2,1023
  8043b0:	11002c16 	blt	r2,r4,804464 <__pack_d+0x170>
  8043b4:	00803fc4 	movi	r2,255
  8043b8:	408c703a 	and	r6,r8,r2
  8043bc:	00802004 	movi	r2,128
  8043c0:	0007883a 	mov	r3,zero
  8043c4:	000f883a 	mov	r7,zero
  8043c8:	2280ffc4 	addi	r10,r4,1023
  8043cc:	30801e26 	beq	r6,r2,804448 <__pack_d+0x154>
  8043d0:	00801fc4 	movi	r2,127
  8043d4:	4089883a 	add	r4,r8,r2
  8043d8:	220d803a 	cmpltu	r6,r4,r8
  8043dc:	324d883a 	add	r6,r6,r9
  8043e0:	2011883a 	mov	r8,r4
  8043e4:	3013883a 	mov	r9,r6
  8043e8:	00880034 	movhi	r2,8192
  8043ec:	10bfffc4 	addi	r2,r2,-1
  8043f0:	12400d36 	bltu	r2,r9,804428 <__pack_d+0x134>
  8043f4:	4804963a 	slli	r2,r9,24
  8043f8:	400cd23a 	srli	r6,r8,8
  8043fc:	480ed23a 	srli	r7,r9,8
  804400:	013fffc4 	movi	r4,-1
  804404:	118cb03a 	or	r6,r2,r6
  804408:	01400434 	movhi	r5,16
  80440c:	297fffc4 	addi	r5,r5,-1
  804410:	3104703a 	and	r2,r6,r4
  804414:	3946703a 	and	r3,r7,r5
  804418:	5201ffcc 	andi	r8,r10,2047
  80441c:	100d883a 	mov	r6,r2
  804420:	180f883a 	mov	r7,r3
  804424:	003fc706 	br	804344 <__pack_d+0x50>
  804428:	480897fa 	slli	r4,r9,31
  80442c:	4004d07a 	srli	r2,r8,1
  804430:	4806d07a 	srli	r3,r9,1
  804434:	52800044 	addi	r10,r10,1
  804438:	2084b03a 	or	r2,r4,r2
  80443c:	1011883a 	mov	r8,r2
  804440:	1813883a 	mov	r9,r3
  804444:	003feb06 	br	8043f4 <__pack_d+0x100>
  804448:	383fe11e 	bne	r7,zero,8043d0 <__pack_d+0xdc>
  80444c:	01004004 	movi	r4,256
  804450:	4104703a 	and	r2,r8,r4
  804454:	10c4b03a 	or	r2,r2,r3
  804458:	103fe326 	beq	r2,zero,8043e8 <__pack_d+0xf4>
  80445c:	3005883a 	mov	r2,r6
  804460:	003fdc06 	br	8043d4 <__pack_d+0xe0>
  804464:	000d883a 	mov	r6,zero
  804468:	000f883a 	mov	r7,zero
  80446c:	0201ffc4 	movi	r8,2047
  804470:	003fb406 	br	804344 <__pack_d+0x50>
  804474:	0005883a 	mov	r2,zero
  804478:	00c00234 	movhi	r3,8
  80447c:	408cb03a 	or	r6,r8,r2
  804480:	48ceb03a 	or	r7,r9,r3
  804484:	013fffc4 	movi	r4,-1
  804488:	01400434 	movhi	r5,16
  80448c:	297fffc4 	addi	r5,r5,-1
  804490:	3104703a 	and	r2,r6,r4
  804494:	3946703a 	and	r3,r7,r5
  804498:	100d883a 	mov	r6,r2
  80449c:	180f883a 	mov	r7,r3
  8044a0:	0201ffc4 	movi	r8,2047
  8044a4:	003fa706 	br	804344 <__pack_d+0x50>
  8044a8:	1109c83a 	sub	r4,r2,r4
  8044ac:	00800e04 	movi	r2,56
  8044b0:	11004316 	blt	r2,r4,8045c0 <__pack_d+0x2cc>
  8044b4:	21fff804 	addi	r7,r4,-32
  8044b8:	38004516 	blt	r7,zero,8045d0 <__pack_d+0x2dc>
  8044bc:	49d8d83a 	srl	r12,r9,r7
  8044c0:	001b883a 	mov	r13,zero
  8044c4:	0023883a 	mov	r17,zero
  8044c8:	01400044 	movi	r5,1
  8044cc:	0025883a 	mov	r18,zero
  8044d0:	38004716 	blt	r7,zero,8045f0 <__pack_d+0x2fc>
  8044d4:	29d6983a 	sll	r11,r5,r7
  8044d8:	0015883a 	mov	r10,zero
  8044dc:	00bfffc4 	movi	r2,-1
  8044e0:	5089883a 	add	r4,r10,r2
  8044e4:	588b883a 	add	r5,r11,r2
  8044e8:	228d803a 	cmpltu	r6,r4,r10
  8044ec:	314b883a 	add	r5,r6,r5
  8044f0:	4104703a 	and	r2,r8,r4
  8044f4:	4946703a 	and	r3,r9,r5
  8044f8:	10c4b03a 	or	r2,r2,r3
  8044fc:	10000226 	beq	r2,zero,804508 <__pack_d+0x214>
  804500:	04400044 	movi	r17,1
  804504:	0025883a 	mov	r18,zero
  804508:	00803fc4 	movi	r2,255
  80450c:	644eb03a 	or	r7,r12,r17
  804510:	3892703a 	and	r9,r7,r2
  804514:	00802004 	movi	r2,128
  804518:	6c90b03a 	or	r8,r13,r18
  80451c:	0015883a 	mov	r10,zero
  804520:	48801626 	beq	r9,r2,80457c <__pack_d+0x288>
  804524:	01001fc4 	movi	r4,127
  804528:	3905883a 	add	r2,r7,r4
  80452c:	11cd803a 	cmpltu	r6,r2,r7
  804530:	320d883a 	add	r6,r6,r8
  804534:	100f883a 	mov	r7,r2
  804538:	00840034 	movhi	r2,4096
  80453c:	10bfffc4 	addi	r2,r2,-1
  804540:	3011883a 	mov	r8,r6
  804544:	0007883a 	mov	r3,zero
  804548:	11801b36 	bltu	r2,r6,8045b8 <__pack_d+0x2c4>
  80454c:	4004963a 	slli	r2,r8,24
  804550:	3808d23a 	srli	r4,r7,8
  804554:	400ad23a 	srli	r5,r8,8
  804558:	1813883a 	mov	r9,r3
  80455c:	1108b03a 	or	r4,r2,r4
  804560:	00bfffc4 	movi	r2,-1
  804564:	00c00434 	movhi	r3,16
  804568:	18ffffc4 	addi	r3,r3,-1
  80456c:	208c703a 	and	r6,r4,r2
  804570:	28ce703a 	and	r7,r5,r3
  804574:	4a01ffcc 	andi	r8,r9,2047
  804578:	003f7206 	br	804344 <__pack_d+0x50>
  80457c:	503fe91e 	bne	r10,zero,804524 <__pack_d+0x230>
  804580:	01004004 	movi	r4,256
  804584:	3904703a 	and	r2,r7,r4
  804588:	0007883a 	mov	r3,zero
  80458c:	10c4b03a 	or	r2,r2,r3
  804590:	10000626 	beq	r2,zero,8045ac <__pack_d+0x2b8>
  804594:	3a45883a 	add	r2,r7,r9
  804598:	11cd803a 	cmpltu	r6,r2,r7
  80459c:	320d883a 	add	r6,r6,r8
  8045a0:	100f883a 	mov	r7,r2
  8045a4:	3011883a 	mov	r8,r6
  8045a8:	0007883a 	mov	r3,zero
  8045ac:	00840034 	movhi	r2,4096
  8045b0:	10bfffc4 	addi	r2,r2,-1
  8045b4:	123fe52e 	bgeu	r2,r8,80454c <__pack_d+0x258>
  8045b8:	00c00044 	movi	r3,1
  8045bc:	003fe306 	br	80454c <__pack_d+0x258>
  8045c0:	0009883a 	mov	r4,zero
  8045c4:	0013883a 	mov	r9,zero
  8045c8:	000b883a 	mov	r5,zero
  8045cc:	003fe406 	br	804560 <__pack_d+0x26c>
  8045d0:	4a47883a 	add	r3,r9,r9
  8045d4:	008007c4 	movi	r2,31
  8045d8:	1105c83a 	sub	r2,r2,r4
  8045dc:	1886983a 	sll	r3,r3,r2
  8045e0:	4118d83a 	srl	r12,r8,r4
  8045e4:	491ad83a 	srl	r13,r9,r4
  8045e8:	1b18b03a 	or	r12,r3,r12
  8045ec:	003fb506 	br	8044c4 <__pack_d+0x1d0>
  8045f0:	2806d07a 	srli	r3,r5,1
  8045f4:	008007c4 	movi	r2,31
  8045f8:	1105c83a 	sub	r2,r2,r4
  8045fc:	1896d83a 	srl	r11,r3,r2
  804600:	2914983a 	sll	r10,r5,r4
  804604:	003fb506 	br	8044dc <__pack_d+0x1e8>

00804608 <__unpack_d>:
  804608:	20c00117 	ldw	r3,4(r4)
  80460c:	22400017 	ldw	r9,0(r4)
  804610:	00800434 	movhi	r2,16
  804614:	10bfffc4 	addi	r2,r2,-1
  804618:	1808d53a 	srli	r4,r3,20
  80461c:	180cd7fa 	srli	r6,r3,31
  804620:	1894703a 	and	r10,r3,r2
  804624:	2201ffcc 	andi	r8,r4,2047
  804628:	281b883a 	mov	r13,r5
  80462c:	4817883a 	mov	r11,r9
  804630:	29800115 	stw	r6,4(r5)
  804634:	5019883a 	mov	r12,r10
  804638:	40001e1e 	bne	r8,zero,8046b4 <__unpack_d+0xac>
  80463c:	4a84b03a 	or	r2,r9,r10
  804640:	10001926 	beq	r2,zero,8046a8 <__unpack_d+0xa0>
  804644:	4804d63a 	srli	r2,r9,24
  804648:	500c923a 	slli	r6,r10,8
  80464c:	013f0084 	movi	r4,-1022
  804650:	00c40034 	movhi	r3,4096
  804654:	18ffffc4 	addi	r3,r3,-1
  804658:	118cb03a 	or	r6,r2,r6
  80465c:	008000c4 	movi	r2,3
  804660:	480a923a 	slli	r5,r9,8
  804664:	68800015 	stw	r2,0(r13)
  804668:	69000215 	stw	r4,8(r13)
  80466c:	19800b36 	bltu	r3,r6,80469c <__unpack_d+0x94>
  804670:	200f883a 	mov	r7,r4
  804674:	1811883a 	mov	r8,r3
  804678:	2945883a 	add	r2,r5,r5
  80467c:	1149803a 	cmpltu	r4,r2,r5
  804680:	3187883a 	add	r3,r6,r6
  804684:	20c9883a 	add	r4,r4,r3
  804688:	100b883a 	mov	r5,r2
  80468c:	200d883a 	mov	r6,r4
  804690:	39ffffc4 	addi	r7,r7,-1
  804694:	413ff82e 	bgeu	r8,r4,804678 <__unpack_d+0x70>
  804698:	69c00215 	stw	r7,8(r13)
  80469c:	69800415 	stw	r6,16(r13)
  8046a0:	69400315 	stw	r5,12(r13)
  8046a4:	f800283a 	ret
  8046a8:	00800084 	movi	r2,2
  8046ac:	28800015 	stw	r2,0(r5)
  8046b0:	f800283a 	ret
  8046b4:	0081ffc4 	movi	r2,2047
  8046b8:	40800f26 	beq	r8,r2,8046f8 <__unpack_d+0xf0>
  8046bc:	480cd63a 	srli	r6,r9,24
  8046c0:	5006923a 	slli	r3,r10,8
  8046c4:	4804923a 	slli	r2,r9,8
  8046c8:	0009883a 	mov	r4,zero
  8046cc:	30c6b03a 	or	r3,r6,r3
  8046d0:	01440034 	movhi	r5,4096
  8046d4:	110cb03a 	or	r6,r2,r4
  8046d8:	423f0044 	addi	r8,r8,-1023
  8046dc:	194eb03a 	or	r7,r3,r5
  8046e0:	008000c4 	movi	r2,3
  8046e4:	69c00415 	stw	r7,16(r13)
  8046e8:	6a000215 	stw	r8,8(r13)
  8046ec:	68800015 	stw	r2,0(r13)
  8046f0:	69800315 	stw	r6,12(r13)
  8046f4:	f800283a 	ret
  8046f8:	4a84b03a 	or	r2,r9,r10
  8046fc:	1000031e 	bne	r2,zero,80470c <__unpack_d+0x104>
  804700:	00800104 	movi	r2,4
  804704:	28800015 	stw	r2,0(r5)
  804708:	f800283a 	ret
  80470c:	0009883a 	mov	r4,zero
  804710:	01400234 	movhi	r5,8
  804714:	4904703a 	and	r2,r9,r4
  804718:	5146703a 	and	r3,r10,r5
  80471c:	10c4b03a 	or	r2,r2,r3
  804720:	10000526 	beq	r2,zero,804738 <__unpack_d+0x130>
  804724:	00800044 	movi	r2,1
  804728:	68800015 	stw	r2,0(r13)
  80472c:	6b000415 	stw	r12,16(r13)
  804730:	6ac00315 	stw	r11,12(r13)
  804734:	f800283a 	ret
  804738:	68000015 	stw	zero,0(r13)
  80473c:	003ffb06 	br	80472c <__unpack_d+0x124>

00804740 <__fpcmp_parts_d>:
  804740:	21800017 	ldw	r6,0(r4)
  804744:	00c00044 	movi	r3,1
  804748:	19800a2e 	bgeu	r3,r6,804774 <__fpcmp_parts_d+0x34>
  80474c:	28800017 	ldw	r2,0(r5)
  804750:	1880082e 	bgeu	r3,r2,804774 <__fpcmp_parts_d+0x34>
  804754:	00c00104 	movi	r3,4
  804758:	30c02626 	beq	r6,r3,8047f4 <__fpcmp_parts_d+0xb4>
  80475c:	10c02226 	beq	r2,r3,8047e8 <__fpcmp_parts_d+0xa8>
  804760:	00c00084 	movi	r3,2
  804764:	30c00526 	beq	r6,r3,80477c <__fpcmp_parts_d+0x3c>
  804768:	10c0071e 	bne	r2,r3,804788 <__fpcmp_parts_d+0x48>
  80476c:	20800117 	ldw	r2,4(r4)
  804770:	1000091e 	bne	r2,zero,804798 <__fpcmp_parts_d+0x58>
  804774:	00800044 	movi	r2,1
  804778:	f800283a 	ret
  80477c:	10c01a1e 	bne	r2,r3,8047e8 <__fpcmp_parts_d+0xa8>
  804780:	0005883a 	mov	r2,zero
  804784:	f800283a 	ret
  804788:	22000117 	ldw	r8,4(r4)
  80478c:	28800117 	ldw	r2,4(r5)
  804790:	40800326 	beq	r8,r2,8047a0 <__fpcmp_parts_d+0x60>
  804794:	403ff726 	beq	r8,zero,804774 <__fpcmp_parts_d+0x34>
  804798:	00bfffc4 	movi	r2,-1
  80479c:	f800283a 	ret
  8047a0:	20c00217 	ldw	r3,8(r4)
  8047a4:	28800217 	ldw	r2,8(r5)
  8047a8:	10fffa16 	blt	r2,r3,804794 <__fpcmp_parts_d+0x54>
  8047ac:	18800916 	blt	r3,r2,8047d4 <__fpcmp_parts_d+0x94>
  8047b0:	21c00417 	ldw	r7,16(r4)
  8047b4:	28c00417 	ldw	r3,16(r5)
  8047b8:	21800317 	ldw	r6,12(r4)
  8047bc:	28800317 	ldw	r2,12(r5)
  8047c0:	19fff436 	bltu	r3,r7,804794 <__fpcmp_parts_d+0x54>
  8047c4:	38c00526 	beq	r7,r3,8047dc <__fpcmp_parts_d+0x9c>
  8047c8:	38c00236 	bltu	r7,r3,8047d4 <__fpcmp_parts_d+0x94>
  8047cc:	19ffec1e 	bne	r3,r7,804780 <__fpcmp_parts_d+0x40>
  8047d0:	30bfeb2e 	bgeu	r6,r2,804780 <__fpcmp_parts_d+0x40>
  8047d4:	403fe71e 	bne	r8,zero,804774 <__fpcmp_parts_d+0x34>
  8047d8:	003fef06 	br	804798 <__fpcmp_parts_d+0x58>
  8047dc:	11bffa2e 	bgeu	r2,r6,8047c8 <__fpcmp_parts_d+0x88>
  8047e0:	403fe426 	beq	r8,zero,804774 <__fpcmp_parts_d+0x34>
  8047e4:	003fec06 	br	804798 <__fpcmp_parts_d+0x58>
  8047e8:	28800117 	ldw	r2,4(r5)
  8047ec:	103fe11e 	bne	r2,zero,804774 <__fpcmp_parts_d+0x34>
  8047f0:	003fe906 	br	804798 <__fpcmp_parts_d+0x58>
  8047f4:	11bfdd1e 	bne	r2,r6,80476c <__fpcmp_parts_d+0x2c>
  8047f8:	28c00117 	ldw	r3,4(r5)
  8047fc:	20800117 	ldw	r2,4(r4)
  804800:	1885c83a 	sub	r2,r3,r2
  804804:	f800283a 	ret

00804808 <gcvt>:
  804808:	defff804 	addi	sp,sp,-32
  80480c:	0005883a 	mov	r2,zero
  804810:	dcc00615 	stw	r19,24(sp)
  804814:	dc800515 	stw	r18,20(sp)
  804818:	3027883a 	mov	r19,r6
  80481c:	3825883a 	mov	r18,r7
  804820:	100d883a 	mov	r6,r2
  804824:	000f883a 	mov	r7,zero
  804828:	dc400415 	stw	r17,16(sp)
  80482c:	dc000315 	stw	r16,12(sp)
  804830:	dfc00715 	stw	ra,28(sp)
  804834:	2021883a 	mov	r16,r4
  804838:	2823883a 	mov	r17,r5
  80483c:	080d9400 	call	80d940 <__ltdf2>
  804840:	9007883a 	mov	r3,r18
  804844:	10001516 	blt	r2,zero,80489c <gcvt+0x94>
  804848:	00802074 	movhi	r2,129
  80484c:	1089a304 	addi	r2,r2,9868
  804850:	11000017 	ldw	r4,0(r2)
  804854:	980f883a 	mov	r7,r19
  804858:	008019c4 	movi	r2,103
  80485c:	880d883a 	mov	r6,r17
  804860:	800b883a 	mov	r5,r16
  804864:	d8c00015 	stw	r3,0(sp)
  804868:	d8800115 	stw	r2,4(sp)
  80486c:	d8000215 	stw	zero,8(sp)
  804870:	080861c0 	call	80861c <_gcvt>
  804874:	900f883a 	mov	r7,r18
  804878:	10000d26 	beq	r2,zero,8048b0 <gcvt+0xa8>
  80487c:	3805883a 	mov	r2,r7
  804880:	dfc00717 	ldw	ra,28(sp)
  804884:	dcc00617 	ldw	r19,24(sp)
  804888:	dc800517 	ldw	r18,20(sp)
  80488c:	dc400417 	ldw	r17,16(sp)
  804890:	dc000317 	ldw	r16,12(sp)
  804894:	dec00804 	addi	sp,sp,32
  804898:	f800283a 	ret
  80489c:	00800b44 	movi	r2,45
  8048a0:	9cffffc4 	addi	r19,r19,-1
  8048a4:	90c00044 	addi	r3,r18,1
  8048a8:	90800005 	stb	r2,0(r18)
  8048ac:	003fe606 	br	804848 <gcvt+0x40>
  8048b0:	000f883a 	mov	r7,zero
  8048b4:	3805883a 	mov	r2,r7
  8048b8:	dfc00717 	ldw	ra,28(sp)
  8048bc:	dcc00617 	ldw	r19,24(sp)
  8048c0:	dc800517 	ldw	r18,20(sp)
  8048c4:	dc400417 	ldw	r17,16(sp)
  8048c8:	dc000317 	ldw	r16,12(sp)
  8048cc:	dec00804 	addi	sp,sp,32
  8048d0:	f800283a 	ret

008048d4 <gcvtf>:
  8048d4:	defffd04 	addi	sp,sp,-12
  8048d8:	dcc00115 	stw	r19,4(sp)
  8048dc:	dc400015 	stw	r17,0(sp)
  8048e0:	3027883a 	mov	r19,r6
  8048e4:	2823883a 	mov	r17,r5
  8048e8:	dfc00215 	stw	ra,8(sp)
  8048ec:	0802eb40 	call	802eb4 <__extendsfdf2>
  8048f0:	180b883a 	mov	r5,r3
  8048f4:	880d883a 	mov	r6,r17
  8048f8:	980f883a 	mov	r7,r19
  8048fc:	1009883a 	mov	r4,r2
  804900:	dfc00217 	ldw	ra,8(sp)
  804904:	dcc00117 	ldw	r19,4(sp)
  804908:	dc400017 	ldw	r17,0(sp)
  80490c:	dec00304 	addi	sp,sp,12
  804910:	08048081 	jmpi	804808 <gcvt>

00804914 <ecvt>:
  804914:	defffd04 	addi	sp,sp,-12
  804918:	da000317 	ldw	r8,12(sp)
  80491c:	dfc00215 	stw	ra,8(sp)
  804920:	d8000115 	stw	zero,4(sp)
  804924:	da000015 	stw	r8,0(sp)
  804928:	0808bf40 	call	808bf4 <ecvtbuf>
  80492c:	dfc00217 	ldw	ra,8(sp)
  804930:	dec00304 	addi	sp,sp,12
  804934:	f800283a 	ret

00804938 <ecvtf>:
  804938:	defffb04 	addi	sp,sp,-20
  80493c:	dfc00415 	stw	ra,16(sp)
  804940:	dd400315 	stw	r21,12(sp)
  804944:	dcc00215 	stw	r19,8(sp)
  804948:	382b883a 	mov	r21,r7
  80494c:	3027883a 	mov	r19,r6
  804950:	dc400115 	stw	r17,4(sp)
  804954:	2823883a 	mov	r17,r5
  804958:	0802eb40 	call	802eb4 <__extendsfdf2>
  80495c:	180b883a 	mov	r5,r3
  804960:	880d883a 	mov	r6,r17
  804964:	980f883a 	mov	r7,r19
  804968:	1009883a 	mov	r4,r2
  80496c:	dd400015 	stw	r21,0(sp)
  804970:	08049140 	call	804914 <ecvt>
  804974:	dfc00417 	ldw	ra,16(sp)
  804978:	dd400317 	ldw	r21,12(sp)
  80497c:	dcc00217 	ldw	r19,8(sp)
  804980:	dc400117 	ldw	r17,4(sp)
  804984:	dec00504 	addi	sp,sp,20
  804988:	f800283a 	ret

0080498c <fcvt>:
  80498c:	defffd04 	addi	sp,sp,-12
  804990:	da000317 	ldw	r8,12(sp)
  804994:	dfc00215 	stw	ra,8(sp)
  804998:	d8000115 	stw	zero,4(sp)
  80499c:	da000015 	stw	r8,0(sp)
  8049a0:	0808d3c0 	call	808d3c <fcvtbuf>
  8049a4:	dfc00217 	ldw	ra,8(sp)
  8049a8:	dec00304 	addi	sp,sp,12
  8049ac:	f800283a 	ret

008049b0 <fcvtf>:
  8049b0:	defffb04 	addi	sp,sp,-20
  8049b4:	dfc00415 	stw	ra,16(sp)
  8049b8:	dd400315 	stw	r21,12(sp)
  8049bc:	dcc00215 	stw	r19,8(sp)
  8049c0:	382b883a 	mov	r21,r7
  8049c4:	3027883a 	mov	r19,r6
  8049c8:	dc400115 	stw	r17,4(sp)
  8049cc:	2823883a 	mov	r17,r5
  8049d0:	0802eb40 	call	802eb4 <__extendsfdf2>
  8049d4:	180b883a 	mov	r5,r3
  8049d8:	880d883a 	mov	r6,r17
  8049dc:	980f883a 	mov	r7,r19
  8049e0:	1009883a 	mov	r4,r2
  8049e4:	dd400015 	stw	r21,0(sp)
  8049e8:	080498c0 	call	80498c <fcvt>
  8049ec:	dfc00417 	ldw	ra,16(sp)
  8049f0:	dd400317 	ldw	r21,12(sp)
  8049f4:	dcc00217 	ldw	r19,8(sp)
  8049f8:	dc400117 	ldw	r17,4(sp)
  8049fc:	dec00504 	addi	sp,sp,20
  804a00:	f800283a 	ret

00804a04 <printf>:
  804a04:	defffb04 	addi	sp,sp,-20
  804a08:	dfc00115 	stw	ra,4(sp)
  804a0c:	d9400215 	stw	r5,8(sp)
  804a10:	d9800315 	stw	r6,12(sp)
  804a14:	d9c00415 	stw	r7,16(sp)
  804a18:	00802074 	movhi	r2,129
  804a1c:	1089a304 	addi	r2,r2,9868
  804a20:	10c00017 	ldw	r3,0(r2)
  804a24:	200b883a 	mov	r5,r4
  804a28:	d8800204 	addi	r2,sp,8
  804a2c:	19000217 	ldw	r4,8(r3)
  804a30:	100d883a 	mov	r6,r2
  804a34:	d8800015 	stw	r2,0(sp)
  804a38:	0806ac00 	call	806ac0 <__vfprintf_internal>
  804a3c:	dfc00117 	ldw	ra,4(sp)
  804a40:	dec00504 	addi	sp,sp,20
  804a44:	f800283a 	ret

00804a48 <_printf_r>:
  804a48:	defffc04 	addi	sp,sp,-16
  804a4c:	dfc00115 	stw	ra,4(sp)
  804a50:	d9800215 	stw	r6,8(sp)
  804a54:	d9c00315 	stw	r7,12(sp)
  804a58:	280d883a 	mov	r6,r5
  804a5c:	21400217 	ldw	r5,8(r4)
  804a60:	d8c00204 	addi	r3,sp,8
  804a64:	180f883a 	mov	r7,r3
  804a68:	d8c00015 	stw	r3,0(sp)
  804a6c:	0804bfc0 	call	804bfc <___vfprintf_internal_r>
  804a70:	dfc00117 	ldw	ra,4(sp)
  804a74:	dec00404 	addi	sp,sp,16
  804a78:	f800283a 	ret

00804a7c <_puts_r>:
  804a7c:	defff604 	addi	sp,sp,-40
  804a80:	dc400715 	stw	r17,28(sp)
  804a84:	2023883a 	mov	r17,r4
  804a88:	2809883a 	mov	r4,r5
  804a8c:	dfc00915 	stw	ra,36(sp)
  804a90:	dcc00815 	stw	r19,32(sp)
  804a94:	2827883a 	mov	r19,r5
  804a98:	0804b300 	call	804b30 <strlen>
  804a9c:	89400217 	ldw	r5,8(r17)
  804aa0:	00c02074 	movhi	r3,129
  804aa4:	18c29304 	addi	r3,r3,2636
  804aa8:	01c00044 	movi	r7,1
  804aac:	12000044 	addi	r8,r2,1
  804ab0:	d8c00515 	stw	r3,20(sp)
  804ab4:	d9c00615 	stw	r7,24(sp)
  804ab8:	d8c00304 	addi	r3,sp,12
  804abc:	01c00084 	movi	r7,2
  804ac0:	8809883a 	mov	r4,r17
  804ac4:	d80d883a 	mov	r6,sp
  804ac8:	d8c00015 	stw	r3,0(sp)
  804acc:	dcc00315 	stw	r19,12(sp)
  804ad0:	da000215 	stw	r8,8(sp)
  804ad4:	d9c00115 	stw	r7,4(sp)
  804ad8:	d8800415 	stw	r2,16(sp)
  804adc:	08098480 	call	809848 <__sfvwrite_r>
  804ae0:	00ffffc4 	movi	r3,-1
  804ae4:	10000626 	beq	r2,zero,804b00 <_puts_r+0x84>
  804ae8:	1805883a 	mov	r2,r3
  804aec:	dfc00917 	ldw	ra,36(sp)
  804af0:	dcc00817 	ldw	r19,32(sp)
  804af4:	dc400717 	ldw	r17,28(sp)
  804af8:	dec00a04 	addi	sp,sp,40
  804afc:	f800283a 	ret
  804b00:	00c00284 	movi	r3,10
  804b04:	1805883a 	mov	r2,r3
  804b08:	dfc00917 	ldw	ra,36(sp)
  804b0c:	dcc00817 	ldw	r19,32(sp)
  804b10:	dc400717 	ldw	r17,28(sp)
  804b14:	dec00a04 	addi	sp,sp,40
  804b18:	f800283a 	ret

00804b1c <puts>:
  804b1c:	00802074 	movhi	r2,129
  804b20:	1089a304 	addi	r2,r2,9868
  804b24:	200b883a 	mov	r5,r4
  804b28:	11000017 	ldw	r4,0(r2)
  804b2c:	0804a7c1 	jmpi	804a7c <_puts_r>

00804b30 <strlen>:
  804b30:	208000cc 	andi	r2,r4,3
  804b34:	2011883a 	mov	r8,r4
  804b38:	1000161e 	bne	r2,zero,804b94 <strlen+0x64>
  804b3c:	20c00017 	ldw	r3,0(r4)
  804b40:	017fbff4 	movhi	r5,65279
  804b44:	297fbfc4 	addi	r5,r5,-257
  804b48:	01e02074 	movhi	r7,32897
  804b4c:	39e02004 	addi	r7,r7,-32640
  804b50:	1945883a 	add	r2,r3,r5
  804b54:	11c4703a 	and	r2,r2,r7
  804b58:	00c6303a 	nor	r3,zero,r3
  804b5c:	1886703a 	and	r3,r3,r2
  804b60:	18000c1e 	bne	r3,zero,804b94 <strlen+0x64>
  804b64:	280d883a 	mov	r6,r5
  804b68:	380b883a 	mov	r5,r7
  804b6c:	21000104 	addi	r4,r4,4
  804b70:	20800017 	ldw	r2,0(r4)
  804b74:	1187883a 	add	r3,r2,r6
  804b78:	1946703a 	and	r3,r3,r5
  804b7c:	0084303a 	nor	r2,zero,r2
  804b80:	10c4703a 	and	r2,r2,r3
  804b84:	103ff926 	beq	r2,zero,804b6c <strlen+0x3c>
  804b88:	20800007 	ldb	r2,0(r4)
  804b8c:	10000326 	beq	r2,zero,804b9c <strlen+0x6c>
  804b90:	21000044 	addi	r4,r4,1
  804b94:	20800007 	ldb	r2,0(r4)
  804b98:	103ffd1e 	bne	r2,zero,804b90 <strlen+0x60>
  804b9c:	2205c83a 	sub	r2,r4,r8
  804ba0:	f800283a 	ret

00804ba4 <__sprint_r>:
  804ba4:	30800217 	ldw	r2,8(r6)
  804ba8:	defffe04 	addi	sp,sp,-8
  804bac:	dc000015 	stw	r16,0(sp)
  804bb0:	dfc00115 	stw	ra,4(sp)
  804bb4:	3021883a 	mov	r16,r6
  804bb8:	0007883a 	mov	r3,zero
  804bbc:	1000061e 	bne	r2,zero,804bd8 <__sprint_r+0x34>
  804bc0:	1805883a 	mov	r2,r3
  804bc4:	30000115 	stw	zero,4(r6)
  804bc8:	dfc00117 	ldw	ra,4(sp)
  804bcc:	dc000017 	ldw	r16,0(sp)
  804bd0:	dec00204 	addi	sp,sp,8
  804bd4:	f800283a 	ret
  804bd8:	08098480 	call	809848 <__sfvwrite_r>
  804bdc:	1007883a 	mov	r3,r2
  804be0:	1805883a 	mov	r2,r3
  804be4:	80000115 	stw	zero,4(r16)
  804be8:	80000215 	stw	zero,8(r16)
  804bec:	dfc00117 	ldw	ra,4(sp)
  804bf0:	dc000017 	ldw	r16,0(sp)
  804bf4:	dec00204 	addi	sp,sp,8
  804bf8:	f800283a 	ret

00804bfc <___vfprintf_internal_r>:
  804bfc:	defea404 	addi	sp,sp,-1392
  804c00:	dd815815 	stw	r22,1376(sp)
  804c04:	dc015215 	stw	r16,1352(sp)
  804c08:	d9c15115 	stw	r7,1348(sp)
  804c0c:	dfc15b15 	stw	ra,1388(sp)
  804c10:	df015a15 	stw	fp,1384(sp)
  804c14:	ddc15915 	stw	r23,1380(sp)
  804c18:	dd415715 	stw	r21,1372(sp)
  804c1c:	dd015615 	stw	r20,1368(sp)
  804c20:	dcc15515 	stw	r19,1364(sp)
  804c24:	dc815415 	stw	r18,1360(sp)
  804c28:	dc415315 	stw	r17,1356(sp)
  804c2c:	282d883a 	mov	r22,r5
  804c30:	3021883a 	mov	r16,r6
  804c34:	d9014f15 	stw	r4,1340(sp)
  804c38:	0809e6c0 	call	809e6c <_localeconv_r>
  804c3c:	10800017 	ldw	r2,0(r2)
  804c40:	d9c15117 	ldw	r7,1348(sp)
  804c44:	d8814915 	stw	r2,1316(sp)
  804c48:	d8814f17 	ldw	r2,1340(sp)
  804c4c:	10000226 	beq	r2,zero,804c58 <___vfprintf_internal_r+0x5c>
  804c50:	10800e17 	ldw	r2,56(r2)
  804c54:	10020d26 	beq	r2,zero,80548c <___vfprintf_internal_r+0x890>
  804c58:	b080030b 	ldhu	r2,12(r22)
  804c5c:	1080020c 	andi	r2,r2,8
  804c60:	10020e26 	beq	r2,zero,80549c <___vfprintf_internal_r+0x8a0>
  804c64:	b0800417 	ldw	r2,16(r22)
  804c68:	10020c26 	beq	r2,zero,80549c <___vfprintf_internal_r+0x8a0>
  804c6c:	b200030b 	ldhu	r8,12(r22)
  804c70:	00800284 	movi	r2,10
  804c74:	40c0068c 	andi	r3,r8,26
  804c78:	18802f1e 	bne	r3,r2,804d38 <___vfprintf_internal_r+0x13c>
  804c7c:	b080038f 	ldh	r2,14(r22)
  804c80:	10002d16 	blt	r2,zero,804d38 <___vfprintf_internal_r+0x13c>
  804c84:	b240038b 	ldhu	r9,14(r22)
  804c88:	b2800717 	ldw	r10,28(r22)
  804c8c:	b2c00917 	ldw	r11,36(r22)
  804c90:	d9014f17 	ldw	r4,1340(sp)
  804c94:	dc402904 	addi	r17,sp,164
  804c98:	d8804004 	addi	r2,sp,256
  804c9c:	00c10004 	movi	r3,1024
  804ca0:	423fff4c 	andi	r8,r8,65533
  804ca4:	800d883a 	mov	r6,r16
  804ca8:	880b883a 	mov	r5,r17
  804cac:	da002c0d 	sth	r8,176(sp)
  804cb0:	da402c8d 	sth	r9,178(sp)
  804cb4:	da803015 	stw	r10,192(sp)
  804cb8:	dac03215 	stw	r11,200(sp)
  804cbc:	d8802d15 	stw	r2,180(sp)
  804cc0:	d8c02e15 	stw	r3,184(sp)
  804cc4:	d8802915 	stw	r2,164(sp)
  804cc8:	d8c02b15 	stw	r3,172(sp)
  804ccc:	d8002f15 	stw	zero,188(sp)
  804cd0:	0804bfc0 	call	804bfc <___vfprintf_internal_r>
  804cd4:	d8814b15 	stw	r2,1324(sp)
  804cd8:	10000416 	blt	r2,zero,804cec <___vfprintf_internal_r+0xf0>
  804cdc:	d9014f17 	ldw	r4,1340(sp)
  804ce0:	880b883a 	mov	r5,r17
  804ce4:	0808ee40 	call	808ee4 <_fflush_r>
  804ce8:	1002321e 	bne	r2,zero,8055b4 <___vfprintf_internal_r+0x9b8>
  804cec:	d8802c0b 	ldhu	r2,176(sp)
  804cf0:	1080100c 	andi	r2,r2,64
  804cf4:	10000326 	beq	r2,zero,804d04 <___vfprintf_internal_r+0x108>
  804cf8:	b080030b 	ldhu	r2,12(r22)
  804cfc:	10801014 	ori	r2,r2,64
  804d00:	b080030d 	sth	r2,12(r22)
  804d04:	d8814b17 	ldw	r2,1324(sp)
  804d08:	dfc15b17 	ldw	ra,1388(sp)
  804d0c:	df015a17 	ldw	fp,1384(sp)
  804d10:	ddc15917 	ldw	r23,1380(sp)
  804d14:	dd815817 	ldw	r22,1376(sp)
  804d18:	dd415717 	ldw	r21,1372(sp)
  804d1c:	dd015617 	ldw	r20,1368(sp)
  804d20:	dcc15517 	ldw	r19,1364(sp)
  804d24:	dc815417 	ldw	r18,1360(sp)
  804d28:	dc415317 	ldw	r17,1356(sp)
  804d2c:	dc015217 	ldw	r16,1352(sp)
  804d30:	dec15c04 	addi	sp,sp,1392
  804d34:	f800283a 	ret
  804d38:	0005883a 	mov	r2,zero
  804d3c:	0007883a 	mov	r3,zero
  804d40:	dd401904 	addi	r21,sp,100
  804d44:	d8814215 	stw	r2,1288(sp)
  804d48:	802f883a 	mov	r23,r16
  804d4c:	d8c14315 	stw	r3,1292(sp)
  804d50:	d8014b15 	stw	zero,1324(sp)
  804d54:	d8014815 	stw	zero,1312(sp)
  804d58:	d8014415 	stw	zero,1296(sp)
  804d5c:	d8014715 	stw	zero,1308(sp)
  804d60:	dd400c15 	stw	r21,48(sp)
  804d64:	d8000e15 	stw	zero,56(sp)
  804d68:	d8000d15 	stw	zero,52(sp)
  804d6c:	b8800007 	ldb	r2,0(r23)
  804d70:	10001926 	beq	r2,zero,804dd8 <___vfprintf_internal_r+0x1dc>
  804d74:	00c00944 	movi	r3,37
  804d78:	10c01726 	beq	r2,r3,804dd8 <___vfprintf_internal_r+0x1dc>
  804d7c:	b821883a 	mov	r16,r23
  804d80:	00000106 	br	804d88 <___vfprintf_internal_r+0x18c>
  804d84:	10c00326 	beq	r2,r3,804d94 <___vfprintf_internal_r+0x198>
  804d88:	84000044 	addi	r16,r16,1
  804d8c:	80800007 	ldb	r2,0(r16)
  804d90:	103ffc1e 	bne	r2,zero,804d84 <___vfprintf_internal_r+0x188>
  804d94:	85e7c83a 	sub	r19,r16,r23
  804d98:	98000e26 	beq	r19,zero,804dd4 <___vfprintf_internal_r+0x1d8>
  804d9c:	dc800e17 	ldw	r18,56(sp)
  804da0:	dc400d17 	ldw	r17,52(sp)
  804da4:	008001c4 	movi	r2,7
  804da8:	94e5883a 	add	r18,r18,r19
  804dac:	8c400044 	addi	r17,r17,1
  804db0:	adc00015 	stw	r23,0(r21)
  804db4:	dc800e15 	stw	r18,56(sp)
  804db8:	acc00115 	stw	r19,4(r21)
  804dbc:	dc400d15 	stw	r17,52(sp)
  804dc0:	14428b16 	blt	r2,r17,8057f0 <___vfprintf_internal_r+0xbf4>
  804dc4:	ad400204 	addi	r21,r21,8
  804dc8:	d9014b17 	ldw	r4,1324(sp)
  804dcc:	24c9883a 	add	r4,r4,r19
  804dd0:	d9014b15 	stw	r4,1324(sp)
  804dd4:	802f883a 	mov	r23,r16
  804dd8:	b8800007 	ldb	r2,0(r23)
  804ddc:	10013c26 	beq	r2,zero,8052d0 <___vfprintf_internal_r+0x6d4>
  804de0:	bdc00044 	addi	r23,r23,1
  804de4:	d8000405 	stb	zero,16(sp)
  804de8:	b8c00007 	ldb	r3,0(r23)
  804dec:	04ffffc4 	movi	r19,-1
  804df0:	d8014c15 	stw	zero,1328(sp)
  804df4:	d8014a15 	stw	zero,1320(sp)
  804df8:	d8c14d15 	stw	r3,1332(sp)
  804dfc:	bdc00044 	addi	r23,r23,1
  804e00:	d9414d17 	ldw	r5,1332(sp)
  804e04:	00801604 	movi	r2,88
  804e08:	28fff804 	addi	r3,r5,-32
  804e0c:	10c06036 	bltu	r2,r3,804f90 <___vfprintf_internal_r+0x394>
  804e10:	18c5883a 	add	r2,r3,r3
  804e14:	1085883a 	add	r2,r2,r2
  804e18:	00c02034 	movhi	r3,128
  804e1c:	18d38b04 	addi	r3,r3,20012
  804e20:	10c5883a 	add	r2,r2,r3
  804e24:	11000017 	ldw	r4,0(r2)
  804e28:	2000683a 	jmp	r4
  804e2c:	00805da0 	cmpeqi	r2,zero,374
  804e30:	00804f90 	cmplti	r2,zero,318
  804e34:	00804f90 	cmplti	r2,zero,318
  804e38:	00805d8c 	andi	r2,zero,374
  804e3c:	00804f90 	cmplti	r2,zero,318
  804e40:	00804f90 	cmplti	r2,zero,318
  804e44:	00804f90 	cmplti	r2,zero,318
  804e48:	00804f90 	cmplti	r2,zero,318
  804e4c:	00804f90 	cmplti	r2,zero,318
  804e50:	00804f90 	cmplti	r2,zero,318
  804e54:	00805b6c 	andhi	r2,zero,365
  804e58:	00805d7c 	xorhi	r2,zero,373
  804e5c:	00804f90 	cmplti	r2,zero,318
  804e60:	00805b84 	movi	r2,366
  804e64:	00805e24 	muli	r2,zero,376
  804e68:	00804f90 	cmplti	r2,zero,318
  804e6c:	00805e10 	cmplti	r2,zero,376
  804e70:	00805dcc 	andi	r2,zero,375
  804e74:	00805dcc 	andi	r2,zero,375
  804e78:	00805dcc 	andi	r2,zero,375
  804e7c:	00805dcc 	andi	r2,zero,375
  804e80:	00805dcc 	andi	r2,zero,375
  804e84:	00805dcc 	andi	r2,zero,375
  804e88:	00805dcc 	andi	r2,zero,375
  804e8c:	00805dcc 	andi	r2,zero,375
  804e90:	00805dcc 	andi	r2,zero,375
  804e94:	00804f90 	cmplti	r2,zero,318
  804e98:	00804f90 	cmplti	r2,zero,318
  804e9c:	00804f90 	cmplti	r2,zero,318
  804ea0:	00804f90 	cmplti	r2,zero,318
  804ea4:	00804f90 	cmplti	r2,zero,318
  804ea8:	00804f90 	cmplti	r2,zero,318
  804eac:	00804f90 	cmplti	r2,zero,318
  804eb0:	00804f90 	cmplti	r2,zero,318
  804eb4:	00804f90 	cmplti	r2,zero,318
  804eb8:	00804f90 	cmplti	r2,zero,318
  804ebc:	008055e8 	cmpgeui	r2,zero,343
  804ec0:	00805c54 	movui	r2,369
  804ec4:	00804f90 	cmplti	r2,zero,318
  804ec8:	00805c54 	movui	r2,369
  804ecc:	00804f90 	cmplti	r2,zero,318
  804ed0:	00804f90 	cmplti	r2,zero,318
  804ed4:	00804f90 	cmplti	r2,zero,318
  804ed8:	00804f90 	cmplti	r2,zero,318
  804edc:	00805db8 	rdprs	r2,zero,374
  804ee0:	00804f90 	cmplti	r2,zero,318
  804ee4:	00804f90 	cmplti	r2,zero,318
  804ee8:	0080569c 	xori	r2,zero,346
  804eec:	00804f90 	cmplti	r2,zero,318
  804ef0:	00804f90 	cmplti	r2,zero,318
  804ef4:	00804f90 	cmplti	r2,zero,318
  804ef8:	00804f90 	cmplti	r2,zero,318
  804efc:	00804f90 	cmplti	r2,zero,318
  804f00:	008056e8 	cmpgeui	r2,zero,347
  804f04:	00804f90 	cmplti	r2,zero,318
  804f08:	00804f90 	cmplti	r2,zero,318
  804f0c:	00805d08 	cmpgei	r2,zero,372
  804f10:	00804f90 	cmplti	r2,zero,318
  804f14:	00804f90 	cmplti	r2,zero,318
  804f18:	00804f90 	cmplti	r2,zero,318
  804f1c:	00804f90 	cmplti	r2,zero,318
  804f20:	00804f90 	cmplti	r2,zero,318
  804f24:	00804f90 	cmplti	r2,zero,318
  804f28:	00804f90 	cmplti	r2,zero,318
  804f2c:	00804f90 	cmplti	r2,zero,318
  804f30:	00804f90 	cmplti	r2,zero,318
  804f34:	00804f90 	cmplti	r2,zero,318
  804f38:	00805cdc 	xori	r2,zero,371
  804f3c:	008055f4 	movhi	r2,343
  804f40:	00805c54 	movui	r2,369
  804f44:	00805c54 	movui	r2,369
  804f48:	00805c54 	movui	r2,369
  804f4c:	00805c40 	call	805c4 <__reset-0x77fa3c>
  804f50:	008055f4 	movhi	r2,343
  804f54:	00804f90 	cmplti	r2,zero,318
  804f58:	00804f90 	cmplti	r2,zero,318
  804f5c:	00805bc8 	cmpgei	r2,zero,367
  804f60:	00804f90 	cmplti	r2,zero,318
  804f64:	00805b98 	cmpnei	r2,zero,366
  804f68:	008056a8 	cmpgeui	r2,zero,346
  804f6c:	00805bf8 	rdprs	r2,zero,367
  804f70:	00805be4 	muli	r2,zero,367
  804f74:	00804f90 	cmplti	r2,zero,318
  804f78:	00805e8c 	andi	r2,zero,378
  804f7c:	00804f90 	cmplti	r2,zero,318
  804f80:	008056f4 	movhi	r2,347
  804f84:	00804f90 	cmplti	r2,zero,318
  804f88:	00804f90 	cmplti	r2,zero,318
  804f8c:	00805d6c 	andhi	r2,zero,373
  804f90:	d9014d17 	ldw	r4,1332(sp)
  804f94:	2000ce26 	beq	r4,zero,8052d0 <___vfprintf_internal_r+0x6d4>
  804f98:	01400044 	movi	r5,1
  804f9c:	d9800f04 	addi	r6,sp,60
  804fa0:	d9c14015 	stw	r7,1280(sp)
  804fa4:	d9414515 	stw	r5,1300(sp)
  804fa8:	d9814115 	stw	r6,1284(sp)
  804fac:	280f883a 	mov	r7,r5
  804fb0:	d9000f05 	stb	r4,60(sp)
  804fb4:	d8000405 	stb	zero,16(sp)
  804fb8:	d8014615 	stw	zero,1304(sp)
  804fbc:	d8c14c17 	ldw	r3,1328(sp)
  804fc0:	1880008c 	andi	r2,r3,2
  804fc4:	1005003a 	cmpeq	r2,r2,zero
  804fc8:	d8815015 	stw	r2,1344(sp)
  804fcc:	1000031e 	bne	r2,zero,804fdc <___vfprintf_internal_r+0x3e0>
  804fd0:	d9014517 	ldw	r4,1300(sp)
  804fd4:	21000084 	addi	r4,r4,2
  804fd8:	d9014515 	stw	r4,1300(sp)
  804fdc:	d9414c17 	ldw	r5,1328(sp)
  804fe0:	2940210c 	andi	r5,r5,132
  804fe4:	d9414e15 	stw	r5,1336(sp)
  804fe8:	28002d1e 	bne	r5,zero,8050a0 <___vfprintf_internal_r+0x4a4>
  804fec:	d9814a17 	ldw	r6,1320(sp)
  804ff0:	d8814517 	ldw	r2,1300(sp)
  804ff4:	30a1c83a 	sub	r16,r6,r2
  804ff8:	0400290e 	bge	zero,r16,8050a0 <___vfprintf_internal_r+0x4a4>
  804ffc:	00800404 	movi	r2,16
  805000:	14045e0e 	bge	r2,r16,80617c <___vfprintf_internal_r+0x1580>
  805004:	dc800e17 	ldw	r18,56(sp)
  805008:	dc400d17 	ldw	r17,52(sp)
  80500c:	1027883a 	mov	r19,r2
  805010:	07002074 	movhi	fp,129
  805014:	e702af84 	addi	fp,fp,2750
  805018:	050001c4 	movi	r20,7
  80501c:	00000306 	br	80502c <___vfprintf_internal_r+0x430>
  805020:	843ffc04 	addi	r16,r16,-16
  805024:	ad400204 	addi	r21,r21,8
  805028:	9c00130e 	bge	r19,r16,805078 <___vfprintf_internal_r+0x47c>
  80502c:	94800404 	addi	r18,r18,16
  805030:	8c400044 	addi	r17,r17,1
  805034:	af000015 	stw	fp,0(r21)
  805038:	acc00115 	stw	r19,4(r21)
  80503c:	dc800e15 	stw	r18,56(sp)
  805040:	dc400d15 	stw	r17,52(sp)
  805044:	a47ff60e 	bge	r20,r17,805020 <___vfprintf_internal_r+0x424>
  805048:	d9014f17 	ldw	r4,1340(sp)
  80504c:	b00b883a 	mov	r5,r22
  805050:	d9800c04 	addi	r6,sp,48
  805054:	d9c15115 	stw	r7,1348(sp)
  805058:	0804ba40 	call	804ba4 <__sprint_r>
  80505c:	d9c15117 	ldw	r7,1348(sp)
  805060:	10009e1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805064:	843ffc04 	addi	r16,r16,-16
  805068:	dc800e17 	ldw	r18,56(sp)
  80506c:	dc400d17 	ldw	r17,52(sp)
  805070:	dd401904 	addi	r21,sp,100
  805074:	9c3fed16 	blt	r19,r16,80502c <___vfprintf_internal_r+0x430>
  805078:	9425883a 	add	r18,r18,r16
  80507c:	8c400044 	addi	r17,r17,1
  805080:	008001c4 	movi	r2,7
  805084:	af000015 	stw	fp,0(r21)
  805088:	ac000115 	stw	r16,4(r21)
  80508c:	dc800e15 	stw	r18,56(sp)
  805090:	dc400d15 	stw	r17,52(sp)
  805094:	1441f516 	blt	r2,r17,80586c <___vfprintf_internal_r+0xc70>
  805098:	ad400204 	addi	r21,r21,8
  80509c:	00000206 	br	8050a8 <___vfprintf_internal_r+0x4ac>
  8050a0:	dc800e17 	ldw	r18,56(sp)
  8050a4:	dc400d17 	ldw	r17,52(sp)
  8050a8:	d8800407 	ldb	r2,16(sp)
  8050ac:	10000b26 	beq	r2,zero,8050dc <___vfprintf_internal_r+0x4e0>
  8050b0:	00800044 	movi	r2,1
  8050b4:	94800044 	addi	r18,r18,1
  8050b8:	8c400044 	addi	r17,r17,1
  8050bc:	a8800115 	stw	r2,4(r21)
  8050c0:	d8c00404 	addi	r3,sp,16
  8050c4:	008001c4 	movi	r2,7
  8050c8:	a8c00015 	stw	r3,0(r21)
  8050cc:	dc800e15 	stw	r18,56(sp)
  8050d0:	dc400d15 	stw	r17,52(sp)
  8050d4:	1441da16 	blt	r2,r17,805840 <___vfprintf_internal_r+0xc44>
  8050d8:	ad400204 	addi	r21,r21,8
  8050dc:	d9015017 	ldw	r4,1344(sp)
  8050e0:	20000b1e 	bne	r4,zero,805110 <___vfprintf_internal_r+0x514>
  8050e4:	d8800444 	addi	r2,sp,17
  8050e8:	94800084 	addi	r18,r18,2
  8050ec:	8c400044 	addi	r17,r17,1
  8050f0:	a8800015 	stw	r2,0(r21)
  8050f4:	00c00084 	movi	r3,2
  8050f8:	008001c4 	movi	r2,7
  8050fc:	a8c00115 	stw	r3,4(r21)
  805100:	dc800e15 	stw	r18,56(sp)
  805104:	dc400d15 	stw	r17,52(sp)
  805108:	1441c216 	blt	r2,r17,805814 <___vfprintf_internal_r+0xc18>
  80510c:	ad400204 	addi	r21,r21,8
  805110:	d9414e17 	ldw	r5,1336(sp)
  805114:	00802004 	movi	r2,128
  805118:	2880b126 	beq	r5,r2,8053e0 <___vfprintf_internal_r+0x7e4>
  80511c:	d8c14617 	ldw	r3,1304(sp)
  805120:	19e1c83a 	sub	r16,r3,r7
  805124:	0400260e 	bge	zero,r16,8051c0 <___vfprintf_internal_r+0x5c4>
  805128:	00800404 	movi	r2,16
  80512c:	1403cf0e 	bge	r2,r16,80606c <___vfprintf_internal_r+0x1470>
  805130:	1027883a 	mov	r19,r2
  805134:	07002074 	movhi	fp,129
  805138:	e702ab84 	addi	fp,fp,2734
  80513c:	050001c4 	movi	r20,7
  805140:	00000306 	br	805150 <___vfprintf_internal_r+0x554>
  805144:	843ffc04 	addi	r16,r16,-16
  805148:	ad400204 	addi	r21,r21,8
  80514c:	9c00130e 	bge	r19,r16,80519c <___vfprintf_internal_r+0x5a0>
  805150:	94800404 	addi	r18,r18,16
  805154:	8c400044 	addi	r17,r17,1
  805158:	af000015 	stw	fp,0(r21)
  80515c:	acc00115 	stw	r19,4(r21)
  805160:	dc800e15 	stw	r18,56(sp)
  805164:	dc400d15 	stw	r17,52(sp)
  805168:	a47ff60e 	bge	r20,r17,805144 <___vfprintf_internal_r+0x548>
  80516c:	d9014f17 	ldw	r4,1340(sp)
  805170:	b00b883a 	mov	r5,r22
  805174:	d9800c04 	addi	r6,sp,48
  805178:	d9c15115 	stw	r7,1348(sp)
  80517c:	0804ba40 	call	804ba4 <__sprint_r>
  805180:	d9c15117 	ldw	r7,1348(sp)
  805184:	1000551e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805188:	843ffc04 	addi	r16,r16,-16
  80518c:	dc800e17 	ldw	r18,56(sp)
  805190:	dc400d17 	ldw	r17,52(sp)
  805194:	dd401904 	addi	r21,sp,100
  805198:	9c3fed16 	blt	r19,r16,805150 <___vfprintf_internal_r+0x554>
  80519c:	9425883a 	add	r18,r18,r16
  8051a0:	8c400044 	addi	r17,r17,1
  8051a4:	008001c4 	movi	r2,7
  8051a8:	af000015 	stw	fp,0(r21)
  8051ac:	ac000115 	stw	r16,4(r21)
  8051b0:	dc800e15 	stw	r18,56(sp)
  8051b4:	dc400d15 	stw	r17,52(sp)
  8051b8:	14418216 	blt	r2,r17,8057c4 <___vfprintf_internal_r+0xbc8>
  8051bc:	ad400204 	addi	r21,r21,8
  8051c0:	d9014c17 	ldw	r4,1328(sp)
  8051c4:	2080400c 	andi	r2,r4,256
  8051c8:	10004a1e 	bne	r2,zero,8052f4 <___vfprintf_internal_r+0x6f8>
  8051cc:	d9414117 	ldw	r5,1284(sp)
  8051d0:	91e5883a 	add	r18,r18,r7
  8051d4:	8c400044 	addi	r17,r17,1
  8051d8:	008001c4 	movi	r2,7
  8051dc:	a9400015 	stw	r5,0(r21)
  8051e0:	a9c00115 	stw	r7,4(r21)
  8051e4:	dc800e15 	stw	r18,56(sp)
  8051e8:	dc400d15 	stw	r17,52(sp)
  8051ec:	14416716 	blt	r2,r17,80578c <___vfprintf_internal_r+0xb90>
  8051f0:	a8c00204 	addi	r3,r21,8
  8051f4:	d9814c17 	ldw	r6,1328(sp)
  8051f8:	3080010c 	andi	r2,r6,4
  8051fc:	10002826 	beq	r2,zero,8052a0 <___vfprintf_internal_r+0x6a4>
  805200:	d8814a17 	ldw	r2,1320(sp)
  805204:	d9014517 	ldw	r4,1300(sp)
  805208:	1121c83a 	sub	r16,r2,r4
  80520c:	0400240e 	bge	zero,r16,8052a0 <___vfprintf_internal_r+0x6a4>
  805210:	00800404 	movi	r2,16
  805214:	1404550e 	bge	r2,r16,80636c <___vfprintf_internal_r+0x1770>
  805218:	dc400d17 	ldw	r17,52(sp)
  80521c:	1027883a 	mov	r19,r2
  805220:	07002074 	movhi	fp,129
  805224:	e702af84 	addi	fp,fp,2750
  805228:	050001c4 	movi	r20,7
  80522c:	00000306 	br	80523c <___vfprintf_internal_r+0x640>
  805230:	843ffc04 	addi	r16,r16,-16
  805234:	18c00204 	addi	r3,r3,8
  805238:	9c00110e 	bge	r19,r16,805280 <___vfprintf_internal_r+0x684>
  80523c:	94800404 	addi	r18,r18,16
  805240:	8c400044 	addi	r17,r17,1
  805244:	1f000015 	stw	fp,0(r3)
  805248:	1cc00115 	stw	r19,4(r3)
  80524c:	dc800e15 	stw	r18,56(sp)
  805250:	dc400d15 	stw	r17,52(sp)
  805254:	a47ff60e 	bge	r20,r17,805230 <___vfprintf_internal_r+0x634>
  805258:	d9014f17 	ldw	r4,1340(sp)
  80525c:	b00b883a 	mov	r5,r22
  805260:	d9800c04 	addi	r6,sp,48
  805264:	0804ba40 	call	804ba4 <__sprint_r>
  805268:	10001c1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  80526c:	843ffc04 	addi	r16,r16,-16
  805270:	dc800e17 	ldw	r18,56(sp)
  805274:	dc400d17 	ldw	r17,52(sp)
  805278:	d8c01904 	addi	r3,sp,100
  80527c:	9c3fef16 	blt	r19,r16,80523c <___vfprintf_internal_r+0x640>
  805280:	9425883a 	add	r18,r18,r16
  805284:	8c400044 	addi	r17,r17,1
  805288:	008001c4 	movi	r2,7
  80528c:	1f000015 	stw	fp,0(r3)
  805290:	1c000115 	stw	r16,4(r3)
  805294:	dc800e15 	stw	r18,56(sp)
  805298:	dc400d15 	stw	r17,52(sp)
  80529c:	1440cb16 	blt	r2,r17,8055cc <___vfprintf_internal_r+0x9d0>
  8052a0:	d8814a17 	ldw	r2,1320(sp)
  8052a4:	d9414517 	ldw	r5,1300(sp)
  8052a8:	1140010e 	bge	r2,r5,8052b0 <___vfprintf_internal_r+0x6b4>
  8052ac:	2805883a 	mov	r2,r5
  8052b0:	d9814b17 	ldw	r6,1324(sp)
  8052b4:	308d883a 	add	r6,r6,r2
  8052b8:	d9814b15 	stw	r6,1324(sp)
  8052bc:	90013b1e 	bne	r18,zero,8057ac <___vfprintf_internal_r+0xbb0>
  8052c0:	d9c14017 	ldw	r7,1280(sp)
  8052c4:	dd401904 	addi	r21,sp,100
  8052c8:	d8000d15 	stw	zero,52(sp)
  8052cc:	003ea706 	br	804d6c <___vfprintf_internal_r+0x170>
  8052d0:	d8800e17 	ldw	r2,56(sp)
  8052d4:	1005451e 	bne	r2,zero,8067ec <___vfprintf_internal_r+0x1bf0>
  8052d8:	d8000d15 	stw	zero,52(sp)
  8052dc:	b080030b 	ldhu	r2,12(r22)
  8052e0:	1080100c 	andi	r2,r2,64
  8052e4:	103e8726 	beq	r2,zero,804d04 <___vfprintf_internal_r+0x108>
  8052e8:	00bfffc4 	movi	r2,-1
  8052ec:	d8814b15 	stw	r2,1324(sp)
  8052f0:	003e8406 	br	804d04 <___vfprintf_internal_r+0x108>
  8052f4:	d9814d17 	ldw	r6,1332(sp)
  8052f8:	00801944 	movi	r2,101
  8052fc:	11806e16 	blt	r2,r6,8054b8 <___vfprintf_internal_r+0x8bc>
  805300:	d9414717 	ldw	r5,1308(sp)
  805304:	00c00044 	movi	r3,1
  805308:	1943490e 	bge	r3,r5,806030 <___vfprintf_internal_r+0x1434>
  80530c:	d8814117 	ldw	r2,1284(sp)
  805310:	94800044 	addi	r18,r18,1
  805314:	8c400044 	addi	r17,r17,1
  805318:	a8800015 	stw	r2,0(r21)
  80531c:	008001c4 	movi	r2,7
  805320:	a8c00115 	stw	r3,4(r21)
  805324:	dc800e15 	stw	r18,56(sp)
  805328:	dc400d15 	stw	r17,52(sp)
  80532c:	1441ca16 	blt	r2,r17,805a58 <___vfprintf_internal_r+0xe5c>
  805330:	a8c00204 	addi	r3,r21,8
  805334:	d9014917 	ldw	r4,1316(sp)
  805338:	00800044 	movi	r2,1
  80533c:	94800044 	addi	r18,r18,1
  805340:	8c400044 	addi	r17,r17,1
  805344:	18800115 	stw	r2,4(r3)
  805348:	008001c4 	movi	r2,7
  80534c:	19000015 	stw	r4,0(r3)
  805350:	dc800e15 	stw	r18,56(sp)
  805354:	dc400d15 	stw	r17,52(sp)
  805358:	1441b616 	blt	r2,r17,805a34 <___vfprintf_internal_r+0xe38>
  80535c:	1cc00204 	addi	r19,r3,8
  805360:	d9014217 	ldw	r4,1288(sp)
  805364:	d9414317 	ldw	r5,1292(sp)
  805368:	000d883a 	mov	r6,zero
  80536c:	000f883a 	mov	r7,zero
  805370:	080d8b80 	call	80d8b8 <__nedf2>
  805374:	10017426 	beq	r2,zero,805948 <___vfprintf_internal_r+0xd4c>
  805378:	d9414717 	ldw	r5,1308(sp)
  80537c:	d9814117 	ldw	r6,1284(sp)
  805380:	8c400044 	addi	r17,r17,1
  805384:	2c85883a 	add	r2,r5,r18
  805388:	14bfffc4 	addi	r18,r2,-1
  80538c:	28bfffc4 	addi	r2,r5,-1
  805390:	30c00044 	addi	r3,r6,1
  805394:	98800115 	stw	r2,4(r19)
  805398:	008001c4 	movi	r2,7
  80539c:	98c00015 	stw	r3,0(r19)
  8053a0:	dc800e15 	stw	r18,56(sp)
  8053a4:	dc400d15 	stw	r17,52(sp)
  8053a8:	14418e16 	blt	r2,r17,8059e4 <___vfprintf_internal_r+0xde8>
  8053ac:	9cc00204 	addi	r19,r19,8
  8053b0:	d9414817 	ldw	r5,1312(sp)
  8053b4:	d8800804 	addi	r2,sp,32
  8053b8:	8c400044 	addi	r17,r17,1
  8053bc:	9165883a 	add	r18,r18,r5
  8053c0:	98800015 	stw	r2,0(r19)
  8053c4:	008001c4 	movi	r2,7
  8053c8:	99400115 	stw	r5,4(r19)
  8053cc:	dc800e15 	stw	r18,56(sp)
  8053d0:	dc400d15 	stw	r17,52(sp)
  8053d4:	1440ed16 	blt	r2,r17,80578c <___vfprintf_internal_r+0xb90>
  8053d8:	98c00204 	addi	r3,r19,8
  8053dc:	003f8506 	br	8051f4 <___vfprintf_internal_r+0x5f8>
  8053e0:	d9814a17 	ldw	r6,1320(sp)
  8053e4:	d8814517 	ldw	r2,1300(sp)
  8053e8:	30a1c83a 	sub	r16,r6,r2
  8053ec:	043f4b0e 	bge	zero,r16,80511c <___vfprintf_internal_r+0x520>
  8053f0:	00800404 	movi	r2,16
  8053f4:	14043a0e 	bge	r2,r16,8064e0 <___vfprintf_internal_r+0x18e4>
  8053f8:	1027883a 	mov	r19,r2
  8053fc:	07002074 	movhi	fp,129
  805400:	e702ab84 	addi	fp,fp,2734
  805404:	050001c4 	movi	r20,7
  805408:	00000306 	br	805418 <___vfprintf_internal_r+0x81c>
  80540c:	843ffc04 	addi	r16,r16,-16
  805410:	ad400204 	addi	r21,r21,8
  805414:	9c00130e 	bge	r19,r16,805464 <___vfprintf_internal_r+0x868>
  805418:	94800404 	addi	r18,r18,16
  80541c:	8c400044 	addi	r17,r17,1
  805420:	af000015 	stw	fp,0(r21)
  805424:	acc00115 	stw	r19,4(r21)
  805428:	dc800e15 	stw	r18,56(sp)
  80542c:	dc400d15 	stw	r17,52(sp)
  805430:	a47ff60e 	bge	r20,r17,80540c <___vfprintf_internal_r+0x810>
  805434:	d9014f17 	ldw	r4,1340(sp)
  805438:	b00b883a 	mov	r5,r22
  80543c:	d9800c04 	addi	r6,sp,48
  805440:	d9c15115 	stw	r7,1348(sp)
  805444:	0804ba40 	call	804ba4 <__sprint_r>
  805448:	d9c15117 	ldw	r7,1348(sp)
  80544c:	103fa31e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805450:	843ffc04 	addi	r16,r16,-16
  805454:	dc800e17 	ldw	r18,56(sp)
  805458:	dc400d17 	ldw	r17,52(sp)
  80545c:	dd401904 	addi	r21,sp,100
  805460:	9c3fed16 	blt	r19,r16,805418 <___vfprintf_internal_r+0x81c>
  805464:	9425883a 	add	r18,r18,r16
  805468:	8c400044 	addi	r17,r17,1
  80546c:	008001c4 	movi	r2,7
  805470:	af000015 	stw	fp,0(r21)
  805474:	ac000115 	stw	r16,4(r21)
  805478:	dc800e15 	stw	r18,56(sp)
  80547c:	dc400d15 	stw	r17,52(sp)
  805480:	14416116 	blt	r2,r17,805a08 <___vfprintf_internal_r+0xe0c>
  805484:	ad400204 	addi	r21,r21,8
  805488:	003f2406 	br	80511c <___vfprintf_internal_r+0x520>
  80548c:	d9014f17 	ldw	r4,1340(sp)
  805490:	080917c0 	call	80917c <__sinit>
  805494:	d9c15117 	ldw	r7,1348(sp)
  805498:	003def06 	br	804c58 <___vfprintf_internal_r+0x5c>
  80549c:	d9014f17 	ldw	r4,1340(sp)
  8054a0:	b00b883a 	mov	r5,r22
  8054a4:	d9c15115 	stw	r7,1348(sp)
  8054a8:	0806ae40 	call	806ae4 <__swsetup_r>
  8054ac:	d9c15117 	ldw	r7,1348(sp)
  8054b0:	103dee26 	beq	r2,zero,804c6c <___vfprintf_internal_r+0x70>
  8054b4:	003f8c06 	br	8052e8 <___vfprintf_internal_r+0x6ec>
  8054b8:	d9014217 	ldw	r4,1288(sp)
  8054bc:	d9414317 	ldw	r5,1292(sp)
  8054c0:	000d883a 	mov	r6,zero
  8054c4:	000f883a 	mov	r7,zero
  8054c8:	08037d00 	call	8037d0 <__eqdf2>
  8054cc:	1000f21e 	bne	r2,zero,805898 <___vfprintf_internal_r+0xc9c>
  8054d0:	00802074 	movhi	r2,129
  8054d4:	1082ab04 	addi	r2,r2,2732
  8054d8:	94800044 	addi	r18,r18,1
  8054dc:	8c400044 	addi	r17,r17,1
  8054e0:	a8800015 	stw	r2,0(r21)
  8054e4:	00c00044 	movi	r3,1
  8054e8:	008001c4 	movi	r2,7
  8054ec:	a8c00115 	stw	r3,4(r21)
  8054f0:	dc800e15 	stw	r18,56(sp)
  8054f4:	dc400d15 	stw	r17,52(sp)
  8054f8:	14430016 	blt	r2,r17,8060fc <___vfprintf_internal_r+0x1500>
  8054fc:	a8c00204 	addi	r3,r21,8
  805500:	d8800517 	ldw	r2,20(sp)
  805504:	d9014717 	ldw	r4,1308(sp)
  805508:	11015c0e 	bge	r2,r4,805a7c <___vfprintf_internal_r+0xe80>
  80550c:	dc400d17 	ldw	r17,52(sp)
  805510:	d9814917 	ldw	r6,1316(sp)
  805514:	00800044 	movi	r2,1
  805518:	94800044 	addi	r18,r18,1
  80551c:	8c400044 	addi	r17,r17,1
  805520:	18800115 	stw	r2,4(r3)
  805524:	008001c4 	movi	r2,7
  805528:	19800015 	stw	r6,0(r3)
  80552c:	dc800e15 	stw	r18,56(sp)
  805530:	dc400d15 	stw	r17,52(sp)
  805534:	14431616 	blt	r2,r17,806190 <___vfprintf_internal_r+0x1594>
  805538:	18c00204 	addi	r3,r3,8
  80553c:	d8814717 	ldw	r2,1308(sp)
  805540:	143fffc4 	addi	r16,r2,-1
  805544:	043f2b0e 	bge	zero,r16,8051f4 <___vfprintf_internal_r+0x5f8>
  805548:	00800404 	movi	r2,16
  80554c:	1402a80e 	bge	r2,r16,805ff0 <___vfprintf_internal_r+0x13f4>
  805550:	dc400d17 	ldw	r17,52(sp)
  805554:	1027883a 	mov	r19,r2
  805558:	07002074 	movhi	fp,129
  80555c:	e702ab84 	addi	fp,fp,2734
  805560:	050001c4 	movi	r20,7
  805564:	00000306 	br	805574 <___vfprintf_internal_r+0x978>
  805568:	18c00204 	addi	r3,r3,8
  80556c:	843ffc04 	addi	r16,r16,-16
  805570:	9c02a20e 	bge	r19,r16,805ffc <___vfprintf_internal_r+0x1400>
  805574:	94800404 	addi	r18,r18,16
  805578:	8c400044 	addi	r17,r17,1
  80557c:	1f000015 	stw	fp,0(r3)
  805580:	1cc00115 	stw	r19,4(r3)
  805584:	dc800e15 	stw	r18,56(sp)
  805588:	dc400d15 	stw	r17,52(sp)
  80558c:	a47ff60e 	bge	r20,r17,805568 <___vfprintf_internal_r+0x96c>
  805590:	d9014f17 	ldw	r4,1340(sp)
  805594:	b00b883a 	mov	r5,r22
  805598:	d9800c04 	addi	r6,sp,48
  80559c:	0804ba40 	call	804ba4 <__sprint_r>
  8055a0:	103f4e1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8055a4:	dc800e17 	ldw	r18,56(sp)
  8055a8:	dc400d17 	ldw	r17,52(sp)
  8055ac:	d8c01904 	addi	r3,sp,100
  8055b0:	003fee06 	br	80556c <___vfprintf_internal_r+0x970>
  8055b4:	d8802c0b 	ldhu	r2,176(sp)
  8055b8:	00ffffc4 	movi	r3,-1
  8055bc:	d8c14b15 	stw	r3,1324(sp)
  8055c0:	1080100c 	andi	r2,r2,64
  8055c4:	103dcc1e 	bne	r2,zero,804cf8 <___vfprintf_internal_r+0xfc>
  8055c8:	003dce06 	br	804d04 <___vfprintf_internal_r+0x108>
  8055cc:	d9014f17 	ldw	r4,1340(sp)
  8055d0:	b00b883a 	mov	r5,r22
  8055d4:	d9800c04 	addi	r6,sp,48
  8055d8:	0804ba40 	call	804ba4 <__sprint_r>
  8055dc:	103f3f1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8055e0:	dc800e17 	ldw	r18,56(sp)
  8055e4:	003f2e06 	br	8052a0 <___vfprintf_internal_r+0x6a4>
  8055e8:	d9414c17 	ldw	r5,1328(sp)
  8055ec:	29400414 	ori	r5,r5,16
  8055f0:	d9414c15 	stw	r5,1328(sp)
  8055f4:	d9814c17 	ldw	r6,1328(sp)
  8055f8:	3080080c 	andi	r2,r6,32
  8055fc:	10014f1e 	bne	r2,zero,805b3c <___vfprintf_internal_r+0xf40>
  805600:	d8c14c17 	ldw	r3,1328(sp)
  805604:	1880040c 	andi	r2,r3,16
  805608:	1002f01e 	bne	r2,zero,8061cc <___vfprintf_internal_r+0x15d0>
  80560c:	d9014c17 	ldw	r4,1328(sp)
  805610:	2080100c 	andi	r2,r4,64
  805614:	1002ed26 	beq	r2,zero,8061cc <___vfprintf_internal_r+0x15d0>
  805618:	3880000f 	ldh	r2,0(r7)
  80561c:	39c00104 	addi	r7,r7,4
  805620:	d9c14015 	stw	r7,1280(sp)
  805624:	1023d7fa 	srai	r17,r2,31
  805628:	1021883a 	mov	r16,r2
  80562c:	88037816 	blt	r17,zero,806410 <___vfprintf_internal_r+0x1814>
  805630:	01000044 	movi	r4,1
  805634:	98000416 	blt	r19,zero,805648 <___vfprintf_internal_r+0xa4c>
  805638:	d8c14c17 	ldw	r3,1328(sp)
  80563c:	00bfdfc4 	movi	r2,-129
  805640:	1886703a 	and	r3,r3,r2
  805644:	d8c14c15 	stw	r3,1328(sp)
  805648:	8444b03a 	or	r2,r16,r17
  80564c:	10022c1e 	bne	r2,zero,805f00 <___vfprintf_internal_r+0x1304>
  805650:	98022b1e 	bne	r19,zero,805f00 <___vfprintf_internal_r+0x1304>
  805654:	20803fcc 	andi	r2,r4,255
  805658:	1002a126 	beq	r2,zero,8060e0 <___vfprintf_internal_r+0x14e4>
  80565c:	d8c01904 	addi	r3,sp,100
  805660:	dd000f04 	addi	r20,sp,60
  805664:	d8c14115 	stw	r3,1284(sp)
  805668:	d8c14117 	ldw	r3,1284(sp)
  80566c:	dcc14515 	stw	r19,1300(sp)
  805670:	a0c5c83a 	sub	r2,r20,r3
  805674:	11c00a04 	addi	r7,r2,40
  805678:	99c0010e 	bge	r19,r7,805680 <___vfprintf_internal_r+0xa84>
  80567c:	d9c14515 	stw	r7,1300(sp)
  805680:	dcc14615 	stw	r19,1304(sp)
  805684:	d8800407 	ldb	r2,16(sp)
  805688:	103e4c26 	beq	r2,zero,804fbc <___vfprintf_internal_r+0x3c0>
  80568c:	d8814517 	ldw	r2,1300(sp)
  805690:	10800044 	addi	r2,r2,1
  805694:	d8814515 	stw	r2,1300(sp)
  805698:	003e4806 	br	804fbc <___vfprintf_internal_r+0x3c0>
  80569c:	d9814c17 	ldw	r6,1328(sp)
  8056a0:	31800414 	ori	r6,r6,16
  8056a4:	d9814c15 	stw	r6,1328(sp)
  8056a8:	d8c14c17 	ldw	r3,1328(sp)
  8056ac:	1880080c 	andi	r2,r3,32
  8056b0:	1001271e 	bne	r2,zero,805b50 <___vfprintf_internal_r+0xf54>
  8056b4:	d9414c17 	ldw	r5,1328(sp)
  8056b8:	2880040c 	andi	r2,r5,16
  8056bc:	1002bc1e 	bne	r2,zero,8061b0 <___vfprintf_internal_r+0x15b4>
  8056c0:	d9814c17 	ldw	r6,1328(sp)
  8056c4:	3080100c 	andi	r2,r6,64
  8056c8:	1002b926 	beq	r2,zero,8061b0 <___vfprintf_internal_r+0x15b4>
  8056cc:	3c00000b 	ldhu	r16,0(r7)
  8056d0:	0009883a 	mov	r4,zero
  8056d4:	39c00104 	addi	r7,r7,4
  8056d8:	0023883a 	mov	r17,zero
  8056dc:	d9c14015 	stw	r7,1280(sp)
  8056e0:	d8000405 	stb	zero,16(sp)
  8056e4:	003fd306 	br	805634 <___vfprintf_internal_r+0xa38>
  8056e8:	d9014c17 	ldw	r4,1328(sp)
  8056ec:	21000414 	ori	r4,r4,16
  8056f0:	d9014c15 	stw	r4,1328(sp)
  8056f4:	d9414c17 	ldw	r5,1328(sp)
  8056f8:	2880080c 	andi	r2,r5,32
  8056fc:	1001081e 	bne	r2,zero,805b20 <___vfprintf_internal_r+0xf24>
  805700:	d8c14c17 	ldw	r3,1328(sp)
  805704:	1880040c 	andi	r2,r3,16
  805708:	1002b61e 	bne	r2,zero,8061e4 <___vfprintf_internal_r+0x15e8>
  80570c:	d9014c17 	ldw	r4,1328(sp)
  805710:	2080100c 	andi	r2,r4,64
  805714:	1002b326 	beq	r2,zero,8061e4 <___vfprintf_internal_r+0x15e8>
  805718:	3c00000b 	ldhu	r16,0(r7)
  80571c:	01000044 	movi	r4,1
  805720:	39c00104 	addi	r7,r7,4
  805724:	0023883a 	mov	r17,zero
  805728:	d9c14015 	stw	r7,1280(sp)
  80572c:	d8000405 	stb	zero,16(sp)
  805730:	003fc006 	br	805634 <___vfprintf_internal_r+0xa38>
  805734:	d9014f17 	ldw	r4,1340(sp)
  805738:	b00b883a 	mov	r5,r22
  80573c:	d9800c04 	addi	r6,sp,48
  805740:	0804ba40 	call	804ba4 <__sprint_r>
  805744:	103ee51e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805748:	dc800e17 	ldw	r18,56(sp)
  80574c:	d8c01904 	addi	r3,sp,100
  805750:	d9814c17 	ldw	r6,1328(sp)
  805754:	3080004c 	andi	r2,r6,1
  805758:	1005003a 	cmpeq	r2,r2,zero
  80575c:	103ea51e 	bne	r2,zero,8051f4 <___vfprintf_internal_r+0x5f8>
  805760:	00800044 	movi	r2,1
  805764:	dc400d17 	ldw	r17,52(sp)
  805768:	18800115 	stw	r2,4(r3)
  80576c:	d8814917 	ldw	r2,1316(sp)
  805770:	94800044 	addi	r18,r18,1
  805774:	8c400044 	addi	r17,r17,1
  805778:	18800015 	stw	r2,0(r3)
  80577c:	008001c4 	movi	r2,7
  805780:	dc800e15 	stw	r18,56(sp)
  805784:	dc400d15 	stw	r17,52(sp)
  805788:	1442240e 	bge	r2,r17,80601c <___vfprintf_internal_r+0x1420>
  80578c:	d9014f17 	ldw	r4,1340(sp)
  805790:	b00b883a 	mov	r5,r22
  805794:	d9800c04 	addi	r6,sp,48
  805798:	0804ba40 	call	804ba4 <__sprint_r>
  80579c:	103ecf1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8057a0:	dc800e17 	ldw	r18,56(sp)
  8057a4:	d8c01904 	addi	r3,sp,100
  8057a8:	003e9206 	br	8051f4 <___vfprintf_internal_r+0x5f8>
  8057ac:	d9014f17 	ldw	r4,1340(sp)
  8057b0:	b00b883a 	mov	r5,r22
  8057b4:	d9800c04 	addi	r6,sp,48
  8057b8:	0804ba40 	call	804ba4 <__sprint_r>
  8057bc:	103ec026 	beq	r2,zero,8052c0 <___vfprintf_internal_r+0x6c4>
  8057c0:	003ec606 	br	8052dc <___vfprintf_internal_r+0x6e0>
  8057c4:	d9014f17 	ldw	r4,1340(sp)
  8057c8:	b00b883a 	mov	r5,r22
  8057cc:	d9800c04 	addi	r6,sp,48
  8057d0:	d9c15115 	stw	r7,1348(sp)
  8057d4:	0804ba40 	call	804ba4 <__sprint_r>
  8057d8:	d9c15117 	ldw	r7,1348(sp)
  8057dc:	103ebf1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8057e0:	dc800e17 	ldw	r18,56(sp)
  8057e4:	dc400d17 	ldw	r17,52(sp)
  8057e8:	dd401904 	addi	r21,sp,100
  8057ec:	003e7406 	br	8051c0 <___vfprintf_internal_r+0x5c4>
  8057f0:	d9014f17 	ldw	r4,1340(sp)
  8057f4:	b00b883a 	mov	r5,r22
  8057f8:	d9800c04 	addi	r6,sp,48
  8057fc:	d9c15115 	stw	r7,1348(sp)
  805800:	0804ba40 	call	804ba4 <__sprint_r>
  805804:	d9c15117 	ldw	r7,1348(sp)
  805808:	103eb41e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  80580c:	dd401904 	addi	r21,sp,100
  805810:	003d6d06 	br	804dc8 <___vfprintf_internal_r+0x1cc>
  805814:	d9014f17 	ldw	r4,1340(sp)
  805818:	b00b883a 	mov	r5,r22
  80581c:	d9800c04 	addi	r6,sp,48
  805820:	d9c15115 	stw	r7,1348(sp)
  805824:	0804ba40 	call	804ba4 <__sprint_r>
  805828:	d9c15117 	ldw	r7,1348(sp)
  80582c:	103eab1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805830:	dc800e17 	ldw	r18,56(sp)
  805834:	dc400d17 	ldw	r17,52(sp)
  805838:	dd401904 	addi	r21,sp,100
  80583c:	003e3406 	br	805110 <___vfprintf_internal_r+0x514>
  805840:	d9014f17 	ldw	r4,1340(sp)
  805844:	b00b883a 	mov	r5,r22
  805848:	d9800c04 	addi	r6,sp,48
  80584c:	d9c15115 	stw	r7,1348(sp)
  805850:	0804ba40 	call	804ba4 <__sprint_r>
  805854:	d9c15117 	ldw	r7,1348(sp)
  805858:	103ea01e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  80585c:	dc800e17 	ldw	r18,56(sp)
  805860:	dc400d17 	ldw	r17,52(sp)
  805864:	dd401904 	addi	r21,sp,100
  805868:	003e1c06 	br	8050dc <___vfprintf_internal_r+0x4e0>
  80586c:	d9014f17 	ldw	r4,1340(sp)
  805870:	b00b883a 	mov	r5,r22
  805874:	d9800c04 	addi	r6,sp,48
  805878:	d9c15115 	stw	r7,1348(sp)
  80587c:	0804ba40 	call	804ba4 <__sprint_r>
  805880:	d9c15117 	ldw	r7,1348(sp)
  805884:	103e951e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805888:	dc800e17 	ldw	r18,56(sp)
  80588c:	dc400d17 	ldw	r17,52(sp)
  805890:	dd401904 	addi	r21,sp,100
  805894:	003e0406 	br	8050a8 <___vfprintf_internal_r+0x4ac>
  805898:	d9000517 	ldw	r4,20(sp)
  80589c:	0102580e 	bge	zero,r4,806200 <___vfprintf_internal_r+0x1604>
  8058a0:	d9814717 	ldw	r6,1308(sp)
  8058a4:	21807a16 	blt	r4,r6,805a90 <___vfprintf_internal_r+0xe94>
  8058a8:	d8814117 	ldw	r2,1284(sp)
  8058ac:	91a5883a 	add	r18,r18,r6
  8058b0:	8c400044 	addi	r17,r17,1
  8058b4:	a8800015 	stw	r2,0(r21)
  8058b8:	008001c4 	movi	r2,7
  8058bc:	a9800115 	stw	r6,4(r21)
  8058c0:	dc800e15 	stw	r18,56(sp)
  8058c4:	dc400d15 	stw	r17,52(sp)
  8058c8:	1442fc16 	blt	r2,r17,8064bc <___vfprintf_internal_r+0x18c0>
  8058cc:	a8c00204 	addi	r3,r21,8
  8058d0:	d9414717 	ldw	r5,1308(sp)
  8058d4:	2161c83a 	sub	r16,r4,r5
  8058d8:	043f9d0e 	bge	zero,r16,805750 <___vfprintf_internal_r+0xb54>
  8058dc:	00800404 	movi	r2,16
  8058e0:	1402190e 	bge	r2,r16,806148 <___vfprintf_internal_r+0x154c>
  8058e4:	dc400d17 	ldw	r17,52(sp)
  8058e8:	1027883a 	mov	r19,r2
  8058ec:	07002074 	movhi	fp,129
  8058f0:	e702ab84 	addi	fp,fp,2734
  8058f4:	050001c4 	movi	r20,7
  8058f8:	00000306 	br	805908 <___vfprintf_internal_r+0xd0c>
  8058fc:	18c00204 	addi	r3,r3,8
  805900:	843ffc04 	addi	r16,r16,-16
  805904:	9c02130e 	bge	r19,r16,806154 <___vfprintf_internal_r+0x1558>
  805908:	94800404 	addi	r18,r18,16
  80590c:	8c400044 	addi	r17,r17,1
  805910:	1f000015 	stw	fp,0(r3)
  805914:	1cc00115 	stw	r19,4(r3)
  805918:	dc800e15 	stw	r18,56(sp)
  80591c:	dc400d15 	stw	r17,52(sp)
  805920:	a47ff60e 	bge	r20,r17,8058fc <___vfprintf_internal_r+0xd00>
  805924:	d9014f17 	ldw	r4,1340(sp)
  805928:	b00b883a 	mov	r5,r22
  80592c:	d9800c04 	addi	r6,sp,48
  805930:	0804ba40 	call	804ba4 <__sprint_r>
  805934:	103e691e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805938:	dc800e17 	ldw	r18,56(sp)
  80593c:	dc400d17 	ldw	r17,52(sp)
  805940:	d8c01904 	addi	r3,sp,100
  805944:	003fee06 	br	805900 <___vfprintf_internal_r+0xd04>
  805948:	d8814717 	ldw	r2,1308(sp)
  80594c:	143fffc4 	addi	r16,r2,-1
  805950:	043e970e 	bge	zero,r16,8053b0 <___vfprintf_internal_r+0x7b4>
  805954:	00800404 	movi	r2,16
  805958:	1400180e 	bge	r2,r16,8059bc <___vfprintf_internal_r+0xdc0>
  80595c:	1029883a 	mov	r20,r2
  805960:	07002074 	movhi	fp,129
  805964:	e702ab84 	addi	fp,fp,2734
  805968:	054001c4 	movi	r21,7
  80596c:	00000306 	br	80597c <___vfprintf_internal_r+0xd80>
  805970:	9cc00204 	addi	r19,r19,8
  805974:	843ffc04 	addi	r16,r16,-16
  805978:	a400120e 	bge	r20,r16,8059c4 <___vfprintf_internal_r+0xdc8>
  80597c:	94800404 	addi	r18,r18,16
  805980:	8c400044 	addi	r17,r17,1
  805984:	9f000015 	stw	fp,0(r19)
  805988:	9d000115 	stw	r20,4(r19)
  80598c:	dc800e15 	stw	r18,56(sp)
  805990:	dc400d15 	stw	r17,52(sp)
  805994:	ac7ff60e 	bge	r21,r17,805970 <___vfprintf_internal_r+0xd74>
  805998:	d9014f17 	ldw	r4,1340(sp)
  80599c:	b00b883a 	mov	r5,r22
  8059a0:	d9800c04 	addi	r6,sp,48
  8059a4:	0804ba40 	call	804ba4 <__sprint_r>
  8059a8:	103e4c1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8059ac:	dc800e17 	ldw	r18,56(sp)
  8059b0:	dc400d17 	ldw	r17,52(sp)
  8059b4:	dcc01904 	addi	r19,sp,100
  8059b8:	003fee06 	br	805974 <___vfprintf_internal_r+0xd78>
  8059bc:	07002074 	movhi	fp,129
  8059c0:	e702ab84 	addi	fp,fp,2734
  8059c4:	9425883a 	add	r18,r18,r16
  8059c8:	8c400044 	addi	r17,r17,1
  8059cc:	008001c4 	movi	r2,7
  8059d0:	9f000015 	stw	fp,0(r19)
  8059d4:	9c000115 	stw	r16,4(r19)
  8059d8:	dc800e15 	stw	r18,56(sp)
  8059dc:	dc400d15 	stw	r17,52(sp)
  8059e0:	147e720e 	bge	r2,r17,8053ac <___vfprintf_internal_r+0x7b0>
  8059e4:	d9014f17 	ldw	r4,1340(sp)
  8059e8:	b00b883a 	mov	r5,r22
  8059ec:	d9800c04 	addi	r6,sp,48
  8059f0:	0804ba40 	call	804ba4 <__sprint_r>
  8059f4:	103e391e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8059f8:	dc800e17 	ldw	r18,56(sp)
  8059fc:	dc400d17 	ldw	r17,52(sp)
  805a00:	dcc01904 	addi	r19,sp,100
  805a04:	003e6a06 	br	8053b0 <___vfprintf_internal_r+0x7b4>
  805a08:	d9014f17 	ldw	r4,1340(sp)
  805a0c:	b00b883a 	mov	r5,r22
  805a10:	d9800c04 	addi	r6,sp,48
  805a14:	d9c15115 	stw	r7,1348(sp)
  805a18:	0804ba40 	call	804ba4 <__sprint_r>
  805a1c:	d9c15117 	ldw	r7,1348(sp)
  805a20:	103e2e1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805a24:	dc800e17 	ldw	r18,56(sp)
  805a28:	dc400d17 	ldw	r17,52(sp)
  805a2c:	dd401904 	addi	r21,sp,100
  805a30:	003dba06 	br	80511c <___vfprintf_internal_r+0x520>
  805a34:	d9014f17 	ldw	r4,1340(sp)
  805a38:	b00b883a 	mov	r5,r22
  805a3c:	d9800c04 	addi	r6,sp,48
  805a40:	0804ba40 	call	804ba4 <__sprint_r>
  805a44:	103e251e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805a48:	dc800e17 	ldw	r18,56(sp)
  805a4c:	dc400d17 	ldw	r17,52(sp)
  805a50:	dcc01904 	addi	r19,sp,100
  805a54:	003e4206 	br	805360 <___vfprintf_internal_r+0x764>
  805a58:	d9014f17 	ldw	r4,1340(sp)
  805a5c:	b00b883a 	mov	r5,r22
  805a60:	d9800c04 	addi	r6,sp,48
  805a64:	0804ba40 	call	804ba4 <__sprint_r>
  805a68:	103e1c1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  805a6c:	dc800e17 	ldw	r18,56(sp)
  805a70:	dc400d17 	ldw	r17,52(sp)
  805a74:	d8c01904 	addi	r3,sp,100
  805a78:	003e2e06 	br	805334 <___vfprintf_internal_r+0x738>
  805a7c:	d9414c17 	ldw	r5,1328(sp)
  805a80:	2880004c 	andi	r2,r5,1
  805a84:	1005003a 	cmpeq	r2,r2,zero
  805a88:	103dda1e 	bne	r2,zero,8051f4 <___vfprintf_internal_r+0x5f8>
  805a8c:	003e9f06 	br	80550c <___vfprintf_internal_r+0x910>
  805a90:	d8c14117 	ldw	r3,1284(sp)
  805a94:	9125883a 	add	r18,r18,r4
  805a98:	8c400044 	addi	r17,r17,1
  805a9c:	008001c4 	movi	r2,7
  805aa0:	a8c00015 	stw	r3,0(r21)
  805aa4:	a9000115 	stw	r4,4(r21)
  805aa8:	dc800e15 	stw	r18,56(sp)
  805aac:	dc400d15 	stw	r17,52(sp)
  805ab0:	14426c16 	blt	r2,r17,806464 <___vfprintf_internal_r+0x1868>
  805ab4:	a8c00204 	addi	r3,r21,8
  805ab8:	d9414917 	ldw	r5,1316(sp)
  805abc:	00800044 	movi	r2,1
  805ac0:	94800044 	addi	r18,r18,1
  805ac4:	8c400044 	addi	r17,r17,1
  805ac8:	18800115 	stw	r2,4(r3)
  805acc:	008001c4 	movi	r2,7
  805ad0:	19400015 	stw	r5,0(r3)
  805ad4:	dc800e15 	stw	r18,56(sp)
  805ad8:	dc400d15 	stw	r17,52(sp)
  805adc:	2021883a 	mov	r16,r4
  805ae0:	14425616 	blt	r2,r17,80643c <___vfprintf_internal_r+0x1840>
  805ae4:	19400204 	addi	r5,r3,8
  805ae8:	d9814717 	ldw	r6,1308(sp)
  805aec:	8c400044 	addi	r17,r17,1
  805af0:	dc400d15 	stw	r17,52(sp)
  805af4:	3107c83a 	sub	r3,r6,r4
  805af8:	d9014117 	ldw	r4,1284(sp)
  805afc:	90e5883a 	add	r18,r18,r3
  805b00:	28c00115 	stw	r3,4(r5)
  805b04:	8105883a 	add	r2,r16,r4
  805b08:	28800015 	stw	r2,0(r5)
  805b0c:	008001c4 	movi	r2,7
  805b10:	dc800e15 	stw	r18,56(sp)
  805b14:	147f1d16 	blt	r2,r17,80578c <___vfprintf_internal_r+0xb90>
  805b18:	28c00204 	addi	r3,r5,8
  805b1c:	003db506 	br	8051f4 <___vfprintf_internal_r+0x5f8>
  805b20:	3c000017 	ldw	r16,0(r7)
  805b24:	3c400117 	ldw	r17,4(r7)
  805b28:	39800204 	addi	r6,r7,8
  805b2c:	01000044 	movi	r4,1
  805b30:	d9814015 	stw	r6,1280(sp)
  805b34:	d8000405 	stb	zero,16(sp)
  805b38:	003ebe06 	br	805634 <___vfprintf_internal_r+0xa38>
  805b3c:	3c000017 	ldw	r16,0(r7)
  805b40:	3c400117 	ldw	r17,4(r7)
  805b44:	38800204 	addi	r2,r7,8
  805b48:	d8814015 	stw	r2,1280(sp)
  805b4c:	003eb706 	br	80562c <___vfprintf_internal_r+0xa30>
  805b50:	3c000017 	ldw	r16,0(r7)
  805b54:	3c400117 	ldw	r17,4(r7)
  805b58:	39000204 	addi	r4,r7,8
  805b5c:	d9014015 	stw	r4,1280(sp)
  805b60:	0009883a 	mov	r4,zero
  805b64:	d8000405 	stb	zero,16(sp)
  805b68:	003eb206 	br	805634 <___vfprintf_internal_r+0xa38>
  805b6c:	38c00017 	ldw	r3,0(r7)
  805b70:	39c00104 	addi	r7,r7,4
  805b74:	d8c14a15 	stw	r3,1320(sp)
  805b78:	1800d70e 	bge	r3,zero,805ed8 <___vfprintf_internal_r+0x12dc>
  805b7c:	00c7c83a 	sub	r3,zero,r3
  805b80:	d8c14a15 	stw	r3,1320(sp)
  805b84:	d9014c17 	ldw	r4,1328(sp)
  805b88:	b8c00007 	ldb	r3,0(r23)
  805b8c:	21000114 	ori	r4,r4,4
  805b90:	d9014c15 	stw	r4,1328(sp)
  805b94:	003c9806 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805b98:	d9814c17 	ldw	r6,1328(sp)
  805b9c:	3080080c 	andi	r2,r6,32
  805ba0:	1001f626 	beq	r2,zero,80637c <___vfprintf_internal_r+0x1780>
  805ba4:	d9014b17 	ldw	r4,1324(sp)
  805ba8:	38800017 	ldw	r2,0(r7)
  805bac:	39c00104 	addi	r7,r7,4
  805bb0:	d9c14015 	stw	r7,1280(sp)
  805bb4:	2007d7fa 	srai	r3,r4,31
  805bb8:	d9c14017 	ldw	r7,1280(sp)
  805bbc:	11000015 	stw	r4,0(r2)
  805bc0:	10c00115 	stw	r3,4(r2)
  805bc4:	003c6906 	br	804d6c <___vfprintf_internal_r+0x170>
  805bc8:	b8c00007 	ldb	r3,0(r23)
  805bcc:	00801b04 	movi	r2,108
  805bd0:	18825526 	beq	r3,r2,806528 <___vfprintf_internal_r+0x192c>
  805bd4:	d9414c17 	ldw	r5,1328(sp)
  805bd8:	29400414 	ori	r5,r5,16
  805bdc:	d9414c15 	stw	r5,1328(sp)
  805be0:	003c8506 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805be4:	d9814c17 	ldw	r6,1328(sp)
  805be8:	b8c00007 	ldb	r3,0(r23)
  805bec:	31800814 	ori	r6,r6,32
  805bf0:	d9814c15 	stw	r6,1328(sp)
  805bf4:	003c8006 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805bf8:	d8814c17 	ldw	r2,1328(sp)
  805bfc:	3c000017 	ldw	r16,0(r7)
  805c00:	00c01e04 	movi	r3,120
  805c04:	10800094 	ori	r2,r2,2
  805c08:	d8814c15 	stw	r2,1328(sp)
  805c0c:	39c00104 	addi	r7,r7,4
  805c10:	01402074 	movhi	r5,129
  805c14:	29429404 	addi	r5,r5,2640
  805c18:	00800c04 	movi	r2,48
  805c1c:	0023883a 	mov	r17,zero
  805c20:	01000084 	movi	r4,2
  805c24:	d9c14015 	stw	r7,1280(sp)
  805c28:	d8c14d15 	stw	r3,1332(sp)
  805c2c:	d9414415 	stw	r5,1296(sp)
  805c30:	d8800445 	stb	r2,17(sp)
  805c34:	d8c00485 	stb	r3,18(sp)
  805c38:	d8000405 	stb	zero,16(sp)
  805c3c:	003e7d06 	br	805634 <___vfprintf_internal_r+0xa38>
  805c40:	d8814c17 	ldw	r2,1328(sp)
  805c44:	b8c00007 	ldb	r3,0(r23)
  805c48:	10801014 	ori	r2,r2,64
  805c4c:	d8814c15 	stw	r2,1328(sp)
  805c50:	003c6906 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805c54:	d9414c17 	ldw	r5,1328(sp)
  805c58:	2880020c 	andi	r2,r5,8
  805c5c:	1001e526 	beq	r2,zero,8063f4 <___vfprintf_internal_r+0x17f8>
  805c60:	39800017 	ldw	r6,0(r7)
  805c64:	38800204 	addi	r2,r7,8
  805c68:	d8814015 	stw	r2,1280(sp)
  805c6c:	d9814215 	stw	r6,1288(sp)
  805c70:	39c00117 	ldw	r7,4(r7)
  805c74:	d9c14315 	stw	r7,1292(sp)
  805c78:	d9014217 	ldw	r4,1288(sp)
  805c7c:	d9414317 	ldw	r5,1292(sp)
  805c80:	080c1780 	call	80c178 <__isinfd>
  805c84:	10021d26 	beq	r2,zero,8064fc <___vfprintf_internal_r+0x1900>
  805c88:	d9014217 	ldw	r4,1288(sp)
  805c8c:	d9414317 	ldw	r5,1292(sp)
  805c90:	000d883a 	mov	r6,zero
  805c94:	000f883a 	mov	r7,zero
  805c98:	080d9400 	call	80d940 <__ltdf2>
  805c9c:	1002d016 	blt	r2,zero,8067e0 <___vfprintf_internal_r+0x1be4>
  805ca0:	d9414d17 	ldw	r5,1332(sp)
  805ca4:	008011c4 	movi	r2,71
  805ca8:	11421016 	blt	r2,r5,8064ec <___vfprintf_internal_r+0x18f0>
  805cac:	01802074 	movhi	r6,129
  805cb0:	31829904 	addi	r6,r6,2660
  805cb4:	d9814115 	stw	r6,1284(sp)
  805cb8:	d9014c17 	ldw	r4,1328(sp)
  805cbc:	00c000c4 	movi	r3,3
  805cc0:	00bfdfc4 	movi	r2,-129
  805cc4:	2088703a 	and	r4,r4,r2
  805cc8:	180f883a 	mov	r7,r3
  805ccc:	d8c14515 	stw	r3,1300(sp)
  805cd0:	d9014c15 	stw	r4,1328(sp)
  805cd4:	d8014615 	stw	zero,1304(sp)
  805cd8:	003e6a06 	br	805684 <___vfprintf_internal_r+0xa88>
  805cdc:	38800017 	ldw	r2,0(r7)
  805ce0:	00c00044 	movi	r3,1
  805ce4:	39c00104 	addi	r7,r7,4
  805ce8:	d9c14015 	stw	r7,1280(sp)
  805cec:	d9000f04 	addi	r4,sp,60
  805cf0:	180f883a 	mov	r7,r3
  805cf4:	d8c14515 	stw	r3,1300(sp)
  805cf8:	d9014115 	stw	r4,1284(sp)
  805cfc:	d8800f05 	stb	r2,60(sp)
  805d00:	d8000405 	stb	zero,16(sp)
  805d04:	003cac06 	br	804fb8 <___vfprintf_internal_r+0x3bc>
  805d08:	01402074 	movhi	r5,129
  805d0c:	29429f04 	addi	r5,r5,2684
  805d10:	d9414415 	stw	r5,1296(sp)
  805d14:	d9814c17 	ldw	r6,1328(sp)
  805d18:	3080080c 	andi	r2,r6,32
  805d1c:	1000ff26 	beq	r2,zero,80611c <___vfprintf_internal_r+0x1520>
  805d20:	3c000017 	ldw	r16,0(r7)
  805d24:	3c400117 	ldw	r17,4(r7)
  805d28:	38800204 	addi	r2,r7,8
  805d2c:	d8814015 	stw	r2,1280(sp)
  805d30:	d9414c17 	ldw	r5,1328(sp)
  805d34:	2880004c 	andi	r2,r5,1
  805d38:	1005003a 	cmpeq	r2,r2,zero
  805d3c:	1000b91e 	bne	r2,zero,806024 <___vfprintf_internal_r+0x1428>
  805d40:	8444b03a 	or	r2,r16,r17
  805d44:	1000b726 	beq	r2,zero,806024 <___vfprintf_internal_r+0x1428>
  805d48:	d9814d17 	ldw	r6,1332(sp)
  805d4c:	29400094 	ori	r5,r5,2
  805d50:	00800c04 	movi	r2,48
  805d54:	01000084 	movi	r4,2
  805d58:	d9414c15 	stw	r5,1328(sp)
  805d5c:	d8800445 	stb	r2,17(sp)
  805d60:	d9800485 	stb	r6,18(sp)
  805d64:	d8000405 	stb	zero,16(sp)
  805d68:	003e3206 	br	805634 <___vfprintf_internal_r+0xa38>
  805d6c:	01802074 	movhi	r6,129
  805d70:	31829404 	addi	r6,r6,2640
  805d74:	d9814415 	stw	r6,1296(sp)
  805d78:	003fe606 	br	805d14 <___vfprintf_internal_r+0x1118>
  805d7c:	00800ac4 	movi	r2,43
  805d80:	d8800405 	stb	r2,16(sp)
  805d84:	b8c00007 	ldb	r3,0(r23)
  805d88:	003c1b06 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805d8c:	d8814c17 	ldw	r2,1328(sp)
  805d90:	b8c00007 	ldb	r3,0(r23)
  805d94:	10800054 	ori	r2,r2,1
  805d98:	d8814c15 	stw	r2,1328(sp)
  805d9c:	003c1606 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805da0:	d8800407 	ldb	r2,16(sp)
  805da4:	10004c1e 	bne	r2,zero,805ed8 <___vfprintf_internal_r+0x12dc>
  805da8:	00800804 	movi	r2,32
  805dac:	d8800405 	stb	r2,16(sp)
  805db0:	b8c00007 	ldb	r3,0(r23)
  805db4:	003c1006 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805db8:	d9814c17 	ldw	r6,1328(sp)
  805dbc:	b8c00007 	ldb	r3,0(r23)
  805dc0:	31800214 	ori	r6,r6,8
  805dc4:	d9814c15 	stw	r6,1328(sp)
  805dc8:	003c0b06 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805dcc:	0009883a 	mov	r4,zero
  805dd0:	04000244 	movi	r16,9
  805dd4:	01400284 	movi	r5,10
  805dd8:	d9c15115 	stw	r7,1348(sp)
  805ddc:	0803ec40 	call	803ec4 <__mulsi3>
  805de0:	b9000007 	ldb	r4,0(r23)
  805de4:	d8c14d17 	ldw	r3,1332(sp)
  805de8:	bdc00044 	addi	r23,r23,1
  805dec:	d9014d15 	stw	r4,1332(sp)
  805df0:	d9414d17 	ldw	r5,1332(sp)
  805df4:	1885883a 	add	r2,r3,r2
  805df8:	113ff404 	addi	r4,r2,-48
  805dfc:	28bff404 	addi	r2,r5,-48
  805e00:	d9c15117 	ldw	r7,1348(sp)
  805e04:	80bff32e 	bgeu	r16,r2,805dd4 <___vfprintf_internal_r+0x11d8>
  805e08:	d9014a15 	stw	r4,1320(sp)
  805e0c:	003bfc06 	br	804e00 <___vfprintf_internal_r+0x204>
  805e10:	d8814c17 	ldw	r2,1328(sp)
  805e14:	b8c00007 	ldb	r3,0(r23)
  805e18:	10802014 	ori	r2,r2,128
  805e1c:	d8814c15 	stw	r2,1328(sp)
  805e20:	003bf506 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805e24:	b8c00007 	ldb	r3,0(r23)
  805e28:	00800a84 	movi	r2,42
  805e2c:	bdc00044 	addi	r23,r23,1
  805e30:	18831826 	beq	r3,r2,806a94 <___vfprintf_internal_r+0x1e98>
  805e34:	d8c14d15 	stw	r3,1332(sp)
  805e38:	18bff404 	addi	r2,r3,-48
  805e3c:	00c00244 	movi	r3,9
  805e40:	18827b36 	bltu	r3,r2,806830 <___vfprintf_internal_r+0x1c34>
  805e44:	1821883a 	mov	r16,r3
  805e48:	0009883a 	mov	r4,zero
  805e4c:	01400284 	movi	r5,10
  805e50:	d9c15115 	stw	r7,1348(sp)
  805e54:	0803ec40 	call	803ec4 <__mulsi3>
  805e58:	d9414d17 	ldw	r5,1332(sp)
  805e5c:	b9800007 	ldb	r6,0(r23)
  805e60:	d9c15117 	ldw	r7,1348(sp)
  805e64:	1145883a 	add	r2,r2,r5
  805e68:	113ff404 	addi	r4,r2,-48
  805e6c:	30bff404 	addi	r2,r6,-48
  805e70:	d9814d15 	stw	r6,1332(sp)
  805e74:	bdc00044 	addi	r23,r23,1
  805e78:	80bff42e 	bgeu	r16,r2,805e4c <___vfprintf_internal_r+0x1250>
  805e7c:	2027883a 	mov	r19,r4
  805e80:	203bdf0e 	bge	r4,zero,804e00 <___vfprintf_internal_r+0x204>
  805e84:	04ffffc4 	movi	r19,-1
  805e88:	003bdd06 	br	804e00 <___vfprintf_internal_r+0x204>
  805e8c:	d8000405 	stb	zero,16(sp)
  805e90:	39800017 	ldw	r6,0(r7)
  805e94:	39c00104 	addi	r7,r7,4
  805e98:	d9c14015 	stw	r7,1280(sp)
  805e9c:	d9814115 	stw	r6,1284(sp)
  805ea0:	3001c926 	beq	r6,zero,8065c8 <___vfprintf_internal_r+0x19cc>
  805ea4:	98000e16 	blt	r19,zero,805ee0 <___vfprintf_internal_r+0x12e4>
  805ea8:	d9014117 	ldw	r4,1284(sp)
  805eac:	000b883a 	mov	r5,zero
  805eb0:	980d883a 	mov	r6,r19
  805eb4:	080a7fc0 	call	80a7fc <memchr>
  805eb8:	10025926 	beq	r2,zero,806820 <___vfprintf_internal_r+0x1c24>
  805ebc:	d8c14117 	ldw	r3,1284(sp)
  805ec0:	10cfc83a 	sub	r7,r2,r3
  805ec4:	99c19e16 	blt	r19,r7,806540 <___vfprintf_internal_r+0x1944>
  805ec8:	d9c14515 	stw	r7,1300(sp)
  805ecc:	38000916 	blt	r7,zero,805ef4 <___vfprintf_internal_r+0x12f8>
  805ed0:	d8014615 	stw	zero,1304(sp)
  805ed4:	003deb06 	br	805684 <___vfprintf_internal_r+0xa88>
  805ed8:	b8c00007 	ldb	r3,0(r23)
  805edc:	003bc606 	br	804df8 <___vfprintf_internal_r+0x1fc>
  805ee0:	d9014117 	ldw	r4,1284(sp)
  805ee4:	0804b300 	call	804b30 <strlen>
  805ee8:	d8814515 	stw	r2,1300(sp)
  805eec:	100f883a 	mov	r7,r2
  805ef0:	103ff70e 	bge	r2,zero,805ed0 <___vfprintf_internal_r+0x12d4>
  805ef4:	d8014515 	stw	zero,1300(sp)
  805ef8:	d8014615 	stw	zero,1304(sp)
  805efc:	003de106 	br	805684 <___vfprintf_internal_r+0xa88>
  805f00:	20c03fcc 	andi	r3,r4,255
  805f04:	00800044 	movi	r2,1
  805f08:	18802d26 	beq	r3,r2,805fc0 <___vfprintf_internal_r+0x13c4>
  805f0c:	18800e36 	bltu	r3,r2,805f48 <___vfprintf_internal_r+0x134c>
  805f10:	00800084 	movi	r2,2
  805f14:	1880fa26 	beq	r3,r2,806300 <___vfprintf_internal_r+0x1704>
  805f18:	01002074 	movhi	r4,129
  805f1c:	2102a404 	addi	r4,r4,2704
  805f20:	0804b300 	call	804b30 <strlen>
  805f24:	100f883a 	mov	r7,r2
  805f28:	dcc14515 	stw	r19,1300(sp)
  805f2c:	9880010e 	bge	r19,r2,805f34 <___vfprintf_internal_r+0x1338>
  805f30:	d8814515 	stw	r2,1300(sp)
  805f34:	00802074 	movhi	r2,129
  805f38:	1082a404 	addi	r2,r2,2704
  805f3c:	dcc14615 	stw	r19,1304(sp)
  805f40:	d8814115 	stw	r2,1284(sp)
  805f44:	003dcf06 	br	805684 <___vfprintf_internal_r+0xa88>
  805f48:	d9401904 	addi	r5,sp,100
  805f4c:	dd000f04 	addi	r20,sp,60
  805f50:	d9414115 	stw	r5,1284(sp)
  805f54:	880a977a 	slli	r5,r17,29
  805f58:	d9814117 	ldw	r6,1284(sp)
  805f5c:	8004d0fa 	srli	r2,r16,3
  805f60:	8806d0fa 	srli	r3,r17,3
  805f64:	810001cc 	andi	r4,r16,7
  805f68:	2884b03a 	or	r2,r5,r2
  805f6c:	31bfffc4 	addi	r6,r6,-1
  805f70:	21000c04 	addi	r4,r4,48
  805f74:	d9814115 	stw	r6,1284(sp)
  805f78:	10cab03a 	or	r5,r2,r3
  805f7c:	31000005 	stb	r4,0(r6)
  805f80:	1021883a 	mov	r16,r2
  805f84:	1823883a 	mov	r17,r3
  805f88:	283ff21e 	bne	r5,zero,805f54 <___vfprintf_internal_r+0x1358>
  805f8c:	d8c14c17 	ldw	r3,1328(sp)
  805f90:	1880004c 	andi	r2,r3,1
  805f94:	1005003a 	cmpeq	r2,r2,zero
  805f98:	103db31e 	bne	r2,zero,805668 <___vfprintf_internal_r+0xa6c>
  805f9c:	20803fcc 	andi	r2,r4,255
  805fa0:	1080201c 	xori	r2,r2,128
  805fa4:	10bfe004 	addi	r2,r2,-128
  805fa8:	00c00c04 	movi	r3,48
  805fac:	10fdae26 	beq	r2,r3,805668 <___vfprintf_internal_r+0xa6c>
  805fb0:	31bfffc4 	addi	r6,r6,-1
  805fb4:	d9814115 	stw	r6,1284(sp)
  805fb8:	30c00005 	stb	r3,0(r6)
  805fbc:	003daa06 	br	805668 <___vfprintf_internal_r+0xa6c>
  805fc0:	88800068 	cmpgeui	r2,r17,1
  805fc4:	10002c1e 	bne	r2,zero,806078 <___vfprintf_internal_r+0x147c>
  805fc8:	8800021e 	bne	r17,zero,805fd4 <___vfprintf_internal_r+0x13d8>
  805fcc:	00800244 	movi	r2,9
  805fd0:	14002936 	bltu	r2,r16,806078 <___vfprintf_internal_r+0x147c>
  805fd4:	d90018c4 	addi	r4,sp,99
  805fd8:	dd000f04 	addi	r20,sp,60
  805fdc:	d9014115 	stw	r4,1284(sp)
  805fe0:	d9014117 	ldw	r4,1284(sp)
  805fe4:	80800c04 	addi	r2,r16,48
  805fe8:	20800005 	stb	r2,0(r4)
  805fec:	003d9e06 	br	805668 <___vfprintf_internal_r+0xa6c>
  805ff0:	dc400d17 	ldw	r17,52(sp)
  805ff4:	07002074 	movhi	fp,129
  805ff8:	e702ab84 	addi	fp,fp,2734
  805ffc:	9425883a 	add	r18,r18,r16
  806000:	8c400044 	addi	r17,r17,1
  806004:	008001c4 	movi	r2,7
  806008:	1f000015 	stw	fp,0(r3)
  80600c:	1c000115 	stw	r16,4(r3)
  806010:	dc800e15 	stw	r18,56(sp)
  806014:	dc400d15 	stw	r17,52(sp)
  806018:	147ddc16 	blt	r2,r17,80578c <___vfprintf_internal_r+0xb90>
  80601c:	18c00204 	addi	r3,r3,8
  806020:	003c7406 	br	8051f4 <___vfprintf_internal_r+0x5f8>
  806024:	01000084 	movi	r4,2
  806028:	d8000405 	stb	zero,16(sp)
  80602c:	003d8106 	br	805634 <___vfprintf_internal_r+0xa38>
  806030:	d9814c17 	ldw	r6,1328(sp)
  806034:	30c4703a 	and	r2,r6,r3
  806038:	1005003a 	cmpeq	r2,r2,zero
  80603c:	103cb326 	beq	r2,zero,80530c <___vfprintf_internal_r+0x710>
  806040:	d9014117 	ldw	r4,1284(sp)
  806044:	94800044 	addi	r18,r18,1
  806048:	8c400044 	addi	r17,r17,1
  80604c:	008001c4 	movi	r2,7
  806050:	a9000015 	stw	r4,0(r21)
  806054:	a8c00115 	stw	r3,4(r21)
  806058:	dc800e15 	stw	r18,56(sp)
  80605c:	dc400d15 	stw	r17,52(sp)
  806060:	147e6016 	blt	r2,r17,8059e4 <___vfprintf_internal_r+0xde8>
  806064:	acc00204 	addi	r19,r21,8
  806068:	003cd106 	br	8053b0 <___vfprintf_internal_r+0x7b4>
  80606c:	07002074 	movhi	fp,129
  806070:	e702ab84 	addi	fp,fp,2734
  806074:	003c4906 	br	80519c <___vfprintf_internal_r+0x5a0>
  806078:	dd000f04 	addi	r20,sp,60
  80607c:	dc801904 	addi	r18,sp,100
  806080:	8009883a 	mov	r4,r16
  806084:	880b883a 	mov	r5,r17
  806088:	01800284 	movi	r6,10
  80608c:	000f883a 	mov	r7,zero
  806090:	080d0000 	call	80d000 <__umoddi3>
  806094:	12000c04 	addi	r8,r2,48
  806098:	94bfffc4 	addi	r18,r18,-1
  80609c:	8009883a 	mov	r4,r16
  8060a0:	880b883a 	mov	r5,r17
  8060a4:	01800284 	movi	r6,10
  8060a8:	000f883a 	mov	r7,zero
  8060ac:	92000005 	stb	r8,0(r18)
  8060b0:	080c9940 	call	80c994 <__udivdi3>
  8060b4:	1009883a 	mov	r4,r2
  8060b8:	1021883a 	mov	r16,r2
  8060bc:	18800068 	cmpgeui	r2,r3,1
  8060c0:	1823883a 	mov	r17,r3
  8060c4:	103fee1e 	bne	r2,zero,806080 <___vfprintf_internal_r+0x1484>
  8060c8:	1800021e 	bne	r3,zero,8060d4 <___vfprintf_internal_r+0x14d8>
  8060cc:	00800244 	movi	r2,9
  8060d0:	113feb36 	bltu	r2,r4,806080 <___vfprintf_internal_r+0x1484>
  8060d4:	94bfffc4 	addi	r18,r18,-1
  8060d8:	dc814115 	stw	r18,1284(sp)
  8060dc:	003fc006 	br	805fe0 <___vfprintf_internal_r+0x13e4>
  8060e0:	d9014c17 	ldw	r4,1328(sp)
  8060e4:	2080004c 	andi	r2,r4,1
  8060e8:	10009a1e 	bne	r2,zero,806354 <___vfprintf_internal_r+0x1758>
  8060ec:	d9401904 	addi	r5,sp,100
  8060f0:	dd000f04 	addi	r20,sp,60
  8060f4:	d9414115 	stw	r5,1284(sp)
  8060f8:	003d5b06 	br	805668 <___vfprintf_internal_r+0xa6c>
  8060fc:	d9014f17 	ldw	r4,1340(sp)
  806100:	b00b883a 	mov	r5,r22
  806104:	d9800c04 	addi	r6,sp,48
  806108:	0804ba40 	call	804ba4 <__sprint_r>
  80610c:	103c731e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  806110:	dc800e17 	ldw	r18,56(sp)
  806114:	d8c01904 	addi	r3,sp,100
  806118:	003cf906 	br	805500 <___vfprintf_internal_r+0x904>
  80611c:	d8c14c17 	ldw	r3,1328(sp)
  806120:	1880040c 	andi	r2,r3,16
  806124:	1000711e 	bne	r2,zero,8062ec <___vfprintf_internal_r+0x16f0>
  806128:	d9014c17 	ldw	r4,1328(sp)
  80612c:	2080100c 	andi	r2,r4,64
  806130:	10006e26 	beq	r2,zero,8062ec <___vfprintf_internal_r+0x16f0>
  806134:	3c00000b 	ldhu	r16,0(r7)
  806138:	0023883a 	mov	r17,zero
  80613c:	39c00104 	addi	r7,r7,4
  806140:	d9c14015 	stw	r7,1280(sp)
  806144:	003efa06 	br	805d30 <___vfprintf_internal_r+0x1134>
  806148:	dc400d17 	ldw	r17,52(sp)
  80614c:	07002074 	movhi	fp,129
  806150:	e702ab84 	addi	fp,fp,2734
  806154:	9425883a 	add	r18,r18,r16
  806158:	8c400044 	addi	r17,r17,1
  80615c:	008001c4 	movi	r2,7
  806160:	1f000015 	stw	fp,0(r3)
  806164:	1c000115 	stw	r16,4(r3)
  806168:	dc800e15 	stw	r18,56(sp)
  80616c:	dc400d15 	stw	r17,52(sp)
  806170:	147d7016 	blt	r2,r17,805734 <___vfprintf_internal_r+0xb38>
  806174:	18c00204 	addi	r3,r3,8
  806178:	003d7506 	br	805750 <___vfprintf_internal_r+0xb54>
  80617c:	dc800e17 	ldw	r18,56(sp)
  806180:	dc400d17 	ldw	r17,52(sp)
  806184:	07002074 	movhi	fp,129
  806188:	e702af84 	addi	fp,fp,2750
  80618c:	003bba06 	br	805078 <___vfprintf_internal_r+0x47c>
  806190:	d9014f17 	ldw	r4,1340(sp)
  806194:	b00b883a 	mov	r5,r22
  806198:	d9800c04 	addi	r6,sp,48
  80619c:	0804ba40 	call	804ba4 <__sprint_r>
  8061a0:	103c4e1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8061a4:	dc800e17 	ldw	r18,56(sp)
  8061a8:	d8c01904 	addi	r3,sp,100
  8061ac:	003ce306 	br	80553c <___vfprintf_internal_r+0x940>
  8061b0:	3c000017 	ldw	r16,0(r7)
  8061b4:	0009883a 	mov	r4,zero
  8061b8:	39c00104 	addi	r7,r7,4
  8061bc:	0023883a 	mov	r17,zero
  8061c0:	d9c14015 	stw	r7,1280(sp)
  8061c4:	d8000405 	stb	zero,16(sp)
  8061c8:	003d1a06 	br	805634 <___vfprintf_internal_r+0xa38>
  8061cc:	38800017 	ldw	r2,0(r7)
  8061d0:	39c00104 	addi	r7,r7,4
  8061d4:	d9c14015 	stw	r7,1280(sp)
  8061d8:	1023d7fa 	srai	r17,r2,31
  8061dc:	1021883a 	mov	r16,r2
  8061e0:	003d1206 	br	80562c <___vfprintf_internal_r+0xa30>
  8061e4:	3c000017 	ldw	r16,0(r7)
  8061e8:	01000044 	movi	r4,1
  8061ec:	39c00104 	addi	r7,r7,4
  8061f0:	0023883a 	mov	r17,zero
  8061f4:	d9c14015 	stw	r7,1280(sp)
  8061f8:	d8000405 	stb	zero,16(sp)
  8061fc:	003d0d06 	br	805634 <___vfprintf_internal_r+0xa38>
  806200:	00802074 	movhi	r2,129
  806204:	1082ab04 	addi	r2,r2,2732
  806208:	94800044 	addi	r18,r18,1
  80620c:	8c400044 	addi	r17,r17,1
  806210:	a8800015 	stw	r2,0(r21)
  806214:	00c00044 	movi	r3,1
  806218:	008001c4 	movi	r2,7
  80621c:	a8c00115 	stw	r3,4(r21)
  806220:	dc800e15 	stw	r18,56(sp)
  806224:	dc400d15 	stw	r17,52(sp)
  806228:	1440ca16 	blt	r2,r17,806554 <___vfprintf_internal_r+0x1958>
  80622c:	a8c00204 	addi	r3,r21,8
  806230:	2000061e 	bne	r4,zero,80624c <___vfprintf_internal_r+0x1650>
  806234:	d9414717 	ldw	r5,1308(sp)
  806238:	2800041e 	bne	r5,zero,80624c <___vfprintf_internal_r+0x1650>
  80623c:	d9814c17 	ldw	r6,1328(sp)
  806240:	3080004c 	andi	r2,r6,1
  806244:	1005003a 	cmpeq	r2,r2,zero
  806248:	103bea1e 	bne	r2,zero,8051f4 <___vfprintf_internal_r+0x5f8>
  80624c:	00800044 	movi	r2,1
  806250:	dc400d17 	ldw	r17,52(sp)
  806254:	18800115 	stw	r2,4(r3)
  806258:	d8814917 	ldw	r2,1316(sp)
  80625c:	94800044 	addi	r18,r18,1
  806260:	8c400044 	addi	r17,r17,1
  806264:	18800015 	stw	r2,0(r3)
  806268:	008001c4 	movi	r2,7
  80626c:	dc800e15 	stw	r18,56(sp)
  806270:	dc400d15 	stw	r17,52(sp)
  806274:	1440ca16 	blt	r2,r17,8065a0 <___vfprintf_internal_r+0x19a4>
  806278:	18c00204 	addi	r3,r3,8
  80627c:	0121c83a 	sub	r16,zero,r4
  806280:	0400500e 	bge	zero,r16,8063c4 <___vfprintf_internal_r+0x17c8>
  806284:	00800404 	movi	r2,16
  806288:	1400800e 	bge	r2,r16,80648c <___vfprintf_internal_r+0x1890>
  80628c:	1027883a 	mov	r19,r2
  806290:	07002074 	movhi	fp,129
  806294:	e702ab84 	addi	fp,fp,2734
  806298:	050001c4 	movi	r20,7
  80629c:	00000306 	br	8062ac <___vfprintf_internal_r+0x16b0>
  8062a0:	18c00204 	addi	r3,r3,8
  8062a4:	843ffc04 	addi	r16,r16,-16
  8062a8:	9c007a0e 	bge	r19,r16,806494 <___vfprintf_internal_r+0x1898>
  8062ac:	94800404 	addi	r18,r18,16
  8062b0:	8c400044 	addi	r17,r17,1
  8062b4:	1f000015 	stw	fp,0(r3)
  8062b8:	1cc00115 	stw	r19,4(r3)
  8062bc:	dc800e15 	stw	r18,56(sp)
  8062c0:	dc400d15 	stw	r17,52(sp)
  8062c4:	a47ff60e 	bge	r20,r17,8062a0 <___vfprintf_internal_r+0x16a4>
  8062c8:	d9014f17 	ldw	r4,1340(sp)
  8062cc:	b00b883a 	mov	r5,r22
  8062d0:	d9800c04 	addi	r6,sp,48
  8062d4:	0804ba40 	call	804ba4 <__sprint_r>
  8062d8:	103c001e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8062dc:	dc800e17 	ldw	r18,56(sp)
  8062e0:	dc400d17 	ldw	r17,52(sp)
  8062e4:	d8c01904 	addi	r3,sp,100
  8062e8:	003fee06 	br	8062a4 <___vfprintf_internal_r+0x16a8>
  8062ec:	3c000017 	ldw	r16,0(r7)
  8062f0:	0023883a 	mov	r17,zero
  8062f4:	39c00104 	addi	r7,r7,4
  8062f8:	d9c14015 	stw	r7,1280(sp)
  8062fc:	003e8c06 	br	805d30 <___vfprintf_internal_r+0x1134>
  806300:	d9401904 	addi	r5,sp,100
  806304:	dd000f04 	addi	r20,sp,60
  806308:	d9414115 	stw	r5,1284(sp)
  80630c:	d9814417 	ldw	r6,1296(sp)
  806310:	880a973a 	slli	r5,r17,28
  806314:	8004d13a 	srli	r2,r16,4
  806318:	810003cc 	andi	r4,r16,15
  80631c:	3109883a 	add	r4,r6,r4
  806320:	2884b03a 	or	r2,r5,r2
  806324:	21400003 	ldbu	r5,0(r4)
  806328:	d9014117 	ldw	r4,1284(sp)
  80632c:	8806d13a 	srli	r3,r17,4
  806330:	1021883a 	mov	r16,r2
  806334:	213fffc4 	addi	r4,r4,-1
  806338:	d9014115 	stw	r4,1284(sp)
  80633c:	d9814117 	ldw	r6,1284(sp)
  806340:	10c8b03a 	or	r4,r2,r3
  806344:	1823883a 	mov	r17,r3
  806348:	31400005 	stb	r5,0(r6)
  80634c:	203fef1e 	bne	r4,zero,80630c <___vfprintf_internal_r+0x1710>
  806350:	003cc506 	br	805668 <___vfprintf_internal_r+0xa6c>
  806354:	00800c04 	movi	r2,48
  806358:	d98018c4 	addi	r6,sp,99
  80635c:	dd000f04 	addi	r20,sp,60
  806360:	d88018c5 	stb	r2,99(sp)
  806364:	d9814115 	stw	r6,1284(sp)
  806368:	003cbf06 	br	805668 <___vfprintf_internal_r+0xa6c>
  80636c:	dc400d17 	ldw	r17,52(sp)
  806370:	07002074 	movhi	fp,129
  806374:	e702af84 	addi	fp,fp,2750
  806378:	003bc106 	br	805280 <___vfprintf_internal_r+0x684>
  80637c:	d9414c17 	ldw	r5,1328(sp)
  806380:	2880040c 	andi	r2,r5,16
  806384:	10007c26 	beq	r2,zero,806578 <___vfprintf_internal_r+0x197c>
  806388:	38800017 	ldw	r2,0(r7)
  80638c:	39c00104 	addi	r7,r7,4
  806390:	d9c14015 	stw	r7,1280(sp)
  806394:	d9814b17 	ldw	r6,1324(sp)
  806398:	d9c14017 	ldw	r7,1280(sp)
  80639c:	11800015 	stw	r6,0(r2)
  8063a0:	003a7206 	br	804d6c <___vfprintf_internal_r+0x170>
  8063a4:	d9014f17 	ldw	r4,1340(sp)
  8063a8:	b00b883a 	mov	r5,r22
  8063ac:	d9800c04 	addi	r6,sp,48
  8063b0:	0804ba40 	call	804ba4 <__sprint_r>
  8063b4:	103bc91e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8063b8:	dc800e17 	ldw	r18,56(sp)
  8063bc:	dc400d17 	ldw	r17,52(sp)
  8063c0:	d8c01904 	addi	r3,sp,100
  8063c4:	d9014717 	ldw	r4,1308(sp)
  8063c8:	d9414117 	ldw	r5,1284(sp)
  8063cc:	8c400044 	addi	r17,r17,1
  8063d0:	9125883a 	add	r18,r18,r4
  8063d4:	008001c4 	movi	r2,7
  8063d8:	19400015 	stw	r5,0(r3)
  8063dc:	19000115 	stw	r4,4(r3)
  8063e0:	dc800e15 	stw	r18,56(sp)
  8063e4:	dc400d15 	stw	r17,52(sp)
  8063e8:	147ce816 	blt	r2,r17,80578c <___vfprintf_internal_r+0xb90>
  8063ec:	18c00204 	addi	r3,r3,8
  8063f0:	003b8006 	br	8051f4 <___vfprintf_internal_r+0x5f8>
  8063f4:	38c00017 	ldw	r3,0(r7)
  8063f8:	39000204 	addi	r4,r7,8
  8063fc:	d9014015 	stw	r4,1280(sp)
  806400:	d8c14215 	stw	r3,1288(sp)
  806404:	39c00117 	ldw	r7,4(r7)
  806408:	d9c14315 	stw	r7,1292(sp)
  80640c:	003e1a06 	br	805c78 <___vfprintf_internal_r+0x107c>
  806410:	0005883a 	mov	r2,zero
  806414:	1409c83a 	sub	r4,r2,r16
  806418:	1105803a 	cmpltu	r2,r2,r4
  80641c:	044bc83a 	sub	r5,zero,r17
  806420:	2885c83a 	sub	r2,r5,r2
  806424:	2021883a 	mov	r16,r4
  806428:	1023883a 	mov	r17,r2
  80642c:	01000044 	movi	r4,1
  806430:	00800b44 	movi	r2,45
  806434:	d8800405 	stb	r2,16(sp)
  806438:	003c7e06 	br	805634 <___vfprintf_internal_r+0xa38>
  80643c:	d9014f17 	ldw	r4,1340(sp)
  806440:	b00b883a 	mov	r5,r22
  806444:	d9800c04 	addi	r6,sp,48
  806448:	0804ba40 	call	804ba4 <__sprint_r>
  80644c:	103ba31e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  806450:	dc800e17 	ldw	r18,56(sp)
  806454:	dc400d17 	ldw	r17,52(sp)
  806458:	d9000517 	ldw	r4,20(sp)
  80645c:	d9401904 	addi	r5,sp,100
  806460:	003da106 	br	805ae8 <___vfprintf_internal_r+0xeec>
  806464:	d9014f17 	ldw	r4,1340(sp)
  806468:	b00b883a 	mov	r5,r22
  80646c:	d9800c04 	addi	r6,sp,48
  806470:	0804ba40 	call	804ba4 <__sprint_r>
  806474:	103b991e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  806478:	dc800e17 	ldw	r18,56(sp)
  80647c:	dc400d17 	ldw	r17,52(sp)
  806480:	d9000517 	ldw	r4,20(sp)
  806484:	d8c01904 	addi	r3,sp,100
  806488:	003d8b06 	br	805ab8 <___vfprintf_internal_r+0xebc>
  80648c:	07002074 	movhi	fp,129
  806490:	e702ab84 	addi	fp,fp,2734
  806494:	9425883a 	add	r18,r18,r16
  806498:	8c400044 	addi	r17,r17,1
  80649c:	008001c4 	movi	r2,7
  8064a0:	1f000015 	stw	fp,0(r3)
  8064a4:	1c000115 	stw	r16,4(r3)
  8064a8:	dc800e15 	stw	r18,56(sp)
  8064ac:	dc400d15 	stw	r17,52(sp)
  8064b0:	147fbc16 	blt	r2,r17,8063a4 <___vfprintf_internal_r+0x17a8>
  8064b4:	18c00204 	addi	r3,r3,8
  8064b8:	003fc206 	br	8063c4 <___vfprintf_internal_r+0x17c8>
  8064bc:	d9014f17 	ldw	r4,1340(sp)
  8064c0:	b00b883a 	mov	r5,r22
  8064c4:	d9800c04 	addi	r6,sp,48
  8064c8:	0804ba40 	call	804ba4 <__sprint_r>
  8064cc:	103b831e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8064d0:	dc800e17 	ldw	r18,56(sp)
  8064d4:	d9000517 	ldw	r4,20(sp)
  8064d8:	d8c01904 	addi	r3,sp,100
  8064dc:	003cfc06 	br	8058d0 <___vfprintf_internal_r+0xcd4>
  8064e0:	07002074 	movhi	fp,129
  8064e4:	e702ab84 	addi	fp,fp,2734
  8064e8:	003bde06 	br	805464 <___vfprintf_internal_r+0x868>
  8064ec:	00802074 	movhi	r2,129
  8064f0:	10829a04 	addi	r2,r2,2664
  8064f4:	d8814115 	stw	r2,1284(sp)
  8064f8:	003def06 	br	805cb8 <___vfprintf_internal_r+0x10bc>
  8064fc:	d9014217 	ldw	r4,1288(sp)
  806500:	d9414317 	ldw	r5,1292(sp)
  806504:	080c1b80 	call	80c1b8 <__isnand>
  806508:	10003926 	beq	r2,zero,8065f0 <___vfprintf_internal_r+0x19f4>
  80650c:	d9414d17 	ldw	r5,1332(sp)
  806510:	008011c4 	movi	r2,71
  806514:	1140ce16 	blt	r2,r5,806850 <___vfprintf_internal_r+0x1c54>
  806518:	01802074 	movhi	r6,129
  80651c:	31829b04 	addi	r6,r6,2668
  806520:	d9814115 	stw	r6,1284(sp)
  806524:	003de406 	br	805cb8 <___vfprintf_internal_r+0x10bc>
  806528:	d9014c17 	ldw	r4,1328(sp)
  80652c:	bdc00044 	addi	r23,r23,1
  806530:	b8c00007 	ldb	r3,0(r23)
  806534:	21000814 	ori	r4,r4,32
  806538:	d9014c15 	stw	r4,1328(sp)
  80653c:	003a2e06 	br	804df8 <___vfprintf_internal_r+0x1fc>
  806540:	dcc14515 	stw	r19,1300(sp)
  806544:	98011016 	blt	r19,zero,806988 <___vfprintf_internal_r+0x1d8c>
  806548:	980f883a 	mov	r7,r19
  80654c:	d8014615 	stw	zero,1304(sp)
  806550:	003c4c06 	br	805684 <___vfprintf_internal_r+0xa88>
  806554:	d9014f17 	ldw	r4,1340(sp)
  806558:	b00b883a 	mov	r5,r22
  80655c:	d9800c04 	addi	r6,sp,48
  806560:	0804ba40 	call	804ba4 <__sprint_r>
  806564:	103b5d1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  806568:	dc800e17 	ldw	r18,56(sp)
  80656c:	d9000517 	ldw	r4,20(sp)
  806570:	d8c01904 	addi	r3,sp,100
  806574:	003f2e06 	br	806230 <___vfprintf_internal_r+0x1634>
  806578:	d8c14c17 	ldw	r3,1328(sp)
  80657c:	1880100c 	andi	r2,r3,64
  806580:	1000a026 	beq	r2,zero,806804 <___vfprintf_internal_r+0x1c08>
  806584:	38800017 	ldw	r2,0(r7)
  806588:	39c00104 	addi	r7,r7,4
  80658c:	d9c14015 	stw	r7,1280(sp)
  806590:	d9014b17 	ldw	r4,1324(sp)
  806594:	d9c14017 	ldw	r7,1280(sp)
  806598:	1100000d 	sth	r4,0(r2)
  80659c:	0039f306 	br	804d6c <___vfprintf_internal_r+0x170>
  8065a0:	d9014f17 	ldw	r4,1340(sp)
  8065a4:	b00b883a 	mov	r5,r22
  8065a8:	d9800c04 	addi	r6,sp,48
  8065ac:	0804ba40 	call	804ba4 <__sprint_r>
  8065b0:	103b4a1e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  8065b4:	dc800e17 	ldw	r18,56(sp)
  8065b8:	dc400d17 	ldw	r17,52(sp)
  8065bc:	d9000517 	ldw	r4,20(sp)
  8065c0:	d8c01904 	addi	r3,sp,100
  8065c4:	003f2d06 	br	80627c <___vfprintf_internal_r+0x1680>
  8065c8:	00800184 	movi	r2,6
  8065cc:	14c09a36 	bltu	r2,r19,806838 <___vfprintf_internal_r+0x1c3c>
  8065d0:	dcc14515 	stw	r19,1300(sp)
  8065d4:	9800010e 	bge	r19,zero,8065dc <___vfprintf_internal_r+0x19e0>
  8065d8:	d8014515 	stw	zero,1300(sp)
  8065dc:	00802074 	movhi	r2,129
  8065e0:	10829d04 	addi	r2,r2,2676
  8065e4:	980f883a 	mov	r7,r19
  8065e8:	d8814115 	stw	r2,1284(sp)
  8065ec:	003a7206 	br	804fb8 <___vfprintf_internal_r+0x3bc>
  8065f0:	00bfffc4 	movi	r2,-1
  8065f4:	9880e226 	beq	r19,r2,806980 <___vfprintf_internal_r+0x1d84>
  8065f8:	d9414d17 	ldw	r5,1332(sp)
  8065fc:	008019c4 	movi	r2,103
  806600:	2880dc26 	beq	r5,r2,806974 <___vfprintf_internal_r+0x1d78>
  806604:	008011c4 	movi	r2,71
  806608:	2880da26 	beq	r5,r2,806974 <___vfprintf_internal_r+0x1d78>
  80660c:	d9414c17 	ldw	r5,1328(sp)
  806610:	d9014317 	ldw	r4,1292(sp)
  806614:	d9814217 	ldw	r6,1288(sp)
  806618:	29404014 	ori	r5,r5,256
  80661c:	d9414c15 	stw	r5,1328(sp)
  806620:	2000cc16 	blt	r4,zero,806954 <___vfprintf_internal_r+0x1d58>
  806624:	3021883a 	mov	r16,r6
  806628:	2023883a 	mov	r17,r4
  80662c:	0039883a 	mov	fp,zero
  806630:	d9414d17 	ldw	r5,1332(sp)
  806634:	00801984 	movi	r2,102
  806638:	2880b726 	beq	r5,r2,806918 <___vfprintf_internal_r+0x1d1c>
  80663c:	00801184 	movi	r2,70
  806640:	2880b526 	beq	r5,r2,806918 <___vfprintf_internal_r+0x1d1c>
  806644:	00801944 	movi	r2,101
  806648:	2880c826 	beq	r5,r2,80696c <___vfprintf_internal_r+0x1d70>
  80664c:	00801144 	movi	r2,69
  806650:	2880c626 	beq	r5,r2,80696c <___vfprintf_internal_r+0x1d70>
  806654:	9829883a 	mov	r20,r19
  806658:	d9014f17 	ldw	r4,1340(sp)
  80665c:	d8800504 	addi	r2,sp,20
  806660:	880d883a 	mov	r6,r17
  806664:	d8800115 	stw	r2,4(sp)
  806668:	d8c00604 	addi	r3,sp,24
  80666c:	d8800704 	addi	r2,sp,28
  806670:	800b883a 	mov	r5,r16
  806674:	01c00084 	movi	r7,2
  806678:	d8c00215 	stw	r3,8(sp)
  80667c:	d8800315 	stw	r2,12(sp)
  806680:	dd000015 	stw	r20,0(sp)
  806684:	0806e640 	call	806e64 <_dtoa_r>
  806688:	d9814d17 	ldw	r6,1332(sp)
  80668c:	d8814115 	stw	r2,1284(sp)
  806690:	008019c4 	movi	r2,103
  806694:	30809526 	beq	r6,r2,8068ec <___vfprintf_internal_r+0x1cf0>
  806698:	d8c14d17 	ldw	r3,1332(sp)
  80669c:	008011c4 	movi	r2,71
  8066a0:	18809226 	beq	r3,r2,8068ec <___vfprintf_internal_r+0x1cf0>
  8066a4:	d9414117 	ldw	r5,1284(sp)
  8066a8:	d9814d17 	ldw	r6,1332(sp)
  8066ac:	00801984 	movi	r2,102
  8066b0:	2d25883a 	add	r18,r5,r20
  8066b4:	30808626 	beq	r6,r2,8068d0 <___vfprintf_internal_r+0x1cd4>
  8066b8:	00801184 	movi	r2,70
  8066bc:	30808426 	beq	r6,r2,8068d0 <___vfprintf_internal_r+0x1cd4>
  8066c0:	000d883a 	mov	r6,zero
  8066c4:	000f883a 	mov	r7,zero
  8066c8:	880b883a 	mov	r5,r17
  8066cc:	8009883a 	mov	r4,r16
  8066d0:	08037d00 	call	8037d0 <__eqdf2>
  8066d4:	1000751e 	bne	r2,zero,8068ac <___vfprintf_internal_r+0x1cb0>
  8066d8:	9005883a 	mov	r2,r18
  8066dc:	dc800715 	stw	r18,28(sp)
  8066e0:	d9014117 	ldw	r4,1284(sp)
  8066e4:	d9414d17 	ldw	r5,1332(sp)
  8066e8:	00c019c4 	movi	r3,103
  8066ec:	1125c83a 	sub	r18,r2,r4
  8066f0:	28c06826 	beq	r5,r3,806894 <___vfprintf_internal_r+0x1c98>
  8066f4:	008011c4 	movi	r2,71
  8066f8:	28806626 	beq	r5,r2,806894 <___vfprintf_internal_r+0x1c98>
  8066fc:	d9000517 	ldw	r4,20(sp)
  806700:	d8c14d17 	ldw	r3,1332(sp)
  806704:	00801944 	movi	r2,101
  806708:	10c05516 	blt	r2,r3,806860 <___vfprintf_internal_r+0x1c64>
  80670c:	213fffc4 	addi	r4,r4,-1
  806710:	d9000515 	stw	r4,20(sp)
  806714:	d8c00805 	stb	r3,32(sp)
  806718:	2021883a 	mov	r16,r4
  80671c:	2000c116 	blt	r4,zero,806a24 <___vfprintf_internal_r+0x1e28>
  806720:	00800ac4 	movi	r2,43
  806724:	d8800845 	stb	r2,33(sp)
  806728:	00800244 	movi	r2,9
  80672c:	1400af0e 	bge	r2,r16,8069ec <___vfprintf_internal_r+0x1df0>
  806730:	1027883a 	mov	r19,r2
  806734:	dc400b84 	addi	r17,sp,46
  806738:	8009883a 	mov	r4,r16
  80673c:	01400284 	movi	r5,10
  806740:	0803e540 	call	803e54 <__modsi3>
  806744:	10800c04 	addi	r2,r2,48
  806748:	8c7fffc4 	addi	r17,r17,-1
  80674c:	8009883a 	mov	r4,r16
  806750:	01400284 	movi	r5,10
  806754:	88800005 	stb	r2,0(r17)
  806758:	0803df40 	call	803df4 <__divsi3>
  80675c:	1021883a 	mov	r16,r2
  806760:	98bff516 	blt	r19,r2,806738 <___vfprintf_internal_r+0x1b3c>
  806764:	10c00c04 	addi	r3,r2,48
  806768:	d88009c4 	addi	r2,sp,39
  80676c:	108001c4 	addi	r2,r2,7
  806770:	897fffc4 	addi	r5,r17,-1
  806774:	88ffffc5 	stb	r3,-1(r17)
  806778:	2880a72e 	bgeu	r5,r2,806a18 <___vfprintf_internal_r+0x1e1c>
  80677c:	1009883a 	mov	r4,r2
  806780:	d9800804 	addi	r6,sp,32
  806784:	d8c00884 	addi	r3,sp,34
  806788:	28800003 	ldbu	r2,0(r5)
  80678c:	29400044 	addi	r5,r5,1
  806790:	18800005 	stb	r2,0(r3)
  806794:	18c00044 	addi	r3,r3,1
  806798:	293ffb36 	bltu	r5,r4,806788 <___vfprintf_internal_r+0x1b8c>
  80679c:	1987c83a 	sub	r3,r3,r6
  8067a0:	00800044 	movi	r2,1
  8067a4:	d8c14815 	stw	r3,1312(sp)
  8067a8:	90cf883a 	add	r7,r18,r3
  8067ac:	1480960e 	bge	r2,r18,806a08 <___vfprintf_internal_r+0x1e0c>
  8067b0:	39c00044 	addi	r7,r7,1
  8067b4:	d9c14515 	stw	r7,1300(sp)
  8067b8:	38003416 	blt	r7,zero,80688c <___vfprintf_internal_r+0x1c90>
  8067bc:	e0803fcc 	andi	r2,fp,255
  8067c0:	1080201c 	xori	r2,r2,128
  8067c4:	10bfe004 	addi	r2,r2,-128
  8067c8:	10004e26 	beq	r2,zero,806904 <___vfprintf_internal_r+0x1d08>
  8067cc:	00800b44 	movi	r2,45
  8067d0:	dc814715 	stw	r18,1308(sp)
  8067d4:	d8014615 	stw	zero,1304(sp)
  8067d8:	d8800405 	stb	r2,16(sp)
  8067dc:	003bab06 	br	80568c <___vfprintf_internal_r+0xa90>
  8067e0:	00800b44 	movi	r2,45
  8067e4:	d8800405 	stb	r2,16(sp)
  8067e8:	003d2d06 	br	805ca0 <___vfprintf_internal_r+0x10a4>
  8067ec:	d9014f17 	ldw	r4,1340(sp)
  8067f0:	b00b883a 	mov	r5,r22
  8067f4:	d9800c04 	addi	r6,sp,48
  8067f8:	0804ba40 	call	804ba4 <__sprint_r>
  8067fc:	103ab71e 	bne	r2,zero,8052dc <___vfprintf_internal_r+0x6e0>
  806800:	003ab506 	br	8052d8 <___vfprintf_internal_r+0x6dc>
  806804:	38800017 	ldw	r2,0(r7)
  806808:	39c00104 	addi	r7,r7,4
  80680c:	d9c14015 	stw	r7,1280(sp)
  806810:	d9414b17 	ldw	r5,1324(sp)
  806814:	d9c14017 	ldw	r7,1280(sp)
  806818:	11400015 	stw	r5,0(r2)
  80681c:	00395306 	br	804d6c <___vfprintf_internal_r+0x170>
  806820:	980f883a 	mov	r7,r19
  806824:	dcc14515 	stw	r19,1300(sp)
  806828:	d8014615 	stw	zero,1304(sp)
  80682c:	003b9506 	br	805684 <___vfprintf_internal_r+0xa88>
  806830:	0027883a 	mov	r19,zero
  806834:	00397206 	br	804e00 <___vfprintf_internal_r+0x204>
  806838:	00c02074 	movhi	r3,129
  80683c:	18c29d04 	addi	r3,r3,2676
  806840:	100f883a 	mov	r7,r2
  806844:	d8814515 	stw	r2,1300(sp)
  806848:	d8c14115 	stw	r3,1284(sp)
  80684c:	0039da06 	br	804fb8 <___vfprintf_internal_r+0x3bc>
  806850:	00802074 	movhi	r2,129
  806854:	10829c04 	addi	r2,r2,2672
  806858:	d8814115 	stw	r2,1284(sp)
  80685c:	003d1606 	br	805cb8 <___vfprintf_internal_r+0x10bc>
  806860:	d9414d17 	ldw	r5,1332(sp)
  806864:	00801984 	movi	r2,102
  806868:	28804926 	beq	r5,r2,806990 <___vfprintf_internal_r+0x1d94>
  80686c:	200f883a 	mov	r7,r4
  806870:	24805716 	blt	r4,r18,8069d0 <___vfprintf_internal_r+0x1dd4>
  806874:	d9414c17 	ldw	r5,1328(sp)
  806878:	2880004c 	andi	r2,r5,1
  80687c:	10000126 	beq	r2,zero,806884 <___vfprintf_internal_r+0x1c88>
  806880:	21c00044 	addi	r7,r4,1
  806884:	d9c14515 	stw	r7,1300(sp)
  806888:	383fcc0e 	bge	r7,zero,8067bc <___vfprintf_internal_r+0x1bc0>
  80688c:	d8014515 	stw	zero,1300(sp)
  806890:	003fca06 	br	8067bc <___vfprintf_internal_r+0x1bc0>
  806894:	d9000517 	ldw	r4,20(sp)
  806898:	00bfff04 	movi	r2,-4
  80689c:	1100480e 	bge	r2,r4,8069c0 <___vfprintf_internal_r+0x1dc4>
  8068a0:	99004716 	blt	r19,r4,8069c0 <___vfprintf_internal_r+0x1dc4>
  8068a4:	d8c14d15 	stw	r3,1332(sp)
  8068a8:	003ff006 	br	80686c <___vfprintf_internal_r+0x1c70>
  8068ac:	d8800717 	ldw	r2,28(sp)
  8068b0:	14bf8b2e 	bgeu	r2,r18,8066e0 <___vfprintf_internal_r+0x1ae4>
  8068b4:	9007883a 	mov	r3,r18
  8068b8:	01000c04 	movi	r4,48
  8068bc:	11000005 	stb	r4,0(r2)
  8068c0:	10800044 	addi	r2,r2,1
  8068c4:	d8800715 	stw	r2,28(sp)
  8068c8:	18bffc1e 	bne	r3,r2,8068bc <___vfprintf_internal_r+0x1cc0>
  8068cc:	003f8406 	br	8066e0 <___vfprintf_internal_r+0x1ae4>
  8068d0:	d8814117 	ldw	r2,1284(sp)
  8068d4:	10c00007 	ldb	r3,0(r2)
  8068d8:	00800c04 	movi	r2,48
  8068dc:	18805b26 	beq	r3,r2,806a4c <___vfprintf_internal_r+0x1e50>
  8068e0:	d9000517 	ldw	r4,20(sp)
  8068e4:	9125883a 	add	r18,r18,r4
  8068e8:	003f7506 	br	8066c0 <___vfprintf_internal_r+0x1ac4>
  8068ec:	d9014c17 	ldw	r4,1328(sp)
  8068f0:	2080004c 	andi	r2,r4,1
  8068f4:	1005003a 	cmpeq	r2,r2,zero
  8068f8:	103f6a26 	beq	r2,zero,8066a4 <___vfprintf_internal_r+0x1aa8>
  8068fc:	d8800717 	ldw	r2,28(sp)
  806900:	003f7706 	br	8066e0 <___vfprintf_internal_r+0x1ae4>
  806904:	d9c14515 	stw	r7,1300(sp)
  806908:	38004d16 	blt	r7,zero,806a40 <___vfprintf_internal_r+0x1e44>
  80690c:	dc814715 	stw	r18,1308(sp)
  806910:	d8014615 	stw	zero,1304(sp)
  806914:	003b5b06 	br	805684 <___vfprintf_internal_r+0xa88>
  806918:	d9014f17 	ldw	r4,1340(sp)
  80691c:	d8800504 	addi	r2,sp,20
  806920:	d8800115 	stw	r2,4(sp)
  806924:	d8c00604 	addi	r3,sp,24
  806928:	d8800704 	addi	r2,sp,28
  80692c:	800b883a 	mov	r5,r16
  806930:	880d883a 	mov	r6,r17
  806934:	01c000c4 	movi	r7,3
  806938:	d8c00215 	stw	r3,8(sp)
  80693c:	d8800315 	stw	r2,12(sp)
  806940:	dcc00015 	stw	r19,0(sp)
  806944:	9829883a 	mov	r20,r19
  806948:	0806e640 	call	806e64 <_dtoa_r>
  80694c:	d8814115 	stw	r2,1284(sp)
  806950:	003f5106 	br	806698 <___vfprintf_internal_r+0x1a9c>
  806954:	d8c14217 	ldw	r3,1288(sp)
  806958:	d9014317 	ldw	r4,1292(sp)
  80695c:	07000b44 	movi	fp,45
  806960:	1821883a 	mov	r16,r3
  806964:	2460003c 	xorhi	r17,r4,32768
  806968:	003f3106 	br	806630 <___vfprintf_internal_r+0x1a34>
  80696c:	9d000044 	addi	r20,r19,1
  806970:	003f3906 	br	806658 <___vfprintf_internal_r+0x1a5c>
  806974:	983f251e 	bne	r19,zero,80660c <___vfprintf_internal_r+0x1a10>
  806978:	04c00044 	movi	r19,1
  80697c:	003f2306 	br	80660c <___vfprintf_internal_r+0x1a10>
  806980:	04c00184 	movi	r19,6
  806984:	003f2106 	br	80660c <___vfprintf_internal_r+0x1a10>
  806988:	d8014515 	stw	zero,1300(sp)
  80698c:	003eee06 	br	806548 <___vfprintf_internal_r+0x194c>
  806990:	200f883a 	mov	r7,r4
  806994:	0100370e 	bge	zero,r4,806a74 <___vfprintf_internal_r+0x1e78>
  806998:	9800031e 	bne	r19,zero,8069a8 <___vfprintf_internal_r+0x1dac>
  80699c:	d9814c17 	ldw	r6,1328(sp)
  8069a0:	3080004c 	andi	r2,r6,1
  8069a4:	103fb726 	beq	r2,zero,806884 <___vfprintf_internal_r+0x1c88>
  8069a8:	20800044 	addi	r2,r4,1
  8069ac:	98a7883a 	add	r19,r19,r2
  8069b0:	dcc14515 	stw	r19,1300(sp)
  8069b4:	980f883a 	mov	r7,r19
  8069b8:	983f800e 	bge	r19,zero,8067bc <___vfprintf_internal_r+0x1bc0>
  8069bc:	003fb306 	br	80688c <___vfprintf_internal_r+0x1c90>
  8069c0:	d9814d17 	ldw	r6,1332(sp)
  8069c4:	31bfff84 	addi	r6,r6,-2
  8069c8:	d9814d15 	stw	r6,1332(sp)
  8069cc:	003f4c06 	br	806700 <___vfprintf_internal_r+0x1b04>
  8069d0:	0100180e 	bge	zero,r4,806a34 <___vfprintf_internal_r+0x1e38>
  8069d4:	00800044 	movi	r2,1
  8069d8:	1485883a 	add	r2,r2,r18
  8069dc:	d8814515 	stw	r2,1300(sp)
  8069e0:	100f883a 	mov	r7,r2
  8069e4:	103f750e 	bge	r2,zero,8067bc <___vfprintf_internal_r+0x1bc0>
  8069e8:	003fa806 	br	80688c <___vfprintf_internal_r+0x1c90>
  8069ec:	80c00c04 	addi	r3,r16,48
  8069f0:	00800c04 	movi	r2,48
  8069f4:	d8c008c5 	stb	r3,35(sp)
  8069f8:	d9800804 	addi	r6,sp,32
  8069fc:	d8c00904 	addi	r3,sp,36
  806a00:	d8800885 	stb	r2,34(sp)
  806a04:	003f6506 	br	80679c <___vfprintf_internal_r+0x1ba0>
  806a08:	d9014c17 	ldw	r4,1328(sp)
  806a0c:	2084703a 	and	r2,r4,r2
  806a10:	103f9c26 	beq	r2,zero,806884 <___vfprintf_internal_r+0x1c88>
  806a14:	003f6606 	br	8067b0 <___vfprintf_internal_r+0x1bb4>
  806a18:	d9800804 	addi	r6,sp,32
  806a1c:	d8c00884 	addi	r3,sp,34
  806a20:	003f5e06 	br	80679c <___vfprintf_internal_r+0x1ba0>
  806a24:	00800b44 	movi	r2,45
  806a28:	0121c83a 	sub	r16,zero,r4
  806a2c:	d8800845 	stb	r2,33(sp)
  806a30:	003f3d06 	br	806728 <___vfprintf_internal_r+0x1b2c>
  806a34:	00800084 	movi	r2,2
  806a38:	1105c83a 	sub	r2,r2,r4
  806a3c:	003fe606 	br	8069d8 <___vfprintf_internal_r+0x1ddc>
  806a40:	d8014515 	stw	zero,1300(sp)
  806a44:	dc814715 	stw	r18,1308(sp)
  806a48:	003fb106 	br	806910 <___vfprintf_internal_r+0x1d14>
  806a4c:	000d883a 	mov	r6,zero
  806a50:	000f883a 	mov	r7,zero
  806a54:	8009883a 	mov	r4,r16
  806a58:	880b883a 	mov	r5,r17
  806a5c:	080d8b80 	call	80d8b8 <__nedf2>
  806a60:	103f9f26 	beq	r2,zero,8068e0 <___vfprintf_internal_r+0x1ce4>
  806a64:	00800044 	movi	r2,1
  806a68:	1509c83a 	sub	r4,r2,r20
  806a6c:	d9000515 	stw	r4,20(sp)
  806a70:	003f9b06 	br	8068e0 <___vfprintf_internal_r+0x1ce4>
  806a74:	98000d1e 	bne	r19,zero,806aac <___vfprintf_internal_r+0x1eb0>
  806a78:	d8c14c17 	ldw	r3,1328(sp)
  806a7c:	1880004c 	andi	r2,r3,1
  806a80:	10000a1e 	bne	r2,zero,806aac <___vfprintf_internal_r+0x1eb0>
  806a84:	01000044 	movi	r4,1
  806a88:	200f883a 	mov	r7,r4
  806a8c:	d9014515 	stw	r4,1300(sp)
  806a90:	003f4a06 	br	8067bc <___vfprintf_internal_r+0x1bc0>
  806a94:	3cc00017 	ldw	r19,0(r7)
  806a98:	39c00104 	addi	r7,r7,4
  806a9c:	983d0e0e 	bge	r19,zero,805ed8 <___vfprintf_internal_r+0x12dc>
  806aa0:	b8c00007 	ldb	r3,0(r23)
  806aa4:	04ffffc4 	movi	r19,-1
  806aa8:	0038d306 	br	804df8 <___vfprintf_internal_r+0x1fc>
  806aac:	9cc00084 	addi	r19,r19,2
  806ab0:	dcc14515 	stw	r19,1300(sp)
  806ab4:	980f883a 	mov	r7,r19
  806ab8:	983f400e 	bge	r19,zero,8067bc <___vfprintf_internal_r+0x1bc0>
  806abc:	003f7306 	br	80688c <___vfprintf_internal_r+0x1c90>

00806ac0 <__vfprintf_internal>:
  806ac0:	00802074 	movhi	r2,129
  806ac4:	1089a304 	addi	r2,r2,9868
  806ac8:	2013883a 	mov	r9,r4
  806acc:	11000017 	ldw	r4,0(r2)
  806ad0:	2805883a 	mov	r2,r5
  806ad4:	300f883a 	mov	r7,r6
  806ad8:	480b883a 	mov	r5,r9
  806adc:	100d883a 	mov	r6,r2
  806ae0:	0804bfc1 	jmpi	804bfc <___vfprintf_internal_r>

00806ae4 <__swsetup_r>:
  806ae4:	00802074 	movhi	r2,129
  806ae8:	1089a304 	addi	r2,r2,9868
  806aec:	10c00017 	ldw	r3,0(r2)
  806af0:	defffd04 	addi	sp,sp,-12
  806af4:	dc400115 	stw	r17,4(sp)
  806af8:	dc000015 	stw	r16,0(sp)
  806afc:	dfc00215 	stw	ra,8(sp)
  806b00:	2023883a 	mov	r17,r4
  806b04:	2821883a 	mov	r16,r5
  806b08:	18000226 	beq	r3,zero,806b14 <__swsetup_r+0x30>
  806b0c:	18800e17 	ldw	r2,56(r3)
  806b10:	10001f26 	beq	r2,zero,806b90 <__swsetup_r+0xac>
  806b14:	8100030b 	ldhu	r4,12(r16)
  806b18:	2080020c 	andi	r2,r4,8
  806b1c:	10002826 	beq	r2,zero,806bc0 <__swsetup_r+0xdc>
  806b20:	81400417 	ldw	r5,16(r16)
  806b24:	28001d26 	beq	r5,zero,806b9c <__swsetup_r+0xb8>
  806b28:	2080004c 	andi	r2,r4,1
  806b2c:	1005003a 	cmpeq	r2,r2,zero
  806b30:	10000b26 	beq	r2,zero,806b60 <__swsetup_r+0x7c>
  806b34:	2080008c 	andi	r2,r4,2
  806b38:	10001226 	beq	r2,zero,806b84 <__swsetup_r+0xa0>
  806b3c:	0005883a 	mov	r2,zero
  806b40:	80800215 	stw	r2,8(r16)
  806b44:	28000b26 	beq	r5,zero,806b74 <__swsetup_r+0x90>
  806b48:	0005883a 	mov	r2,zero
  806b4c:	dfc00217 	ldw	ra,8(sp)
  806b50:	dc400117 	ldw	r17,4(sp)
  806b54:	dc000017 	ldw	r16,0(sp)
  806b58:	dec00304 	addi	sp,sp,12
  806b5c:	f800283a 	ret
  806b60:	80800517 	ldw	r2,20(r16)
  806b64:	80000215 	stw	zero,8(r16)
  806b68:	0085c83a 	sub	r2,zero,r2
  806b6c:	80800615 	stw	r2,24(r16)
  806b70:	283ff51e 	bne	r5,zero,806b48 <__swsetup_r+0x64>
  806b74:	2080200c 	andi	r2,r4,128
  806b78:	103ff326 	beq	r2,zero,806b48 <__swsetup_r+0x64>
  806b7c:	00bfffc4 	movi	r2,-1
  806b80:	003ff206 	br	806b4c <__swsetup_r+0x68>
  806b84:	80800517 	ldw	r2,20(r16)
  806b88:	80800215 	stw	r2,8(r16)
  806b8c:	003fed06 	br	806b44 <__swsetup_r+0x60>
  806b90:	1809883a 	mov	r4,r3
  806b94:	080917c0 	call	80917c <__sinit>
  806b98:	003fde06 	br	806b14 <__swsetup_r+0x30>
  806b9c:	20c0a00c 	andi	r3,r4,640
  806ba0:	00808004 	movi	r2,512
  806ba4:	18bfe026 	beq	r3,r2,806b28 <__swsetup_r+0x44>
  806ba8:	8809883a 	mov	r4,r17
  806bac:	800b883a 	mov	r5,r16
  806bb0:	0809f280 	call	809f28 <__smakebuf_r>
  806bb4:	8100030b 	ldhu	r4,12(r16)
  806bb8:	81400417 	ldw	r5,16(r16)
  806bbc:	003fda06 	br	806b28 <__swsetup_r+0x44>
  806bc0:	2080040c 	andi	r2,r4,16
  806bc4:	103fed26 	beq	r2,zero,806b7c <__swsetup_r+0x98>
  806bc8:	2080010c 	andi	r2,r4,4
  806bcc:	10001226 	beq	r2,zero,806c18 <__swsetup_r+0x134>
  806bd0:	81400c17 	ldw	r5,48(r16)
  806bd4:	28000526 	beq	r5,zero,806bec <__swsetup_r+0x108>
  806bd8:	80801004 	addi	r2,r16,64
  806bdc:	28800226 	beq	r5,r2,806be8 <__swsetup_r+0x104>
  806be0:	8809883a 	mov	r4,r17
  806be4:	08095340 	call	809534 <_free_r>
  806be8:	80000c15 	stw	zero,48(r16)
  806bec:	8080030b 	ldhu	r2,12(r16)
  806bf0:	81400417 	ldw	r5,16(r16)
  806bf4:	80000115 	stw	zero,4(r16)
  806bf8:	10bff6cc 	andi	r2,r2,65499
  806bfc:	8080030d 	sth	r2,12(r16)
  806c00:	81400015 	stw	r5,0(r16)
  806c04:	8080030b 	ldhu	r2,12(r16)
  806c08:	10800214 	ori	r2,r2,8
  806c0c:	113fffcc 	andi	r4,r2,65535
  806c10:	8080030d 	sth	r2,12(r16)
  806c14:	003fc306 	br	806b24 <__swsetup_r+0x40>
  806c18:	81400417 	ldw	r5,16(r16)
  806c1c:	003ff906 	br	806c04 <__swsetup_r+0x120>

00806c20 <quorem>:
  806c20:	28c00417 	ldw	r3,16(r5)
  806c24:	20800417 	ldw	r2,16(r4)
  806c28:	defff104 	addi	sp,sp,-60
  806c2c:	dfc00e15 	stw	ra,56(sp)
  806c30:	df000d15 	stw	fp,52(sp)
  806c34:	ddc00c15 	stw	r23,48(sp)
  806c38:	dd800b15 	stw	r22,44(sp)
  806c3c:	dd400a15 	stw	r21,40(sp)
  806c40:	dd000915 	stw	r20,36(sp)
  806c44:	dcc00815 	stw	r19,32(sp)
  806c48:	dc800715 	stw	r18,28(sp)
  806c4c:	dc400615 	stw	r17,24(sp)
  806c50:	dc000515 	stw	r16,20(sp)
  806c54:	d9000315 	stw	r4,12(sp)
  806c58:	d9400415 	stw	r5,16(sp)
  806c5c:	10c07f16 	blt	r2,r3,806e5c <quorem+0x23c>
  806c60:	1d3fffc4 	addi	r20,r3,-1
  806c64:	d8c00417 	ldw	r3,16(sp)
  806c68:	d9000317 	ldw	r4,12(sp)
  806c6c:	a505883a 	add	r2,r20,r20
  806c70:	1085883a 	add	r2,r2,r2
  806c74:	1cc00504 	addi	r19,r3,20
  806c78:	25c00504 	addi	r23,r4,20
  806c7c:	98ad883a 	add	r22,r19,r2
  806c80:	15c7883a 	add	r3,r2,r23
  806c84:	b1400017 	ldw	r5,0(r22)
  806c88:	19000017 	ldw	r4,0(r3)
  806c8c:	d8c00015 	stw	r3,0(sp)
  806c90:	29400044 	addi	r5,r5,1
  806c94:	d9000215 	stw	r4,8(sp)
  806c98:	0803eb40 	call	803eb4 <__udivsi3>
  806c9c:	1039883a 	mov	fp,r2
  806ca0:	10003d1e 	bne	r2,zero,806d98 <quorem+0x178>
  806ca4:	d9400417 	ldw	r5,16(sp)
  806ca8:	d9000317 	ldw	r4,12(sp)
  806cac:	080ac540 	call	80ac54 <__mcmp>
  806cb0:	10002c16 	blt	r2,zero,806d64 <quorem+0x144>
  806cb4:	e7000044 	addi	fp,fp,1
  806cb8:	b80f883a 	mov	r7,r23
  806cbc:	0011883a 	mov	r8,zero
  806cc0:	0009883a 	mov	r4,zero
  806cc4:	99400017 	ldw	r5,0(r19)
  806cc8:	38c00017 	ldw	r3,0(r7)
  806ccc:	9cc00104 	addi	r19,r19,4
  806cd0:	28bfffcc 	andi	r2,r5,65535
  806cd4:	2085883a 	add	r2,r4,r2
  806cd8:	11bfffcc 	andi	r6,r2,65535
  806cdc:	193fffcc 	andi	r4,r3,65535
  806ce0:	1004d43a 	srli	r2,r2,16
  806ce4:	280ad43a 	srli	r5,r5,16
  806ce8:	2189c83a 	sub	r4,r4,r6
  806cec:	2209883a 	add	r4,r4,r8
  806cf0:	1806d43a 	srli	r3,r3,16
  806cf4:	288b883a 	add	r5,r5,r2
  806cf8:	200dd43a 	srai	r6,r4,16
  806cfc:	28bfffcc 	andi	r2,r5,65535
  806d00:	1887c83a 	sub	r3,r3,r2
  806d04:	1987883a 	add	r3,r3,r6
  806d08:	3900000d 	sth	r4,0(r7)
  806d0c:	38c0008d 	sth	r3,2(r7)
  806d10:	2808d43a 	srli	r4,r5,16
  806d14:	39c00104 	addi	r7,r7,4
  806d18:	1811d43a 	srai	r8,r3,16
  806d1c:	b4ffe92e 	bgeu	r22,r19,806cc4 <quorem+0xa4>
  806d20:	a505883a 	add	r2,r20,r20
  806d24:	1085883a 	add	r2,r2,r2
  806d28:	b885883a 	add	r2,r23,r2
  806d2c:	10c00017 	ldw	r3,0(r2)
  806d30:	18000c1e 	bne	r3,zero,806d64 <quorem+0x144>
  806d34:	113fff04 	addi	r4,r2,-4
  806d38:	b900082e 	bgeu	r23,r4,806d5c <quorem+0x13c>
  806d3c:	10bfff17 	ldw	r2,-4(r2)
  806d40:	10000326 	beq	r2,zero,806d50 <quorem+0x130>
  806d44:	00000506 	br	806d5c <quorem+0x13c>
  806d48:	20800017 	ldw	r2,0(r4)
  806d4c:	1000031e 	bne	r2,zero,806d5c <quorem+0x13c>
  806d50:	213fff04 	addi	r4,r4,-4
  806d54:	a53fffc4 	addi	r20,r20,-1
  806d58:	b93ffb36 	bltu	r23,r4,806d48 <quorem+0x128>
  806d5c:	d9000317 	ldw	r4,12(sp)
  806d60:	25000415 	stw	r20,16(r4)
  806d64:	e005883a 	mov	r2,fp
  806d68:	dfc00e17 	ldw	ra,56(sp)
  806d6c:	df000d17 	ldw	fp,52(sp)
  806d70:	ddc00c17 	ldw	r23,48(sp)
  806d74:	dd800b17 	ldw	r22,44(sp)
  806d78:	dd400a17 	ldw	r21,40(sp)
  806d7c:	dd000917 	ldw	r20,36(sp)
  806d80:	dcc00817 	ldw	r19,32(sp)
  806d84:	dc800717 	ldw	r18,28(sp)
  806d88:	dc400617 	ldw	r17,24(sp)
  806d8c:	dc000517 	ldw	r16,20(sp)
  806d90:	dec00f04 	addi	sp,sp,60
  806d94:	f800283a 	ret
  806d98:	b823883a 	mov	r17,r23
  806d9c:	9825883a 	mov	r18,r19
  806da0:	d8000115 	stw	zero,4(sp)
  806da4:	002b883a 	mov	r21,zero
  806da8:	94000017 	ldw	r16,0(r18)
  806dac:	e009883a 	mov	r4,fp
  806db0:	94800104 	addi	r18,r18,4
  806db4:	817fffcc 	andi	r5,r16,65535
  806db8:	0803ec40 	call	803ec4 <__mulsi3>
  806dbc:	800ad43a 	srli	r5,r16,16
  806dc0:	e009883a 	mov	r4,fp
  806dc4:	a8a1883a 	add	r16,r21,r2
  806dc8:	0803ec40 	call	803ec4 <__mulsi3>
  806dcc:	89000017 	ldw	r4,0(r17)
  806dd0:	80ffffcc 	andi	r3,r16,65535
  806dd4:	8020d43a 	srli	r16,r16,16
  806dd8:	217fffcc 	andi	r5,r4,65535
  806ddc:	28cbc83a 	sub	r5,r5,r3
  806de0:	d8c00117 	ldw	r3,4(sp)
  806de4:	2008d43a 	srli	r4,r4,16
  806de8:	1405883a 	add	r2,r2,r16
  806dec:	28cb883a 	add	r5,r5,r3
  806df0:	280dd43a 	srai	r6,r5,16
  806df4:	10ffffcc 	andi	r3,r2,65535
  806df8:	20c9c83a 	sub	r4,r4,r3
  806dfc:	2189883a 	add	r4,r4,r6
  806e00:	8900008d 	sth	r4,2(r17)
  806e04:	2009d43a 	srai	r4,r4,16
  806e08:	8940000d 	sth	r5,0(r17)
  806e0c:	102ad43a 	srli	r21,r2,16
  806e10:	8c400104 	addi	r17,r17,4
  806e14:	d9000115 	stw	r4,4(sp)
  806e18:	b4bfe32e 	bgeu	r22,r18,806da8 <quorem+0x188>
  806e1c:	d9000217 	ldw	r4,8(sp)
  806e20:	203fa01e 	bne	r4,zero,806ca4 <quorem+0x84>
  806e24:	d8800017 	ldw	r2,0(sp)
  806e28:	10ffff04 	addi	r3,r2,-4
  806e2c:	b8c0082e 	bgeu	r23,r3,806e50 <quorem+0x230>
  806e30:	10bfff17 	ldw	r2,-4(r2)
  806e34:	10000326 	beq	r2,zero,806e44 <quorem+0x224>
  806e38:	00000506 	br	806e50 <quorem+0x230>
  806e3c:	18800017 	ldw	r2,0(r3)
  806e40:	1000031e 	bne	r2,zero,806e50 <quorem+0x230>
  806e44:	18ffff04 	addi	r3,r3,-4
  806e48:	a53fffc4 	addi	r20,r20,-1
  806e4c:	b8fffb36 	bltu	r23,r3,806e3c <quorem+0x21c>
  806e50:	d8c00317 	ldw	r3,12(sp)
  806e54:	1d000415 	stw	r20,16(r3)
  806e58:	003f9206 	br	806ca4 <quorem+0x84>
  806e5c:	0005883a 	mov	r2,zero
  806e60:	003fc106 	br	806d68 <quorem+0x148>

00806e64 <_dtoa_r>:
  806e64:	22001017 	ldw	r8,64(r4)
  806e68:	deffda04 	addi	sp,sp,-152
  806e6c:	dd402115 	stw	r21,132(sp)
  806e70:	dd002015 	stw	r20,128(sp)
  806e74:	dc801e15 	stw	r18,120(sp)
  806e78:	dc401d15 	stw	r17,116(sp)
  806e7c:	dfc02515 	stw	ra,148(sp)
  806e80:	df002415 	stw	fp,144(sp)
  806e84:	ddc02315 	stw	r23,140(sp)
  806e88:	dd802215 	stw	r22,136(sp)
  806e8c:	dcc01f15 	stw	r19,124(sp)
  806e90:	dc001c15 	stw	r16,112(sp)
  806e94:	d9001615 	stw	r4,88(sp)
  806e98:	3023883a 	mov	r17,r6
  806e9c:	2829883a 	mov	r20,r5
  806ea0:	d9c01715 	stw	r7,92(sp)
  806ea4:	dc802817 	ldw	r18,160(sp)
  806ea8:	302b883a 	mov	r21,r6
  806eac:	40000a26 	beq	r8,zero,806ed8 <_dtoa_r+0x74>
  806eb0:	20801117 	ldw	r2,68(r4)
  806eb4:	400b883a 	mov	r5,r8
  806eb8:	40800115 	stw	r2,4(r8)
  806ebc:	20c01117 	ldw	r3,68(r4)
  806ec0:	00800044 	movi	r2,1
  806ec4:	10c4983a 	sll	r2,r2,r3
  806ec8:	40800215 	stw	r2,8(r8)
  806ecc:	080aaf80 	call	80aaf8 <_Bfree>
  806ed0:	d8c01617 	ldw	r3,88(sp)
  806ed4:	18001015 	stw	zero,64(r3)
  806ed8:	8800a316 	blt	r17,zero,807168 <_dtoa_r+0x304>
  806edc:	90000015 	stw	zero,0(r18)
  806ee0:	a8dffc2c 	andhi	r3,r21,32752
  806ee4:	009ffc34 	movhi	r2,32752
  806ee8:	18809126 	beq	r3,r2,807130 <_dtoa_r+0x2cc>
  806eec:	000d883a 	mov	r6,zero
  806ef0:	000f883a 	mov	r7,zero
  806ef4:	a009883a 	mov	r4,r20
  806ef8:	a80b883a 	mov	r5,r21
  806efc:	dd001215 	stw	r20,72(sp)
  806f00:	dd401315 	stw	r21,76(sp)
  806f04:	080d8b80 	call	80d8b8 <__nedf2>
  806f08:	1000171e 	bne	r2,zero,806f68 <_dtoa_r+0x104>
  806f0c:	d9802717 	ldw	r6,156(sp)
  806f10:	00800044 	movi	r2,1
  806f14:	30800015 	stw	r2,0(r6)
  806f18:	d8802917 	ldw	r2,164(sp)
  806f1c:	10029b26 	beq	r2,zero,80798c <_dtoa_r+0xb28>
  806f20:	d9002917 	ldw	r4,164(sp)
  806f24:	00802074 	movhi	r2,129
  806f28:	1082ab44 	addi	r2,r2,2733
  806f2c:	10ffffc4 	addi	r3,r2,-1
  806f30:	20800015 	stw	r2,0(r4)
  806f34:	1805883a 	mov	r2,r3
  806f38:	dfc02517 	ldw	ra,148(sp)
  806f3c:	df002417 	ldw	fp,144(sp)
  806f40:	ddc02317 	ldw	r23,140(sp)
  806f44:	dd802217 	ldw	r22,136(sp)
  806f48:	dd402117 	ldw	r21,132(sp)
  806f4c:	dd002017 	ldw	r20,128(sp)
  806f50:	dcc01f17 	ldw	r19,124(sp)
  806f54:	dc801e17 	ldw	r18,120(sp)
  806f58:	dc401d17 	ldw	r17,116(sp)
  806f5c:	dc001c17 	ldw	r16,112(sp)
  806f60:	dec02604 	addi	sp,sp,152
  806f64:	f800283a 	ret
  806f68:	d9001617 	ldw	r4,88(sp)
  806f6c:	d9401217 	ldw	r5,72(sp)
  806f70:	d8800104 	addi	r2,sp,4
  806f74:	a80d883a 	mov	r6,r21
  806f78:	d9c00204 	addi	r7,sp,8
  806f7c:	d8800015 	stw	r2,0(sp)
  806f80:	080b1340 	call	80b134 <__d2b>
  806f84:	d8800715 	stw	r2,28(sp)
  806f88:	a804d53a 	srli	r2,r21,20
  806f8c:	1101ffcc 	andi	r4,r2,2047
  806f90:	20008626 	beq	r4,zero,8071ac <_dtoa_r+0x348>
  806f94:	d8c01217 	ldw	r3,72(sp)
  806f98:	00800434 	movhi	r2,16
  806f9c:	10bfffc4 	addi	r2,r2,-1
  806fa0:	ddc00117 	ldw	r23,4(sp)
  806fa4:	a884703a 	and	r2,r21,r2
  806fa8:	1811883a 	mov	r8,r3
  806fac:	124ffc34 	orhi	r9,r2,16368
  806fb0:	25bf0044 	addi	r22,r4,-1023
  806fb4:	d8000815 	stw	zero,32(sp)
  806fb8:	0005883a 	mov	r2,zero
  806fbc:	00cffe34 	movhi	r3,16376
  806fc0:	480b883a 	mov	r5,r9
  806fc4:	4009883a 	mov	r4,r8
  806fc8:	180f883a 	mov	r7,r3
  806fcc:	100d883a 	mov	r6,r2
  806fd0:	08033180 	call	803318 <__subdf3>
  806fd4:	0218dbf4 	movhi	r8,25455
  806fd8:	4210d844 	addi	r8,r8,17249
  806fdc:	024ff4f4 	movhi	r9,16339
  806fe0:	4a61e9c4 	addi	r9,r9,-30809
  806fe4:	480f883a 	mov	r7,r9
  806fe8:	400d883a 	mov	r6,r8
  806fec:	180b883a 	mov	r5,r3
  806ff0:	1009883a 	mov	r4,r2
  806ff4:	080340c0 	call	80340c <__muldf3>
  806ff8:	0222d874 	movhi	r8,35681
  806ffc:	42322cc4 	addi	r8,r8,-14157
  807000:	024ff1f4 	movhi	r9,16327
  807004:	4a628a04 	addi	r9,r9,-30168
  807008:	480f883a 	mov	r7,r9
  80700c:	400d883a 	mov	r6,r8
  807010:	180b883a 	mov	r5,r3
  807014:	1009883a 	mov	r4,r2
  807018:	08033980 	call	803398 <__adddf3>
  80701c:	b009883a 	mov	r4,r22
  807020:	1021883a 	mov	r16,r2
  807024:	1823883a 	mov	r17,r3
  807028:	08039680 	call	803968 <__floatsidf>
  80702c:	021427f4 	movhi	r8,20639
  807030:	421e7ec4 	addi	r8,r8,31227
  807034:	024ff4f4 	movhi	r9,16339
  807038:	4a5104c4 	addi	r9,r9,17427
  80703c:	480f883a 	mov	r7,r9
  807040:	400d883a 	mov	r6,r8
  807044:	180b883a 	mov	r5,r3
  807048:	1009883a 	mov	r4,r2
  80704c:	080340c0 	call	80340c <__muldf3>
  807050:	180f883a 	mov	r7,r3
  807054:	880b883a 	mov	r5,r17
  807058:	100d883a 	mov	r6,r2
  80705c:	8009883a 	mov	r4,r16
  807060:	08033980 	call	803398 <__adddf3>
  807064:	1009883a 	mov	r4,r2
  807068:	180b883a 	mov	r5,r3
  80706c:	1021883a 	mov	r16,r2
  807070:	1823883a 	mov	r17,r3
  807074:	0803a600 	call	803a60 <__fixdfsi>
  807078:	000d883a 	mov	r6,zero
  80707c:	000f883a 	mov	r7,zero
  807080:	8009883a 	mov	r4,r16
  807084:	880b883a 	mov	r5,r17
  807088:	d8800d15 	stw	r2,52(sp)
  80708c:	080d9400 	call	80d940 <__ltdf2>
  807090:	10031716 	blt	r2,zero,807cf0 <_dtoa_r+0xe8c>
  807094:	d8c00d17 	ldw	r3,52(sp)
  807098:	00800584 	movi	r2,22
  80709c:	10c1482e 	bgeu	r2,r3,8075c0 <_dtoa_r+0x75c>
  8070a0:	01000044 	movi	r4,1
  8070a4:	d9000c15 	stw	r4,48(sp)
  8070a8:	bd85c83a 	sub	r2,r23,r22
  8070ac:	11bfffc4 	addi	r6,r2,-1
  8070b0:	30030b16 	blt	r6,zero,807ce0 <_dtoa_r+0xe7c>
  8070b4:	d9800a15 	stw	r6,40(sp)
  8070b8:	d8001115 	stw	zero,68(sp)
  8070bc:	d8c00d17 	ldw	r3,52(sp)
  8070c0:	1802ff16 	blt	r3,zero,807cc0 <_dtoa_r+0xe5c>
  8070c4:	d9000a17 	ldw	r4,40(sp)
  8070c8:	d8c00915 	stw	r3,36(sp)
  8070cc:	d8001015 	stw	zero,64(sp)
  8070d0:	20c9883a 	add	r4,r4,r3
  8070d4:	d9000a15 	stw	r4,40(sp)
  8070d8:	d9001717 	ldw	r4,92(sp)
  8070dc:	00800244 	movi	r2,9
  8070e0:	11004636 	bltu	r2,r4,8071fc <_dtoa_r+0x398>
  8070e4:	00800144 	movi	r2,5
  8070e8:	11020416 	blt	r2,r4,8078fc <_dtoa_r+0xa98>
  8070ec:	04400044 	movi	r17,1
  8070f0:	d8c01717 	ldw	r3,92(sp)
  8070f4:	00800144 	movi	r2,5
  8070f8:	10c1ed36 	bltu	r2,r3,8078b0 <_dtoa_r+0xa4c>
  8070fc:	18c5883a 	add	r2,r3,r3
  807100:	1085883a 	add	r2,r2,r2
  807104:	00c02034 	movhi	r3,128
  807108:	18dc4604 	addi	r3,r3,28952
  80710c:	10c5883a 	add	r2,r2,r3
  807110:	11000017 	ldw	r4,0(r2)
  807114:	2000683a 	jmp	r4
  807118:	00807204 	movi	r2,456
  80711c:	00807204 	movi	r2,456
  807120:	00807c04 	movi	r2,496
  807124:	00807bdc 	xori	r2,zero,495
  807128:	00807c20 	cmpeqi	r2,zero,496
  80712c:	00807c2c 	andhi	r2,zero,496
  807130:	d9002717 	ldw	r4,156(sp)
  807134:	0089c3c4 	movi	r2,9999
  807138:	20800015 	stw	r2,0(r4)
  80713c:	a0001026 	beq	r20,zero,807180 <_dtoa_r+0x31c>
  807140:	00c02074 	movhi	r3,129
  807144:	18c2b704 	addi	r3,r3,2780
  807148:	d9802917 	ldw	r6,164(sp)
  80714c:	303f7926 	beq	r6,zero,806f34 <_dtoa_r+0xd0>
  807150:	188000c7 	ldb	r2,3(r3)
  807154:	190000c4 	addi	r4,r3,3
  807158:	1000101e 	bne	r2,zero,80719c <_dtoa_r+0x338>
  80715c:	d8802917 	ldw	r2,164(sp)
  807160:	11000015 	stw	r4,0(r2)
  807164:	003f7306 	br	806f34 <_dtoa_r+0xd0>
  807168:	00a00034 	movhi	r2,32768
  80716c:	10bfffc4 	addi	r2,r2,-1
  807170:	00c00044 	movi	r3,1
  807174:	88aa703a 	and	r21,r17,r2
  807178:	90c00015 	stw	r3,0(r18)
  80717c:	003f5806 	br	806ee0 <_dtoa_r+0x7c>
  807180:	00800434 	movhi	r2,16
  807184:	10bfffc4 	addi	r2,r2,-1
  807188:	a884703a 	and	r2,r21,r2
  80718c:	103fec1e 	bne	r2,zero,807140 <_dtoa_r+0x2dc>
  807190:	00c02074 	movhi	r3,129
  807194:	18c2b404 	addi	r3,r3,2768
  807198:	003feb06 	br	807148 <_dtoa_r+0x2e4>
  80719c:	d8802917 	ldw	r2,164(sp)
  8071a0:	19000204 	addi	r4,r3,8
  8071a4:	11000015 	stw	r4,0(r2)
  8071a8:	003f6206 	br	806f34 <_dtoa_r+0xd0>
  8071ac:	ddc00117 	ldw	r23,4(sp)
  8071b0:	d8800217 	ldw	r2,8(sp)
  8071b4:	01000804 	movi	r4,32
  8071b8:	b8c10c84 	addi	r3,r23,1074
  8071bc:	18a3883a 	add	r17,r3,r2
  8071c0:	2441b80e 	bge	r4,r17,8078a4 <_dtoa_r+0xa40>
  8071c4:	00c01004 	movi	r3,64
  8071c8:	1c47c83a 	sub	r3,r3,r17
  8071cc:	88bff804 	addi	r2,r17,-32
  8071d0:	a8c6983a 	sll	r3,r21,r3
  8071d4:	a084d83a 	srl	r2,r20,r2
  8071d8:	1888b03a 	or	r4,r3,r2
  8071dc:	0803be40 	call	803be4 <__floatunsidf>
  8071e0:	1011883a 	mov	r8,r2
  8071e4:	00bf8434 	movhi	r2,65040
  8071e8:	01000044 	movi	r4,1
  8071ec:	10d3883a 	add	r9,r2,r3
  8071f0:	8dbef344 	addi	r22,r17,-1075
  8071f4:	d9000815 	stw	r4,32(sp)
  8071f8:	003f6f06 	br	806fb8 <_dtoa_r+0x154>
  8071fc:	d8001715 	stw	zero,92(sp)
  807200:	04400044 	movi	r17,1
  807204:	00bfffc4 	movi	r2,-1
  807208:	00c00044 	movi	r3,1
  80720c:	d8800e15 	stw	r2,56(sp)
  807210:	d8002615 	stw	zero,152(sp)
  807214:	d8800f15 	stw	r2,60(sp)
  807218:	d8c00b15 	stw	r3,44(sp)
  80721c:	1021883a 	mov	r16,r2
  807220:	d8801617 	ldw	r2,88(sp)
  807224:	10001115 	stw	zero,68(r2)
  807228:	d8801617 	ldw	r2,88(sp)
  80722c:	11401117 	ldw	r5,68(r2)
  807230:	1009883a 	mov	r4,r2
  807234:	080b0780 	call	80b078 <_Balloc>
  807238:	d8c01617 	ldw	r3,88(sp)
  80723c:	d8800515 	stw	r2,20(sp)
  807240:	18801015 	stw	r2,64(r3)
  807244:	00800384 	movi	r2,14
  807248:	14006836 	bltu	r2,r16,8073ec <_dtoa_r+0x588>
  80724c:	8805003a 	cmpeq	r2,r17,zero
  807250:	1000661e 	bne	r2,zero,8073ec <_dtoa_r+0x588>
  807254:	d9000d17 	ldw	r4,52(sp)
  807258:	0102300e 	bge	zero,r4,807b1c <_dtoa_r+0xcb8>
  80725c:	208003cc 	andi	r2,r4,15
  807260:	100490fa 	slli	r2,r2,3
  807264:	2025d13a 	srai	r18,r4,4
  807268:	00c02074 	movhi	r3,129
  80726c:	18c2c804 	addi	r3,r3,2848
  807270:	10c5883a 	add	r2,r2,r3
  807274:	90c0040c 	andi	r3,r18,16
  807278:	14000017 	ldw	r16,0(r2)
  80727c:	14400117 	ldw	r17,4(r2)
  807280:	18036a1e 	bne	r3,zero,80802c <_dtoa_r+0x11c8>
  807284:	05800084 	movi	r22,2
  807288:	90001026 	beq	r18,zero,8072cc <_dtoa_r+0x468>
  80728c:	04c02074 	movhi	r19,129
  807290:	9cc2fa04 	addi	r19,r19,3048
  807294:	9080004c 	andi	r2,r18,1
  807298:	1005003a 	cmpeq	r2,r2,zero
  80729c:	1000081e 	bne	r2,zero,8072c0 <_dtoa_r+0x45c>
  8072a0:	99800017 	ldw	r6,0(r19)
  8072a4:	99c00117 	ldw	r7,4(r19)
  8072a8:	880b883a 	mov	r5,r17
  8072ac:	8009883a 	mov	r4,r16
  8072b0:	080340c0 	call	80340c <__muldf3>
  8072b4:	1021883a 	mov	r16,r2
  8072b8:	b5800044 	addi	r22,r22,1
  8072bc:	1823883a 	mov	r17,r3
  8072c0:	9025d07a 	srai	r18,r18,1
  8072c4:	9cc00204 	addi	r19,r19,8
  8072c8:	903ff21e 	bne	r18,zero,807294 <_dtoa_r+0x430>
  8072cc:	a80b883a 	mov	r5,r21
  8072d0:	a009883a 	mov	r4,r20
  8072d4:	880f883a 	mov	r7,r17
  8072d8:	800d883a 	mov	r6,r16
  8072dc:	080d6600 	call	80d660 <__divdf3>
  8072e0:	1029883a 	mov	r20,r2
  8072e4:	182b883a 	mov	r21,r3
  8072e8:	d8c00c17 	ldw	r3,48(sp)
  8072ec:	1805003a 	cmpeq	r2,r3,zero
  8072f0:	1000081e 	bne	r2,zero,807314 <_dtoa_r+0x4b0>
  8072f4:	0005883a 	mov	r2,zero
  8072f8:	00cffc34 	movhi	r3,16368
  8072fc:	180f883a 	mov	r7,r3
  807300:	a009883a 	mov	r4,r20
  807304:	a80b883a 	mov	r5,r21
  807308:	100d883a 	mov	r6,r2
  80730c:	080d9400 	call	80d940 <__ltdf2>
  807310:	1003fe16 	blt	r2,zero,80830c <_dtoa_r+0x14a8>
  807314:	b009883a 	mov	r4,r22
  807318:	08039680 	call	803968 <__floatsidf>
  80731c:	180b883a 	mov	r5,r3
  807320:	1009883a 	mov	r4,r2
  807324:	a00d883a 	mov	r6,r20
  807328:	a80f883a 	mov	r7,r21
  80732c:	080340c0 	call	80340c <__muldf3>
  807330:	0011883a 	mov	r8,zero
  807334:	02500734 	movhi	r9,16412
  807338:	1009883a 	mov	r4,r2
  80733c:	180b883a 	mov	r5,r3
  807340:	480f883a 	mov	r7,r9
  807344:	400d883a 	mov	r6,r8
  807348:	08033980 	call	803398 <__adddf3>
  80734c:	d9000f17 	ldw	r4,60(sp)
  807350:	102d883a 	mov	r22,r2
  807354:	00bf3034 	movhi	r2,64704
  807358:	18b9883a 	add	fp,r3,r2
  80735c:	e02f883a 	mov	r23,fp
  807360:	20028f1e 	bne	r4,zero,807da0 <_dtoa_r+0xf3c>
  807364:	0005883a 	mov	r2,zero
  807368:	00d00534 	movhi	r3,16404
  80736c:	a009883a 	mov	r4,r20
  807370:	a80b883a 	mov	r5,r21
  807374:	180f883a 	mov	r7,r3
  807378:	100d883a 	mov	r6,r2
  80737c:	08033180 	call	803318 <__subdf3>
  807380:	1009883a 	mov	r4,r2
  807384:	e00f883a 	mov	r7,fp
  807388:	180b883a 	mov	r5,r3
  80738c:	b00d883a 	mov	r6,r22
  807390:	1025883a 	mov	r18,r2
  807394:	1827883a 	mov	r19,r3
  807398:	08038580 	call	803858 <__gtdf2>
  80739c:	00834f16 	blt	zero,r2,8080dc <_dtoa_r+0x1278>
  8073a0:	e0e0003c 	xorhi	r3,fp,32768
  8073a4:	9009883a 	mov	r4,r18
  8073a8:	980b883a 	mov	r5,r19
  8073ac:	180f883a 	mov	r7,r3
  8073b0:	b00d883a 	mov	r6,r22
  8073b4:	080d9400 	call	80d940 <__ltdf2>
  8073b8:	1000080e 	bge	r2,zero,8073dc <_dtoa_r+0x578>
  8073bc:	0027883a 	mov	r19,zero
  8073c0:	0025883a 	mov	r18,zero
  8073c4:	d8802617 	ldw	r2,152(sp)
  8073c8:	df000517 	ldw	fp,20(sp)
  8073cc:	d8000615 	stw	zero,24(sp)
  8073d0:	0084303a 	nor	r2,zero,r2
  8073d4:	d8800d15 	stw	r2,52(sp)
  8073d8:	00019b06 	br	807a48 <_dtoa_r+0xbe4>
  8073dc:	d9801217 	ldw	r6,72(sp)
  8073e0:	d8801317 	ldw	r2,76(sp)
  8073e4:	3029883a 	mov	r20,r6
  8073e8:	102b883a 	mov	r21,r2
  8073ec:	d8c00217 	ldw	r3,8(sp)
  8073f0:	18008516 	blt	r3,zero,807608 <_dtoa_r+0x7a4>
  8073f4:	d9000d17 	ldw	r4,52(sp)
  8073f8:	00800384 	movi	r2,14
  8073fc:	11008216 	blt	r2,r4,807608 <_dtoa_r+0x7a4>
  807400:	200490fa 	slli	r2,r4,3
  807404:	d9802617 	ldw	r6,152(sp)
  807408:	00c02074 	movhi	r3,129
  80740c:	18c2c804 	addi	r3,r3,2848
  807410:	10c5883a 	add	r2,r2,r3
  807414:	14800017 	ldw	r18,0(r2)
  807418:	14c00117 	ldw	r19,4(r2)
  80741c:	30031e16 	blt	r6,zero,808098 <_dtoa_r+0x1234>
  807420:	d9000517 	ldw	r4,20(sp)
  807424:	d8c00f17 	ldw	r3,60(sp)
  807428:	a823883a 	mov	r17,r21
  80742c:	a021883a 	mov	r16,r20
  807430:	192b883a 	add	r21,r3,r4
  807434:	2039883a 	mov	fp,r4
  807438:	00000f06 	br	807478 <_dtoa_r+0x614>
  80743c:	0005883a 	mov	r2,zero
  807440:	00d00934 	movhi	r3,16420
  807444:	5009883a 	mov	r4,r10
  807448:	580b883a 	mov	r5,r11
  80744c:	180f883a 	mov	r7,r3
  807450:	100d883a 	mov	r6,r2
  807454:	080340c0 	call	80340c <__muldf3>
  807458:	180b883a 	mov	r5,r3
  80745c:	000d883a 	mov	r6,zero
  807460:	000f883a 	mov	r7,zero
  807464:	1009883a 	mov	r4,r2
  807468:	1021883a 	mov	r16,r2
  80746c:	1823883a 	mov	r17,r3
  807470:	080d8b80 	call	80d8b8 <__nedf2>
  807474:	10004526 	beq	r2,zero,80758c <_dtoa_r+0x728>
  807478:	900d883a 	mov	r6,r18
  80747c:	980f883a 	mov	r7,r19
  807480:	8009883a 	mov	r4,r16
  807484:	880b883a 	mov	r5,r17
  807488:	080d6600 	call	80d660 <__divdf3>
  80748c:	180b883a 	mov	r5,r3
  807490:	1009883a 	mov	r4,r2
  807494:	0803a600 	call	803a60 <__fixdfsi>
  807498:	1009883a 	mov	r4,r2
  80749c:	1029883a 	mov	r20,r2
  8074a0:	08039680 	call	803968 <__floatsidf>
  8074a4:	180f883a 	mov	r7,r3
  8074a8:	9009883a 	mov	r4,r18
  8074ac:	980b883a 	mov	r5,r19
  8074b0:	100d883a 	mov	r6,r2
  8074b4:	080340c0 	call	80340c <__muldf3>
  8074b8:	180f883a 	mov	r7,r3
  8074bc:	880b883a 	mov	r5,r17
  8074c0:	8009883a 	mov	r4,r16
  8074c4:	100d883a 	mov	r6,r2
  8074c8:	08033180 	call	803318 <__subdf3>
  8074cc:	1015883a 	mov	r10,r2
  8074d0:	a0800c04 	addi	r2,r20,48
  8074d4:	e0800005 	stb	r2,0(fp)
  8074d8:	e7000044 	addi	fp,fp,1
  8074dc:	1817883a 	mov	r11,r3
  8074e0:	e57fd61e 	bne	fp,r21,80743c <_dtoa_r+0x5d8>
  8074e4:	500d883a 	mov	r6,r10
  8074e8:	180f883a 	mov	r7,r3
  8074ec:	5009883a 	mov	r4,r10
  8074f0:	180b883a 	mov	r5,r3
  8074f4:	08033980 	call	803398 <__adddf3>
  8074f8:	100d883a 	mov	r6,r2
  8074fc:	9009883a 	mov	r4,r18
  807500:	980b883a 	mov	r5,r19
  807504:	180f883a 	mov	r7,r3
  807508:	1021883a 	mov	r16,r2
  80750c:	1823883a 	mov	r17,r3
  807510:	080d9400 	call	80d940 <__ltdf2>
  807514:	10000816 	blt	r2,zero,807538 <_dtoa_r+0x6d4>
  807518:	980b883a 	mov	r5,r19
  80751c:	800d883a 	mov	r6,r16
  807520:	880f883a 	mov	r7,r17
  807524:	9009883a 	mov	r4,r18
  807528:	08037d00 	call	8037d0 <__eqdf2>
  80752c:	1000171e 	bne	r2,zero,80758c <_dtoa_r+0x728>
  807530:	a080004c 	andi	r2,r20,1
  807534:	10001526 	beq	r2,zero,80758c <_dtoa_r+0x728>
  807538:	d8800d17 	ldw	r2,52(sp)
  80753c:	d8800415 	stw	r2,16(sp)
  807540:	e009883a 	mov	r4,fp
  807544:	213fffc4 	addi	r4,r4,-1
  807548:	20c00007 	ldb	r3,0(r4)
  80754c:	00800e44 	movi	r2,57
  807550:	1880081e 	bne	r3,r2,807574 <_dtoa_r+0x710>
  807554:	d8800517 	ldw	r2,20(sp)
  807558:	113ffa1e 	bne	r2,r4,807544 <_dtoa_r+0x6e0>
  80755c:	d8c00417 	ldw	r3,16(sp)
  807560:	d9800517 	ldw	r6,20(sp)
  807564:	00800c04 	movi	r2,48
  807568:	18c00044 	addi	r3,r3,1
  80756c:	d8c00415 	stw	r3,16(sp)
  807570:	30800005 	stb	r2,0(r6)
  807574:	20800003 	ldbu	r2,0(r4)
  807578:	d8c00417 	ldw	r3,16(sp)
  80757c:	27000044 	addi	fp,r4,1
  807580:	10800044 	addi	r2,r2,1
  807584:	d8c00d15 	stw	r3,52(sp)
  807588:	20800005 	stb	r2,0(r4)
  80758c:	d9001617 	ldw	r4,88(sp)
  807590:	d9400717 	ldw	r5,28(sp)
  807594:	080aaf80 	call	80aaf8 <_Bfree>
  807598:	e0000005 	stb	zero,0(fp)
  80759c:	d9800d17 	ldw	r6,52(sp)
  8075a0:	d8c02717 	ldw	r3,156(sp)
  8075a4:	d9002917 	ldw	r4,164(sp)
  8075a8:	30800044 	addi	r2,r6,1
  8075ac:	18800015 	stw	r2,0(r3)
  8075b0:	20029c26 	beq	r4,zero,808024 <_dtoa_r+0x11c0>
  8075b4:	d8c00517 	ldw	r3,20(sp)
  8075b8:	27000015 	stw	fp,0(r4)
  8075bc:	003e5d06 	br	806f34 <_dtoa_r+0xd0>
  8075c0:	d9800d17 	ldw	r6,52(sp)
  8075c4:	00c02074 	movhi	r3,129
  8075c8:	18c2c804 	addi	r3,r3,2848
  8075cc:	d9001217 	ldw	r4,72(sp)
  8075d0:	300490fa 	slli	r2,r6,3
  8075d4:	d9401317 	ldw	r5,76(sp)
  8075d8:	10c5883a 	add	r2,r2,r3
  8075dc:	12000017 	ldw	r8,0(r2)
  8075e0:	12400117 	ldw	r9,4(r2)
  8075e4:	400d883a 	mov	r6,r8
  8075e8:	480f883a 	mov	r7,r9
  8075ec:	080d9400 	call	80d940 <__ltdf2>
  8075f0:	1000030e 	bge	r2,zero,807600 <_dtoa_r+0x79c>
  8075f4:	d8800d17 	ldw	r2,52(sp)
  8075f8:	10bfffc4 	addi	r2,r2,-1
  8075fc:	d8800d15 	stw	r2,52(sp)
  807600:	d8000c15 	stw	zero,48(sp)
  807604:	003ea806 	br	8070a8 <_dtoa_r+0x244>
  807608:	d9000b17 	ldw	r4,44(sp)
  80760c:	202cc03a 	cmpne	r22,r4,zero
  807610:	b000c71e 	bne	r22,zero,807930 <_dtoa_r+0xacc>
  807614:	dc001117 	ldw	r16,68(sp)
  807618:	dc801017 	ldw	r18,64(sp)
  80761c:	0027883a 	mov	r19,zero
  807620:	04000b0e 	bge	zero,r16,807650 <_dtoa_r+0x7ec>
  807624:	d8c00a17 	ldw	r3,40(sp)
  807628:	00c0090e 	bge	zero,r3,807650 <_dtoa_r+0x7ec>
  80762c:	8005883a 	mov	r2,r16
  807630:	1c011316 	blt	r3,r16,807a80 <_dtoa_r+0xc1c>
  807634:	d9000a17 	ldw	r4,40(sp)
  807638:	d9801117 	ldw	r6,68(sp)
  80763c:	80a1c83a 	sub	r16,r16,r2
  807640:	2089c83a 	sub	r4,r4,r2
  807644:	308dc83a 	sub	r6,r6,r2
  807648:	d9000a15 	stw	r4,40(sp)
  80764c:	d9801115 	stw	r6,68(sp)
  807650:	d8801017 	ldw	r2,64(sp)
  807654:	0080150e 	bge	zero,r2,8076ac <_dtoa_r+0x848>
  807658:	d8c00b17 	ldw	r3,44(sp)
  80765c:	1805003a 	cmpeq	r2,r3,zero
  807660:	1001c91e 	bne	r2,zero,807d88 <_dtoa_r+0xf24>
  807664:	04800e0e 	bge	zero,r18,8076a0 <_dtoa_r+0x83c>
  807668:	d9001617 	ldw	r4,88(sp)
  80766c:	980b883a 	mov	r5,r19
  807670:	900d883a 	mov	r6,r18
  807674:	080b9440 	call	80b944 <__pow5mult>
  807678:	d9001617 	ldw	r4,88(sp)
  80767c:	d9800717 	ldw	r6,28(sp)
  807680:	100b883a 	mov	r5,r2
  807684:	1027883a 	mov	r19,r2
  807688:	080b5880 	call	80b588 <__multiply>
  80768c:	d9001617 	ldw	r4,88(sp)
  807690:	d9400717 	ldw	r5,28(sp)
  807694:	1023883a 	mov	r17,r2
  807698:	080aaf80 	call	80aaf8 <_Bfree>
  80769c:	dc400715 	stw	r17,28(sp)
  8076a0:	d9001017 	ldw	r4,64(sp)
  8076a4:	248dc83a 	sub	r6,r4,r18
  8076a8:	30010e1e 	bne	r6,zero,807ae4 <_dtoa_r+0xc80>
  8076ac:	d9001617 	ldw	r4,88(sp)
  8076b0:	04400044 	movi	r17,1
  8076b4:	880b883a 	mov	r5,r17
  8076b8:	080b7dc0 	call	80b7dc <__i2b>
  8076bc:	d9800917 	ldw	r6,36(sp)
  8076c0:	1025883a 	mov	r18,r2
  8076c4:	0180040e 	bge	zero,r6,8076d8 <_dtoa_r+0x874>
  8076c8:	d9001617 	ldw	r4,88(sp)
  8076cc:	100b883a 	mov	r5,r2
  8076d0:	080b9440 	call	80b944 <__pow5mult>
  8076d4:	1025883a 	mov	r18,r2
  8076d8:	d8801717 	ldw	r2,92(sp)
  8076dc:	8880f30e 	bge	r17,r2,807aac <_dtoa_r+0xc48>
  8076e0:	0023883a 	mov	r17,zero
  8076e4:	d9800917 	ldw	r6,36(sp)
  8076e8:	30019e1e 	bne	r6,zero,807d64 <_dtoa_r+0xf00>
  8076ec:	00c00044 	movi	r3,1
  8076f0:	d9000a17 	ldw	r4,40(sp)
  8076f4:	20c5883a 	add	r2,r4,r3
  8076f8:	10c007cc 	andi	r3,r2,31
  8076fc:	1800841e 	bne	r3,zero,807910 <_dtoa_r+0xaac>
  807700:	00800704 	movi	r2,28
  807704:	d9000a17 	ldw	r4,40(sp)
  807708:	d9801117 	ldw	r6,68(sp)
  80770c:	80a1883a 	add	r16,r16,r2
  807710:	2089883a 	add	r4,r4,r2
  807714:	308d883a 	add	r6,r6,r2
  807718:	d9000a15 	stw	r4,40(sp)
  80771c:	d9801115 	stw	r6,68(sp)
  807720:	d8801117 	ldw	r2,68(sp)
  807724:	0080050e 	bge	zero,r2,80773c <_dtoa_r+0x8d8>
  807728:	d9400717 	ldw	r5,28(sp)
  80772c:	d9001617 	ldw	r4,88(sp)
  807730:	100d883a 	mov	r6,r2
  807734:	080b43c0 	call	80b43c <__lshift>
  807738:	d8800715 	stw	r2,28(sp)
  80773c:	d8c00a17 	ldw	r3,40(sp)
  807740:	00c0050e 	bge	zero,r3,807758 <_dtoa_r+0x8f4>
  807744:	d9001617 	ldw	r4,88(sp)
  807748:	900b883a 	mov	r5,r18
  80774c:	180d883a 	mov	r6,r3
  807750:	080b43c0 	call	80b43c <__lshift>
  807754:	1025883a 	mov	r18,r2
  807758:	d9000c17 	ldw	r4,48(sp)
  80775c:	2005003a 	cmpeq	r2,r4,zero
  807760:	10016f26 	beq	r2,zero,807d20 <_dtoa_r+0xebc>
  807764:	d9000f17 	ldw	r4,60(sp)
  807768:	0102170e 	bge	zero,r4,807fc8 <_dtoa_r+0x1164>
  80776c:	d9800b17 	ldw	r6,44(sp)
  807770:	3005003a 	cmpeq	r2,r6,zero
  807774:	1000881e 	bne	r2,zero,807998 <_dtoa_r+0xb34>
  807778:	0400050e 	bge	zero,r16,807790 <_dtoa_r+0x92c>
  80777c:	d9001617 	ldw	r4,88(sp)
  807780:	980b883a 	mov	r5,r19
  807784:	800d883a 	mov	r6,r16
  807788:	080b43c0 	call	80b43c <__lshift>
  80778c:	1027883a 	mov	r19,r2
  807790:	8804c03a 	cmpne	r2,r17,zero
  807794:	1002541e 	bne	r2,zero,8080e8 <_dtoa_r+0x1284>
  807798:	980b883a 	mov	r5,r19
  80779c:	dd800517 	ldw	r22,20(sp)
  8077a0:	dcc00615 	stw	r19,24(sp)
  8077a4:	a700004c 	andi	fp,r20,1
  8077a8:	2827883a 	mov	r19,r5
  8077ac:	d9000717 	ldw	r4,28(sp)
  8077b0:	900b883a 	mov	r5,r18
  8077b4:	0806c200 	call	806c20 <quorem>
  8077b8:	d9000717 	ldw	r4,28(sp)
  8077bc:	d9400617 	ldw	r5,24(sp)
  8077c0:	1023883a 	mov	r17,r2
  8077c4:	8dc00c04 	addi	r23,r17,48
  8077c8:	080ac540 	call	80ac54 <__mcmp>
  8077cc:	d9001617 	ldw	r4,88(sp)
  8077d0:	900b883a 	mov	r5,r18
  8077d4:	980d883a 	mov	r6,r19
  8077d8:	1029883a 	mov	r20,r2
  8077dc:	080b2b00 	call	80b2b0 <__mdiff>
  8077e0:	102b883a 	mov	r21,r2
  8077e4:	10800317 	ldw	r2,12(r2)
  8077e8:	1001281e 	bne	r2,zero,807c8c <_dtoa_r+0xe28>
  8077ec:	d9000717 	ldw	r4,28(sp)
  8077f0:	a80b883a 	mov	r5,r21
  8077f4:	080ac540 	call	80ac54 <__mcmp>
  8077f8:	d9001617 	ldw	r4,88(sp)
  8077fc:	1021883a 	mov	r16,r2
  807800:	a80b883a 	mov	r5,r21
  807804:	080aaf80 	call	80aaf8 <_Bfree>
  807808:	8000041e 	bne	r16,zero,80781c <_dtoa_r+0x9b8>
  80780c:	d8801717 	ldw	r2,92(sp)
  807810:	1000021e 	bne	r2,zero,80781c <_dtoa_r+0x9b8>
  807814:	e004c03a 	cmpne	r2,fp,zero
  807818:	10011726 	beq	r2,zero,807c78 <_dtoa_r+0xe14>
  80781c:	a0010616 	blt	r20,zero,807c38 <_dtoa_r+0xdd4>
  807820:	a000041e 	bne	r20,zero,807834 <_dtoa_r+0x9d0>
  807824:	d8c01717 	ldw	r3,92(sp)
  807828:	1800021e 	bne	r3,zero,807834 <_dtoa_r+0x9d0>
  80782c:	e004c03a 	cmpne	r2,fp,zero
  807830:	10010126 	beq	r2,zero,807c38 <_dtoa_r+0xdd4>
  807834:	04023d16 	blt	zero,r16,80812c <_dtoa_r+0x12c8>
  807838:	b5c00005 	stb	r23,0(r22)
  80783c:	d9800517 	ldw	r6,20(sp)
  807840:	d9000f17 	ldw	r4,60(sp)
  807844:	b5800044 	addi	r22,r22,1
  807848:	3105883a 	add	r2,r6,r4
  80784c:	b0806526 	beq	r22,r2,8079e4 <_dtoa_r+0xb80>
  807850:	d9400717 	ldw	r5,28(sp)
  807854:	d9001617 	ldw	r4,88(sp)
  807858:	01800284 	movi	r6,10
  80785c:	000f883a 	mov	r7,zero
  807860:	080b8180 	call	80b818 <__multadd>
  807864:	d8800715 	stw	r2,28(sp)
  807868:	d8800617 	ldw	r2,24(sp)
  80786c:	14c10c26 	beq	r2,r19,807ca0 <_dtoa_r+0xe3c>
  807870:	d9400617 	ldw	r5,24(sp)
  807874:	d9001617 	ldw	r4,88(sp)
  807878:	01800284 	movi	r6,10
  80787c:	000f883a 	mov	r7,zero
  807880:	080b8180 	call	80b818 <__multadd>
  807884:	d9001617 	ldw	r4,88(sp)
  807888:	980b883a 	mov	r5,r19
  80788c:	01800284 	movi	r6,10
  807890:	000f883a 	mov	r7,zero
  807894:	d8800615 	stw	r2,24(sp)
  807898:	080b8180 	call	80b818 <__multadd>
  80789c:	1027883a 	mov	r19,r2
  8078a0:	003fc206 	br	8077ac <_dtoa_r+0x948>
  8078a4:	2445c83a 	sub	r2,r4,r17
  8078a8:	a088983a 	sll	r4,r20,r2
  8078ac:	003e4b06 	br	8071dc <_dtoa_r+0x378>
  8078b0:	01bfffc4 	movi	r6,-1
  8078b4:	00800044 	movi	r2,1
  8078b8:	d9800e15 	stw	r6,56(sp)
  8078bc:	d9800f15 	stw	r6,60(sp)
  8078c0:	d8800b15 	stw	r2,44(sp)
  8078c4:	d8c01617 	ldw	r3,88(sp)
  8078c8:	008005c4 	movi	r2,23
  8078cc:	18001115 	stw	zero,68(r3)
  8078d0:	1580082e 	bgeu	r2,r22,8078f4 <_dtoa_r+0xa90>
  8078d4:	00c00104 	movi	r3,4
  8078d8:	0009883a 	mov	r4,zero
  8078dc:	18c7883a 	add	r3,r3,r3
  8078e0:	18800504 	addi	r2,r3,20
  8078e4:	21000044 	addi	r4,r4,1
  8078e8:	b0bffc2e 	bgeu	r22,r2,8078dc <_dtoa_r+0xa78>
  8078ec:	d9801617 	ldw	r6,88(sp)
  8078f0:	31001115 	stw	r4,68(r6)
  8078f4:	dc000f17 	ldw	r16,60(sp)
  8078f8:	003e4b06 	br	807228 <_dtoa_r+0x3c4>
  8078fc:	d9801717 	ldw	r6,92(sp)
  807900:	0023883a 	mov	r17,zero
  807904:	31bfff04 	addi	r6,r6,-4
  807908:	d9801715 	stw	r6,92(sp)
  80790c:	003df806 	br	8070f0 <_dtoa_r+0x28c>
  807910:	00800804 	movi	r2,32
  807914:	10c9c83a 	sub	r4,r2,r3
  807918:	00c00104 	movi	r3,4
  80791c:	19005a16 	blt	r3,r4,807a88 <_dtoa_r+0xc24>
  807920:	008000c4 	movi	r2,3
  807924:	113f7e16 	blt	r2,r4,807720 <_dtoa_r+0x8bc>
  807928:	20800704 	addi	r2,r4,28
  80792c:	003f7506 	br	807704 <_dtoa_r+0x8a0>
  807930:	d9801717 	ldw	r6,92(sp)
  807934:	00800044 	movi	r2,1
  807938:	1180a10e 	bge	r2,r6,807bc0 <_dtoa_r+0xd5c>
  80793c:	d9800f17 	ldw	r6,60(sp)
  807940:	d8c01017 	ldw	r3,64(sp)
  807944:	30bfffc4 	addi	r2,r6,-1
  807948:	1881c616 	blt	r3,r2,808064 <_dtoa_r+0x1200>
  80794c:	18a5c83a 	sub	r18,r3,r2
  807950:	d8800f17 	ldw	r2,60(sp)
  807954:	10026216 	blt	r2,zero,8082e0 <_dtoa_r+0x147c>
  807958:	dc001117 	ldw	r16,68(sp)
  80795c:	1007883a 	mov	r3,r2
  807960:	d9800a17 	ldw	r6,40(sp)
  807964:	d8801117 	ldw	r2,68(sp)
  807968:	d9001617 	ldw	r4,88(sp)
  80796c:	30cd883a 	add	r6,r6,r3
  807970:	10c5883a 	add	r2,r2,r3
  807974:	01400044 	movi	r5,1
  807978:	d9800a15 	stw	r6,40(sp)
  80797c:	d8801115 	stw	r2,68(sp)
  807980:	080b7dc0 	call	80b7dc <__i2b>
  807984:	1027883a 	mov	r19,r2
  807988:	003f2506 	br	807620 <_dtoa_r+0x7bc>
  80798c:	00c02074 	movhi	r3,129
  807990:	18c2ab04 	addi	r3,r3,2732
  807994:	003d6706 	br	806f34 <_dtoa_r+0xd0>
  807998:	dd800517 	ldw	r22,20(sp)
  80799c:	04000044 	movi	r16,1
  8079a0:	00000706 	br	8079c0 <_dtoa_r+0xb5c>
  8079a4:	d9400717 	ldw	r5,28(sp)
  8079a8:	d9001617 	ldw	r4,88(sp)
  8079ac:	01800284 	movi	r6,10
  8079b0:	000f883a 	mov	r7,zero
  8079b4:	080b8180 	call	80b818 <__multadd>
  8079b8:	d8800715 	stw	r2,28(sp)
  8079bc:	84000044 	addi	r16,r16,1
  8079c0:	d9000717 	ldw	r4,28(sp)
  8079c4:	900b883a 	mov	r5,r18
  8079c8:	0806c200 	call	806c20 <quorem>
  8079cc:	15c00c04 	addi	r23,r2,48
  8079d0:	b5c00005 	stb	r23,0(r22)
  8079d4:	d8c00f17 	ldw	r3,60(sp)
  8079d8:	b5800044 	addi	r22,r22,1
  8079dc:	80fff116 	blt	r16,r3,8079a4 <_dtoa_r+0xb40>
  8079e0:	d8000615 	stw	zero,24(sp)
  8079e4:	d9400717 	ldw	r5,28(sp)
  8079e8:	d9001617 	ldw	r4,88(sp)
  8079ec:	01800044 	movi	r6,1
  8079f0:	080b43c0 	call	80b43c <__lshift>
  8079f4:	1009883a 	mov	r4,r2
  8079f8:	900b883a 	mov	r5,r18
  8079fc:	d8800715 	stw	r2,28(sp)
  807a00:	080ac540 	call	80ac54 <__mcmp>
  807a04:	00803c0e 	bge	zero,r2,807af8 <_dtoa_r+0xc94>
  807a08:	b009883a 	mov	r4,r22
  807a0c:	213fffc4 	addi	r4,r4,-1
  807a10:	21400003 	ldbu	r5,0(r4)
  807a14:	00800e44 	movi	r2,57
  807a18:	28c03fcc 	andi	r3,r5,255
  807a1c:	18c0201c 	xori	r3,r3,128
  807a20:	18ffe004 	addi	r3,r3,-128
  807a24:	1881981e 	bne	r3,r2,808088 <_dtoa_r+0x1224>
  807a28:	d9800517 	ldw	r6,20(sp)
  807a2c:	21bff71e 	bne	r4,r6,807a0c <_dtoa_r+0xba8>
  807a30:	d8800d17 	ldw	r2,52(sp)
  807a34:	37000044 	addi	fp,r6,1
  807a38:	10800044 	addi	r2,r2,1
  807a3c:	d8800d15 	stw	r2,52(sp)
  807a40:	00800c44 	movi	r2,49
  807a44:	30800005 	stb	r2,0(r6)
  807a48:	d9001617 	ldw	r4,88(sp)
  807a4c:	900b883a 	mov	r5,r18
  807a50:	080aaf80 	call	80aaf8 <_Bfree>
  807a54:	983ecd26 	beq	r19,zero,80758c <_dtoa_r+0x728>
  807a58:	d8c00617 	ldw	r3,24(sp)
  807a5c:	18000426 	beq	r3,zero,807a70 <_dtoa_r+0xc0c>
  807a60:	1cc00326 	beq	r3,r19,807a70 <_dtoa_r+0xc0c>
  807a64:	d9001617 	ldw	r4,88(sp)
  807a68:	180b883a 	mov	r5,r3
  807a6c:	080aaf80 	call	80aaf8 <_Bfree>
  807a70:	d9001617 	ldw	r4,88(sp)
  807a74:	980b883a 	mov	r5,r19
  807a78:	080aaf80 	call	80aaf8 <_Bfree>
  807a7c:	003ec306 	br	80758c <_dtoa_r+0x728>
  807a80:	1805883a 	mov	r2,r3
  807a84:	003eeb06 	br	807634 <_dtoa_r+0x7d0>
  807a88:	d9800a17 	ldw	r6,40(sp)
  807a8c:	d8c01117 	ldw	r3,68(sp)
  807a90:	20bfff04 	addi	r2,r4,-4
  807a94:	308d883a 	add	r6,r6,r2
  807a98:	1887883a 	add	r3,r3,r2
  807a9c:	80a1883a 	add	r16,r16,r2
  807aa0:	d9800a15 	stw	r6,40(sp)
  807aa4:	d8c01115 	stw	r3,68(sp)
  807aa8:	003f1d06 	br	807720 <_dtoa_r+0x8bc>
  807aac:	a03f0c1e 	bne	r20,zero,8076e0 <_dtoa_r+0x87c>
  807ab0:	00800434 	movhi	r2,16
  807ab4:	10bfffc4 	addi	r2,r2,-1
  807ab8:	a884703a 	and	r2,r21,r2
  807abc:	103f081e 	bne	r2,zero,8076e0 <_dtoa_r+0x87c>
  807ac0:	a89ffc2c 	andhi	r2,r21,32752
  807ac4:	103f0626 	beq	r2,zero,8076e0 <_dtoa_r+0x87c>
  807ac8:	d8c01117 	ldw	r3,68(sp)
  807acc:	d9000a17 	ldw	r4,40(sp)
  807ad0:	18c00044 	addi	r3,r3,1
  807ad4:	21000044 	addi	r4,r4,1
  807ad8:	d8c01115 	stw	r3,68(sp)
  807adc:	d9000a15 	stw	r4,40(sp)
  807ae0:	003f0006 	br	8076e4 <_dtoa_r+0x880>
  807ae4:	d9400717 	ldw	r5,28(sp)
  807ae8:	d9001617 	ldw	r4,88(sp)
  807aec:	080b9440 	call	80b944 <__pow5mult>
  807af0:	d8800715 	stw	r2,28(sp)
  807af4:	003eed06 	br	8076ac <_dtoa_r+0x848>
  807af8:	1000021e 	bne	r2,zero,807b04 <_dtoa_r+0xca0>
  807afc:	b880004c 	andi	r2,r23,1
  807b00:	103fc11e 	bne	r2,zero,807a08 <_dtoa_r+0xba4>
  807b04:	b5bfffc4 	addi	r22,r22,-1
  807b08:	b0c00007 	ldb	r3,0(r22)
  807b0c:	00800c04 	movi	r2,48
  807b10:	18bffc26 	beq	r3,r2,807b04 <_dtoa_r+0xca0>
  807b14:	b7000044 	addi	fp,r22,1
  807b18:	003fcb06 	br	807a48 <_dtoa_r+0xbe4>
  807b1c:	d9800d17 	ldw	r6,52(sp)
  807b20:	018fc83a 	sub	r7,zero,r6
  807b24:	3801f726 	beq	r7,zero,808304 <_dtoa_r+0x14a0>
  807b28:	398003cc 	andi	r6,r7,15
  807b2c:	300c90fa 	slli	r6,r6,3
  807b30:	01402074 	movhi	r5,129
  807b34:	2942c804 	addi	r5,r5,2848
  807b38:	d9001217 	ldw	r4,72(sp)
  807b3c:	314d883a 	add	r6,r6,r5
  807b40:	30c00117 	ldw	r3,4(r6)
  807b44:	30800017 	ldw	r2,0(r6)
  807b48:	d9401317 	ldw	r5,76(sp)
  807b4c:	3821d13a 	srai	r16,r7,4
  807b50:	100d883a 	mov	r6,r2
  807b54:	180f883a 	mov	r7,r3
  807b58:	080340c0 	call	80340c <__muldf3>
  807b5c:	1011883a 	mov	r8,r2
  807b60:	1813883a 	mov	r9,r3
  807b64:	1029883a 	mov	r20,r2
  807b68:	182b883a 	mov	r21,r3
  807b6c:	8001e526 	beq	r16,zero,808304 <_dtoa_r+0x14a0>
  807b70:	05800084 	movi	r22,2
  807b74:	04402074 	movhi	r17,129
  807b78:	8c42fa04 	addi	r17,r17,3048
  807b7c:	8080004c 	andi	r2,r16,1
  807b80:	1005003a 	cmpeq	r2,r2,zero
  807b84:	1000081e 	bne	r2,zero,807ba8 <_dtoa_r+0xd44>
  807b88:	89800017 	ldw	r6,0(r17)
  807b8c:	89c00117 	ldw	r7,4(r17)
  807b90:	480b883a 	mov	r5,r9
  807b94:	4009883a 	mov	r4,r8
  807b98:	080340c0 	call	80340c <__muldf3>
  807b9c:	1011883a 	mov	r8,r2
  807ba0:	b5800044 	addi	r22,r22,1
  807ba4:	1813883a 	mov	r9,r3
  807ba8:	8021d07a 	srai	r16,r16,1
  807bac:	8c400204 	addi	r17,r17,8
  807bb0:	803ff21e 	bne	r16,zero,807b7c <_dtoa_r+0xd18>
  807bb4:	4029883a 	mov	r20,r8
  807bb8:	482b883a 	mov	r21,r9
  807bbc:	003dca06 	br	8072e8 <_dtoa_r+0x484>
  807bc0:	d9000817 	ldw	r4,32(sp)
  807bc4:	2005003a 	cmpeq	r2,r4,zero
  807bc8:	1001f61e 	bne	r2,zero,8083a4 <_dtoa_r+0x1540>
  807bcc:	dc001117 	ldw	r16,68(sp)
  807bd0:	dc801017 	ldw	r18,64(sp)
  807bd4:	18c10cc4 	addi	r3,r3,1075
  807bd8:	003f6106 	br	807960 <_dtoa_r+0xafc>
  807bdc:	d8000b15 	stw	zero,44(sp)
  807be0:	d9802617 	ldw	r6,152(sp)
  807be4:	d8c00d17 	ldw	r3,52(sp)
  807be8:	30800044 	addi	r2,r6,1
  807bec:	18ad883a 	add	r22,r3,r2
  807bf0:	b13fffc4 	addi	r4,r22,-1
  807bf4:	d9000e15 	stw	r4,56(sp)
  807bf8:	0581f60e 	bge	zero,r22,8083d4 <_dtoa_r+0x1570>
  807bfc:	dd800f15 	stw	r22,60(sp)
  807c00:	003f3006 	br	8078c4 <_dtoa_r+0xa60>
  807c04:	d8000b15 	stw	zero,44(sp)
  807c08:	d9002617 	ldw	r4,152(sp)
  807c0c:	0101eb0e 	bge	zero,r4,8083bc <_dtoa_r+0x1558>
  807c10:	202d883a 	mov	r22,r4
  807c14:	d9000e15 	stw	r4,56(sp)
  807c18:	d9000f15 	stw	r4,60(sp)
  807c1c:	003f2906 	br	8078c4 <_dtoa_r+0xa60>
  807c20:	01800044 	movi	r6,1
  807c24:	d9800b15 	stw	r6,44(sp)
  807c28:	003ff706 	br	807c08 <_dtoa_r+0xda4>
  807c2c:	01000044 	movi	r4,1
  807c30:	d9000b15 	stw	r4,44(sp)
  807c34:	003fea06 	br	807be0 <_dtoa_r+0xd7c>
  807c38:	04000c0e 	bge	zero,r16,807c6c <_dtoa_r+0xe08>
  807c3c:	d9400717 	ldw	r5,28(sp)
  807c40:	d9001617 	ldw	r4,88(sp)
  807c44:	01800044 	movi	r6,1
  807c48:	080b43c0 	call	80b43c <__lshift>
  807c4c:	1009883a 	mov	r4,r2
  807c50:	900b883a 	mov	r5,r18
  807c54:	d8800715 	stw	r2,28(sp)
  807c58:	080ac540 	call	80ac54 <__mcmp>
  807c5c:	0081e00e 	bge	zero,r2,8083e0 <_dtoa_r+0x157c>
  807c60:	bdc00044 	addi	r23,r23,1
  807c64:	00800e84 	movi	r2,58
  807c68:	b881a226 	beq	r23,r2,8082f4 <_dtoa_r+0x1490>
  807c6c:	b7000044 	addi	fp,r22,1
  807c70:	b5c00005 	stb	r23,0(r22)
  807c74:	003f7406 	br	807a48 <_dtoa_r+0xbe4>
  807c78:	00800e44 	movi	r2,57
  807c7c:	b8819d26 	beq	r23,r2,8082f4 <_dtoa_r+0x1490>
  807c80:	053ffa0e 	bge	zero,r20,807c6c <_dtoa_r+0xe08>
  807c84:	8dc00c44 	addi	r23,r17,49
  807c88:	003ff806 	br	807c6c <_dtoa_r+0xe08>
  807c8c:	d9001617 	ldw	r4,88(sp)
  807c90:	a80b883a 	mov	r5,r21
  807c94:	04000044 	movi	r16,1
  807c98:	080aaf80 	call	80aaf8 <_Bfree>
  807c9c:	003edf06 	br	80781c <_dtoa_r+0x9b8>
  807ca0:	d9001617 	ldw	r4,88(sp)
  807ca4:	980b883a 	mov	r5,r19
  807ca8:	01800284 	movi	r6,10
  807cac:	000f883a 	mov	r7,zero
  807cb0:	080b8180 	call	80b818 <__multadd>
  807cb4:	1027883a 	mov	r19,r2
  807cb8:	d8800615 	stw	r2,24(sp)
  807cbc:	003ebb06 	br	8077ac <_dtoa_r+0x948>
  807cc0:	d9801117 	ldw	r6,68(sp)
  807cc4:	d8800d17 	ldw	r2,52(sp)
  807cc8:	d8000915 	stw	zero,36(sp)
  807ccc:	308dc83a 	sub	r6,r6,r2
  807cd0:	0087c83a 	sub	r3,zero,r2
  807cd4:	d9801115 	stw	r6,68(sp)
  807cd8:	d8c01015 	stw	r3,64(sp)
  807cdc:	003cfe06 	br	8070d8 <_dtoa_r+0x274>
  807ce0:	018dc83a 	sub	r6,zero,r6
  807ce4:	d9801115 	stw	r6,68(sp)
  807ce8:	d8000a15 	stw	zero,40(sp)
  807cec:	003cf306 	br	8070bc <_dtoa_r+0x258>
  807cf0:	d9000d17 	ldw	r4,52(sp)
  807cf4:	08039680 	call	803968 <__floatsidf>
  807cf8:	880b883a 	mov	r5,r17
  807cfc:	8009883a 	mov	r4,r16
  807d00:	180f883a 	mov	r7,r3
  807d04:	100d883a 	mov	r6,r2
  807d08:	080d8b80 	call	80d8b8 <__nedf2>
  807d0c:	103ce126 	beq	r2,zero,807094 <_dtoa_r+0x230>
  807d10:	d9800d17 	ldw	r6,52(sp)
  807d14:	31bfffc4 	addi	r6,r6,-1
  807d18:	d9800d15 	stw	r6,52(sp)
  807d1c:	003cdd06 	br	807094 <_dtoa_r+0x230>
  807d20:	d9000717 	ldw	r4,28(sp)
  807d24:	900b883a 	mov	r5,r18
  807d28:	080ac540 	call	80ac54 <__mcmp>
  807d2c:	103e8d0e 	bge	r2,zero,807764 <_dtoa_r+0x900>
  807d30:	d9400717 	ldw	r5,28(sp)
  807d34:	d9001617 	ldw	r4,88(sp)
  807d38:	01800284 	movi	r6,10
  807d3c:	000f883a 	mov	r7,zero
  807d40:	080b8180 	call	80b818 <__multadd>
  807d44:	d9800d17 	ldw	r6,52(sp)
  807d48:	d8800715 	stw	r2,28(sp)
  807d4c:	31bfffc4 	addi	r6,r6,-1
  807d50:	d9800d15 	stw	r6,52(sp)
  807d54:	b001a71e 	bne	r22,zero,8083f4 <_dtoa_r+0x1590>
  807d58:	d8800e17 	ldw	r2,56(sp)
  807d5c:	d8800f15 	stw	r2,60(sp)
  807d60:	003e8006 	br	807764 <_dtoa_r+0x900>
  807d64:	90800417 	ldw	r2,16(r18)
  807d68:	1085883a 	add	r2,r2,r2
  807d6c:	1085883a 	add	r2,r2,r2
  807d70:	1485883a 	add	r2,r2,r18
  807d74:	11000417 	ldw	r4,16(r2)
  807d78:	080ab200 	call	80ab20 <__hi0bits>
  807d7c:	00c00804 	movi	r3,32
  807d80:	1887c83a 	sub	r3,r3,r2
  807d84:	003e5a06 	br	8076f0 <_dtoa_r+0x88c>
  807d88:	d9400717 	ldw	r5,28(sp)
  807d8c:	d9801017 	ldw	r6,64(sp)
  807d90:	d9001617 	ldw	r4,88(sp)
  807d94:	080b9440 	call	80b944 <__pow5mult>
  807d98:	d8800715 	stw	r2,28(sp)
  807d9c:	003e4306 	br	8076ac <_dtoa_r+0x848>
  807da0:	d9800f17 	ldw	r6,60(sp)
  807da4:	d8800d17 	ldw	r2,52(sp)
  807da8:	d9800315 	stw	r6,12(sp)
  807dac:	d8800415 	stw	r2,16(sp)
  807db0:	d8c00b17 	ldw	r3,44(sp)
  807db4:	1805003a 	cmpeq	r2,r3,zero
  807db8:	1000e21e 	bne	r2,zero,808144 <_dtoa_r+0x12e0>
  807dbc:	d9000317 	ldw	r4,12(sp)
  807dc0:	0005883a 	mov	r2,zero
  807dc4:	00cff834 	movhi	r3,16352
  807dc8:	200c90fa 	slli	r6,r4,3
  807dcc:	01002074 	movhi	r4,129
  807dd0:	2102c804 	addi	r4,r4,2848
  807dd4:	180b883a 	mov	r5,r3
  807dd8:	310d883a 	add	r6,r6,r4
  807ddc:	327fff17 	ldw	r9,-4(r6)
  807de0:	323ffe17 	ldw	r8,-8(r6)
  807de4:	1009883a 	mov	r4,r2
  807de8:	480f883a 	mov	r7,r9
  807dec:	400d883a 	mov	r6,r8
  807df0:	080d6600 	call	80d660 <__divdf3>
  807df4:	180b883a 	mov	r5,r3
  807df8:	b00d883a 	mov	r6,r22
  807dfc:	b80f883a 	mov	r7,r23
  807e00:	1009883a 	mov	r4,r2
  807e04:	08033180 	call	803318 <__subdf3>
  807e08:	a80b883a 	mov	r5,r21
  807e0c:	a009883a 	mov	r4,r20
  807e10:	d8c01915 	stw	r3,100(sp)
  807e14:	d8801815 	stw	r2,96(sp)
  807e18:	0803a600 	call	803a60 <__fixdfsi>
  807e1c:	1009883a 	mov	r4,r2
  807e20:	1027883a 	mov	r19,r2
  807e24:	08039680 	call	803968 <__floatsidf>
  807e28:	a80b883a 	mov	r5,r21
  807e2c:	a009883a 	mov	r4,r20
  807e30:	180f883a 	mov	r7,r3
  807e34:	100d883a 	mov	r6,r2
  807e38:	08033180 	call	803318 <__subdf3>
  807e3c:	d9801817 	ldw	r6,96(sp)
  807e40:	1823883a 	mov	r17,r3
  807e44:	d8801415 	stw	r2,80(sp)
  807e48:	302d883a 	mov	r22,r6
  807e4c:	d9800517 	ldw	r6,20(sp)
  807e50:	9cc00c04 	addi	r19,r19,48
  807e54:	dc401515 	stw	r17,84(sp)
  807e58:	d8c01917 	ldw	r3,100(sp)
  807e5c:	34c00005 	stb	r19,0(r6)
  807e60:	d8800517 	ldw	r2,20(sp)
  807e64:	d9401917 	ldw	r5,100(sp)
  807e68:	d9801417 	ldw	r6,80(sp)
  807e6c:	b009883a 	mov	r4,r22
  807e70:	880f883a 	mov	r7,r17
  807e74:	182f883a 	mov	r23,r3
  807e78:	17000044 	addi	fp,r2,1
  807e7c:	08038580 	call	803858 <__gtdf2>
  807e80:	00804e16 	blt	zero,r2,807fbc <_dtoa_r+0x1158>
  807e84:	d9801417 	ldw	r6,80(sp)
  807e88:	0005883a 	mov	r2,zero
  807e8c:	00cffc34 	movhi	r3,16368
  807e90:	180b883a 	mov	r5,r3
  807e94:	880f883a 	mov	r7,r17
  807e98:	1009883a 	mov	r4,r2
  807e9c:	08033180 	call	803318 <__subdf3>
  807ea0:	d9401917 	ldw	r5,100(sp)
  807ea4:	180f883a 	mov	r7,r3
  807ea8:	b009883a 	mov	r4,r22
  807eac:	100d883a 	mov	r6,r2
  807eb0:	08038580 	call	803858 <__gtdf2>
  807eb4:	00bda216 	blt	zero,r2,807540 <_dtoa_r+0x6dc>
  807eb8:	d8c00317 	ldw	r3,12(sp)
  807ebc:	00800044 	movi	r2,1
  807ec0:	10c01216 	blt	r2,r3,807f0c <_dtoa_r+0x10a8>
  807ec4:	003d4506 	br	8073dc <_dtoa_r+0x578>
  807ec8:	d9801417 	ldw	r6,80(sp)
  807ecc:	0005883a 	mov	r2,zero
  807ed0:	00cffc34 	movhi	r3,16368
  807ed4:	180b883a 	mov	r5,r3
  807ed8:	880f883a 	mov	r7,r17
  807edc:	1009883a 	mov	r4,r2
  807ee0:	08033180 	call	803318 <__subdf3>
  807ee4:	d9c01b17 	ldw	r7,108(sp)
  807ee8:	180b883a 	mov	r5,r3
  807eec:	1009883a 	mov	r4,r2
  807ef0:	b00d883a 	mov	r6,r22
  807ef4:	080d9400 	call	80d940 <__ltdf2>
  807ef8:	103d9116 	blt	r2,zero,807540 <_dtoa_r+0x6dc>
  807efc:	d9800517 	ldw	r6,20(sp)
  807f00:	d9000317 	ldw	r4,12(sp)
  807f04:	3105883a 	add	r2,r6,r4
  807f08:	e0bd3426 	beq	fp,r2,8073dc <_dtoa_r+0x578>
  807f0c:	04500934 	movhi	r17,16420
  807f10:	0021883a 	mov	r16,zero
  807f14:	b80b883a 	mov	r5,r23
  807f18:	b009883a 	mov	r4,r22
  807f1c:	800d883a 	mov	r6,r16
  807f20:	880f883a 	mov	r7,r17
  807f24:	080340c0 	call	80340c <__muldf3>
  807f28:	d9401517 	ldw	r5,84(sp)
  807f2c:	d9001417 	ldw	r4,80(sp)
  807f30:	880f883a 	mov	r7,r17
  807f34:	000d883a 	mov	r6,zero
  807f38:	d8801a15 	stw	r2,104(sp)
  807f3c:	d8c01b15 	stw	r3,108(sp)
  807f40:	080340c0 	call	80340c <__muldf3>
  807f44:	180b883a 	mov	r5,r3
  807f48:	1009883a 	mov	r4,r2
  807f4c:	1823883a 	mov	r17,r3
  807f50:	1021883a 	mov	r16,r2
  807f54:	0803a600 	call	803a60 <__fixdfsi>
  807f58:	1009883a 	mov	r4,r2
  807f5c:	102b883a 	mov	r21,r2
  807f60:	08039680 	call	803968 <__floatsidf>
  807f64:	880b883a 	mov	r5,r17
  807f68:	8009883a 	mov	r4,r16
  807f6c:	180f883a 	mov	r7,r3
  807f70:	100d883a 	mov	r6,r2
  807f74:	08033180 	call	803318 <__subdf3>
  807f78:	1021883a 	mov	r16,r2
  807f7c:	d9001b17 	ldw	r4,108(sp)
  807f80:	1823883a 	mov	r17,r3
  807f84:	dc001415 	stw	r16,80(sp)
  807f88:	ad400c04 	addi	r21,r21,48
  807f8c:	dc401515 	stw	r17,84(sp)
  807f90:	d8801a17 	ldw	r2,104(sp)
  807f94:	e5400005 	stb	r21,0(fp)
  807f98:	202f883a 	mov	r23,r4
  807f9c:	d9c01b17 	ldw	r7,108(sp)
  807fa0:	d9001417 	ldw	r4,80(sp)
  807fa4:	880b883a 	mov	r5,r17
  807fa8:	100d883a 	mov	r6,r2
  807fac:	102d883a 	mov	r22,r2
  807fb0:	e7000044 	addi	fp,fp,1
  807fb4:	080d9400 	call	80d940 <__ltdf2>
  807fb8:	103fc30e 	bge	r2,zero,807ec8 <_dtoa_r+0x1064>
  807fbc:	d9000417 	ldw	r4,16(sp)
  807fc0:	d9000d15 	stw	r4,52(sp)
  807fc4:	003d7106 	br	80758c <_dtoa_r+0x728>
  807fc8:	d9801717 	ldw	r6,92(sp)
  807fcc:	00800084 	movi	r2,2
  807fd0:	11bde60e 	bge	r2,r6,80776c <_dtoa_r+0x908>
  807fd4:	203cfb1e 	bne	r4,zero,8073c4 <_dtoa_r+0x560>
  807fd8:	d9001617 	ldw	r4,88(sp)
  807fdc:	900b883a 	mov	r5,r18
  807fe0:	01800144 	movi	r6,5
  807fe4:	000f883a 	mov	r7,zero
  807fe8:	080b8180 	call	80b818 <__multadd>
  807fec:	d9000717 	ldw	r4,28(sp)
  807ff0:	100b883a 	mov	r5,r2
  807ff4:	1025883a 	mov	r18,r2
  807ff8:	080ac540 	call	80ac54 <__mcmp>
  807ffc:	00bcf10e 	bge	zero,r2,8073c4 <_dtoa_r+0x560>
  808000:	d8c00d17 	ldw	r3,52(sp)
  808004:	d9000517 	ldw	r4,20(sp)
  808008:	d8000615 	stw	zero,24(sp)
  80800c:	18c00044 	addi	r3,r3,1
  808010:	d8c00d15 	stw	r3,52(sp)
  808014:	00800c44 	movi	r2,49
  808018:	27000044 	addi	fp,r4,1
  80801c:	20800005 	stb	r2,0(r4)
  808020:	003e8906 	br	807a48 <_dtoa_r+0xbe4>
  808024:	d8c00517 	ldw	r3,20(sp)
  808028:	003bc206 	br	806f34 <_dtoa_r+0xd0>
  80802c:	01802074 	movhi	r6,129
  808030:	3182fa04 	addi	r6,r6,3048
  808034:	30c00917 	ldw	r3,36(r6)
  808038:	30800817 	ldw	r2,32(r6)
  80803c:	d9001217 	ldw	r4,72(sp)
  808040:	d9401317 	ldw	r5,76(sp)
  808044:	180f883a 	mov	r7,r3
  808048:	100d883a 	mov	r6,r2
  80804c:	080d6600 	call	80d660 <__divdf3>
  808050:	948003cc 	andi	r18,r18,15
  808054:	058000c4 	movi	r22,3
  808058:	1029883a 	mov	r20,r2
  80805c:	182b883a 	mov	r21,r3
  808060:	003c8906 	br	807288 <_dtoa_r+0x424>
  808064:	d9001017 	ldw	r4,64(sp)
  808068:	d9800917 	ldw	r6,36(sp)
  80806c:	0025883a 	mov	r18,zero
  808070:	1105c83a 	sub	r2,r2,r4
  808074:	2089883a 	add	r4,r4,r2
  808078:	308d883a 	add	r6,r6,r2
  80807c:	d9001015 	stw	r4,64(sp)
  808080:	d9800915 	stw	r6,36(sp)
  808084:	003e3206 	br	807950 <_dtoa_r+0xaec>
  808088:	28800044 	addi	r2,r5,1
  80808c:	27000044 	addi	fp,r4,1
  808090:	20800005 	stb	r2,0(r4)
  808094:	003e6c06 	br	807a48 <_dtoa_r+0xbe4>
  808098:	d8800f17 	ldw	r2,60(sp)
  80809c:	00bce016 	blt	zero,r2,807420 <_dtoa_r+0x5bc>
  8080a0:	d9800f17 	ldw	r6,60(sp)
  8080a4:	303cc51e 	bne	r6,zero,8073bc <_dtoa_r+0x558>
  8080a8:	0005883a 	mov	r2,zero
  8080ac:	00d00534 	movhi	r3,16404
  8080b0:	980b883a 	mov	r5,r19
  8080b4:	180f883a 	mov	r7,r3
  8080b8:	9009883a 	mov	r4,r18
  8080bc:	100d883a 	mov	r6,r2
  8080c0:	080340c0 	call	80340c <__muldf3>
  8080c4:	180b883a 	mov	r5,r3
  8080c8:	a80f883a 	mov	r7,r21
  8080cc:	1009883a 	mov	r4,r2
  8080d0:	a00d883a 	mov	r6,r20
  8080d4:	08038e00 	call	8038e0 <__gedf2>
  8080d8:	103cb80e 	bge	r2,zero,8073bc <_dtoa_r+0x558>
  8080dc:	0027883a 	mov	r19,zero
  8080e0:	0025883a 	mov	r18,zero
  8080e4:	003fc606 	br	808000 <_dtoa_r+0x119c>
  8080e8:	99400117 	ldw	r5,4(r19)
  8080ec:	d9001617 	ldw	r4,88(sp)
  8080f0:	080b0780 	call	80b078 <_Balloc>
  8080f4:	99800417 	ldw	r6,16(r19)
  8080f8:	11000304 	addi	r4,r2,12
  8080fc:	99400304 	addi	r5,r19,12
  808100:	318d883a 	add	r6,r6,r6
  808104:	318d883a 	add	r6,r6,r6
  808108:	31800204 	addi	r6,r6,8
  80810c:	1023883a 	mov	r17,r2
  808110:	080a8e00 	call	80a8e0 <memcpy>
  808114:	d9001617 	ldw	r4,88(sp)
  808118:	880b883a 	mov	r5,r17
  80811c:	01800044 	movi	r6,1
  808120:	080b43c0 	call	80b43c <__lshift>
  808124:	100b883a 	mov	r5,r2
  808128:	003d9c06 	br	80779c <_dtoa_r+0x938>
  80812c:	00800e44 	movi	r2,57
  808130:	b8807026 	beq	r23,r2,8082f4 <_dtoa_r+0x1490>
  808134:	b8800044 	addi	r2,r23,1
  808138:	b7000044 	addi	fp,r22,1
  80813c:	b0800005 	stb	r2,0(r22)
  808140:	003e4106 	br	807a48 <_dtoa_r+0xbe4>
  808144:	d8800317 	ldw	r2,12(sp)
  808148:	01802074 	movhi	r6,129
  80814c:	3182c804 	addi	r6,r6,2848
  808150:	b009883a 	mov	r4,r22
  808154:	100e90fa 	slli	r7,r2,3
  808158:	b80b883a 	mov	r5,r23
  80815c:	398f883a 	add	r7,r7,r6
  808160:	38bffe17 	ldw	r2,-8(r7)
  808164:	d9800517 	ldw	r6,20(sp)
  808168:	38ffff17 	ldw	r3,-4(r7)
  80816c:	37000044 	addi	fp,r6,1
  808170:	180f883a 	mov	r7,r3
  808174:	100d883a 	mov	r6,r2
  808178:	080340c0 	call	80340c <__muldf3>
  80817c:	a80b883a 	mov	r5,r21
  808180:	a009883a 	mov	r4,r20
  808184:	182f883a 	mov	r23,r3
  808188:	102d883a 	mov	r22,r2
  80818c:	0803a600 	call	803a60 <__fixdfsi>
  808190:	1009883a 	mov	r4,r2
  808194:	1027883a 	mov	r19,r2
  808198:	08039680 	call	803968 <__floatsidf>
  80819c:	a80b883a 	mov	r5,r21
  8081a0:	a009883a 	mov	r4,r20
  8081a4:	180f883a 	mov	r7,r3
  8081a8:	100d883a 	mov	r6,r2
  8081ac:	08033180 	call	803318 <__subdf3>
  8081b0:	180b883a 	mov	r5,r3
  8081b4:	d8c00517 	ldw	r3,20(sp)
  8081b8:	9cc00c04 	addi	r19,r19,48
  8081bc:	1009883a 	mov	r4,r2
  8081c0:	1cc00005 	stb	r19,0(r3)
  8081c4:	2021883a 	mov	r16,r4
  8081c8:	d9000317 	ldw	r4,12(sp)
  8081cc:	00800044 	movi	r2,1
  8081d0:	2823883a 	mov	r17,r5
  8081d4:	20802226 	beq	r4,r2,808260 <_dtoa_r+0x13fc>
  8081d8:	1029883a 	mov	r20,r2
  8081dc:	0005883a 	mov	r2,zero
  8081e0:	00d00934 	movhi	r3,16420
  8081e4:	180f883a 	mov	r7,r3
  8081e8:	100d883a 	mov	r6,r2
  8081ec:	880b883a 	mov	r5,r17
  8081f0:	8009883a 	mov	r4,r16
  8081f4:	080340c0 	call	80340c <__muldf3>
  8081f8:	180b883a 	mov	r5,r3
  8081fc:	1009883a 	mov	r4,r2
  808200:	1823883a 	mov	r17,r3
  808204:	1021883a 	mov	r16,r2
  808208:	0803a600 	call	803a60 <__fixdfsi>
  80820c:	1009883a 	mov	r4,r2
  808210:	102b883a 	mov	r21,r2
  808214:	08039680 	call	803968 <__floatsidf>
  808218:	880b883a 	mov	r5,r17
  80821c:	8009883a 	mov	r4,r16
  808220:	180f883a 	mov	r7,r3
  808224:	100d883a 	mov	r6,r2
  808228:	08033180 	call	803318 <__subdf3>
  80822c:	180b883a 	mov	r5,r3
  808230:	d8c00517 	ldw	r3,20(sp)
  808234:	1009883a 	mov	r4,r2
  808238:	ad400c04 	addi	r21,r21,48
  80823c:	1d05883a 	add	r2,r3,r20
  808240:	15400005 	stb	r21,0(r2)
  808244:	2021883a 	mov	r16,r4
  808248:	d9000317 	ldw	r4,12(sp)
  80824c:	a5000044 	addi	r20,r20,1
  808250:	2823883a 	mov	r17,r5
  808254:	a13fe11e 	bne	r20,r4,8081dc <_dtoa_r+0x1378>
  808258:	e505883a 	add	r2,fp,r20
  80825c:	173fffc4 	addi	fp,r2,-1
  808260:	0025883a 	mov	r18,zero
  808264:	04cff834 	movhi	r19,16352
  808268:	b009883a 	mov	r4,r22
  80826c:	b80b883a 	mov	r5,r23
  808270:	900d883a 	mov	r6,r18
  808274:	980f883a 	mov	r7,r19
  808278:	08033980 	call	803398 <__adddf3>
  80827c:	180b883a 	mov	r5,r3
  808280:	1009883a 	mov	r4,r2
  808284:	800d883a 	mov	r6,r16
  808288:	880f883a 	mov	r7,r17
  80828c:	080d9400 	call	80d940 <__ltdf2>
  808290:	103cab16 	blt	r2,zero,807540 <_dtoa_r+0x6dc>
  808294:	0009883a 	mov	r4,zero
  808298:	980b883a 	mov	r5,r19
  80829c:	b80f883a 	mov	r7,r23
  8082a0:	b00d883a 	mov	r6,r22
  8082a4:	08033180 	call	803318 <__subdf3>
  8082a8:	180b883a 	mov	r5,r3
  8082ac:	880f883a 	mov	r7,r17
  8082b0:	1009883a 	mov	r4,r2
  8082b4:	800d883a 	mov	r6,r16
  8082b8:	08038580 	call	803858 <__gtdf2>
  8082bc:	00bc470e 	bge	zero,r2,8073dc <_dtoa_r+0x578>
  8082c0:	00c00c04 	movi	r3,48
  8082c4:	e73fffc4 	addi	fp,fp,-1
  8082c8:	e0800007 	ldb	r2,0(fp)
  8082cc:	10fffd26 	beq	r2,r3,8082c4 <_dtoa_r+0x1460>
  8082d0:	d9800417 	ldw	r6,16(sp)
  8082d4:	e7000044 	addi	fp,fp,1
  8082d8:	d9800d15 	stw	r6,52(sp)
  8082dc:	003cab06 	br	80758c <_dtoa_r+0x728>
  8082e0:	d8c00f17 	ldw	r3,60(sp)
  8082e4:	d9001117 	ldw	r4,68(sp)
  8082e8:	20e1c83a 	sub	r16,r4,r3
  8082ec:	0007883a 	mov	r3,zero
  8082f0:	003d9b06 	br	807960 <_dtoa_r+0xafc>
  8082f4:	00800e44 	movi	r2,57
  8082f8:	b0800005 	stb	r2,0(r22)
  8082fc:	b5800044 	addi	r22,r22,1
  808300:	003dc106 	br	807a08 <_dtoa_r+0xba4>
  808304:	05800084 	movi	r22,2
  808308:	003bf706 	br	8072e8 <_dtoa_r+0x484>
  80830c:	d9000f17 	ldw	r4,60(sp)
  808310:	013c000e 	bge	zero,r4,807314 <_dtoa_r+0x4b0>
  808314:	d9800e17 	ldw	r6,56(sp)
  808318:	01bc300e 	bge	zero,r6,8073dc <_dtoa_r+0x578>
  80831c:	0005883a 	mov	r2,zero
  808320:	00d00934 	movhi	r3,16420
  808324:	a80b883a 	mov	r5,r21
  808328:	180f883a 	mov	r7,r3
  80832c:	a009883a 	mov	r4,r20
  808330:	100d883a 	mov	r6,r2
  808334:	080340c0 	call	80340c <__muldf3>
  808338:	b1000044 	addi	r4,r22,1
  80833c:	1021883a 	mov	r16,r2
  808340:	1823883a 	mov	r17,r3
  808344:	08039680 	call	803968 <__floatsidf>
  808348:	880b883a 	mov	r5,r17
  80834c:	8009883a 	mov	r4,r16
  808350:	180f883a 	mov	r7,r3
  808354:	100d883a 	mov	r6,r2
  808358:	080340c0 	call	80340c <__muldf3>
  80835c:	0011883a 	mov	r8,zero
  808360:	02500734 	movhi	r9,16412
  808364:	180b883a 	mov	r5,r3
  808368:	480f883a 	mov	r7,r9
  80836c:	1009883a 	mov	r4,r2
  808370:	400d883a 	mov	r6,r8
  808374:	08033980 	call	803398 <__adddf3>
  808378:	102d883a 	mov	r22,r2
  80837c:	00bf3034 	movhi	r2,64704
  808380:	10ef883a 	add	r23,r2,r3
  808384:	d8800d17 	ldw	r2,52(sp)
  808388:	d8c00e17 	ldw	r3,56(sp)
  80838c:	8029883a 	mov	r20,r16
  808390:	10bfffc4 	addi	r2,r2,-1
  808394:	882b883a 	mov	r21,r17
  808398:	d8800415 	stw	r2,16(sp)
  80839c:	d8c00315 	stw	r3,12(sp)
  8083a0:	003e8306 	br	807db0 <_dtoa_r+0xf4c>
  8083a4:	d8800117 	ldw	r2,4(sp)
  8083a8:	dc001117 	ldw	r16,68(sp)
  8083ac:	dc801017 	ldw	r18,64(sp)
  8083b0:	00c00d84 	movi	r3,54
  8083b4:	1887c83a 	sub	r3,r3,r2
  8083b8:	003d6906 	br	807960 <_dtoa_r+0xafc>
  8083bc:	01800044 	movi	r6,1
  8083c0:	3021883a 	mov	r16,r6
  8083c4:	d9800f15 	stw	r6,60(sp)
  8083c8:	d9802615 	stw	r6,152(sp)
  8083cc:	d9800e15 	stw	r6,56(sp)
  8083d0:	003b9306 	br	807220 <_dtoa_r+0x3bc>
  8083d4:	b021883a 	mov	r16,r22
  8083d8:	dd800f15 	stw	r22,60(sp)
  8083dc:	003b9006 	br	807220 <_dtoa_r+0x3bc>
  8083e0:	103e221e 	bne	r2,zero,807c6c <_dtoa_r+0xe08>
  8083e4:	b880004c 	andi	r2,r23,1
  8083e8:	1005003a 	cmpeq	r2,r2,zero
  8083ec:	103e1f1e 	bne	r2,zero,807c6c <_dtoa_r+0xe08>
  8083f0:	003e1b06 	br	807c60 <_dtoa_r+0xdfc>
  8083f4:	d9001617 	ldw	r4,88(sp)
  8083f8:	980b883a 	mov	r5,r19
  8083fc:	01800284 	movi	r6,10
  808400:	000f883a 	mov	r7,zero
  808404:	080b8180 	call	80b818 <__multadd>
  808408:	d8c00e17 	ldw	r3,56(sp)
  80840c:	1027883a 	mov	r19,r2
  808410:	d8c00f15 	stw	r3,60(sp)
  808414:	003cd306 	br	807764 <_dtoa_r+0x900>

00808418 <print_e>:
  808418:	defff404 	addi	sp,sp,-48
  80841c:	dcc00a15 	stw	r19,40(sp)
  808420:	dcc00c17 	ldw	r19,48(sp)
  808424:	3005883a 	mov	r2,r6
  808428:	dc400815 	stw	r17,32(sp)
  80842c:	2823883a 	mov	r17,r5
  808430:	100b883a 	mov	r5,r2
  808434:	d8800604 	addi	r2,sp,24
  808438:	380d883a 	mov	r6,r7
  80843c:	9a000044 	addi	r8,r19,1
  808440:	d8800115 	stw	r2,4(sp)
  808444:	d8c00504 	addi	r3,sp,20
  808448:	d8800404 	addi	r2,sp,16
  80844c:	01c00084 	movi	r7,2
  808450:	dc800915 	stw	r18,36(sp)
  808454:	dc000715 	stw	r16,28(sp)
  808458:	dfc00b15 	stw	ra,44(sp)
  80845c:	da000015 	stw	r8,0(sp)
  808460:	d8c00315 	stw	r3,12(sp)
  808464:	d8800215 	stw	r2,8(sp)
  808468:	dc800d03 	ldbu	r18,52(sp)
  80846c:	0806e640 	call	806e64 <_dtoa_r>
  808470:	dc000617 	ldw	r16,24(sp)
  808474:	100b883a 	mov	r5,r2
  808478:	0089c3c4 	movi	r2,9999
  80847c:	80805e26 	beq	r16,r2,8085f8 <print_e+0x1e0>
  808480:	28c00003 	ldbu	r3,0(r5)
  808484:	89000044 	addi	r4,r17,1
  808488:	29400044 	addi	r5,r5,1
  80848c:	88c00005 	stb	r3,0(r17)
  808490:	d8800e17 	ldw	r2,56(sp)
  808494:	10004826 	beq	r2,zero,8085b8 <print_e+0x1a0>
  808498:	00800b84 	movi	r2,46
  80849c:	20800005 	stb	r2,0(r4)
  8084a0:	9811883a 	mov	r8,r19
  8084a4:	21000044 	addi	r4,r4,1
  8084a8:	28800003 	ldbu	r2,0(r5)
  8084ac:	10000926 	beq	r2,zero,8084d4 <print_e+0xbc>
  8084b0:	02000216 	blt	zero,r8,8084bc <print_e+0xa4>
  8084b4:	00000706 	br	8084d4 <print_e+0xbc>
  8084b8:	40000626 	beq	r8,zero,8084d4 <print_e+0xbc>
  8084bc:	20800005 	stb	r2,0(r4)
  8084c0:	29400044 	addi	r5,r5,1
  8084c4:	28800003 	ldbu	r2,0(r5)
  8084c8:	423fffc4 	addi	r8,r8,-1
  8084cc:	21000044 	addi	r4,r4,1
  8084d0:	103ff91e 	bne	r2,zero,8084b8 <print_e+0xa0>
  8084d4:	90c03fcc 	andi	r3,r18,255
  8084d8:	18c0201c 	xori	r3,r3,128
  8084dc:	18ffe004 	addi	r3,r3,-128
  8084e0:	008019c4 	movi	r2,103
  8084e4:	18803726 	beq	r3,r2,8085c4 <print_e+0x1ac>
  8084e8:	008011c4 	movi	r2,71
  8084ec:	18804026 	beq	r3,r2,8085f0 <print_e+0x1d8>
  8084f0:	0200080e 	bge	zero,r8,808514 <print_e+0xfc>
  8084f4:	2007883a 	mov	r3,r4
  8084f8:	4005883a 	mov	r2,r8
  8084fc:	01400c04 	movi	r5,48
  808500:	10bfffc4 	addi	r2,r2,-1
  808504:	19400005 	stb	r5,0(r3)
  808508:	18c00044 	addi	r3,r3,1
  80850c:	103ffc1e 	bne	r2,zero,808500 <print_e+0xe8>
  808510:	2209883a 	add	r4,r4,r8
  808514:	843fffc4 	addi	r16,r16,-1
  808518:	24800005 	stb	r18,0(r4)
  80851c:	dc000615 	stw	r16,24(sp)
  808520:	80002d16 	blt	r16,zero,8085d8 <print_e+0x1c0>
  808524:	00800ac4 	movi	r2,43
  808528:	20800045 	stb	r2,1(r4)
  80852c:	24400084 	addi	r17,r4,2
  808530:	008018c4 	movi	r2,99
  808534:	14000b0e 	bge	r2,r16,808564 <print_e+0x14c>
  808538:	8009883a 	mov	r4,r16
  80853c:	01401904 	movi	r5,100
  808540:	0803df40 	call	803df4 <__divsi3>
  808544:	1009883a 	mov	r4,r2
  808548:	10800c04 	addi	r2,r2,48
  80854c:	88800005 	stb	r2,0(r17)
  808550:	01401904 	movi	r5,100
  808554:	0803ec40 	call	803ec4 <__mulsi3>
  808558:	80a1c83a 	sub	r16,r16,r2
  80855c:	8c400044 	addi	r17,r17,1
  808560:	dc000615 	stw	r16,24(sp)
  808564:	8009883a 	mov	r4,r16
  808568:	01400284 	movi	r5,10
  80856c:	0803df40 	call	803df4 <__divsi3>
  808570:	1009883a 	mov	r4,r2
  808574:	10800c04 	addi	r2,r2,48
  808578:	88800005 	stb	r2,0(r17)
  80857c:	01400284 	movi	r5,10
  808580:	0803ec40 	call	803ec4 <__mulsi3>
  808584:	8085c83a 	sub	r2,r16,r2
  808588:	10c00c04 	addi	r3,r2,48
  80858c:	88c00045 	stb	r3,1(r17)
  808590:	89000044 	addi	r4,r17,1
  808594:	20000045 	stb	zero,1(r4)
  808598:	d8800615 	stw	r2,24(sp)
  80859c:	dfc00b17 	ldw	ra,44(sp)
  8085a0:	dcc00a17 	ldw	r19,40(sp)
  8085a4:	dc800917 	ldw	r18,36(sp)
  8085a8:	dc400817 	ldw	r17,32(sp)
  8085ac:	dc000717 	ldw	r16,28(sp)
  8085b0:	dec00c04 	addi	sp,sp,48
  8085b4:	f800283a 	ret
  8085b8:	983fb71e 	bne	r19,zero,808498 <print_e+0x80>
  8085bc:	0011883a 	mov	r8,zero
  8085c0:	003fb906 	br	8084a8 <print_e+0x90>
  8085c4:	04801944 	movi	r18,101
  8085c8:	843fffc4 	addi	r16,r16,-1
  8085cc:	24800005 	stb	r18,0(r4)
  8085d0:	dc000615 	stw	r16,24(sp)
  8085d4:	803fd30e 	bge	r16,zero,808524 <print_e+0x10c>
  8085d8:	00800b44 	movi	r2,45
  8085dc:	0421c83a 	sub	r16,zero,r16
  8085e0:	20800045 	stb	r2,1(r4)
  8085e4:	24400084 	addi	r17,r4,2
  8085e8:	dc000615 	stw	r16,24(sp)
  8085ec:	003fd006 	br	808530 <print_e+0x118>
  8085f0:	04801144 	movi	r18,69
  8085f4:	003fc706 	br	808514 <print_e+0xfc>
  8085f8:	8809883a 	mov	r4,r17
  8085fc:	080c4600 	call	80c460 <strcpy>
  808600:	dfc00b17 	ldw	ra,44(sp)
  808604:	dcc00a17 	ldw	r19,40(sp)
  808608:	dc800917 	ldw	r18,36(sp)
  80860c:	dc400817 	ldw	r17,32(sp)
  808610:	dc000717 	ldw	r16,28(sp)
  808614:	dec00c04 	addi	sp,sp,48
  808618:	f800283a 	ret

0080861c <_gcvt>:
  80861c:	defff104 	addi	sp,sp,-60
  808620:	dc400815 	stw	r17,32(sp)
  808624:	0005883a 	mov	r2,zero
  808628:	3023883a 	mov	r17,r6
  80862c:	dcc00a15 	stw	r19,40(sp)
  808630:	dc800915 	stw	r18,36(sp)
  808634:	dc000715 	stw	r16,28(sp)
  808638:	2027883a 	mov	r19,r4
  80863c:	2821883a 	mov	r16,r5
  808640:	3825883a 	mov	r18,r7
  808644:	2809883a 	mov	r4,r5
  808648:	100d883a 	mov	r6,r2
  80864c:	880b883a 	mov	r5,r17
  808650:	000f883a 	mov	r7,zero
  808654:	dd800d15 	stw	r22,52(sp)
  808658:	dd400c15 	stw	r21,48(sp)
  80865c:	dd000b15 	stw	r20,44(sp)
  808660:	dfc00e15 	stw	ra,56(sp)
  808664:	dd400f17 	ldw	r21,60(sp)
  808668:	dd801117 	ldw	r22,68(sp)
  80866c:	dd001003 	ldbu	r20,64(sp)
  808670:	080d9400 	call	80d940 <__ltdf2>
  808674:	10008e16 	blt	r2,zero,8088b0 <_gcvt+0x294>
  808678:	000d883a 	mov	r6,zero
  80867c:	000f883a 	mov	r7,zero
  808680:	8009883a 	mov	r4,r16
  808684:	880b883a 	mov	r5,r17
  808688:	08037d00 	call	8037d0 <__eqdf2>
  80868c:	10000e1e 	bne	r2,zero,8086c8 <_gcvt+0xac>
  808690:	00800c04 	movi	r2,48
  808694:	a8800005 	stb	r2,0(r21)
  808698:	a8000045 	stb	zero,1(r21)
  80869c:	a805883a 	mov	r2,r21
  8086a0:	dfc00e17 	ldw	ra,56(sp)
  8086a4:	dd800d17 	ldw	r22,52(sp)
  8086a8:	dd400c17 	ldw	r21,48(sp)
  8086ac:	dd000b17 	ldw	r20,44(sp)
  8086b0:	dcc00a17 	ldw	r19,40(sp)
  8086b4:	dc800917 	ldw	r18,36(sp)
  8086b8:	dc400817 	ldw	r17,32(sp)
  8086bc:	dc000717 	ldw	r16,28(sp)
  8086c0:	dec00f04 	addi	sp,sp,60
  8086c4:	f800283a 	ret
  8086c8:	00bac734 	movhi	r2,60188
  8086cc:	1090cb44 	addi	r2,r2,17197
  8086d0:	00cfc6b4 	movhi	r3,16154
  8086d4:	18cdb884 	addi	r3,r3,14050
  8086d8:	180f883a 	mov	r7,r3
  8086dc:	8009883a 	mov	r4,r16
  8086e0:	880b883a 	mov	r5,r17
  8086e4:	100d883a 	mov	r6,r2
  8086e8:	080d9c80 	call	80d9c8 <__ledf2>
  8086ec:	00800d16 	blt	zero,r2,808724 <_gcvt+0x108>
  8086f0:	a0c03fcc 	andi	r3,r20,255
  8086f4:	18c0201c 	xori	r3,r3,128
  8086f8:	90bfffc4 	addi	r2,r18,-1
  8086fc:	18ffe004 	addi	r3,r3,-128
  808700:	9809883a 	mov	r4,r19
  808704:	880f883a 	mov	r7,r17
  808708:	a80b883a 	mov	r5,r21
  80870c:	800d883a 	mov	r6,r16
  808710:	d8800015 	stw	r2,0(sp)
  808714:	d8c00115 	stw	r3,4(sp)
  808718:	dd800215 	stw	r22,8(sp)
  80871c:	08084180 	call	808418 <print_e>
  808720:	003fde06 	br	80869c <_gcvt+0x80>
  808724:	9009883a 	mov	r4,r18
  808728:	080af040 	call	80af04 <_mprec_log10>
  80872c:	180f883a 	mov	r7,r3
  808730:	8009883a 	mov	r4,r16
  808734:	880b883a 	mov	r5,r17
  808738:	100d883a 	mov	r6,r2
  80873c:	08038e00 	call	8038e0 <__gedf2>
  808740:	103feb0e 	bge	r2,zero,8086f0 <_gcvt+0xd4>
  808744:	0005883a 	mov	r2,zero
  808748:	00cffc34 	movhi	r3,16368
  80874c:	180f883a 	mov	r7,r3
  808750:	8009883a 	mov	r4,r16
  808754:	880b883a 	mov	r5,r17
  808758:	100d883a 	mov	r6,r2
  80875c:	080d9400 	call	80d940 <__ltdf2>
  808760:	10005616 	blt	r2,zero,8088bc <_gcvt+0x2a0>
  808764:	9809883a 	mov	r4,r19
  808768:	880d883a 	mov	r6,r17
  80876c:	800b883a 	mov	r5,r16
  808770:	01c00084 	movi	r7,2
  808774:	d8800504 	addi	r2,sp,20
  808778:	d8800215 	stw	r2,8(sp)
  80877c:	d8c00604 	addi	r3,sp,24
  808780:	d8800404 	addi	r2,sp,16
  808784:	d8c00315 	stw	r3,12(sp)
  808788:	dc800015 	stw	r18,0(sp)
  80878c:	d8800115 	stw	r2,4(sp)
  808790:	0806e640 	call	806e64 <_dtoa_r>
  808794:	d9000417 	ldw	r4,16(sp)
  808798:	100b883a 	mov	r5,r2
  80879c:	0089c3c4 	movi	r2,9999
  8087a0:	20804b26 	beq	r4,r2,8088d0 <_gcvt+0x2b4>
  8087a4:	28800003 	ldbu	r2,0(r5)
  8087a8:	10005026 	beq	r2,zero,8088ec <_gcvt+0x2d0>
  8087ac:	0100510e 	bge	zero,r4,8088f4 <_gcvt+0x2d8>
  8087b0:	a807883a 	mov	r3,r21
  8087b4:	00000106 	br	8087bc <_gcvt+0x1a0>
  8087b8:	0100130e 	bge	zero,r4,808808 <_gcvt+0x1ec>
  8087bc:	18800005 	stb	r2,0(r3)
  8087c0:	213fffc4 	addi	r4,r4,-1
  8087c4:	d9000415 	stw	r4,16(sp)
  8087c8:	29400044 	addi	r5,r5,1
  8087cc:	28800003 	ldbu	r2,0(r5)
  8087d0:	18c00044 	addi	r3,r3,1
  8087d4:	94bfffc4 	addi	r18,r18,-1
  8087d8:	103ff71e 	bne	r2,zero,8087b8 <_gcvt+0x19c>
  8087dc:	01000a0e 	bge	zero,r4,808808 <_gcvt+0x1ec>
  8087e0:	0480090e 	bge	zero,r18,808808 <_gcvt+0x1ec>
  8087e4:	00800c04 	movi	r2,48
  8087e8:	00000106 	br	8087f0 <_gcvt+0x1d4>
  8087ec:	90000526 	beq	r18,zero,808804 <_gcvt+0x1e8>
  8087f0:	213fffc4 	addi	r4,r4,-1
  8087f4:	18800005 	stb	r2,0(r3)
  8087f8:	94bfffc4 	addi	r18,r18,-1
  8087fc:	18c00044 	addi	r3,r3,1
  808800:	013ffa16 	blt	zero,r4,8087ec <_gcvt+0x1d0>
  808804:	d9000415 	stw	r4,16(sp)
  808808:	b000021e 	bne	r22,zero,808814 <_gcvt+0x1f8>
  80880c:	28800007 	ldb	r2,0(r5)
  808810:	10002526 	beq	r2,zero,8088a8 <_gcvt+0x28c>
  808814:	a8c03126 	beq	r21,r3,8088dc <_gcvt+0x2c0>
  808818:	00800b84 	movi	r2,46
  80881c:	18800005 	stb	r2,0(r3)
  808820:	18c00044 	addi	r3,r3,1
  808824:	20000b0e 	bge	r4,zero,808854 <_gcvt+0x238>
  808828:	04800a0e 	bge	zero,r18,808854 <_gcvt+0x238>
  80882c:	01800c04 	movi	r6,48
  808830:	00000106 	br	808838 <_gcvt+0x21c>
  808834:	90000626 	beq	r18,zero,808850 <_gcvt+0x234>
  808838:	20800044 	addi	r2,r4,1
  80883c:	19800005 	stb	r6,0(r3)
  808840:	94bfffc4 	addi	r18,r18,-1
  808844:	18c00044 	addi	r3,r3,1
  808848:	1009883a 	mov	r4,r2
  80884c:	103ff916 	blt	r2,zero,808834 <_gcvt+0x218>
  808850:	d8800415 	stw	r2,16(sp)
  808854:	28800003 	ldbu	r2,0(r5)
  808858:	10000926 	beq	r2,zero,808880 <_gcvt+0x264>
  80885c:	04800216 	blt	zero,r18,808868 <_gcvt+0x24c>
  808860:	00000706 	br	808880 <_gcvt+0x264>
  808864:	90000626 	beq	r18,zero,808880 <_gcvt+0x264>
  808868:	18800005 	stb	r2,0(r3)
  80886c:	29400044 	addi	r5,r5,1
  808870:	28800003 	ldbu	r2,0(r5)
  808874:	94bfffc4 	addi	r18,r18,-1
  808878:	18c00044 	addi	r3,r3,1
  80887c:	103ff91e 	bne	r2,zero,808864 <_gcvt+0x248>
  808880:	b0000926 	beq	r22,zero,8088a8 <_gcvt+0x28c>
  808884:	0480080e 	bge	zero,r18,8088a8 <_gcvt+0x28c>
  808888:	9009883a 	mov	r4,r18
  80888c:	1805883a 	mov	r2,r3
  808890:	01400c04 	movi	r5,48
  808894:	213fffc4 	addi	r4,r4,-1
  808898:	11400005 	stb	r5,0(r2)
  80889c:	10800044 	addi	r2,r2,1
  8088a0:	203ffc1e 	bne	r4,zero,808894 <_gcvt+0x278>
  8088a4:	1c87883a 	add	r3,r3,r18
  8088a8:	18000005 	stb	zero,0(r3)
  8088ac:	003f7b06 	br	80869c <_gcvt+0x80>
  8088b0:	88e0003c 	xorhi	r3,r17,32768
  8088b4:	1823883a 	mov	r17,r3
  8088b8:	003f6f06 	br	808678 <_gcvt+0x5c>
  8088bc:	9809883a 	mov	r4,r19
  8088c0:	880d883a 	mov	r6,r17
  8088c4:	800b883a 	mov	r5,r16
  8088c8:	01c000c4 	movi	r7,3
  8088cc:	003fa906 	br	808774 <_gcvt+0x158>
  8088d0:	a809883a 	mov	r4,r21
  8088d4:	080c4600 	call	80c460 <strcpy>
  8088d8:	003f7006 	br	80869c <_gcvt+0x80>
  8088dc:	00800c04 	movi	r2,48
  8088e0:	a8c00044 	addi	r3,r21,1
  8088e4:	a8800005 	stb	r2,0(r21)
  8088e8:	003fcb06 	br	808818 <_gcvt+0x1fc>
  8088ec:	a807883a 	mov	r3,r21
  8088f0:	003fba06 	br	8087dc <_gcvt+0x1c0>
  8088f4:	a807883a 	mov	r3,r21
  8088f8:	003fc306 	br	808808 <_gcvt+0x1ec>

008088fc <_dcvt>:
  8088fc:	defff504 	addi	sp,sp,-44
  808900:	d8800d17 	ldw	r2,52(sp)
  808904:	3011883a 	mov	r8,r6
  808908:	dc800915 	stw	r18,36(sp)
  80890c:	10ffeec4 	addi	r3,r2,-69
  808910:	12c03fcc 	andi	r11,r2,255
  808914:	19803fcc 	andi	r6,r3,255
  808918:	5ac0201c 	xori	r11,r11,128
  80891c:	00c00884 	movi	r3,34
  808920:	dc400815 	stw	r17,32(sp)
  808924:	dc000715 	stw	r16,28(sp)
  808928:	dfc00a15 	stw	ra,40(sp)
  80892c:	2015883a 	mov	r10,r4
  808930:	2823883a 	mov	r17,r5
  808934:	3813883a 	mov	r9,r7
  808938:	dc000b17 	ldw	r16,44(sp)
  80893c:	dc800e17 	ldw	r18,56(sp)
  808940:	5affe004 	addi	r11,r11,-128
  808944:	19803436 	bltu	r3,r6,808a18 <_dcvt+0x11c>
  808948:	3185883a 	add	r2,r6,r6
  80894c:	1085883a 	add	r2,r2,r2
  808950:	00c02074 	movhi	r3,129
  808954:	18e25904 	addi	r3,r3,-30364
  808958:	10c5883a 	add	r2,r2,r3
  80895c:	11000017 	ldw	r4,0(r2)
  808960:	2000683a 	jmp	r4
  808964:	00808a34 	movhi	r2,552
  808968:	00808a68 	cmpgeui	r2,zero,553
  80896c:	008089f0 	cmpltui	r2,zero,551
  808970:	00808a18 	cmpnei	r2,zero,552
  808974:	00808a18 	cmpnei	r2,zero,552
  808978:	00808a18 	cmpnei	r2,zero,552
  80897c:	00808a18 	cmpnei	r2,zero,552
  808980:	00808a18 	cmpnei	r2,zero,552
  808984:	00808a18 	cmpnei	r2,zero,552
  808988:	00808a18 	cmpnei	r2,zero,552
  80898c:	00808a18 	cmpnei	r2,zero,552
  808990:	00808a18 	cmpnei	r2,zero,552
  808994:	00808a18 	cmpnei	r2,zero,552
  808998:	00808a18 	cmpnei	r2,zero,552
  80899c:	00808a18 	cmpnei	r2,zero,552
  8089a0:	00808a18 	cmpnei	r2,zero,552
  8089a4:	00808a18 	cmpnei	r2,zero,552
  8089a8:	00808a18 	cmpnei	r2,zero,552
  8089ac:	00808a18 	cmpnei	r2,zero,552
  8089b0:	00808a18 	cmpnei	r2,zero,552
  8089b4:	00808a18 	cmpnei	r2,zero,552
  8089b8:	00808a18 	cmpnei	r2,zero,552
  8089bc:	00808a18 	cmpnei	r2,zero,552
  8089c0:	00808a18 	cmpnei	r2,zero,552
  8089c4:	00808a18 	cmpnei	r2,zero,552
  8089c8:	00808a18 	cmpnei	r2,zero,552
  8089cc:	00808a18 	cmpnei	r2,zero,552
  8089d0:	00808a18 	cmpnei	r2,zero,552
  8089d4:	00808a18 	cmpnei	r2,zero,552
  8089d8:	00808a18 	cmpnei	r2,zero,552
  8089dc:	00808a18 	cmpnei	r2,zero,552
  8089e0:	00808a18 	cmpnei	r2,zero,552
  8089e4:	00808a34 	movhi	r2,552
  8089e8:	00808a68 	cmpgeui	r2,zero,553
  8089ec:	008089f0 	cmpltui	r2,zero,551
  8089f0:	8000011e 	bne	r16,zero,8089f8 <_dcvt+0xfc>
  8089f4:	04000044 	movi	r16,1
  8089f8:	5009883a 	mov	r4,r10
  8089fc:	480d883a 	mov	r6,r9
  808a00:	800f883a 	mov	r7,r16
  808a04:	400b883a 	mov	r5,r8
  808a08:	dac00115 	stw	r11,4(sp)
  808a0c:	dc800215 	stw	r18,8(sp)
  808a10:	dc400015 	stw	r17,0(sp)
  808a14:	080861c0 	call	80861c <_gcvt>
  808a18:	8805883a 	mov	r2,r17
  808a1c:	dfc00a17 	ldw	ra,40(sp)
  808a20:	dc800917 	ldw	r18,36(sp)
  808a24:	dc400817 	ldw	r17,32(sp)
  808a28:	dc000717 	ldw	r16,28(sp)
  808a2c:	dec00b04 	addi	sp,sp,44
  808a30:	f800283a 	ret
  808a34:	5009883a 	mov	r4,r10
  808a38:	400d883a 	mov	r6,r8
  808a3c:	dc000015 	stw	r16,0(sp)
  808a40:	dac00115 	stw	r11,4(sp)
  808a44:	dc800215 	stw	r18,8(sp)
  808a48:	08084180 	call	808418 <print_e>
  808a4c:	8805883a 	mov	r2,r17
  808a50:	dfc00a17 	ldw	ra,40(sp)
  808a54:	dc800917 	ldw	r18,36(sp)
  808a58:	dc400817 	ldw	r17,32(sp)
  808a5c:	dc000717 	ldw	r16,28(sp)
  808a60:	dec00b04 	addi	sp,sp,44
  808a64:	f800283a 	ret
  808a68:	80000126 	beq	r16,zero,808a70 <_dcvt+0x174>
  808a6c:	04800044 	movi	r18,1
  808a70:	d8800504 	addi	r2,sp,20
  808a74:	d8c00604 	addi	r3,sp,24
  808a78:	400b883a 	mov	r5,r8
  808a7c:	d8800215 	stw	r2,8(sp)
  808a80:	5009883a 	mov	r4,r10
  808a84:	d8800404 	addi	r2,sp,16
  808a88:	480d883a 	mov	r6,r9
  808a8c:	01c000c4 	movi	r7,3
  808a90:	d8c00315 	stw	r3,12(sp)
  808a94:	dc000015 	stw	r16,0(sp)
  808a98:	d8800115 	stw	r2,4(sp)
  808a9c:	0806e640 	call	806e64 <_dtoa_r>
  808aa0:	d9400417 	ldw	r5,16(sp)
  808aa4:	1007883a 	mov	r3,r2
  808aa8:	0089c3c4 	movi	r2,9999
  808aac:	28804626 	beq	r5,r2,808bc8 <_dcvt+0x2cc>
  808ab0:	18800003 	ldbu	r2,0(r3)
  808ab4:	10004c26 	beq	r2,zero,808be8 <_dcvt+0x2ec>
  808ab8:	0140120e 	bge	zero,r5,808b04 <_dcvt+0x208>
  808abc:	8809883a 	mov	r4,r17
  808ac0:	180d883a 	mov	r6,r3
  808ac4:	00000106 	br	808acc <_dcvt+0x1d0>
  808ac8:	0140100e 	bge	zero,r5,808b0c <_dcvt+0x210>
  808acc:	20800005 	stb	r2,0(r4)
  808ad0:	297fffc4 	addi	r5,r5,-1
  808ad4:	31800044 	addi	r6,r6,1
  808ad8:	d9400415 	stw	r5,16(sp)
  808adc:	30800003 	ldbu	r2,0(r6)
  808ae0:	21000044 	addi	r4,r4,1
  808ae4:	103ff81e 	bne	r2,zero,808ac8 <_dcvt+0x1cc>
  808ae8:	0140080e 	bge	zero,r5,808b0c <_dcvt+0x210>
  808aec:	00800c04 	movi	r2,48
  808af0:	20800005 	stb	r2,0(r4)
  808af4:	297fffc4 	addi	r5,r5,-1
  808af8:	21000044 	addi	r4,r4,1
  808afc:	d9400415 	stw	r5,16(sp)
  808b00:	003ff906 	br	808ae8 <_dcvt+0x1ec>
  808b04:	8809883a 	mov	r4,r17
  808b08:	180d883a 	mov	r6,r3
  808b0c:	9000021e 	bne	r18,zero,808b18 <_dcvt+0x21c>
  808b10:	30800007 	ldb	r2,0(r6)
  808b14:	10002426 	beq	r2,zero,808ba8 <_dcvt+0x2ac>
  808b18:	19802f26 	beq	r3,r6,808bd8 <_dcvt+0x2dc>
  808b1c:	00800b84 	movi	r2,46
  808b20:	20800005 	stb	r2,0(r4)
  808b24:	21000044 	addi	r4,r4,1
  808b28:	28000b0e 	bge	r5,zero,808b58 <_dcvt+0x25c>
  808b2c:	04000216 	blt	zero,r16,808b38 <_dcvt+0x23c>
  808b30:	00000906 	br	808b58 <_dcvt+0x25c>
  808b34:	80000826 	beq	r16,zero,808b58 <_dcvt+0x25c>
  808b38:	00800c04 	movi	r2,48
  808b3c:	28c00044 	addi	r3,r5,1
  808b40:	20800005 	stb	r2,0(r4)
  808b44:	d8c00415 	stw	r3,16(sp)
  808b48:	21000044 	addi	r4,r4,1
  808b4c:	843fffc4 	addi	r16,r16,-1
  808b50:	180b883a 	mov	r5,r3
  808b54:	183ff716 	blt	r3,zero,808b34 <_dcvt+0x238>
  808b58:	30800003 	ldbu	r2,0(r6)
  808b5c:	10000926 	beq	r2,zero,808b84 <_dcvt+0x288>
  808b60:	04000216 	blt	zero,r16,808b6c <_dcvt+0x270>
  808b64:	00001006 	br	808ba8 <_dcvt+0x2ac>
  808b68:	80000f26 	beq	r16,zero,808ba8 <_dcvt+0x2ac>
  808b6c:	20800005 	stb	r2,0(r4)
  808b70:	31800044 	addi	r6,r6,1
  808b74:	30800003 	ldbu	r2,0(r6)
  808b78:	21000044 	addi	r4,r4,1
  808b7c:	843fffc4 	addi	r16,r16,-1
  808b80:	103ff91e 	bne	r2,zero,808b68 <_dcvt+0x26c>
  808b84:	0400080e 	bge	zero,r16,808ba8 <_dcvt+0x2ac>
  808b88:	2007883a 	mov	r3,r4
  808b8c:	8005883a 	mov	r2,r16
  808b90:	01400c04 	movi	r5,48
  808b94:	10bfffc4 	addi	r2,r2,-1
  808b98:	19400005 	stb	r5,0(r3)
  808b9c:	18c00044 	addi	r3,r3,1
  808ba0:	103ffc1e 	bne	r2,zero,808b94 <_dcvt+0x298>
  808ba4:	2409883a 	add	r4,r4,r16
  808ba8:	8805883a 	mov	r2,r17
  808bac:	20000005 	stb	zero,0(r4)
  808bb0:	dfc00a17 	ldw	ra,40(sp)
  808bb4:	dc800917 	ldw	r18,36(sp)
  808bb8:	dc400817 	ldw	r17,32(sp)
  808bbc:	dc000717 	ldw	r16,28(sp)
  808bc0:	dec00b04 	addi	sp,sp,44
  808bc4:	f800283a 	ret
  808bc8:	180b883a 	mov	r5,r3
  808bcc:	8809883a 	mov	r4,r17
  808bd0:	080c4600 	call	80c460 <strcpy>
  808bd4:	003f9006 	br	808a18 <_dcvt+0x11c>
  808bd8:	00800c04 	movi	r2,48
  808bdc:	20800005 	stb	r2,0(r4)
  808be0:	21000044 	addi	r4,r4,1
  808be4:	003fcd06 	br	808b1c <_dcvt+0x220>
  808be8:	8809883a 	mov	r4,r17
  808bec:	180d883a 	mov	r6,r3
  808bf0:	003fbd06 	br	808ae8 <_dcvt+0x1ec>

00808bf4 <ecvtbuf>:
  808bf4:	defff404 	addi	sp,sp,-48
  808bf8:	dc800715 	stw	r18,28(sp)
  808bfc:	dc800d17 	ldw	r18,52(sp)
  808c00:	dd000915 	stw	r20,36(sp)
  808c04:	dcc00815 	stw	r19,32(sp)
  808c08:	dc400615 	stw	r17,24(sp)
  808c0c:	dc000515 	stw	r16,20(sp)
  808c10:	dfc00b15 	stw	ra,44(sp)
  808c14:	dd400a15 	stw	r21,40(sp)
  808c18:	2021883a 	mov	r16,r4
  808c1c:	2823883a 	mov	r17,r5
  808c20:	3027883a 	mov	r19,r6
  808c24:	3829883a 	mov	r20,r7
  808c28:	90002d26 	beq	r18,zero,808ce0 <ecvtbuf+0xec>
  808c2c:	05402074 	movhi	r21,129
  808c30:	ad49a304 	addi	r21,r21,9868
  808c34:	d8800c17 	ldw	r2,48(sp)
  808c38:	a9000017 	ldw	r4,0(r21)
  808c3c:	880d883a 	mov	r6,r17
  808c40:	d8800215 	stw	r2,8(sp)
  808c44:	800b883a 	mov	r5,r16
  808c48:	d8800404 	addi	r2,sp,16
  808c4c:	01c00084 	movi	r7,2
  808c50:	dd000115 	stw	r20,4(sp)
  808c54:	dcc00015 	stw	r19,0(sp)
  808c58:	d8800315 	stw	r2,12(sp)
  808c5c:	0806e640 	call	806e64 <_dtoa_r>
  808c60:	1007883a 	mov	r3,r2
  808c64:	d8800417 	ldw	r2,16(sp)
  808c68:	1880252e 	bgeu	r3,r2,808d00 <ecvtbuf+0x10c>
  808c6c:	900d883a 	mov	r6,r18
  808c70:	0009883a 	mov	r4,zero
  808c74:	18800003 	ldbu	r2,0(r3)
  808c78:	18c00044 	addi	r3,r3,1
  808c7c:	21000044 	addi	r4,r4,1
  808c80:	30800005 	stb	r2,0(r6)
  808c84:	d8800417 	ldw	r2,16(sp)
  808c88:	31800044 	addi	r6,r6,1
  808c8c:	18bff936 	bltu	r3,r2,808c74 <ecvtbuf+0x80>
  808c90:	24c0080e 	bge	r4,r19,808cb4 <ecvtbuf+0xc0>
  808c94:	9905c83a 	sub	r2,r19,r4
  808c98:	3007883a 	mov	r3,r6
  808c9c:	1185883a 	add	r2,r2,r6
  808ca0:	01000c04 	movi	r4,48
  808ca4:	19000005 	stb	r4,0(r3)
  808ca8:	18c00044 	addi	r3,r3,1
  808cac:	10fffd1e 	bne	r2,r3,808ca4 <ecvtbuf+0xb0>
  808cb0:	100d883a 	mov	r6,r2
  808cb4:	30000005 	stb	zero,0(r6)
  808cb8:	9005883a 	mov	r2,r18
  808cbc:	dfc00b17 	ldw	ra,44(sp)
  808cc0:	dd400a17 	ldw	r21,40(sp)
  808cc4:	dd000917 	ldw	r20,36(sp)
  808cc8:	dcc00817 	ldw	r19,32(sp)
  808ccc:	dc800717 	ldw	r18,28(sp)
  808cd0:	dc400617 	ldw	r17,24(sp)
  808cd4:	dc000517 	ldw	r16,20(sp)
  808cd8:	dec00c04 	addi	sp,sp,48
  808cdc:	f800283a 	ret
  808ce0:	05402074 	movhi	r21,129
  808ce4:	ad49a304 	addi	r21,r21,9868
  808ce8:	a9000017 	ldw	r4,0(r21)
  808cec:	20801417 	ldw	r2,80(r4)
  808cf0:	3080060e 	bge	r6,r2,808d0c <ecvtbuf+0x118>
  808cf4:	a8800017 	ldw	r2,0(r21)
  808cf8:	14801517 	ldw	r18,84(r2)
  808cfc:	003fcd06 	br	808c34 <ecvtbuf+0x40>
  808d00:	900d883a 	mov	r6,r18
  808d04:	0009883a 	mov	r4,zero
  808d08:	003fe106 	br	808c90 <ecvtbuf+0x9c>
  808d0c:	21401517 	ldw	r5,84(r4)
  808d10:	34800044 	addi	r18,r6,1
  808d14:	900d883a 	mov	r6,r18
  808d18:	080bb840 	call	80bb84 <_realloc_r>
  808d1c:	1007883a 	mov	r3,r2
  808d20:	10000426 	beq	r2,zero,808d34 <ecvtbuf+0x140>
  808d24:	a8800017 	ldw	r2,0(r21)
  808d28:	10c01515 	stw	r3,84(r2)
  808d2c:	14801415 	stw	r18,80(r2)
  808d30:	003ff006 	br	808cf4 <ecvtbuf+0x100>
  808d34:	0005883a 	mov	r2,zero
  808d38:	003fe006 	br	808cbc <ecvtbuf+0xc8>

00808d3c <fcvtbuf>:
  808d3c:	defff304 	addi	sp,sp,-52
  808d40:	dc800715 	stw	r18,28(sp)
  808d44:	dc800e17 	ldw	r18,56(sp)
  808d48:	dd800b15 	stw	r22,44(sp)
  808d4c:	dd000915 	stw	r20,36(sp)
  808d50:	dcc00815 	stw	r19,32(sp)
  808d54:	dc400615 	stw	r17,24(sp)
  808d58:	dc000515 	stw	r16,20(sp)
  808d5c:	dfc00c15 	stw	ra,48(sp)
  808d60:	dd400a15 	stw	r21,40(sp)
  808d64:	2021883a 	mov	r16,r4
  808d68:	2823883a 	mov	r17,r5
  808d6c:	3027883a 	mov	r19,r6
  808d70:	3829883a 	mov	r20,r7
  808d74:	dd800d17 	ldw	r22,52(sp)
  808d78:	90004326 	beq	r18,zero,808e88 <fcvtbuf+0x14c>
  808d7c:	05402074 	movhi	r21,129
  808d80:	ad49a304 	addi	r21,r21,9868
  808d84:	0005883a 	mov	r2,zero
  808d88:	00cffc34 	movhi	r3,16368
  808d8c:	180f883a 	mov	r7,r3
  808d90:	8009883a 	mov	r4,r16
  808d94:	880b883a 	mov	r5,r17
  808d98:	100d883a 	mov	r6,r2
  808d9c:	080d9400 	call	80d940 <__ltdf2>
  808da0:	1000080e 	bge	r2,zero,808dc4 <fcvtbuf+0x88>
  808da4:	0005883a 	mov	r2,zero
  808da8:	00effc34 	movhi	r3,49136
  808dac:	180f883a 	mov	r7,r3
  808db0:	8009883a 	mov	r4,r16
  808db4:	880b883a 	mov	r5,r17
  808db8:	100d883a 	mov	r6,r2
  808dbc:	08038580 	call	803858 <__gtdf2>
  808dc0:	00802c16 	blt	zero,r2,808e74 <fcvtbuf+0x138>
  808dc4:	a9000017 	ldw	r4,0(r21)
  808dc8:	880d883a 	mov	r6,r17
  808dcc:	800b883a 	mov	r5,r16
  808dd0:	01c000c4 	movi	r7,3
  808dd4:	d8800404 	addi	r2,sp,16
  808dd8:	dd800215 	stw	r22,8(sp)
  808ddc:	dcc00015 	stw	r19,0(sp)
  808de0:	dd000115 	stw	r20,4(sp)
  808de4:	d8800315 	stw	r2,12(sp)
  808de8:	0806e640 	call	806e64 <_dtoa_r>
  808dec:	1009883a 	mov	r4,r2
  808df0:	d8c00417 	ldw	r3,16(sp)
  808df4:	a0800017 	ldw	r2,0(r20)
  808df8:	008dc83a 	sub	r6,zero,r2
  808dfc:	20c02b2e 	bgeu	r4,r3,808eac <fcvtbuf+0x170>
  808e00:	9007883a 	mov	r3,r18
  808e04:	20800003 	ldbu	r2,0(r4)
  808e08:	21000044 	addi	r4,r4,1
  808e0c:	31800044 	addi	r6,r6,1
  808e10:	18800005 	stb	r2,0(r3)
  808e14:	d8800417 	ldw	r2,16(sp)
  808e18:	18c00044 	addi	r3,r3,1
  808e1c:	20bff936 	bltu	r4,r2,808e04 <fcvtbuf+0xc8>
  808e20:	34c0080e 	bge	r6,r19,808e44 <fcvtbuf+0x108>
  808e24:	9985c83a 	sub	r2,r19,r6
  808e28:	1809883a 	mov	r4,r3
  808e2c:	10c5883a 	add	r2,r2,r3
  808e30:	00c00c04 	movi	r3,48
  808e34:	20c00005 	stb	r3,0(r4)
  808e38:	21000044 	addi	r4,r4,1
  808e3c:	113ffd1e 	bne	r2,r4,808e34 <fcvtbuf+0xf8>
  808e40:	1007883a 	mov	r3,r2
  808e44:	18000005 	stb	zero,0(r3)
  808e48:	9005883a 	mov	r2,r18
  808e4c:	dfc00c17 	ldw	ra,48(sp)
  808e50:	dd800b17 	ldw	r22,44(sp)
  808e54:	dd400a17 	ldw	r21,40(sp)
  808e58:	dd000917 	ldw	r20,36(sp)
  808e5c:	dcc00817 	ldw	r19,32(sp)
  808e60:	dc800717 	ldw	r18,28(sp)
  808e64:	dc400617 	ldw	r17,24(sp)
  808e68:	dc000517 	ldw	r16,20(sp)
  808e6c:	dec00d04 	addi	sp,sp,52
  808e70:	f800283a 	ret
  808e74:	a9000017 	ldw	r4,0(r21)
  808e78:	880d883a 	mov	r6,r17
  808e7c:	800b883a 	mov	r5,r16
  808e80:	01c00084 	movi	r7,2
  808e84:	003fd306 	br	808dd4 <fcvtbuf+0x98>
  808e88:	05402074 	movhi	r21,129
  808e8c:	ad49a304 	addi	r21,r21,9868
  808e90:	a9000017 	ldw	r4,0(r21)
  808e94:	30c008c4 	addi	r3,r6,35
  808e98:	20801417 	ldw	r2,80(r4)
  808e9c:	1880050e 	bge	r3,r2,808eb4 <fcvtbuf+0x178>
  808ea0:	a8800017 	ldw	r2,0(r21)
  808ea4:	14801517 	ldw	r18,84(r2)
  808ea8:	003fb606 	br	808d84 <fcvtbuf+0x48>
  808eac:	9007883a 	mov	r3,r18
  808eb0:	003fdb06 	br	808e20 <fcvtbuf+0xe4>
  808eb4:	21401517 	ldw	r5,84(r4)
  808eb8:	34800904 	addi	r18,r6,36
  808ebc:	900d883a 	mov	r6,r18
  808ec0:	080bb840 	call	80bb84 <_realloc_r>
  808ec4:	1007883a 	mov	r3,r2
  808ec8:	10000426 	beq	r2,zero,808edc <fcvtbuf+0x1a0>
  808ecc:	a8800017 	ldw	r2,0(r21)
  808ed0:	10c01515 	stw	r3,84(r2)
  808ed4:	14801415 	stw	r18,80(r2)
  808ed8:	003ff106 	br	808ea0 <fcvtbuf+0x164>
  808edc:	0005883a 	mov	r2,zero
  808ee0:	003fda06 	br	808e4c <fcvtbuf+0x110>

00808ee4 <_fflush_r>:
  808ee4:	defffb04 	addi	sp,sp,-20
  808ee8:	dcc00315 	stw	r19,12(sp)
  808eec:	dc800215 	stw	r18,8(sp)
  808ef0:	dfc00415 	stw	ra,16(sp)
  808ef4:	dc400115 	stw	r17,4(sp)
  808ef8:	dc000015 	stw	r16,0(sp)
  808efc:	2027883a 	mov	r19,r4
  808f00:	2825883a 	mov	r18,r5
  808f04:	20000226 	beq	r4,zero,808f10 <_fflush_r+0x2c>
  808f08:	20800e17 	ldw	r2,56(r4)
  808f0c:	10005626 	beq	r2,zero,809068 <_fflush_r+0x184>
  808f10:	9100030b 	ldhu	r4,12(r18)
  808f14:	20ffffcc 	andi	r3,r4,65535
  808f18:	18e0001c 	xori	r3,r3,32768
  808f1c:	18e00004 	addi	r3,r3,-32768
  808f20:	1880020c 	andi	r2,r3,8
  808f24:	1000261e 	bne	r2,zero,808fc0 <_fflush_r+0xdc>
  808f28:	90c00117 	ldw	r3,4(r18)
  808f2c:	20820014 	ori	r2,r4,2048
  808f30:	9080030d 	sth	r2,12(r18)
  808f34:	1009883a 	mov	r4,r2
  808f38:	00c0400e 	bge	zero,r3,80903c <_fflush_r+0x158>
  808f3c:	92000a17 	ldw	r8,40(r18)
  808f40:	40004026 	beq	r8,zero,809044 <_fflush_r+0x160>
  808f44:	2084000c 	andi	r2,r4,4096
  808f48:	10005326 	beq	r2,zero,809098 <_fflush_r+0x1b4>
  808f4c:	94001417 	ldw	r16,80(r18)
  808f50:	9080030b 	ldhu	r2,12(r18)
  808f54:	1080010c 	andi	r2,r2,4
  808f58:	1000481e 	bne	r2,zero,80907c <_fflush_r+0x198>
  808f5c:	91400717 	ldw	r5,28(r18)
  808f60:	9809883a 	mov	r4,r19
  808f64:	800d883a 	mov	r6,r16
  808f68:	000f883a 	mov	r7,zero
  808f6c:	403ee83a 	callr	r8
  808f70:	8080261e 	bne	r16,r2,80900c <_fflush_r+0x128>
  808f74:	9080030b 	ldhu	r2,12(r18)
  808f78:	91000417 	ldw	r4,16(r18)
  808f7c:	90000115 	stw	zero,4(r18)
  808f80:	10bdffcc 	andi	r2,r2,63487
  808f84:	10ffffcc 	andi	r3,r2,65535
  808f88:	18c4000c 	andi	r3,r3,4096
  808f8c:	9080030d 	sth	r2,12(r18)
  808f90:	91000015 	stw	r4,0(r18)
  808f94:	18002b26 	beq	r3,zero,809044 <_fflush_r+0x160>
  808f98:	0007883a 	mov	r3,zero
  808f9c:	1805883a 	mov	r2,r3
  808fa0:	94001415 	stw	r16,80(r18)
  808fa4:	dfc00417 	ldw	ra,16(sp)
  808fa8:	dcc00317 	ldw	r19,12(sp)
  808fac:	dc800217 	ldw	r18,8(sp)
  808fb0:	dc400117 	ldw	r17,4(sp)
  808fb4:	dc000017 	ldw	r16,0(sp)
  808fb8:	dec00504 	addi	sp,sp,20
  808fbc:	f800283a 	ret
  808fc0:	94400417 	ldw	r17,16(r18)
  808fc4:	88001f26 	beq	r17,zero,809044 <_fflush_r+0x160>
  808fc8:	90800017 	ldw	r2,0(r18)
  808fcc:	18c000cc 	andi	r3,r3,3
  808fd0:	94400015 	stw	r17,0(r18)
  808fd4:	1461c83a 	sub	r16,r2,r17
  808fd8:	18002526 	beq	r3,zero,809070 <_fflush_r+0x18c>
  808fdc:	0005883a 	mov	r2,zero
  808fe0:	90800215 	stw	r2,8(r18)
  808fe4:	0400170e 	bge	zero,r16,809044 <_fflush_r+0x160>
  808fe8:	90c00917 	ldw	r3,36(r18)
  808fec:	91400717 	ldw	r5,28(r18)
  808ff0:	880d883a 	mov	r6,r17
  808ff4:	800f883a 	mov	r7,r16
  808ff8:	9809883a 	mov	r4,r19
  808ffc:	183ee83a 	callr	r3
  809000:	88a3883a 	add	r17,r17,r2
  809004:	80a1c83a 	sub	r16,r16,r2
  809008:	00bff616 	blt	zero,r2,808fe4 <_fflush_r+0x100>
  80900c:	9080030b 	ldhu	r2,12(r18)
  809010:	00ffffc4 	movi	r3,-1
  809014:	10801014 	ori	r2,r2,64
  809018:	9080030d 	sth	r2,12(r18)
  80901c:	1805883a 	mov	r2,r3
  809020:	dfc00417 	ldw	ra,16(sp)
  809024:	dcc00317 	ldw	r19,12(sp)
  809028:	dc800217 	ldw	r18,8(sp)
  80902c:	dc400117 	ldw	r17,4(sp)
  809030:	dc000017 	ldw	r16,0(sp)
  809034:	dec00504 	addi	sp,sp,20
  809038:	f800283a 	ret
  80903c:	90800f17 	ldw	r2,60(r18)
  809040:	00bfbe16 	blt	zero,r2,808f3c <_fflush_r+0x58>
  809044:	0007883a 	mov	r3,zero
  809048:	1805883a 	mov	r2,r3
  80904c:	dfc00417 	ldw	ra,16(sp)
  809050:	dcc00317 	ldw	r19,12(sp)
  809054:	dc800217 	ldw	r18,8(sp)
  809058:	dc400117 	ldw	r17,4(sp)
  80905c:	dc000017 	ldw	r16,0(sp)
  809060:	dec00504 	addi	sp,sp,20
  809064:	f800283a 	ret
  809068:	080917c0 	call	80917c <__sinit>
  80906c:	003fa806 	br	808f10 <_fflush_r+0x2c>
  809070:	90800517 	ldw	r2,20(r18)
  809074:	90800215 	stw	r2,8(r18)
  809078:	003fda06 	br	808fe4 <_fflush_r+0x100>
  80907c:	90800117 	ldw	r2,4(r18)
  809080:	90c00c17 	ldw	r3,48(r18)
  809084:	80a1c83a 	sub	r16,r16,r2
  809088:	183fb426 	beq	r3,zero,808f5c <_fflush_r+0x78>
  80908c:	90800f17 	ldw	r2,60(r18)
  809090:	80a1c83a 	sub	r16,r16,r2
  809094:	003fb106 	br	808f5c <_fflush_r+0x78>
  809098:	91400717 	ldw	r5,28(r18)
  80909c:	9809883a 	mov	r4,r19
  8090a0:	000d883a 	mov	r6,zero
  8090a4:	01c00044 	movi	r7,1
  8090a8:	403ee83a 	callr	r8
  8090ac:	1021883a 	mov	r16,r2
  8090b0:	00bfffc4 	movi	r2,-1
  8090b4:	80800226 	beq	r16,r2,8090c0 <_fflush_r+0x1dc>
  8090b8:	92000a17 	ldw	r8,40(r18)
  8090bc:	003fa406 	br	808f50 <_fflush_r+0x6c>
  8090c0:	98c00017 	ldw	r3,0(r19)
  8090c4:	00800744 	movi	r2,29
  8090c8:	18bfde26 	beq	r3,r2,809044 <_fflush_r+0x160>
  8090cc:	9080030b 	ldhu	r2,12(r18)
  8090d0:	8007883a 	mov	r3,r16
  8090d4:	10801014 	ori	r2,r2,64
  8090d8:	9080030d 	sth	r2,12(r18)
  8090dc:	003fcf06 	br	80901c <_fflush_r+0x138>

008090e0 <fflush>:
  8090e0:	01402074 	movhi	r5,129
  8090e4:	2963b904 	addi	r5,r5,-28956
  8090e8:	2007883a 	mov	r3,r4
  8090ec:	20000526 	beq	r4,zero,809104 <fflush+0x24>
  8090f0:	00802074 	movhi	r2,129
  8090f4:	1089a304 	addi	r2,r2,9868
  8090f8:	11000017 	ldw	r4,0(r2)
  8090fc:	180b883a 	mov	r5,r3
  809100:	0808ee41 	jmpi	808ee4 <_fflush_r>
  809104:	00802074 	movhi	r2,129
  809108:	1089a404 	addi	r2,r2,9872
  80910c:	11000017 	ldw	r4,0(r2)
  809110:	0809ce41 	jmpi	809ce4 <_fwalk_reent>

00809114 <std>:
  809114:	00802074 	movhi	r2,129
  809118:	10b09604 	addi	r2,r2,-15784
  80911c:	20800b15 	stw	r2,44(r4)
  809120:	00802074 	movhi	r2,129
  809124:	10b0d104 	addi	r2,r2,-15548
  809128:	20800815 	stw	r2,32(r4)
  80912c:	00c02074 	movhi	r3,129
  809130:	18f0b204 	addi	r3,r3,-15672
  809134:	00802074 	movhi	r2,129
  809138:	10b09804 	addi	r2,r2,-15776
  80913c:	2140030d 	sth	r5,12(r4)
  809140:	2180038d 	sth	r6,14(r4)
  809144:	20c00915 	stw	r3,36(r4)
  809148:	20800a15 	stw	r2,40(r4)
  80914c:	20000015 	stw	zero,0(r4)
  809150:	20000115 	stw	zero,4(r4)
  809154:	20000215 	stw	zero,8(r4)
  809158:	20000415 	stw	zero,16(r4)
  80915c:	20000515 	stw	zero,20(r4)
  809160:	20000615 	stw	zero,24(r4)
  809164:	21000715 	stw	r4,28(r4)
  809168:	f800283a 	ret

0080916c <__sfp_lock_acquire>:
  80916c:	f800283a 	ret

00809170 <__sfp_lock_release>:
  809170:	f800283a 	ret

00809174 <__sinit_lock_acquire>:
  809174:	f800283a 	ret

00809178 <__sinit_lock_release>:
  809178:	f800283a 	ret

0080917c <__sinit>:
  80917c:	20800e17 	ldw	r2,56(r4)
  809180:	defffd04 	addi	sp,sp,-12
  809184:	dc400115 	stw	r17,4(sp)
  809188:	dc000015 	stw	r16,0(sp)
  80918c:	dfc00215 	stw	ra,8(sp)
  809190:	04400044 	movi	r17,1
  809194:	01400104 	movi	r5,4
  809198:	000d883a 	mov	r6,zero
  80919c:	2021883a 	mov	r16,r4
  8091a0:	2200bb04 	addi	r8,r4,748
  8091a4:	200f883a 	mov	r7,r4
  8091a8:	10000526 	beq	r2,zero,8091c0 <__sinit+0x44>
  8091ac:	dfc00217 	ldw	ra,8(sp)
  8091b0:	dc400117 	ldw	r17,4(sp)
  8091b4:	dc000017 	ldw	r16,0(sp)
  8091b8:	dec00304 	addi	sp,sp,12
  8091bc:	f800283a 	ret
  8091c0:	21000117 	ldw	r4,4(r4)
  8091c4:	00802074 	movhi	r2,129
  8091c8:	10a49804 	addi	r2,r2,-28064
  8091cc:	00c000c4 	movi	r3,3
  8091d0:	80800f15 	stw	r2,60(r16)
  8091d4:	80c0b915 	stw	r3,740(r16)
  8091d8:	8200ba15 	stw	r8,744(r16)
  8091dc:	84400e15 	stw	r17,56(r16)
  8091e0:	8000b815 	stw	zero,736(r16)
  8091e4:	08091140 	call	809114 <std>
  8091e8:	81000217 	ldw	r4,8(r16)
  8091ec:	880d883a 	mov	r6,r17
  8091f0:	800f883a 	mov	r7,r16
  8091f4:	01400284 	movi	r5,10
  8091f8:	08091140 	call	809114 <std>
  8091fc:	81000317 	ldw	r4,12(r16)
  809200:	800f883a 	mov	r7,r16
  809204:	01400484 	movi	r5,18
  809208:	01800084 	movi	r6,2
  80920c:	dfc00217 	ldw	ra,8(sp)
  809210:	dc400117 	ldw	r17,4(sp)
  809214:	dc000017 	ldw	r16,0(sp)
  809218:	dec00304 	addi	sp,sp,12
  80921c:	08091141 	jmpi	809114 <std>

00809220 <__fp_lock>:
  809220:	0005883a 	mov	r2,zero
  809224:	f800283a 	ret

00809228 <__fp_unlock>:
  809228:	0005883a 	mov	r2,zero
  80922c:	f800283a 	ret

00809230 <__fp_unlock_all>:
  809230:	00802074 	movhi	r2,129
  809234:	1089a304 	addi	r2,r2,9868
  809238:	11000017 	ldw	r4,0(r2)
  80923c:	01402074 	movhi	r5,129
  809240:	29648a04 	addi	r5,r5,-28120
  809244:	0809dac1 	jmpi	809dac <_fwalk>

00809248 <__fp_lock_all>:
  809248:	00802074 	movhi	r2,129
  80924c:	1089a304 	addi	r2,r2,9868
  809250:	11000017 	ldw	r4,0(r2)
  809254:	01402074 	movhi	r5,129
  809258:	29648804 	addi	r5,r5,-28128
  80925c:	0809dac1 	jmpi	809dac <_fwalk>

00809260 <_cleanup_r>:
  809260:	01402074 	movhi	r5,129
  809264:	2971eb04 	addi	r5,r5,-14420
  809268:	0809dac1 	jmpi	809dac <_fwalk>

0080926c <_cleanup>:
  80926c:	00802074 	movhi	r2,129
  809270:	1089a404 	addi	r2,r2,9872
  809274:	11000017 	ldw	r4,0(r2)
  809278:	08092601 	jmpi	809260 <_cleanup_r>

0080927c <__sfmoreglue>:
  80927c:	defffc04 	addi	sp,sp,-16
  809280:	dc000015 	stw	r16,0(sp)
  809284:	2821883a 	mov	r16,r5
  809288:	dc400115 	stw	r17,4(sp)
  80928c:	01401704 	movi	r5,92
  809290:	2023883a 	mov	r17,r4
  809294:	8009883a 	mov	r4,r16
  809298:	dfc00315 	stw	ra,12(sp)
  80929c:	dcc00215 	stw	r19,8(sp)
  8092a0:	0803ec40 	call	803ec4 <__mulsi3>
  8092a4:	11400304 	addi	r5,r2,12
  8092a8:	8809883a 	mov	r4,r17
  8092ac:	1027883a 	mov	r19,r2
  8092b0:	080a0bc0 	call	80a0bc <_malloc_r>
  8092b4:	10c00304 	addi	r3,r2,12
  8092b8:	1023883a 	mov	r17,r2
  8092bc:	1809883a 	mov	r4,r3
  8092c0:	980d883a 	mov	r6,r19
  8092c4:	000b883a 	mov	r5,zero
  8092c8:	10000b26 	beq	r2,zero,8092f8 <__sfmoreglue+0x7c>
  8092cc:	14000115 	stw	r16,4(r2)
  8092d0:	10c00215 	stw	r3,8(r2)
  8092d4:	10000015 	stw	zero,0(r2)
  8092d8:	080aa600 	call	80aa60 <memset>
  8092dc:	8805883a 	mov	r2,r17
  8092e0:	dfc00317 	ldw	ra,12(sp)
  8092e4:	dcc00217 	ldw	r19,8(sp)
  8092e8:	dc400117 	ldw	r17,4(sp)
  8092ec:	dc000017 	ldw	r16,0(sp)
  8092f0:	dec00404 	addi	sp,sp,16
  8092f4:	f800283a 	ret
  8092f8:	0023883a 	mov	r17,zero
  8092fc:	8805883a 	mov	r2,r17
  809300:	dfc00317 	ldw	ra,12(sp)
  809304:	dcc00217 	ldw	r19,8(sp)
  809308:	dc400117 	ldw	r17,4(sp)
  80930c:	dc000017 	ldw	r16,0(sp)
  809310:	dec00404 	addi	sp,sp,16
  809314:	f800283a 	ret

00809318 <__sfp>:
  809318:	defffd04 	addi	sp,sp,-12
  80931c:	00802074 	movhi	r2,129
  809320:	1089a404 	addi	r2,r2,9872
  809324:	dc000015 	stw	r16,0(sp)
  809328:	14000017 	ldw	r16,0(r2)
  80932c:	dc400115 	stw	r17,4(sp)
  809330:	dfc00215 	stw	ra,8(sp)
  809334:	80800e17 	ldw	r2,56(r16)
  809338:	2023883a 	mov	r17,r4
  80933c:	10002626 	beq	r2,zero,8093d8 <__sfp+0xc0>
  809340:	8400b804 	addi	r16,r16,736
  809344:	80800117 	ldw	r2,4(r16)
  809348:	81000217 	ldw	r4,8(r16)
  80934c:	10ffffc4 	addi	r3,r2,-1
  809350:	18000916 	blt	r3,zero,809378 <__sfp+0x60>
  809354:	2080030f 	ldh	r2,12(r4)
  809358:	10000b26 	beq	r2,zero,809388 <__sfp+0x70>
  80935c:	017fffc4 	movi	r5,-1
  809360:	00000206 	br	80936c <__sfp+0x54>
  809364:	2080030f 	ldh	r2,12(r4)
  809368:	10000726 	beq	r2,zero,809388 <__sfp+0x70>
  80936c:	18ffffc4 	addi	r3,r3,-1
  809370:	21001704 	addi	r4,r4,92
  809374:	197ffb1e 	bne	r3,r5,809364 <__sfp+0x4c>
  809378:	80800017 	ldw	r2,0(r16)
  80937c:	10001926 	beq	r2,zero,8093e4 <__sfp+0xcc>
  809380:	1021883a 	mov	r16,r2
  809384:	003fef06 	br	809344 <__sfp+0x2c>
  809388:	00bfffc4 	movi	r2,-1
  80938c:	00c00044 	movi	r3,1
  809390:	2080038d 	sth	r2,14(r4)
  809394:	20c0030d 	sth	r3,12(r4)
  809398:	20000015 	stw	zero,0(r4)
  80939c:	20000215 	stw	zero,8(r4)
  8093a0:	20000115 	stw	zero,4(r4)
  8093a4:	20000415 	stw	zero,16(r4)
  8093a8:	20000515 	stw	zero,20(r4)
  8093ac:	20000615 	stw	zero,24(r4)
  8093b0:	20000c15 	stw	zero,48(r4)
  8093b4:	20000d15 	stw	zero,52(r4)
  8093b8:	20001115 	stw	zero,68(r4)
  8093bc:	20001215 	stw	zero,72(r4)
  8093c0:	2005883a 	mov	r2,r4
  8093c4:	dfc00217 	ldw	ra,8(sp)
  8093c8:	dc400117 	ldw	r17,4(sp)
  8093cc:	dc000017 	ldw	r16,0(sp)
  8093d0:	dec00304 	addi	sp,sp,12
  8093d4:	f800283a 	ret
  8093d8:	8009883a 	mov	r4,r16
  8093dc:	080917c0 	call	80917c <__sinit>
  8093e0:	003fd706 	br	809340 <__sfp+0x28>
  8093e4:	8809883a 	mov	r4,r17
  8093e8:	01400104 	movi	r5,4
  8093ec:	080927c0 	call	80927c <__sfmoreglue>
  8093f0:	80800015 	stw	r2,0(r16)
  8093f4:	103fe21e 	bne	r2,zero,809380 <__sfp+0x68>
  8093f8:	00800304 	movi	r2,12
  8093fc:	0009883a 	mov	r4,zero
  809400:	88800015 	stw	r2,0(r17)
  809404:	003fee06 	br	8093c0 <__sfp+0xa8>

00809408 <_malloc_trim_r>:
  809408:	defffb04 	addi	sp,sp,-20
  80940c:	dcc00315 	stw	r19,12(sp)
  809410:	04c02074 	movhi	r19,129
  809414:	9cc41f04 	addi	r19,r19,4220
  809418:	dc800215 	stw	r18,8(sp)
  80941c:	dc400115 	stw	r17,4(sp)
  809420:	dc000015 	stw	r16,0(sp)
  809424:	2823883a 	mov	r17,r5
  809428:	2025883a 	mov	r18,r4
  80942c:	dfc00415 	stw	ra,16(sp)
  809430:	080e0e40 	call	80e0e4 <__malloc_lock>
  809434:	98800217 	ldw	r2,8(r19)
  809438:	9009883a 	mov	r4,r18
  80943c:	000b883a 	mov	r5,zero
  809440:	10c00117 	ldw	r3,4(r2)
  809444:	00bfff04 	movi	r2,-4
  809448:	18a0703a 	and	r16,r3,r2
  80944c:	8463c83a 	sub	r17,r16,r17
  809450:	8c43fbc4 	addi	r17,r17,4079
  809454:	8822d33a 	srli	r17,r17,12
  809458:	0083ffc4 	movi	r2,4095
  80945c:	8c7fffc4 	addi	r17,r17,-1
  809460:	8822933a 	slli	r17,r17,12
  809464:	1440060e 	bge	r2,r17,809480 <_malloc_trim_r+0x78>
  809468:	080c1e80 	call	80c1e8 <_sbrk_r>
  80946c:	98c00217 	ldw	r3,8(r19)
  809470:	9009883a 	mov	r4,r18
  809474:	044bc83a 	sub	r5,zero,r17
  809478:	80c7883a 	add	r3,r16,r3
  80947c:	10c00926 	beq	r2,r3,8094a4 <_malloc_trim_r+0x9c>
  809480:	080e1040 	call	80e104 <__malloc_unlock>
  809484:	0005883a 	mov	r2,zero
  809488:	dfc00417 	ldw	ra,16(sp)
  80948c:	dcc00317 	ldw	r19,12(sp)
  809490:	dc800217 	ldw	r18,8(sp)
  809494:	dc400117 	ldw	r17,4(sp)
  809498:	dc000017 	ldw	r16,0(sp)
  80949c:	dec00504 	addi	sp,sp,20
  8094a0:	f800283a 	ret
  8094a4:	9009883a 	mov	r4,r18
  8094a8:	080c1e80 	call	80c1e8 <_sbrk_r>
  8094ac:	844dc83a 	sub	r6,r16,r17
  8094b0:	00ffffc4 	movi	r3,-1
  8094b4:	9009883a 	mov	r4,r18
  8094b8:	000b883a 	mov	r5,zero
  8094bc:	01c02074 	movhi	r7,129
  8094c0:	39d05704 	addi	r7,r7,16732
  8094c4:	31800054 	ori	r6,r6,1
  8094c8:	10c00926 	beq	r2,r3,8094f0 <_malloc_trim_r+0xe8>
  8094cc:	38800017 	ldw	r2,0(r7)
  8094d0:	98c00217 	ldw	r3,8(r19)
  8094d4:	9009883a 	mov	r4,r18
  8094d8:	1445c83a 	sub	r2,r2,r17
  8094dc:	38800015 	stw	r2,0(r7)
  8094e0:	19800115 	stw	r6,4(r3)
  8094e4:	080e1040 	call	80e104 <__malloc_unlock>
  8094e8:	00800044 	movi	r2,1
  8094ec:	003fe606 	br	809488 <_malloc_trim_r+0x80>
  8094f0:	080c1e80 	call	80c1e8 <_sbrk_r>
  8094f4:	99800217 	ldw	r6,8(r19)
  8094f8:	100f883a 	mov	r7,r2
  8094fc:	9009883a 	mov	r4,r18
  809500:	1187c83a 	sub	r3,r2,r6
  809504:	008003c4 	movi	r2,15
  809508:	19400054 	ori	r5,r3,1
  80950c:	10ffdc0e 	bge	r2,r3,809480 <_malloc_trim_r+0x78>
  809510:	00802074 	movhi	r2,129
  809514:	1089a804 	addi	r2,r2,9888
  809518:	10c00017 	ldw	r3,0(r2)
  80951c:	00802074 	movhi	r2,129
  809520:	10905704 	addi	r2,r2,16732
  809524:	31400115 	stw	r5,4(r6)
  809528:	38c7c83a 	sub	r3,r7,r3
  80952c:	10c00015 	stw	r3,0(r2)
  809530:	003fd306 	br	809480 <_malloc_trim_r+0x78>

00809534 <_free_r>:
  809534:	defffd04 	addi	sp,sp,-12
  809538:	dc400115 	stw	r17,4(sp)
  80953c:	dc000015 	stw	r16,0(sp)
  809540:	dfc00215 	stw	ra,8(sp)
  809544:	2821883a 	mov	r16,r5
  809548:	2023883a 	mov	r17,r4
  80954c:	28005a26 	beq	r5,zero,8096b8 <_free_r+0x184>
  809550:	080e0e40 	call	80e0e4 <__malloc_lock>
  809554:	823ffe04 	addi	r8,r16,-8
  809558:	41400117 	ldw	r5,4(r8)
  80955c:	00bfff84 	movi	r2,-2
  809560:	02802074 	movhi	r10,129
  809564:	52841f04 	addi	r10,r10,4220
  809568:	288e703a 	and	r7,r5,r2
  80956c:	41cd883a 	add	r6,r8,r7
  809570:	30c00117 	ldw	r3,4(r6)
  809574:	51000217 	ldw	r4,8(r10)
  809578:	00bfff04 	movi	r2,-4
  80957c:	1892703a 	and	r9,r3,r2
  809580:	5017883a 	mov	r11,r10
  809584:	31006726 	beq	r6,r4,809724 <_free_r+0x1f0>
  809588:	2880004c 	andi	r2,r5,1
  80958c:	1005003a 	cmpeq	r2,r2,zero
  809590:	32400115 	stw	r9,4(r6)
  809594:	10001a1e 	bne	r2,zero,809600 <_free_r+0xcc>
  809598:	000b883a 	mov	r5,zero
  80959c:	3247883a 	add	r3,r6,r9
  8095a0:	18800117 	ldw	r2,4(r3)
  8095a4:	1080004c 	andi	r2,r2,1
  8095a8:	1000231e 	bne	r2,zero,809638 <_free_r+0x104>
  8095ac:	280ac03a 	cmpne	r5,r5,zero
  8095b0:	3a4f883a 	add	r7,r7,r9
  8095b4:	2800451e 	bne	r5,zero,8096cc <_free_r+0x198>
  8095b8:	31000217 	ldw	r4,8(r6)
  8095bc:	00802074 	movhi	r2,129
  8095c0:	10842104 	addi	r2,r2,4228
  8095c4:	20807b26 	beq	r4,r2,8097b4 <_free_r+0x280>
  8095c8:	30800317 	ldw	r2,12(r6)
  8095cc:	3a07883a 	add	r3,r7,r8
  8095d0:	19c00015 	stw	r7,0(r3)
  8095d4:	11000215 	stw	r4,8(r2)
  8095d8:	20800315 	stw	r2,12(r4)
  8095dc:	38800054 	ori	r2,r7,1
  8095e0:	40800115 	stw	r2,4(r8)
  8095e4:	28001a26 	beq	r5,zero,809650 <_free_r+0x11c>
  8095e8:	8809883a 	mov	r4,r17
  8095ec:	dfc00217 	ldw	ra,8(sp)
  8095f0:	dc400117 	ldw	r17,4(sp)
  8095f4:	dc000017 	ldw	r16,0(sp)
  8095f8:	dec00304 	addi	sp,sp,12
  8095fc:	080e1041 	jmpi	80e104 <__malloc_unlock>
  809600:	80bffe17 	ldw	r2,-8(r16)
  809604:	50c00204 	addi	r3,r10,8
  809608:	4091c83a 	sub	r8,r8,r2
  80960c:	41000217 	ldw	r4,8(r8)
  809610:	388f883a 	add	r7,r7,r2
  809614:	20c06126 	beq	r4,r3,80979c <_free_r+0x268>
  809618:	40800317 	ldw	r2,12(r8)
  80961c:	3247883a 	add	r3,r6,r9
  809620:	000b883a 	mov	r5,zero
  809624:	11000215 	stw	r4,8(r2)
  809628:	20800315 	stw	r2,12(r4)
  80962c:	18800117 	ldw	r2,4(r3)
  809630:	1080004c 	andi	r2,r2,1
  809634:	103fdd26 	beq	r2,zero,8095ac <_free_r+0x78>
  809638:	38800054 	ori	r2,r7,1
  80963c:	3a07883a 	add	r3,r7,r8
  809640:	280ac03a 	cmpne	r5,r5,zero
  809644:	40800115 	stw	r2,4(r8)
  809648:	19c00015 	stw	r7,0(r3)
  80964c:	283fe61e 	bne	r5,zero,8095e8 <_free_r+0xb4>
  809650:	00807fc4 	movi	r2,511
  809654:	11c01f2e 	bgeu	r2,r7,8096d4 <_free_r+0x1a0>
  809658:	3806d27a 	srli	r3,r7,9
  80965c:	1800481e 	bne	r3,zero,809780 <_free_r+0x24c>
  809660:	3804d0fa 	srli	r2,r7,3
  809664:	100690fa 	slli	r3,r2,3
  809668:	1acd883a 	add	r6,r3,r11
  80966c:	31400217 	ldw	r5,8(r6)
  809670:	31405926 	beq	r6,r5,8097d8 <_free_r+0x2a4>
  809674:	28800117 	ldw	r2,4(r5)
  809678:	00ffff04 	movi	r3,-4
  80967c:	10c4703a 	and	r2,r2,r3
  809680:	3880022e 	bgeu	r7,r2,80968c <_free_r+0x158>
  809684:	29400217 	ldw	r5,8(r5)
  809688:	317ffa1e 	bne	r6,r5,809674 <_free_r+0x140>
  80968c:	29800317 	ldw	r6,12(r5)
  809690:	41800315 	stw	r6,12(r8)
  809694:	41400215 	stw	r5,8(r8)
  809698:	8809883a 	mov	r4,r17
  80969c:	2a000315 	stw	r8,12(r5)
  8096a0:	32000215 	stw	r8,8(r6)
  8096a4:	dfc00217 	ldw	ra,8(sp)
  8096a8:	dc400117 	ldw	r17,4(sp)
  8096ac:	dc000017 	ldw	r16,0(sp)
  8096b0:	dec00304 	addi	sp,sp,12
  8096b4:	080e1041 	jmpi	80e104 <__malloc_unlock>
  8096b8:	dfc00217 	ldw	ra,8(sp)
  8096bc:	dc400117 	ldw	r17,4(sp)
  8096c0:	dc000017 	ldw	r16,0(sp)
  8096c4:	dec00304 	addi	sp,sp,12
  8096c8:	f800283a 	ret
  8096cc:	31000217 	ldw	r4,8(r6)
  8096d0:	003fbd06 	br	8095c8 <_free_r+0x94>
  8096d4:	3806d0fa 	srli	r3,r7,3
  8096d8:	00800044 	movi	r2,1
  8096dc:	51400117 	ldw	r5,4(r10)
  8096e0:	180890fa 	slli	r4,r3,3
  8096e4:	1807d0ba 	srai	r3,r3,2
  8096e8:	22c9883a 	add	r4,r4,r11
  8096ec:	21800217 	ldw	r6,8(r4)
  8096f0:	10c4983a 	sll	r2,r2,r3
  8096f4:	41000315 	stw	r4,12(r8)
  8096f8:	41800215 	stw	r6,8(r8)
  8096fc:	288ab03a 	or	r5,r5,r2
  809700:	22000215 	stw	r8,8(r4)
  809704:	8809883a 	mov	r4,r17
  809708:	51400115 	stw	r5,4(r10)
  80970c:	32000315 	stw	r8,12(r6)
  809710:	dfc00217 	ldw	ra,8(sp)
  809714:	dc400117 	ldw	r17,4(sp)
  809718:	dc000017 	ldw	r16,0(sp)
  80971c:	dec00304 	addi	sp,sp,12
  809720:	080e1041 	jmpi	80e104 <__malloc_unlock>
  809724:	2880004c 	andi	r2,r5,1
  809728:	3a4d883a 	add	r6,r7,r9
  80972c:	1000071e 	bne	r2,zero,80974c <_free_r+0x218>
  809730:	80bffe17 	ldw	r2,-8(r16)
  809734:	4091c83a 	sub	r8,r8,r2
  809738:	41000317 	ldw	r4,12(r8)
  80973c:	40c00217 	ldw	r3,8(r8)
  809740:	308d883a 	add	r6,r6,r2
  809744:	20c00215 	stw	r3,8(r4)
  809748:	19000315 	stw	r4,12(r3)
  80974c:	00802074 	movhi	r2,129
  809750:	1089a704 	addi	r2,r2,9884
  809754:	11000017 	ldw	r4,0(r2)
  809758:	30c00054 	ori	r3,r6,1
  80975c:	52000215 	stw	r8,8(r10)
  809760:	40c00115 	stw	r3,4(r8)
  809764:	313fa036 	bltu	r6,r4,8095e8 <_free_r+0xb4>
  809768:	00802074 	movhi	r2,129
  80976c:	10904d04 	addi	r2,r2,16692
  809770:	11400017 	ldw	r5,0(r2)
  809774:	8809883a 	mov	r4,r17
  809778:	08094080 	call	809408 <_malloc_trim_r>
  80977c:	003f9a06 	br	8095e8 <_free_r+0xb4>
  809780:	00800104 	movi	r2,4
  809784:	10c0072e 	bgeu	r2,r3,8097a4 <_free_r+0x270>
  809788:	00800504 	movi	r2,20
  80978c:	10c01936 	bltu	r2,r3,8097f4 <_free_r+0x2c0>
  809790:	188016c4 	addi	r2,r3,91
  809794:	100690fa 	slli	r3,r2,3
  809798:	003fb306 	br	809668 <_free_r+0x134>
  80979c:	01400044 	movi	r5,1
  8097a0:	003f7e06 	br	80959c <_free_r+0x68>
  8097a4:	3804d1ba 	srli	r2,r7,6
  8097a8:	10800e04 	addi	r2,r2,56
  8097ac:	100690fa 	slli	r3,r2,3
  8097b0:	003fad06 	br	809668 <_free_r+0x134>
  8097b4:	22000315 	stw	r8,12(r4)
  8097b8:	22000215 	stw	r8,8(r4)
  8097bc:	3a05883a 	add	r2,r7,r8
  8097c0:	38c00054 	ori	r3,r7,1
  8097c4:	11c00015 	stw	r7,0(r2)
  8097c8:	41000215 	stw	r4,8(r8)
  8097cc:	40c00115 	stw	r3,4(r8)
  8097d0:	41000315 	stw	r4,12(r8)
  8097d4:	003f8406 	br	8095e8 <_free_r+0xb4>
  8097d8:	1005d0ba 	srai	r2,r2,2
  8097dc:	00c00044 	movi	r3,1
  8097e0:	51000117 	ldw	r4,4(r10)
  8097e4:	1886983a 	sll	r3,r3,r2
  8097e8:	20c8b03a 	or	r4,r4,r3
  8097ec:	51000115 	stw	r4,4(r10)
  8097f0:	003fa706 	br	809690 <_free_r+0x15c>
  8097f4:	00801504 	movi	r2,84
  8097f8:	10c00436 	bltu	r2,r3,80980c <_free_r+0x2d8>
  8097fc:	3804d33a 	srli	r2,r7,12
  809800:	10801b84 	addi	r2,r2,110
  809804:	100690fa 	slli	r3,r2,3
  809808:	003f9706 	br	809668 <_free_r+0x134>
  80980c:	00805504 	movi	r2,340
  809810:	10c00436 	bltu	r2,r3,809824 <_free_r+0x2f0>
  809814:	3804d3fa 	srli	r2,r7,15
  809818:	10801dc4 	addi	r2,r2,119
  80981c:	100690fa 	slli	r3,r2,3
  809820:	003f9106 	br	809668 <_free_r+0x134>
  809824:	00815504 	movi	r2,1364
  809828:	10c0032e 	bgeu	r2,r3,809838 <_free_r+0x304>
  80982c:	00801f84 	movi	r2,126
  809830:	00c0fc04 	movi	r3,1008
  809834:	003f8c06 	br	809668 <_free_r+0x134>
  809838:	3804d4ba 	srli	r2,r7,18
  80983c:	10801f04 	addi	r2,r2,124
  809840:	100690fa 	slli	r3,r2,3
  809844:	003f8806 	br	809668 <_free_r+0x134>

00809848 <__sfvwrite_r>:
  809848:	30800217 	ldw	r2,8(r6)
  80984c:	defff504 	addi	sp,sp,-44
  809850:	df000915 	stw	fp,36(sp)
  809854:	dd800715 	stw	r22,28(sp)
  809858:	dc800315 	stw	r18,12(sp)
  80985c:	dfc00a15 	stw	ra,40(sp)
  809860:	ddc00815 	stw	r23,32(sp)
  809864:	dd400615 	stw	r21,24(sp)
  809868:	dd000515 	stw	r20,20(sp)
  80986c:	dcc00415 	stw	r19,16(sp)
  809870:	dc400215 	stw	r17,8(sp)
  809874:	dc000115 	stw	r16,4(sp)
  809878:	302d883a 	mov	r22,r6
  80987c:	2039883a 	mov	fp,r4
  809880:	2825883a 	mov	r18,r5
  809884:	10001c26 	beq	r2,zero,8098f8 <__sfvwrite_r+0xb0>
  809888:	29c0030b 	ldhu	r7,12(r5)
  80988c:	3880020c 	andi	r2,r7,8
  809890:	10002726 	beq	r2,zero,809930 <__sfvwrite_r+0xe8>
  809894:	28800417 	ldw	r2,16(r5)
  809898:	10002526 	beq	r2,zero,809930 <__sfvwrite_r+0xe8>
  80989c:	3880008c 	andi	r2,r7,2
  8098a0:	b5400017 	ldw	r21,0(r22)
  8098a4:	10002826 	beq	r2,zero,809948 <__sfvwrite_r+0x100>
  8098a8:	0021883a 	mov	r16,zero
  8098ac:	0023883a 	mov	r17,zero
  8098b0:	880d883a 	mov	r6,r17
  8098b4:	e009883a 	mov	r4,fp
  8098b8:	00810004 	movi	r2,1024
  8098bc:	80006e26 	beq	r16,zero,809a78 <__sfvwrite_r+0x230>
  8098c0:	800f883a 	mov	r7,r16
  8098c4:	91400717 	ldw	r5,28(r18)
  8098c8:	1400012e 	bgeu	r2,r16,8098d0 <__sfvwrite_r+0x88>
  8098cc:	100f883a 	mov	r7,r2
  8098d0:	90c00917 	ldw	r3,36(r18)
  8098d4:	183ee83a 	callr	r3
  8098d8:	1007883a 	mov	r3,r2
  8098dc:	80a1c83a 	sub	r16,r16,r2
  8098e0:	88a3883a 	add	r17,r17,r2
  8098e4:	00806d0e 	bge	zero,r2,809a9c <__sfvwrite_r+0x254>
  8098e8:	b0800217 	ldw	r2,8(r22)
  8098ec:	10c5c83a 	sub	r2,r2,r3
  8098f0:	b0800215 	stw	r2,8(r22)
  8098f4:	103fee1e 	bne	r2,zero,8098b0 <__sfvwrite_r+0x68>
  8098f8:	0009883a 	mov	r4,zero
  8098fc:	2005883a 	mov	r2,r4
  809900:	dfc00a17 	ldw	ra,40(sp)
  809904:	df000917 	ldw	fp,36(sp)
  809908:	ddc00817 	ldw	r23,32(sp)
  80990c:	dd800717 	ldw	r22,28(sp)
  809910:	dd400617 	ldw	r21,24(sp)
  809914:	dd000517 	ldw	r20,20(sp)
  809918:	dcc00417 	ldw	r19,16(sp)
  80991c:	dc800317 	ldw	r18,12(sp)
  809920:	dc400217 	ldw	r17,8(sp)
  809924:	dc000117 	ldw	r16,4(sp)
  809928:	dec00b04 	addi	sp,sp,44
  80992c:	f800283a 	ret
  809930:	0806ae40 	call	806ae4 <__swsetup_r>
  809934:	1000e41e 	bne	r2,zero,809cc8 <__sfvwrite_r+0x480>
  809938:	91c0030b 	ldhu	r7,12(r18)
  80993c:	b5400017 	ldw	r21,0(r22)
  809940:	3880008c 	andi	r2,r7,2
  809944:	103fd81e 	bne	r2,zero,8098a8 <__sfvwrite_r+0x60>
  809948:	3880004c 	andi	r2,r7,1
  80994c:	1005003a 	cmpeq	r2,r2,zero
  809950:	10005726 	beq	r2,zero,809ab0 <__sfvwrite_r+0x268>
  809954:	0029883a 	mov	r20,zero
  809958:	002f883a 	mov	r23,zero
  80995c:	a0004226 	beq	r20,zero,809a68 <__sfvwrite_r+0x220>
  809960:	3880800c 	andi	r2,r7,512
  809964:	94000217 	ldw	r16,8(r18)
  809968:	10008b26 	beq	r2,zero,809b98 <__sfvwrite_r+0x350>
  80996c:	800d883a 	mov	r6,r16
  809970:	a400a536 	bltu	r20,r16,809c08 <__sfvwrite_r+0x3c0>
  809974:	3881200c 	andi	r2,r7,1152
  809978:	10002726 	beq	r2,zero,809a18 <__sfvwrite_r+0x1d0>
  80997c:	90800517 	ldw	r2,20(r18)
  809980:	92000417 	ldw	r8,16(r18)
  809984:	91400017 	ldw	r5,0(r18)
  809988:	1087883a 	add	r3,r2,r2
  80998c:	1887883a 	add	r3,r3,r2
  809990:	1808d7fa 	srli	r4,r3,31
  809994:	2a21c83a 	sub	r16,r5,r8
  809998:	80800044 	addi	r2,r16,1
  80999c:	20c9883a 	add	r4,r4,r3
  8099a0:	2027d07a 	srai	r19,r4,1
  8099a4:	a085883a 	add	r2,r20,r2
  8099a8:	980d883a 	mov	r6,r19
  8099ac:	9880022e 	bgeu	r19,r2,8099b8 <__sfvwrite_r+0x170>
  8099b0:	1027883a 	mov	r19,r2
  8099b4:	100d883a 	mov	r6,r2
  8099b8:	3881000c 	andi	r2,r7,1024
  8099bc:	1000b826 	beq	r2,zero,809ca0 <__sfvwrite_r+0x458>
  8099c0:	300b883a 	mov	r5,r6
  8099c4:	e009883a 	mov	r4,fp
  8099c8:	080a0bc0 	call	80a0bc <_malloc_r>
  8099cc:	10003126 	beq	r2,zero,809a94 <__sfvwrite_r+0x24c>
  8099d0:	91400417 	ldw	r5,16(r18)
  8099d4:	1009883a 	mov	r4,r2
  8099d8:	800d883a 	mov	r6,r16
  8099dc:	1023883a 	mov	r17,r2
  8099e0:	080a8e00 	call	80a8e0 <memcpy>
  8099e4:	90c0030b 	ldhu	r3,12(r18)
  8099e8:	00beffc4 	movi	r2,-1025
  8099ec:	1886703a 	and	r3,r3,r2
  8099f0:	18c02014 	ori	r3,r3,128
  8099f4:	90c0030d 	sth	r3,12(r18)
  8099f8:	9c07c83a 	sub	r3,r19,r16
  8099fc:	8c05883a 	add	r2,r17,r16
  809a00:	a00d883a 	mov	r6,r20
  809a04:	a021883a 	mov	r16,r20
  809a08:	90800015 	stw	r2,0(r18)
  809a0c:	90c00215 	stw	r3,8(r18)
  809a10:	94400415 	stw	r17,16(r18)
  809a14:	94c00515 	stw	r19,20(r18)
  809a18:	91000017 	ldw	r4,0(r18)
  809a1c:	b80b883a 	mov	r5,r23
  809a20:	a023883a 	mov	r17,r20
  809a24:	080a9800 	call	80a980 <memmove>
  809a28:	90c00217 	ldw	r3,8(r18)
  809a2c:	90800017 	ldw	r2,0(r18)
  809a30:	a027883a 	mov	r19,r20
  809a34:	1c07c83a 	sub	r3,r3,r16
  809a38:	1405883a 	add	r2,r2,r16
  809a3c:	90c00215 	stw	r3,8(r18)
  809a40:	a021883a 	mov	r16,r20
  809a44:	90800015 	stw	r2,0(r18)
  809a48:	b0800217 	ldw	r2,8(r22)
  809a4c:	1405c83a 	sub	r2,r2,r16
  809a50:	b0800215 	stw	r2,8(r22)
  809a54:	103fa826 	beq	r2,zero,8098f8 <__sfvwrite_r+0xb0>
  809a58:	a469c83a 	sub	r20,r20,r17
  809a5c:	91c0030b 	ldhu	r7,12(r18)
  809a60:	bcef883a 	add	r23,r23,r19
  809a64:	a03fbe1e 	bne	r20,zero,809960 <__sfvwrite_r+0x118>
  809a68:	adc00017 	ldw	r23,0(r21)
  809a6c:	ad000117 	ldw	r20,4(r21)
  809a70:	ad400204 	addi	r21,r21,8
  809a74:	003fb906 	br	80995c <__sfvwrite_r+0x114>
  809a78:	ac400017 	ldw	r17,0(r21)
  809a7c:	ac000117 	ldw	r16,4(r21)
  809a80:	ad400204 	addi	r21,r21,8
  809a84:	003f8a06 	br	8098b0 <__sfvwrite_r+0x68>
  809a88:	91400417 	ldw	r5,16(r18)
  809a8c:	e009883a 	mov	r4,fp
  809a90:	08095340 	call	809534 <_free_r>
  809a94:	00800304 	movi	r2,12
  809a98:	e0800015 	stw	r2,0(fp)
  809a9c:	9080030b 	ldhu	r2,12(r18)
  809aa0:	013fffc4 	movi	r4,-1
  809aa4:	10801014 	ori	r2,r2,64
  809aa8:	9080030d 	sth	r2,12(r18)
  809aac:	003f9306 	br	8098fc <__sfvwrite_r+0xb4>
  809ab0:	0027883a 	mov	r19,zero
  809ab4:	002f883a 	mov	r23,zero
  809ab8:	d8000015 	stw	zero,0(sp)
  809abc:	0029883a 	mov	r20,zero
  809ac0:	98001e26 	beq	r19,zero,809b3c <__sfvwrite_r+0x2f4>
  809ac4:	d8c00017 	ldw	r3,0(sp)
  809ac8:	1804c03a 	cmpne	r2,r3,zero
  809acc:	10005e26 	beq	r2,zero,809c48 <__sfvwrite_r+0x400>
  809ad0:	9821883a 	mov	r16,r19
  809ad4:	a4c0012e 	bgeu	r20,r19,809adc <__sfvwrite_r+0x294>
  809ad8:	a021883a 	mov	r16,r20
  809adc:	91000017 	ldw	r4,0(r18)
  809ae0:	90800417 	ldw	r2,16(r18)
  809ae4:	91800217 	ldw	r6,8(r18)
  809ae8:	91c00517 	ldw	r7,20(r18)
  809aec:	1100022e 	bgeu	r2,r4,809af8 <__sfvwrite_r+0x2b0>
  809af0:	31e3883a 	add	r17,r6,r7
  809af4:	8c001616 	blt	r17,r16,809b50 <__sfvwrite_r+0x308>
  809af8:	81c03816 	blt	r16,r7,809bdc <__sfvwrite_r+0x394>
  809afc:	90c00917 	ldw	r3,36(r18)
  809b00:	91400717 	ldw	r5,28(r18)
  809b04:	e009883a 	mov	r4,fp
  809b08:	b80d883a 	mov	r6,r23
  809b0c:	183ee83a 	callr	r3
  809b10:	1023883a 	mov	r17,r2
  809b14:	00bfe10e 	bge	zero,r2,809a9c <__sfvwrite_r+0x254>
  809b18:	a469c83a 	sub	r20,r20,r17
  809b1c:	a0001826 	beq	r20,zero,809b80 <__sfvwrite_r+0x338>
  809b20:	b0800217 	ldw	r2,8(r22)
  809b24:	1445c83a 	sub	r2,r2,r17
  809b28:	b0800215 	stw	r2,8(r22)
  809b2c:	103f7226 	beq	r2,zero,8098f8 <__sfvwrite_r+0xb0>
  809b30:	9c67c83a 	sub	r19,r19,r17
  809b34:	bc6f883a 	add	r23,r23,r17
  809b38:	983fe21e 	bne	r19,zero,809ac4 <__sfvwrite_r+0x27c>
  809b3c:	adc00017 	ldw	r23,0(r21)
  809b40:	acc00117 	ldw	r19,4(r21)
  809b44:	ad400204 	addi	r21,r21,8
  809b48:	d8000015 	stw	zero,0(sp)
  809b4c:	003fdc06 	br	809ac0 <__sfvwrite_r+0x278>
  809b50:	b80b883a 	mov	r5,r23
  809b54:	880d883a 	mov	r6,r17
  809b58:	080a9800 	call	80a980 <memmove>
  809b5c:	90c00017 	ldw	r3,0(r18)
  809b60:	e009883a 	mov	r4,fp
  809b64:	900b883a 	mov	r5,r18
  809b68:	1c47883a 	add	r3,r3,r17
  809b6c:	90c00015 	stw	r3,0(r18)
  809b70:	0808ee40 	call	808ee4 <_fflush_r>
  809b74:	103fc91e 	bne	r2,zero,809a9c <__sfvwrite_r+0x254>
  809b78:	a469c83a 	sub	r20,r20,r17
  809b7c:	a03fe81e 	bne	r20,zero,809b20 <__sfvwrite_r+0x2d8>
  809b80:	e009883a 	mov	r4,fp
  809b84:	900b883a 	mov	r5,r18
  809b88:	0808ee40 	call	808ee4 <_fflush_r>
  809b8c:	103fc31e 	bne	r2,zero,809a9c <__sfvwrite_r+0x254>
  809b90:	d8000015 	stw	zero,0(sp)
  809b94:	003fe206 	br	809b20 <__sfvwrite_r+0x2d8>
  809b98:	91000017 	ldw	r4,0(r18)
  809b9c:	90800417 	ldw	r2,16(r18)
  809ba0:	1100022e 	bgeu	r2,r4,809bac <__sfvwrite_r+0x364>
  809ba4:	8023883a 	mov	r17,r16
  809ba8:	85003136 	bltu	r16,r20,809c70 <__sfvwrite_r+0x428>
  809bac:	91c00517 	ldw	r7,20(r18)
  809bb0:	a1c01836 	bltu	r20,r7,809c14 <__sfvwrite_r+0x3cc>
  809bb4:	90c00917 	ldw	r3,36(r18)
  809bb8:	91400717 	ldw	r5,28(r18)
  809bbc:	e009883a 	mov	r4,fp
  809bc0:	b80d883a 	mov	r6,r23
  809bc4:	183ee83a 	callr	r3
  809bc8:	1021883a 	mov	r16,r2
  809bcc:	00bfb30e 	bge	zero,r2,809a9c <__sfvwrite_r+0x254>
  809bd0:	1023883a 	mov	r17,r2
  809bd4:	1027883a 	mov	r19,r2
  809bd8:	003f9b06 	br	809a48 <__sfvwrite_r+0x200>
  809bdc:	b80b883a 	mov	r5,r23
  809be0:	800d883a 	mov	r6,r16
  809be4:	080a9800 	call	80a980 <memmove>
  809be8:	90c00217 	ldw	r3,8(r18)
  809bec:	90800017 	ldw	r2,0(r18)
  809bf0:	8023883a 	mov	r17,r16
  809bf4:	1c07c83a 	sub	r3,r3,r16
  809bf8:	1405883a 	add	r2,r2,r16
  809bfc:	90c00215 	stw	r3,8(r18)
  809c00:	90800015 	stw	r2,0(r18)
  809c04:	003fc406 	br	809b18 <__sfvwrite_r+0x2d0>
  809c08:	a00d883a 	mov	r6,r20
  809c0c:	a021883a 	mov	r16,r20
  809c10:	003f8106 	br	809a18 <__sfvwrite_r+0x1d0>
  809c14:	b80b883a 	mov	r5,r23
  809c18:	a00d883a 	mov	r6,r20
  809c1c:	080a9800 	call	80a980 <memmove>
  809c20:	90c00217 	ldw	r3,8(r18)
  809c24:	90800017 	ldw	r2,0(r18)
  809c28:	a021883a 	mov	r16,r20
  809c2c:	1d07c83a 	sub	r3,r3,r20
  809c30:	1505883a 	add	r2,r2,r20
  809c34:	a023883a 	mov	r17,r20
  809c38:	a027883a 	mov	r19,r20
  809c3c:	90c00215 	stw	r3,8(r18)
  809c40:	90800015 	stw	r2,0(r18)
  809c44:	003f8006 	br	809a48 <__sfvwrite_r+0x200>
  809c48:	b809883a 	mov	r4,r23
  809c4c:	01400284 	movi	r5,10
  809c50:	980d883a 	mov	r6,r19
  809c54:	080a7fc0 	call	80a7fc <memchr>
  809c58:	10001726 	beq	r2,zero,809cb8 <__sfvwrite_r+0x470>
  809c5c:	15c5c83a 	sub	r2,r2,r23
  809c60:	15000044 	addi	r20,r2,1
  809c64:	00800044 	movi	r2,1
  809c68:	d8800015 	stw	r2,0(sp)
  809c6c:	003f9806 	br	809ad0 <__sfvwrite_r+0x288>
  809c70:	b80b883a 	mov	r5,r23
  809c74:	800d883a 	mov	r6,r16
  809c78:	080a9800 	call	80a980 <memmove>
  809c7c:	90c00017 	ldw	r3,0(r18)
  809c80:	e009883a 	mov	r4,fp
  809c84:	900b883a 	mov	r5,r18
  809c88:	1c07883a 	add	r3,r3,r16
  809c8c:	90c00015 	stw	r3,0(r18)
  809c90:	8027883a 	mov	r19,r16
  809c94:	0808ee40 	call	808ee4 <_fflush_r>
  809c98:	103f6b26 	beq	r2,zero,809a48 <__sfvwrite_r+0x200>
  809c9c:	003f7f06 	br	809a9c <__sfvwrite_r+0x254>
  809ca0:	400b883a 	mov	r5,r8
  809ca4:	e009883a 	mov	r4,fp
  809ca8:	080bb840 	call	80bb84 <_realloc_r>
  809cac:	103f7626 	beq	r2,zero,809a88 <__sfvwrite_r+0x240>
  809cb0:	1023883a 	mov	r17,r2
  809cb4:	003f5006 	br	8099f8 <__sfvwrite_r+0x1b0>
  809cb8:	00c00044 	movi	r3,1
  809cbc:	9d000044 	addi	r20,r19,1
  809cc0:	d8c00015 	stw	r3,0(sp)
  809cc4:	003f8206 	br	809ad0 <__sfvwrite_r+0x288>
  809cc8:	9080030b 	ldhu	r2,12(r18)
  809ccc:	00c00244 	movi	r3,9
  809cd0:	013fffc4 	movi	r4,-1
  809cd4:	10801014 	ori	r2,r2,64
  809cd8:	9080030d 	sth	r2,12(r18)
  809cdc:	e0c00015 	stw	r3,0(fp)
  809ce0:	003f0606 	br	8098fc <__sfvwrite_r+0xb4>

00809ce4 <_fwalk_reent>:
  809ce4:	defff704 	addi	sp,sp,-36
  809ce8:	dcc00315 	stw	r19,12(sp)
  809cec:	24c0b804 	addi	r19,r4,736
  809cf0:	dd800615 	stw	r22,24(sp)
  809cf4:	dd400515 	stw	r21,20(sp)
  809cf8:	dfc00815 	stw	ra,32(sp)
  809cfc:	ddc00715 	stw	r23,28(sp)
  809d00:	dd000415 	stw	r20,16(sp)
  809d04:	dc800215 	stw	r18,8(sp)
  809d08:	dc400115 	stw	r17,4(sp)
  809d0c:	dc000015 	stw	r16,0(sp)
  809d10:	202b883a 	mov	r21,r4
  809d14:	282d883a 	mov	r22,r5
  809d18:	080916c0 	call	80916c <__sfp_lock_acquire>
  809d1c:	98002126 	beq	r19,zero,809da4 <_fwalk_reent+0xc0>
  809d20:	002f883a 	mov	r23,zero
  809d24:	9c800117 	ldw	r18,4(r19)
  809d28:	9c000217 	ldw	r16,8(r19)
  809d2c:	90bfffc4 	addi	r2,r18,-1
  809d30:	10000d16 	blt	r2,zero,809d68 <_fwalk_reent+0x84>
  809d34:	0023883a 	mov	r17,zero
  809d38:	053fffc4 	movi	r20,-1
  809d3c:	8080030f 	ldh	r2,12(r16)
  809d40:	8c400044 	addi	r17,r17,1
  809d44:	10000626 	beq	r2,zero,809d60 <_fwalk_reent+0x7c>
  809d48:	8080038f 	ldh	r2,14(r16)
  809d4c:	800b883a 	mov	r5,r16
  809d50:	a809883a 	mov	r4,r21
  809d54:	15000226 	beq	r2,r20,809d60 <_fwalk_reent+0x7c>
  809d58:	b03ee83a 	callr	r22
  809d5c:	b8aeb03a 	or	r23,r23,r2
  809d60:	84001704 	addi	r16,r16,92
  809d64:	947ff51e 	bne	r18,r17,809d3c <_fwalk_reent+0x58>
  809d68:	9cc00017 	ldw	r19,0(r19)
  809d6c:	983fed1e 	bne	r19,zero,809d24 <_fwalk_reent+0x40>
  809d70:	08091700 	call	809170 <__sfp_lock_release>
  809d74:	b805883a 	mov	r2,r23
  809d78:	dfc00817 	ldw	ra,32(sp)
  809d7c:	ddc00717 	ldw	r23,28(sp)
  809d80:	dd800617 	ldw	r22,24(sp)
  809d84:	dd400517 	ldw	r21,20(sp)
  809d88:	dd000417 	ldw	r20,16(sp)
  809d8c:	dcc00317 	ldw	r19,12(sp)
  809d90:	dc800217 	ldw	r18,8(sp)
  809d94:	dc400117 	ldw	r17,4(sp)
  809d98:	dc000017 	ldw	r16,0(sp)
  809d9c:	dec00904 	addi	sp,sp,36
  809da0:	f800283a 	ret
  809da4:	002f883a 	mov	r23,zero
  809da8:	003ff106 	br	809d70 <_fwalk_reent+0x8c>

00809dac <_fwalk>:
  809dac:	defff804 	addi	sp,sp,-32
  809db0:	dcc00315 	stw	r19,12(sp)
  809db4:	24c0b804 	addi	r19,r4,736
  809db8:	dd400515 	stw	r21,20(sp)
  809dbc:	dfc00715 	stw	ra,28(sp)
  809dc0:	dd800615 	stw	r22,24(sp)
  809dc4:	dd000415 	stw	r20,16(sp)
  809dc8:	dc800215 	stw	r18,8(sp)
  809dcc:	dc400115 	stw	r17,4(sp)
  809dd0:	dc000015 	stw	r16,0(sp)
  809dd4:	282b883a 	mov	r21,r5
  809dd8:	080916c0 	call	80916c <__sfp_lock_acquire>
  809ddc:	98001f26 	beq	r19,zero,809e5c <_fwalk+0xb0>
  809de0:	002d883a 	mov	r22,zero
  809de4:	9c800117 	ldw	r18,4(r19)
  809de8:	9c000217 	ldw	r16,8(r19)
  809dec:	90bfffc4 	addi	r2,r18,-1
  809df0:	10000c16 	blt	r2,zero,809e24 <_fwalk+0x78>
  809df4:	0023883a 	mov	r17,zero
  809df8:	053fffc4 	movi	r20,-1
  809dfc:	8080030f 	ldh	r2,12(r16)
  809e00:	8c400044 	addi	r17,r17,1
  809e04:	10000526 	beq	r2,zero,809e1c <_fwalk+0x70>
  809e08:	8080038f 	ldh	r2,14(r16)
  809e0c:	8009883a 	mov	r4,r16
  809e10:	15000226 	beq	r2,r20,809e1c <_fwalk+0x70>
  809e14:	a83ee83a 	callr	r21
  809e18:	b0acb03a 	or	r22,r22,r2
  809e1c:	84001704 	addi	r16,r16,92
  809e20:	947ff61e 	bne	r18,r17,809dfc <_fwalk+0x50>
  809e24:	9cc00017 	ldw	r19,0(r19)
  809e28:	983fee1e 	bne	r19,zero,809de4 <_fwalk+0x38>
  809e2c:	08091700 	call	809170 <__sfp_lock_release>
  809e30:	b005883a 	mov	r2,r22
  809e34:	dfc00717 	ldw	ra,28(sp)
  809e38:	dd800617 	ldw	r22,24(sp)
  809e3c:	dd400517 	ldw	r21,20(sp)
  809e40:	dd000417 	ldw	r20,16(sp)
  809e44:	dcc00317 	ldw	r19,12(sp)
  809e48:	dc800217 	ldw	r18,8(sp)
  809e4c:	dc400117 	ldw	r17,4(sp)
  809e50:	dc000017 	ldw	r16,0(sp)
  809e54:	dec00804 	addi	sp,sp,32
  809e58:	f800283a 	ret
  809e5c:	002d883a 	mov	r22,zero
  809e60:	003ff206 	br	809e2c <_fwalk+0x80>

00809e64 <__locale_charset>:
  809e64:	d0a00317 	ldw	r2,-32756(gp)
  809e68:	f800283a 	ret

00809e6c <_localeconv_r>:
  809e6c:	00802074 	movhi	r2,129
  809e70:	1082bc04 	addi	r2,r2,2800
  809e74:	f800283a 	ret

00809e78 <localeconv>:
  809e78:	00802074 	movhi	r2,129
  809e7c:	1089a304 	addi	r2,r2,9868
  809e80:	11000017 	ldw	r4,0(r2)
  809e84:	0809e6c1 	jmpi	809e6c <_localeconv_r>

00809e88 <_setlocale_r>:
  809e88:	defffc04 	addi	sp,sp,-16
  809e8c:	00c02074 	movhi	r3,129
  809e90:	18c29204 	addi	r3,r3,2632
  809e94:	dc800215 	stw	r18,8(sp)
  809e98:	dc400115 	stw	r17,4(sp)
  809e9c:	dc000015 	stw	r16,0(sp)
  809ea0:	2023883a 	mov	r17,r4
  809ea4:	2825883a 	mov	r18,r5
  809ea8:	dfc00315 	stw	ra,12(sp)
  809eac:	3021883a 	mov	r16,r6
  809eb0:	3009883a 	mov	r4,r6
  809eb4:	180b883a 	mov	r5,r3
  809eb8:	30000926 	beq	r6,zero,809ee0 <_setlocale_r+0x58>
  809ebc:	080c3a40 	call	80c3a4 <strcmp>
  809ec0:	8009883a 	mov	r4,r16
  809ec4:	01402074 	movhi	r5,129
  809ec8:	2942a304 	addi	r5,r5,2700
  809ecc:	10000b1e 	bne	r2,zero,809efc <_setlocale_r+0x74>
  809ed0:	8c000d15 	stw	r16,52(r17)
  809ed4:	8c800c15 	stw	r18,48(r17)
  809ed8:	00c02074 	movhi	r3,129
  809edc:	18c29204 	addi	r3,r3,2632
  809ee0:	1805883a 	mov	r2,r3
  809ee4:	dfc00317 	ldw	ra,12(sp)
  809ee8:	dc800217 	ldw	r18,8(sp)
  809eec:	dc400117 	ldw	r17,4(sp)
  809ef0:	dc000017 	ldw	r16,0(sp)
  809ef4:	dec00404 	addi	sp,sp,16
  809ef8:	f800283a 	ret
  809efc:	080c3a40 	call	80c3a4 <strcmp>
  809f00:	0007883a 	mov	r3,zero
  809f04:	103ff226 	beq	r2,zero,809ed0 <_setlocale_r+0x48>
  809f08:	003ff506 	br	809ee0 <_setlocale_r+0x58>

00809f0c <setlocale>:
  809f0c:	01802074 	movhi	r6,129
  809f10:	3189a304 	addi	r6,r6,9868
  809f14:	2007883a 	mov	r3,r4
  809f18:	31000017 	ldw	r4,0(r6)
  809f1c:	280d883a 	mov	r6,r5
  809f20:	180b883a 	mov	r5,r3
  809f24:	0809e881 	jmpi	809e88 <_setlocale_r>

00809f28 <__smakebuf_r>:
  809f28:	2880030b 	ldhu	r2,12(r5)
  809f2c:	deffed04 	addi	sp,sp,-76
  809f30:	dc401015 	stw	r17,64(sp)
  809f34:	1080008c 	andi	r2,r2,2
  809f38:	dc000f15 	stw	r16,60(sp)
  809f3c:	dfc01215 	stw	ra,72(sp)
  809f40:	dc801115 	stw	r18,68(sp)
  809f44:	2821883a 	mov	r16,r5
  809f48:	2023883a 	mov	r17,r4
  809f4c:	10000b26 	beq	r2,zero,809f7c <__smakebuf_r+0x54>
  809f50:	28c010c4 	addi	r3,r5,67
  809f54:	00800044 	movi	r2,1
  809f58:	28800515 	stw	r2,20(r5)
  809f5c:	28c00415 	stw	r3,16(r5)
  809f60:	28c00015 	stw	r3,0(r5)
  809f64:	dfc01217 	ldw	ra,72(sp)
  809f68:	dc801117 	ldw	r18,68(sp)
  809f6c:	dc401017 	ldw	r17,64(sp)
  809f70:	dc000f17 	ldw	r16,60(sp)
  809f74:	dec01304 	addi	sp,sp,76
  809f78:	f800283a 	ret
  809f7c:	2940038f 	ldh	r5,14(r5)
  809f80:	28002116 	blt	r5,zero,80a008 <__smakebuf_r+0xe0>
  809f84:	d80d883a 	mov	r6,sp
  809f88:	080c7c00 	call	80c7c0 <_fstat_r>
  809f8c:	10001e16 	blt	r2,zero,80a008 <__smakebuf_r+0xe0>
  809f90:	d8800117 	ldw	r2,4(sp)
  809f94:	00e00014 	movui	r3,32768
  809f98:	113c000c 	andi	r4,r2,61440
  809f9c:	20c03126 	beq	r4,r3,80a064 <__smakebuf_r+0x13c>
  809fa0:	8080030b 	ldhu	r2,12(r16)
  809fa4:	00c80004 	movi	r3,8192
  809fa8:	10820014 	ori	r2,r2,2048
  809fac:	8080030d 	sth	r2,12(r16)
  809fb0:	20c01e26 	beq	r4,r3,80a02c <__smakebuf_r+0x104>
  809fb4:	04810004 	movi	r18,1024
  809fb8:	8809883a 	mov	r4,r17
  809fbc:	900b883a 	mov	r5,r18
  809fc0:	080a0bc0 	call	80a0bc <_malloc_r>
  809fc4:	1009883a 	mov	r4,r2
  809fc8:	10003126 	beq	r2,zero,80a090 <__smakebuf_r+0x168>
  809fcc:	80c0030b 	ldhu	r3,12(r16)
  809fd0:	00802074 	movhi	r2,129
  809fd4:	10a49804 	addi	r2,r2,-28064
  809fd8:	88800f15 	stw	r2,60(r17)
  809fdc:	18c02014 	ori	r3,r3,128
  809fe0:	84800515 	stw	r18,20(r16)
  809fe4:	80c0030d 	sth	r3,12(r16)
  809fe8:	81000415 	stw	r4,16(r16)
  809fec:	81000015 	stw	r4,0(r16)
  809ff0:	dfc01217 	ldw	ra,72(sp)
  809ff4:	dc801117 	ldw	r18,68(sp)
  809ff8:	dc401017 	ldw	r17,64(sp)
  809ffc:	dc000f17 	ldw	r16,60(sp)
  80a000:	dec01304 	addi	sp,sp,76
  80a004:	f800283a 	ret
  80a008:	80c0030b 	ldhu	r3,12(r16)
  80a00c:	1880200c 	andi	r2,r3,128
  80a010:	10000426 	beq	r2,zero,80a024 <__smakebuf_r+0xfc>
  80a014:	04801004 	movi	r18,64
  80a018:	18820014 	ori	r2,r3,2048
  80a01c:	8080030d 	sth	r2,12(r16)
  80a020:	003fe506 	br	809fb8 <__smakebuf_r+0x90>
  80a024:	04810004 	movi	r18,1024
  80a028:	003ffb06 	br	80a018 <__smakebuf_r+0xf0>
  80a02c:	8140038f 	ldh	r5,14(r16)
  80a030:	8809883a 	mov	r4,r17
  80a034:	080c8340 	call	80c834 <_isatty_r>
  80a038:	103fde26 	beq	r2,zero,809fb4 <__smakebuf_r+0x8c>
  80a03c:	8080030b 	ldhu	r2,12(r16)
  80a040:	80c010c4 	addi	r3,r16,67
  80a044:	04810004 	movi	r18,1024
  80a048:	10800054 	ori	r2,r2,1
  80a04c:	8080030d 	sth	r2,12(r16)
  80a050:	00800044 	movi	r2,1
  80a054:	80c00415 	stw	r3,16(r16)
  80a058:	80800515 	stw	r2,20(r16)
  80a05c:	80c00015 	stw	r3,0(r16)
  80a060:	003fd506 	br	809fb8 <__smakebuf_r+0x90>
  80a064:	80c00a17 	ldw	r3,40(r16)
  80a068:	00802074 	movhi	r2,129
  80a06c:	10b09804 	addi	r2,r2,-15776
  80a070:	18bfcb1e 	bne	r3,r2,809fa0 <__smakebuf_r+0x78>
  80a074:	8080030b 	ldhu	r2,12(r16)
  80a078:	00c10004 	movi	r3,1024
  80a07c:	1825883a 	mov	r18,r3
  80a080:	10c4b03a 	or	r2,r2,r3
  80a084:	8080030d 	sth	r2,12(r16)
  80a088:	80c01315 	stw	r3,76(r16)
  80a08c:	003fca06 	br	809fb8 <__smakebuf_r+0x90>
  80a090:	8100030b 	ldhu	r4,12(r16)
  80a094:	2080800c 	andi	r2,r4,512
  80a098:	103fb21e 	bne	r2,zero,809f64 <__smakebuf_r+0x3c>
  80a09c:	80c010c4 	addi	r3,r16,67
  80a0a0:	21000094 	ori	r4,r4,2
  80a0a4:	00800044 	movi	r2,1
  80a0a8:	80800515 	stw	r2,20(r16)
  80a0ac:	8100030d 	sth	r4,12(r16)
  80a0b0:	80c00415 	stw	r3,16(r16)
  80a0b4:	80c00015 	stw	r3,0(r16)
  80a0b8:	003faa06 	br	809f64 <__smakebuf_r+0x3c>

0080a0bc <_malloc_r>:
  80a0bc:	defff604 	addi	sp,sp,-40
  80a0c0:	28c002c4 	addi	r3,r5,11
  80a0c4:	00800584 	movi	r2,22
  80a0c8:	dc800215 	stw	r18,8(sp)
  80a0cc:	dfc00915 	stw	ra,36(sp)
  80a0d0:	df000815 	stw	fp,32(sp)
  80a0d4:	ddc00715 	stw	r23,28(sp)
  80a0d8:	dd800615 	stw	r22,24(sp)
  80a0dc:	dd400515 	stw	r21,20(sp)
  80a0e0:	dd000415 	stw	r20,16(sp)
  80a0e4:	dcc00315 	stw	r19,12(sp)
  80a0e8:	dc400115 	stw	r17,4(sp)
  80a0ec:	dc000015 	stw	r16,0(sp)
  80a0f0:	2025883a 	mov	r18,r4
  80a0f4:	10c01236 	bltu	r2,r3,80a140 <_malloc_r+0x84>
  80a0f8:	04400404 	movi	r17,16
  80a0fc:	8940142e 	bgeu	r17,r5,80a150 <_malloc_r+0x94>
  80a100:	00800304 	movi	r2,12
  80a104:	0007883a 	mov	r3,zero
  80a108:	90800015 	stw	r2,0(r18)
  80a10c:	1805883a 	mov	r2,r3
  80a110:	dfc00917 	ldw	ra,36(sp)
  80a114:	df000817 	ldw	fp,32(sp)
  80a118:	ddc00717 	ldw	r23,28(sp)
  80a11c:	dd800617 	ldw	r22,24(sp)
  80a120:	dd400517 	ldw	r21,20(sp)
  80a124:	dd000417 	ldw	r20,16(sp)
  80a128:	dcc00317 	ldw	r19,12(sp)
  80a12c:	dc800217 	ldw	r18,8(sp)
  80a130:	dc400117 	ldw	r17,4(sp)
  80a134:	dc000017 	ldw	r16,0(sp)
  80a138:	dec00a04 	addi	sp,sp,40
  80a13c:	f800283a 	ret
  80a140:	00bffe04 	movi	r2,-8
  80a144:	18a2703a 	and	r17,r3,r2
  80a148:	883fed16 	blt	r17,zero,80a100 <_malloc_r+0x44>
  80a14c:	897fec36 	bltu	r17,r5,80a100 <_malloc_r+0x44>
  80a150:	9009883a 	mov	r4,r18
  80a154:	080e0e40 	call	80e0e4 <__malloc_lock>
  80a158:	00807dc4 	movi	r2,503
  80a15c:	14402b2e 	bgeu	r2,r17,80a20c <_malloc_r+0x150>
  80a160:	8806d27a 	srli	r3,r17,9
  80a164:	18003f1e 	bne	r3,zero,80a264 <_malloc_r+0x1a8>
  80a168:	880cd0fa 	srli	r6,r17,3
  80a16c:	300490fa 	slli	r2,r6,3
  80a170:	02c02074 	movhi	r11,129
  80a174:	5ac41f04 	addi	r11,r11,4220
  80a178:	12cb883a 	add	r5,r2,r11
  80a17c:	2c000317 	ldw	r16,12(r5)
  80a180:	580f883a 	mov	r7,r11
  80a184:	2c00041e 	bne	r5,r16,80a198 <_malloc_r+0xdc>
  80a188:	00000a06 	br	80a1b4 <_malloc_r+0xf8>
  80a18c:	1800860e 	bge	r3,zero,80a3a8 <_malloc_r+0x2ec>
  80a190:	84000317 	ldw	r16,12(r16)
  80a194:	2c000726 	beq	r5,r16,80a1b4 <_malloc_r+0xf8>
  80a198:	80800117 	ldw	r2,4(r16)
  80a19c:	00ffff04 	movi	r3,-4
  80a1a0:	10c8703a 	and	r4,r2,r3
  80a1a4:	2447c83a 	sub	r3,r4,r17
  80a1a8:	008003c4 	movi	r2,15
  80a1ac:	10fff70e 	bge	r2,r3,80a18c <_malloc_r+0xd0>
  80a1b0:	31bfffc4 	addi	r6,r6,-1
  80a1b4:	32400044 	addi	r9,r6,1
  80a1b8:	02802074 	movhi	r10,129
  80a1bc:	52842104 	addi	r10,r10,4228
  80a1c0:	54000217 	ldw	r16,8(r10)
  80a1c4:	8280a026 	beq	r16,r10,80a448 <_malloc_r+0x38c>
  80a1c8:	80800117 	ldw	r2,4(r16)
  80a1cc:	00ffff04 	movi	r3,-4
  80a1d0:	10ca703a 	and	r5,r2,r3
  80a1d4:	2c4dc83a 	sub	r6,r5,r17
  80a1d8:	008003c4 	movi	r2,15
  80a1dc:	11808316 	blt	r2,r6,80a3ec <_malloc_r+0x330>
  80a1e0:	52800315 	stw	r10,12(r10)
  80a1e4:	52800215 	stw	r10,8(r10)
  80a1e8:	30002916 	blt	r6,zero,80a290 <_malloc_r+0x1d4>
  80a1ec:	8147883a 	add	r3,r16,r5
  80a1f0:	18800117 	ldw	r2,4(r3)
  80a1f4:	9009883a 	mov	r4,r18
  80a1f8:	10800054 	ori	r2,r2,1
  80a1fc:	18800115 	stw	r2,4(r3)
  80a200:	080e1040 	call	80e104 <__malloc_unlock>
  80a204:	80c00204 	addi	r3,r16,8
  80a208:	003fc006 	br	80a10c <_malloc_r+0x50>
  80a20c:	02c02074 	movhi	r11,129
  80a210:	5ac41f04 	addi	r11,r11,4220
  80a214:	8ac5883a 	add	r2,r17,r11
  80a218:	14000317 	ldw	r16,12(r2)
  80a21c:	580f883a 	mov	r7,r11
  80a220:	8806d0fa 	srli	r3,r17,3
  80a224:	14006c26 	beq	r2,r16,80a3d8 <_malloc_r+0x31c>
  80a228:	80c00117 	ldw	r3,4(r16)
  80a22c:	00bfff04 	movi	r2,-4
  80a230:	81800317 	ldw	r6,12(r16)
  80a234:	1886703a 	and	r3,r3,r2
  80a238:	80c7883a 	add	r3,r16,r3
  80a23c:	18800117 	ldw	r2,4(r3)
  80a240:	81400217 	ldw	r5,8(r16)
  80a244:	9009883a 	mov	r4,r18
  80a248:	10800054 	ori	r2,r2,1
  80a24c:	18800115 	stw	r2,4(r3)
  80a250:	31400215 	stw	r5,8(r6)
  80a254:	29800315 	stw	r6,12(r5)
  80a258:	080e1040 	call	80e104 <__malloc_unlock>
  80a25c:	80c00204 	addi	r3,r16,8
  80a260:	003faa06 	br	80a10c <_malloc_r+0x50>
  80a264:	00800104 	movi	r2,4
  80a268:	10c0052e 	bgeu	r2,r3,80a280 <_malloc_r+0x1c4>
  80a26c:	00800504 	movi	r2,20
  80a270:	10c07836 	bltu	r2,r3,80a454 <_malloc_r+0x398>
  80a274:	198016c4 	addi	r6,r3,91
  80a278:	300490fa 	slli	r2,r6,3
  80a27c:	003fbc06 	br	80a170 <_malloc_r+0xb4>
  80a280:	8804d1ba 	srli	r2,r17,6
  80a284:	11800e04 	addi	r6,r2,56
  80a288:	300490fa 	slli	r2,r6,3
  80a28c:	003fb806 	br	80a170 <_malloc_r+0xb4>
  80a290:	00807fc4 	movi	r2,511
  80a294:	1140bb36 	bltu	r2,r5,80a584 <_malloc_r+0x4c8>
  80a298:	2806d0fa 	srli	r3,r5,3
  80a29c:	573ffe04 	addi	fp,r10,-8
  80a2a0:	00800044 	movi	r2,1
  80a2a4:	180890fa 	slli	r4,r3,3
  80a2a8:	1807d0ba 	srai	r3,r3,2
  80a2ac:	e1c00117 	ldw	r7,4(fp)
  80a2b0:	5909883a 	add	r4,r11,r4
  80a2b4:	21400217 	ldw	r5,8(r4)
  80a2b8:	10c4983a 	sll	r2,r2,r3
  80a2bc:	81000315 	stw	r4,12(r16)
  80a2c0:	81400215 	stw	r5,8(r16)
  80a2c4:	388eb03a 	or	r7,r7,r2
  80a2c8:	2c000315 	stw	r16,12(r5)
  80a2cc:	24000215 	stw	r16,8(r4)
  80a2d0:	e1c00115 	stw	r7,4(fp)
  80a2d4:	4807883a 	mov	r3,r9
  80a2d8:	4800cd16 	blt	r9,zero,80a610 <_malloc_r+0x554>
  80a2dc:	1807d0ba 	srai	r3,r3,2
  80a2e0:	00800044 	movi	r2,1
  80a2e4:	10c8983a 	sll	r4,r2,r3
  80a2e8:	39004436 	bltu	r7,r4,80a3fc <_malloc_r+0x340>
  80a2ec:	21c4703a 	and	r2,r4,r7
  80a2f0:	10000a1e 	bne	r2,zero,80a31c <_malloc_r+0x260>
  80a2f4:	2109883a 	add	r4,r4,r4
  80a2f8:	00bfff04 	movi	r2,-4
  80a2fc:	4884703a 	and	r2,r9,r2
  80a300:	3906703a 	and	r3,r7,r4
  80a304:	12400104 	addi	r9,r2,4
  80a308:	1800041e 	bne	r3,zero,80a31c <_malloc_r+0x260>
  80a30c:	2109883a 	add	r4,r4,r4
  80a310:	3904703a 	and	r2,r7,r4
  80a314:	4a400104 	addi	r9,r9,4
  80a318:	103ffc26 	beq	r2,zero,80a30c <_malloc_r+0x250>
  80a31c:	480490fa 	slli	r2,r9,3
  80a320:	4819883a 	mov	r12,r9
  80a324:	023fff04 	movi	r8,-4
  80a328:	589b883a 	add	r13,r11,r2
  80a32c:	6807883a 	mov	r3,r13
  80a330:	014003c4 	movi	r5,15
  80a334:	1c000317 	ldw	r16,12(r3)
  80a338:	1c00041e 	bne	r3,r16,80a34c <_malloc_r+0x290>
  80a33c:	0000a706 	br	80a5dc <_malloc_r+0x520>
  80a340:	3000ab0e 	bge	r6,zero,80a5f0 <_malloc_r+0x534>
  80a344:	84000317 	ldw	r16,12(r16)
  80a348:	1c00a426 	beq	r3,r16,80a5dc <_malloc_r+0x520>
  80a34c:	80800117 	ldw	r2,4(r16)
  80a350:	1204703a 	and	r2,r2,r8
  80a354:	144dc83a 	sub	r6,r2,r17
  80a358:	29bff90e 	bge	r5,r6,80a340 <_malloc_r+0x284>
  80a35c:	81000317 	ldw	r4,12(r16)
  80a360:	80c00217 	ldw	r3,8(r16)
  80a364:	89400054 	ori	r5,r17,1
  80a368:	8445883a 	add	r2,r16,r17
  80a36c:	20c00215 	stw	r3,8(r4)
  80a370:	19000315 	stw	r4,12(r3)
  80a374:	81400115 	stw	r5,4(r16)
  80a378:	1187883a 	add	r3,r2,r6
  80a37c:	31000054 	ori	r4,r6,1
  80a380:	50800315 	stw	r2,12(r10)
  80a384:	50800215 	stw	r2,8(r10)
  80a388:	19800015 	stw	r6,0(r3)
  80a38c:	11000115 	stw	r4,4(r2)
  80a390:	12800215 	stw	r10,8(r2)
  80a394:	12800315 	stw	r10,12(r2)
  80a398:	9009883a 	mov	r4,r18
  80a39c:	080e1040 	call	80e104 <__malloc_unlock>
  80a3a0:	80c00204 	addi	r3,r16,8
  80a3a4:	003f5906 	br	80a10c <_malloc_r+0x50>
  80a3a8:	8109883a 	add	r4,r16,r4
  80a3ac:	20800117 	ldw	r2,4(r4)
  80a3b0:	80c00217 	ldw	r3,8(r16)
  80a3b4:	81400317 	ldw	r5,12(r16)
  80a3b8:	10800054 	ori	r2,r2,1
  80a3bc:	20800115 	stw	r2,4(r4)
  80a3c0:	28c00215 	stw	r3,8(r5)
  80a3c4:	19400315 	stw	r5,12(r3)
  80a3c8:	9009883a 	mov	r4,r18
  80a3cc:	080e1040 	call	80e104 <__malloc_unlock>
  80a3d0:	80c00204 	addi	r3,r16,8
  80a3d4:	003f4d06 	br	80a10c <_malloc_r+0x50>
  80a3d8:	80800204 	addi	r2,r16,8
  80a3dc:	14000317 	ldw	r16,12(r2)
  80a3e0:	143f911e 	bne	r2,r16,80a228 <_malloc_r+0x16c>
  80a3e4:	1a400084 	addi	r9,r3,2
  80a3e8:	003f7306 	br	80a1b8 <_malloc_r+0xfc>
  80a3ec:	88c00054 	ori	r3,r17,1
  80a3f0:	8445883a 	add	r2,r16,r17
  80a3f4:	80c00115 	stw	r3,4(r16)
  80a3f8:	003fdf06 	br	80a378 <_malloc_r+0x2bc>
  80a3fc:	e4000217 	ldw	r16,8(fp)
  80a400:	00bfff04 	movi	r2,-4
  80a404:	80c00117 	ldw	r3,4(r16)
  80a408:	802d883a 	mov	r22,r16
  80a40c:	18aa703a 	and	r21,r3,r2
  80a410:	ac401636 	bltu	r21,r17,80a46c <_malloc_r+0x3b0>
  80a414:	ac49c83a 	sub	r4,r21,r17
  80a418:	008003c4 	movi	r2,15
  80a41c:	1100130e 	bge	r2,r4,80a46c <_malloc_r+0x3b0>
  80a420:	88800054 	ori	r2,r17,1
  80a424:	8447883a 	add	r3,r16,r17
  80a428:	80800115 	stw	r2,4(r16)
  80a42c:	20800054 	ori	r2,r4,1
  80a430:	18800115 	stw	r2,4(r3)
  80a434:	e0c00215 	stw	r3,8(fp)
  80a438:	9009883a 	mov	r4,r18
  80a43c:	080e1040 	call	80e104 <__malloc_unlock>
  80a440:	80c00204 	addi	r3,r16,8
  80a444:	003f3106 	br	80a10c <_malloc_r+0x50>
  80a448:	39c00117 	ldw	r7,4(r7)
  80a44c:	573ffe04 	addi	fp,r10,-8
  80a450:	003fa006 	br	80a2d4 <_malloc_r+0x218>
  80a454:	00801504 	movi	r2,84
  80a458:	10c06736 	bltu	r2,r3,80a5f8 <_malloc_r+0x53c>
  80a45c:	8804d33a 	srli	r2,r17,12
  80a460:	11801b84 	addi	r6,r2,110
  80a464:	300490fa 	slli	r2,r6,3
  80a468:	003f4106 	br	80a170 <_malloc_r+0xb4>
  80a46c:	d0a6aa17 	ldw	r2,-25944(gp)
  80a470:	d0e00517 	ldw	r3,-32748(gp)
  80a474:	053fffc4 	movi	r20,-1
  80a478:	10800404 	addi	r2,r2,16
  80a47c:	88a7883a 	add	r19,r17,r2
  80a480:	1d000326 	beq	r3,r20,80a490 <_malloc_r+0x3d4>
  80a484:	98c3ffc4 	addi	r3,r19,4095
  80a488:	00bc0004 	movi	r2,-4096
  80a48c:	18a6703a 	and	r19,r3,r2
  80a490:	9009883a 	mov	r4,r18
  80a494:	980b883a 	mov	r5,r19
  80a498:	080c1e80 	call	80c1e8 <_sbrk_r>
  80a49c:	1009883a 	mov	r4,r2
  80a4a0:	15000426 	beq	r2,r20,80a4b4 <_malloc_r+0x3f8>
  80a4a4:	854b883a 	add	r5,r16,r21
  80a4a8:	1029883a 	mov	r20,r2
  80a4ac:	11405a2e 	bgeu	r2,r5,80a618 <_malloc_r+0x55c>
  80a4b0:	87000c26 	beq	r16,fp,80a4e4 <_malloc_r+0x428>
  80a4b4:	e4000217 	ldw	r16,8(fp)
  80a4b8:	80c00117 	ldw	r3,4(r16)
  80a4bc:	00bfff04 	movi	r2,-4
  80a4c0:	1884703a 	and	r2,r3,r2
  80a4c4:	14400336 	bltu	r2,r17,80a4d4 <_malloc_r+0x418>
  80a4c8:	1449c83a 	sub	r4,r2,r17
  80a4cc:	008003c4 	movi	r2,15
  80a4d0:	113fd316 	blt	r2,r4,80a420 <_malloc_r+0x364>
  80a4d4:	9009883a 	mov	r4,r18
  80a4d8:	080e1040 	call	80e104 <__malloc_unlock>
  80a4dc:	0007883a 	mov	r3,zero
  80a4e0:	003f0a06 	br	80a10c <_malloc_r+0x50>
  80a4e4:	05c02074 	movhi	r23,129
  80a4e8:	bdd05704 	addi	r23,r23,16732
  80a4ec:	b8800017 	ldw	r2,0(r23)
  80a4f0:	988d883a 	add	r6,r19,r2
  80a4f4:	b9800015 	stw	r6,0(r23)
  80a4f8:	d0e00517 	ldw	r3,-32748(gp)
  80a4fc:	00bfffc4 	movi	r2,-1
  80a500:	18808e26 	beq	r3,r2,80a73c <_malloc_r+0x680>
  80a504:	2145c83a 	sub	r2,r4,r5
  80a508:	3085883a 	add	r2,r6,r2
  80a50c:	b8800015 	stw	r2,0(r23)
  80a510:	20c001cc 	andi	r3,r4,7
  80a514:	18005f1e 	bne	r3,zero,80a694 <_malloc_r+0x5d8>
  80a518:	000b883a 	mov	r5,zero
  80a51c:	a4c5883a 	add	r2,r20,r19
  80a520:	1083ffcc 	andi	r2,r2,4095
  80a524:	00c40004 	movi	r3,4096
  80a528:	1887c83a 	sub	r3,r3,r2
  80a52c:	28e7883a 	add	r19,r5,r3
  80a530:	9009883a 	mov	r4,r18
  80a534:	980b883a 	mov	r5,r19
  80a538:	080c1e80 	call	80c1e8 <_sbrk_r>
  80a53c:	1007883a 	mov	r3,r2
  80a540:	00bfffc4 	movi	r2,-1
  80a544:	18807a26 	beq	r3,r2,80a730 <_malloc_r+0x674>
  80a548:	1d05c83a 	sub	r2,r3,r20
  80a54c:	9885883a 	add	r2,r19,r2
  80a550:	10c00054 	ori	r3,r2,1
  80a554:	b8800017 	ldw	r2,0(r23)
  80a558:	a021883a 	mov	r16,r20
  80a55c:	a0c00115 	stw	r3,4(r20)
  80a560:	9885883a 	add	r2,r19,r2
  80a564:	b8800015 	stw	r2,0(r23)
  80a568:	e5000215 	stw	r20,8(fp)
  80a56c:	b7003626 	beq	r22,fp,80a648 <_malloc_r+0x58c>
  80a570:	018003c4 	movi	r6,15
  80a574:	35404b36 	bltu	r6,r21,80a6a4 <_malloc_r+0x5e8>
  80a578:	00800044 	movi	r2,1
  80a57c:	a0800115 	stw	r2,4(r20)
  80a580:	003fcd06 	br	80a4b8 <_malloc_r+0x3fc>
  80a584:	2808d27a 	srli	r4,r5,9
  80a588:	2000371e 	bne	r4,zero,80a668 <_malloc_r+0x5ac>
  80a58c:	2808d0fa 	srli	r4,r5,3
  80a590:	200690fa 	slli	r3,r4,3
  80a594:	1ad1883a 	add	r8,r3,r11
  80a598:	41800217 	ldw	r6,8(r8)
  80a59c:	41805b26 	beq	r8,r6,80a70c <_malloc_r+0x650>
  80a5a0:	30800117 	ldw	r2,4(r6)
  80a5a4:	00ffff04 	movi	r3,-4
  80a5a8:	10c4703a 	and	r2,r2,r3
  80a5ac:	2880022e 	bgeu	r5,r2,80a5b8 <_malloc_r+0x4fc>
  80a5b0:	31800217 	ldw	r6,8(r6)
  80a5b4:	41bffa1e 	bne	r8,r6,80a5a0 <_malloc_r+0x4e4>
  80a5b8:	32000317 	ldw	r8,12(r6)
  80a5bc:	39c00117 	ldw	r7,4(r7)
  80a5c0:	82000315 	stw	r8,12(r16)
  80a5c4:	81800215 	stw	r6,8(r16)
  80a5c8:	07002074 	movhi	fp,129
  80a5cc:	e7041f04 	addi	fp,fp,4220
  80a5d0:	34000315 	stw	r16,12(r6)
  80a5d4:	44000215 	stw	r16,8(r8)
  80a5d8:	003f3e06 	br	80a2d4 <_malloc_r+0x218>
  80a5dc:	63000044 	addi	r12,r12,1
  80a5e0:	608000cc 	andi	r2,r12,3
  80a5e4:	10005d26 	beq	r2,zero,80a75c <_malloc_r+0x6a0>
  80a5e8:	18c00204 	addi	r3,r3,8
  80a5ec:	003f5106 	br	80a334 <_malloc_r+0x278>
  80a5f0:	8089883a 	add	r4,r16,r2
  80a5f4:	003f6d06 	br	80a3ac <_malloc_r+0x2f0>
  80a5f8:	00805504 	movi	r2,340
  80a5fc:	10c02036 	bltu	r2,r3,80a680 <_malloc_r+0x5c4>
  80a600:	8804d3fa 	srli	r2,r17,15
  80a604:	11801dc4 	addi	r6,r2,119
  80a608:	300490fa 	slli	r2,r6,3
  80a60c:	003ed806 	br	80a170 <_malloc_r+0xb4>
  80a610:	48c000c4 	addi	r3,r9,3
  80a614:	003f3106 	br	80a2dc <_malloc_r+0x220>
  80a618:	05c02074 	movhi	r23,129
  80a61c:	bdd05704 	addi	r23,r23,16732
  80a620:	b8800017 	ldw	r2,0(r23)
  80a624:	988d883a 	add	r6,r19,r2
  80a628:	b9800015 	stw	r6,0(r23)
  80a62c:	293fb21e 	bne	r5,r4,80a4f8 <_malloc_r+0x43c>
  80a630:	2083ffcc 	andi	r2,r4,4095
  80a634:	103fb01e 	bne	r2,zero,80a4f8 <_malloc_r+0x43c>
  80a638:	e4000217 	ldw	r16,8(fp)
  80a63c:	9d45883a 	add	r2,r19,r21
  80a640:	10800054 	ori	r2,r2,1
  80a644:	80800115 	stw	r2,4(r16)
  80a648:	b8c00017 	ldw	r3,0(r23)
  80a64c:	d0a6ab17 	ldw	r2,-25940(gp)
  80a650:	10c0012e 	bgeu	r2,r3,80a658 <_malloc_r+0x59c>
  80a654:	d0e6ab15 	stw	r3,-25940(gp)
  80a658:	d0a6ac17 	ldw	r2,-25936(gp)
  80a65c:	10ff962e 	bgeu	r2,r3,80a4b8 <_malloc_r+0x3fc>
  80a660:	d0e6ac15 	stw	r3,-25936(gp)
  80a664:	003f9406 	br	80a4b8 <_malloc_r+0x3fc>
  80a668:	00800104 	movi	r2,4
  80a66c:	11001e36 	bltu	r2,r4,80a6e8 <_malloc_r+0x62c>
  80a670:	2804d1ba 	srli	r2,r5,6
  80a674:	11000e04 	addi	r4,r2,56
  80a678:	200690fa 	slli	r3,r4,3
  80a67c:	003fc506 	br	80a594 <_malloc_r+0x4d8>
  80a680:	00815504 	movi	r2,1364
  80a684:	10c01d2e 	bgeu	r2,r3,80a6fc <_malloc_r+0x640>
  80a688:	01801f84 	movi	r6,126
  80a68c:	0080fc04 	movi	r2,1008
  80a690:	003eb706 	br	80a170 <_malloc_r+0xb4>
  80a694:	00800204 	movi	r2,8
  80a698:	10cbc83a 	sub	r5,r2,r3
  80a69c:	2169883a 	add	r20,r4,r5
  80a6a0:	003f9e06 	br	80a51c <_malloc_r+0x460>
  80a6a4:	00bffe04 	movi	r2,-8
  80a6a8:	a93ffd04 	addi	r4,r21,-12
  80a6ac:	2088703a 	and	r4,r4,r2
  80a6b0:	b10b883a 	add	r5,r22,r4
  80a6b4:	00c00144 	movi	r3,5
  80a6b8:	28c00215 	stw	r3,8(r5)
  80a6bc:	28c00115 	stw	r3,4(r5)
  80a6c0:	b0800117 	ldw	r2,4(r22)
  80a6c4:	1080004c 	andi	r2,r2,1
  80a6c8:	2084b03a 	or	r2,r4,r2
  80a6cc:	b0800115 	stw	r2,4(r22)
  80a6d0:	313fdd2e 	bgeu	r6,r4,80a648 <_malloc_r+0x58c>
  80a6d4:	b1400204 	addi	r5,r22,8
  80a6d8:	9009883a 	mov	r4,r18
  80a6dc:	08095340 	call	809534 <_free_r>
  80a6e0:	e4000217 	ldw	r16,8(fp)
  80a6e4:	003fd806 	br	80a648 <_malloc_r+0x58c>
  80a6e8:	00800504 	movi	r2,20
  80a6ec:	11001536 	bltu	r2,r4,80a744 <_malloc_r+0x688>
  80a6f0:	210016c4 	addi	r4,r4,91
  80a6f4:	200690fa 	slli	r3,r4,3
  80a6f8:	003fa606 	br	80a594 <_malloc_r+0x4d8>
  80a6fc:	8804d4ba 	srli	r2,r17,18
  80a700:	11801f04 	addi	r6,r2,124
  80a704:	300490fa 	slli	r2,r6,3
  80a708:	003e9906 	br	80a170 <_malloc_r+0xb4>
  80a70c:	2009d0ba 	srai	r4,r4,2
  80a710:	01402074 	movhi	r5,129
  80a714:	29441f04 	addi	r5,r5,4220
  80a718:	00c00044 	movi	r3,1
  80a71c:	28800117 	ldw	r2,4(r5)
  80a720:	1906983a 	sll	r3,r3,r4
  80a724:	10c4b03a 	or	r2,r2,r3
  80a728:	28800115 	stw	r2,4(r5)
  80a72c:	003fa306 	br	80a5bc <_malloc_r+0x500>
  80a730:	0027883a 	mov	r19,zero
  80a734:	00c00044 	movi	r3,1
  80a738:	003f8606 	br	80a554 <_malloc_r+0x498>
  80a73c:	d1200515 	stw	r4,-32748(gp)
  80a740:	003f7306 	br	80a510 <_malloc_r+0x454>
  80a744:	00801504 	movi	r2,84
  80a748:	11001936 	bltu	r2,r4,80a7b0 <_malloc_r+0x6f4>
  80a74c:	2804d33a 	srli	r2,r5,12
  80a750:	11001b84 	addi	r4,r2,110
  80a754:	200690fa 	slli	r3,r4,3
  80a758:	003f8e06 	br	80a594 <_malloc_r+0x4d8>
  80a75c:	480b883a 	mov	r5,r9
  80a760:	6807883a 	mov	r3,r13
  80a764:	288000cc 	andi	r2,r5,3
  80a768:	18fffe04 	addi	r3,r3,-8
  80a76c:	297fffc4 	addi	r5,r5,-1
  80a770:	10001526 	beq	r2,zero,80a7c8 <_malloc_r+0x70c>
  80a774:	18800217 	ldw	r2,8(r3)
  80a778:	10fffa26 	beq	r2,r3,80a764 <_malloc_r+0x6a8>
  80a77c:	2109883a 	add	r4,r4,r4
  80a780:	393f1e36 	bltu	r7,r4,80a3fc <_malloc_r+0x340>
  80a784:	203f1d26 	beq	r4,zero,80a3fc <_malloc_r+0x340>
  80a788:	21c4703a 	and	r2,r4,r7
  80a78c:	10000226 	beq	r2,zero,80a798 <_malloc_r+0x6dc>
  80a790:	6013883a 	mov	r9,r12
  80a794:	003ee106 	br	80a31c <_malloc_r+0x260>
  80a798:	2109883a 	add	r4,r4,r4
  80a79c:	3904703a 	and	r2,r7,r4
  80a7a0:	63000104 	addi	r12,r12,4
  80a7a4:	103ffc26 	beq	r2,zero,80a798 <_malloc_r+0x6dc>
  80a7a8:	6013883a 	mov	r9,r12
  80a7ac:	003edb06 	br	80a31c <_malloc_r+0x260>
  80a7b0:	00805504 	movi	r2,340
  80a7b4:	11000836 	bltu	r2,r4,80a7d8 <_malloc_r+0x71c>
  80a7b8:	2804d3fa 	srli	r2,r5,15
  80a7bc:	11001dc4 	addi	r4,r2,119
  80a7c0:	200690fa 	slli	r3,r4,3
  80a7c4:	003f7306 	br	80a594 <_malloc_r+0x4d8>
  80a7c8:	0104303a 	nor	r2,zero,r4
  80a7cc:	388e703a 	and	r7,r7,r2
  80a7d0:	e1c00115 	stw	r7,4(fp)
  80a7d4:	003fe906 	br	80a77c <_malloc_r+0x6c0>
  80a7d8:	00815504 	movi	r2,1364
  80a7dc:	1100032e 	bgeu	r2,r4,80a7ec <_malloc_r+0x730>
  80a7e0:	01001f84 	movi	r4,126
  80a7e4:	00c0fc04 	movi	r3,1008
  80a7e8:	003f6a06 	br	80a594 <_malloc_r+0x4d8>
  80a7ec:	2804d4ba 	srli	r2,r5,18
  80a7f0:	11001f04 	addi	r4,r2,124
  80a7f4:	200690fa 	slli	r3,r4,3
  80a7f8:	003f6606 	br	80a594 <_malloc_r+0x4d8>

0080a7fc <memchr>:
  80a7fc:	008000c4 	movi	r2,3
  80a800:	29403fcc 	andi	r5,r5,255
  80a804:	2007883a 	mov	r3,r4
  80a808:	1180022e 	bgeu	r2,r6,80a814 <memchr+0x18>
  80a80c:	2084703a 	and	r2,r4,r2
  80a810:	10000b26 	beq	r2,zero,80a840 <memchr+0x44>
  80a814:	313fffc4 	addi	r4,r6,-1
  80a818:	3000051e 	bne	r6,zero,80a830 <memchr+0x34>
  80a81c:	00002c06 	br	80a8d0 <memchr+0xd4>
  80a820:	213fffc4 	addi	r4,r4,-1
  80a824:	00bfffc4 	movi	r2,-1
  80a828:	18c00044 	addi	r3,r3,1
  80a82c:	20802826 	beq	r4,r2,80a8d0 <memchr+0xd4>
  80a830:	18800003 	ldbu	r2,0(r3)
  80a834:	28bffa1e 	bne	r5,r2,80a820 <memchr+0x24>
  80a838:	1805883a 	mov	r2,r3
  80a83c:	f800283a 	ret
  80a840:	0011883a 	mov	r8,zero
  80a844:	0007883a 	mov	r3,zero
  80a848:	01c00104 	movi	r7,4
  80a84c:	4004923a 	slli	r2,r8,8
  80a850:	18c00044 	addi	r3,r3,1
  80a854:	1151883a 	add	r8,r2,r5
  80a858:	19fffc1e 	bne	r3,r7,80a84c <memchr+0x50>
  80a85c:	02bfbff4 	movhi	r10,65279
  80a860:	52bfbfc4 	addi	r10,r10,-257
  80a864:	02602074 	movhi	r9,32897
  80a868:	4a602004 	addi	r9,r9,-32640
  80a86c:	02c000c4 	movi	r11,3
  80a870:	20800017 	ldw	r2,0(r4)
  80a874:	31bfff04 	addi	r6,r6,-4
  80a878:	200f883a 	mov	r7,r4
  80a87c:	1204f03a 	xor	r2,r2,r8
  80a880:	1287883a 	add	r3,r2,r10
  80a884:	1a46703a 	and	r3,r3,r9
  80a888:	0084303a 	nor	r2,zero,r2
  80a88c:	10c4703a 	and	r2,r2,r3
  80a890:	10000b26 	beq	r2,zero,80a8c0 <memchr+0xc4>
  80a894:	20800003 	ldbu	r2,0(r4)
  80a898:	28800f26 	beq	r5,r2,80a8d8 <memchr+0xdc>
  80a89c:	20800043 	ldbu	r2,1(r4)
  80a8a0:	21c00044 	addi	r7,r4,1
  80a8a4:	28800c26 	beq	r5,r2,80a8d8 <memchr+0xdc>
  80a8a8:	20800083 	ldbu	r2,2(r4)
  80a8ac:	21c00084 	addi	r7,r4,2
  80a8b0:	28800926 	beq	r5,r2,80a8d8 <memchr+0xdc>
  80a8b4:	208000c3 	ldbu	r2,3(r4)
  80a8b8:	21c000c4 	addi	r7,r4,3
  80a8bc:	28800626 	beq	r5,r2,80a8d8 <memchr+0xdc>
  80a8c0:	21000104 	addi	r4,r4,4
  80a8c4:	59bfea36 	bltu	r11,r6,80a870 <memchr+0x74>
  80a8c8:	2007883a 	mov	r3,r4
  80a8cc:	003fd106 	br	80a814 <memchr+0x18>
  80a8d0:	0005883a 	mov	r2,zero
  80a8d4:	f800283a 	ret
  80a8d8:	3805883a 	mov	r2,r7
  80a8dc:	f800283a 	ret

0080a8e0 <memcpy>:
  80a8e0:	01c003c4 	movi	r7,15
  80a8e4:	2007883a 	mov	r3,r4
  80a8e8:	3980032e 	bgeu	r7,r6,80a8f8 <memcpy+0x18>
  80a8ec:	2904b03a 	or	r2,r5,r4
  80a8f0:	108000cc 	andi	r2,r2,3
  80a8f4:	10000926 	beq	r2,zero,80a91c <memcpy+0x3c>
  80a8f8:	30000626 	beq	r6,zero,80a914 <memcpy+0x34>
  80a8fc:	30cd883a 	add	r6,r6,r3
  80a900:	28800003 	ldbu	r2,0(r5)
  80a904:	29400044 	addi	r5,r5,1
  80a908:	18800005 	stb	r2,0(r3)
  80a90c:	18c00044 	addi	r3,r3,1
  80a910:	30fffb1e 	bne	r6,r3,80a900 <memcpy+0x20>
  80a914:	2005883a 	mov	r2,r4
  80a918:	f800283a 	ret
  80a91c:	3811883a 	mov	r8,r7
  80a920:	200f883a 	mov	r7,r4
  80a924:	28c00017 	ldw	r3,0(r5)
  80a928:	31bffc04 	addi	r6,r6,-16
  80a92c:	38c00015 	stw	r3,0(r7)
  80a930:	28800117 	ldw	r2,4(r5)
  80a934:	38800115 	stw	r2,4(r7)
  80a938:	28c00217 	ldw	r3,8(r5)
  80a93c:	38c00215 	stw	r3,8(r7)
  80a940:	28800317 	ldw	r2,12(r5)
  80a944:	29400404 	addi	r5,r5,16
  80a948:	38800315 	stw	r2,12(r7)
  80a94c:	39c00404 	addi	r7,r7,16
  80a950:	41bff436 	bltu	r8,r6,80a924 <memcpy+0x44>
  80a954:	008000c4 	movi	r2,3
  80a958:	1180072e 	bgeu	r2,r6,80a978 <memcpy+0x98>
  80a95c:	1007883a 	mov	r3,r2
  80a960:	28800017 	ldw	r2,0(r5)
  80a964:	31bfff04 	addi	r6,r6,-4
  80a968:	29400104 	addi	r5,r5,4
  80a96c:	38800015 	stw	r2,0(r7)
  80a970:	39c00104 	addi	r7,r7,4
  80a974:	19bffa36 	bltu	r3,r6,80a960 <memcpy+0x80>
  80a978:	3807883a 	mov	r3,r7
  80a97c:	003fde06 	br	80a8f8 <memcpy+0x18>

0080a980 <memmove>:
  80a980:	2807883a 	mov	r3,r5
  80a984:	2011883a 	mov	r8,r4
  80a988:	29000c2e 	bgeu	r5,r4,80a9bc <memmove+0x3c>
  80a98c:	298f883a 	add	r7,r5,r6
  80a990:	21c00a2e 	bgeu	r4,r7,80a9bc <memmove+0x3c>
  80a994:	30000726 	beq	r6,zero,80a9b4 <memmove+0x34>
  80a998:	2187883a 	add	r3,r4,r6
  80a99c:	198dc83a 	sub	r6,r3,r6
  80a9a0:	39ffffc4 	addi	r7,r7,-1
  80a9a4:	38800003 	ldbu	r2,0(r7)
  80a9a8:	18ffffc4 	addi	r3,r3,-1
  80a9ac:	18800005 	stb	r2,0(r3)
  80a9b0:	19bffb1e 	bne	r3,r6,80a9a0 <memmove+0x20>
  80a9b4:	2005883a 	mov	r2,r4
  80a9b8:	f800283a 	ret
  80a9bc:	01c003c4 	movi	r7,15
  80a9c0:	39800a36 	bltu	r7,r6,80a9ec <memmove+0x6c>
  80a9c4:	303ffb26 	beq	r6,zero,80a9b4 <memmove+0x34>
  80a9c8:	400f883a 	mov	r7,r8
  80a9cc:	320d883a 	add	r6,r6,r8
  80a9d0:	28800003 	ldbu	r2,0(r5)
  80a9d4:	29400044 	addi	r5,r5,1
  80a9d8:	38800005 	stb	r2,0(r7)
  80a9dc:	39c00044 	addi	r7,r7,1
  80a9e0:	39bffb1e 	bne	r7,r6,80a9d0 <memmove+0x50>
  80a9e4:	2005883a 	mov	r2,r4
  80a9e8:	f800283a 	ret
  80a9ec:	1904b03a 	or	r2,r3,r4
  80a9f0:	108000cc 	andi	r2,r2,3
  80a9f4:	103ff31e 	bne	r2,zero,80a9c4 <memmove+0x44>
  80a9f8:	3811883a 	mov	r8,r7
  80a9fc:	180b883a 	mov	r5,r3
  80aa00:	200f883a 	mov	r7,r4
  80aa04:	28c00017 	ldw	r3,0(r5)
  80aa08:	31bffc04 	addi	r6,r6,-16
  80aa0c:	38c00015 	stw	r3,0(r7)
  80aa10:	28800117 	ldw	r2,4(r5)
  80aa14:	38800115 	stw	r2,4(r7)
  80aa18:	28c00217 	ldw	r3,8(r5)
  80aa1c:	38c00215 	stw	r3,8(r7)
  80aa20:	28800317 	ldw	r2,12(r5)
  80aa24:	29400404 	addi	r5,r5,16
  80aa28:	38800315 	stw	r2,12(r7)
  80aa2c:	39c00404 	addi	r7,r7,16
  80aa30:	41bff436 	bltu	r8,r6,80aa04 <memmove+0x84>
  80aa34:	008000c4 	movi	r2,3
  80aa38:	1180072e 	bgeu	r2,r6,80aa58 <memmove+0xd8>
  80aa3c:	1007883a 	mov	r3,r2
  80aa40:	28800017 	ldw	r2,0(r5)
  80aa44:	31bfff04 	addi	r6,r6,-4
  80aa48:	29400104 	addi	r5,r5,4
  80aa4c:	38800015 	stw	r2,0(r7)
  80aa50:	39c00104 	addi	r7,r7,4
  80aa54:	19bffa36 	bltu	r3,r6,80aa40 <memmove+0xc0>
  80aa58:	3811883a 	mov	r8,r7
  80aa5c:	003fd906 	br	80a9c4 <memmove+0x44>

0080aa60 <memset>:
  80aa60:	008000c4 	movi	r2,3
  80aa64:	29403fcc 	andi	r5,r5,255
  80aa68:	2007883a 	mov	r3,r4
  80aa6c:	1180022e 	bgeu	r2,r6,80aa78 <memset+0x18>
  80aa70:	2084703a 	and	r2,r4,r2
  80aa74:	10000826 	beq	r2,zero,80aa98 <memset+0x38>
  80aa78:	30000526 	beq	r6,zero,80aa90 <memset+0x30>
  80aa7c:	2805883a 	mov	r2,r5
  80aa80:	30cd883a 	add	r6,r6,r3
  80aa84:	18800005 	stb	r2,0(r3)
  80aa88:	18c00044 	addi	r3,r3,1
  80aa8c:	19bffd1e 	bne	r3,r6,80aa84 <memset+0x24>
  80aa90:	2005883a 	mov	r2,r4
  80aa94:	f800283a 	ret
  80aa98:	2804923a 	slli	r2,r5,8
  80aa9c:	020003c4 	movi	r8,15
  80aaa0:	200f883a 	mov	r7,r4
  80aaa4:	2884b03a 	or	r2,r5,r2
  80aaa8:	1006943a 	slli	r3,r2,16
  80aaac:	10c6b03a 	or	r3,r2,r3
  80aab0:	41800a2e 	bgeu	r8,r6,80aadc <memset+0x7c>
  80aab4:	4005883a 	mov	r2,r8
  80aab8:	31bffc04 	addi	r6,r6,-16
  80aabc:	38c00015 	stw	r3,0(r7)
  80aac0:	38c00115 	stw	r3,4(r7)
  80aac4:	38c00215 	stw	r3,8(r7)
  80aac8:	38c00315 	stw	r3,12(r7)
  80aacc:	39c00404 	addi	r7,r7,16
  80aad0:	11bff936 	bltu	r2,r6,80aab8 <memset+0x58>
  80aad4:	008000c4 	movi	r2,3
  80aad8:	1180052e 	bgeu	r2,r6,80aaf0 <memset+0x90>
  80aadc:	31bfff04 	addi	r6,r6,-4
  80aae0:	008000c4 	movi	r2,3
  80aae4:	38c00015 	stw	r3,0(r7)
  80aae8:	39c00104 	addi	r7,r7,4
  80aaec:	11bffb36 	bltu	r2,r6,80aadc <memset+0x7c>
  80aaf0:	3807883a 	mov	r3,r7
  80aaf4:	003fe006 	br	80aa78 <memset+0x18>

0080aaf8 <_Bfree>:
  80aaf8:	28000826 	beq	r5,zero,80ab1c <_Bfree+0x24>
  80aafc:	28800117 	ldw	r2,4(r5)
  80ab00:	21001317 	ldw	r4,76(r4)
  80ab04:	1085883a 	add	r2,r2,r2
  80ab08:	1085883a 	add	r2,r2,r2
  80ab0c:	1105883a 	add	r2,r2,r4
  80ab10:	10c00017 	ldw	r3,0(r2)
  80ab14:	28c00015 	stw	r3,0(r5)
  80ab18:	11400015 	stw	r5,0(r2)
  80ab1c:	f800283a 	ret

0080ab20 <__hi0bits>:
  80ab20:	20bfffec 	andhi	r2,r4,65535
  80ab24:	10001426 	beq	r2,zero,80ab78 <__hi0bits+0x58>
  80ab28:	0007883a 	mov	r3,zero
  80ab2c:	20bfc02c 	andhi	r2,r4,65280
  80ab30:	1000021e 	bne	r2,zero,80ab3c <__hi0bits+0x1c>
  80ab34:	2008923a 	slli	r4,r4,8
  80ab38:	18c00204 	addi	r3,r3,8
  80ab3c:	20bc002c 	andhi	r2,r4,61440
  80ab40:	1000021e 	bne	r2,zero,80ab4c <__hi0bits+0x2c>
  80ab44:	2008913a 	slli	r4,r4,4
  80ab48:	18c00104 	addi	r3,r3,4
  80ab4c:	20b0002c 	andhi	r2,r4,49152
  80ab50:	1000031e 	bne	r2,zero,80ab60 <__hi0bits+0x40>
  80ab54:	2105883a 	add	r2,r4,r4
  80ab58:	18c00084 	addi	r3,r3,2
  80ab5c:	1089883a 	add	r4,r2,r2
  80ab60:	20000316 	blt	r4,zero,80ab70 <__hi0bits+0x50>
  80ab64:	2090002c 	andhi	r2,r4,16384
  80ab68:	10000626 	beq	r2,zero,80ab84 <__hi0bits+0x64>
  80ab6c:	18c00044 	addi	r3,r3,1
  80ab70:	1805883a 	mov	r2,r3
  80ab74:	f800283a 	ret
  80ab78:	2008943a 	slli	r4,r4,16
  80ab7c:	00c00404 	movi	r3,16
  80ab80:	003fea06 	br	80ab2c <__hi0bits+0xc>
  80ab84:	00c00804 	movi	r3,32
  80ab88:	1805883a 	mov	r2,r3
  80ab8c:	f800283a 	ret

0080ab90 <__lo0bits>:
  80ab90:	20c00017 	ldw	r3,0(r4)
  80ab94:	188001cc 	andi	r2,r3,7
  80ab98:	10000a26 	beq	r2,zero,80abc4 <__lo0bits+0x34>
  80ab9c:	1880004c 	andi	r2,r3,1
  80aba0:	1005003a 	cmpeq	r2,r2,zero
  80aba4:	10002126 	beq	r2,zero,80ac2c <__lo0bits+0x9c>
  80aba8:	1880008c 	andi	r2,r3,2
  80abac:	1000251e 	bne	r2,zero,80ac44 <__lo0bits+0xb4>
  80abb0:	1804d0ba 	srli	r2,r3,2
  80abb4:	01400084 	movi	r5,2
  80abb8:	20800015 	stw	r2,0(r4)
  80abbc:	2805883a 	mov	r2,r5
  80abc0:	f800283a 	ret
  80abc4:	18bfffcc 	andi	r2,r3,65535
  80abc8:	10001526 	beq	r2,zero,80ac20 <__lo0bits+0x90>
  80abcc:	000b883a 	mov	r5,zero
  80abd0:	18803fcc 	andi	r2,r3,255
  80abd4:	1000021e 	bne	r2,zero,80abe0 <__lo0bits+0x50>
  80abd8:	1806d23a 	srli	r3,r3,8
  80abdc:	29400204 	addi	r5,r5,8
  80abe0:	188003cc 	andi	r2,r3,15
  80abe4:	1000021e 	bne	r2,zero,80abf0 <__lo0bits+0x60>
  80abe8:	1806d13a 	srli	r3,r3,4
  80abec:	29400104 	addi	r5,r5,4
  80abf0:	188000cc 	andi	r2,r3,3
  80abf4:	1000021e 	bne	r2,zero,80ac00 <__lo0bits+0x70>
  80abf8:	1806d0ba 	srli	r3,r3,2
  80abfc:	29400084 	addi	r5,r5,2
  80ac00:	1880004c 	andi	r2,r3,1
  80ac04:	1000031e 	bne	r2,zero,80ac14 <__lo0bits+0x84>
  80ac08:	1806d07a 	srli	r3,r3,1
  80ac0c:	18000a26 	beq	r3,zero,80ac38 <__lo0bits+0xa8>
  80ac10:	29400044 	addi	r5,r5,1
  80ac14:	2805883a 	mov	r2,r5
  80ac18:	20c00015 	stw	r3,0(r4)
  80ac1c:	f800283a 	ret
  80ac20:	1806d43a 	srli	r3,r3,16
  80ac24:	01400404 	movi	r5,16
  80ac28:	003fe906 	br	80abd0 <__lo0bits+0x40>
  80ac2c:	000b883a 	mov	r5,zero
  80ac30:	2805883a 	mov	r2,r5
  80ac34:	f800283a 	ret
  80ac38:	01400804 	movi	r5,32
  80ac3c:	2805883a 	mov	r2,r5
  80ac40:	f800283a 	ret
  80ac44:	1804d07a 	srli	r2,r3,1
  80ac48:	01400044 	movi	r5,1
  80ac4c:	20800015 	stw	r2,0(r4)
  80ac50:	003fda06 	br	80abbc <__lo0bits+0x2c>

0080ac54 <__mcmp>:
  80ac54:	20800417 	ldw	r2,16(r4)
  80ac58:	28c00417 	ldw	r3,16(r5)
  80ac5c:	10cfc83a 	sub	r7,r2,r3
  80ac60:	38000c1e 	bne	r7,zero,80ac94 <__mcmp+0x40>
  80ac64:	18c5883a 	add	r2,r3,r3
  80ac68:	1085883a 	add	r2,r2,r2
  80ac6c:	10c00504 	addi	r3,r2,20
  80ac70:	21000504 	addi	r4,r4,20
  80ac74:	28cb883a 	add	r5,r5,r3
  80ac78:	2085883a 	add	r2,r4,r2
  80ac7c:	10bfff04 	addi	r2,r2,-4
  80ac80:	297fff04 	addi	r5,r5,-4
  80ac84:	11800017 	ldw	r6,0(r2)
  80ac88:	28c00017 	ldw	r3,0(r5)
  80ac8c:	30c0031e 	bne	r6,r3,80ac9c <__mcmp+0x48>
  80ac90:	20bffa36 	bltu	r4,r2,80ac7c <__mcmp+0x28>
  80ac94:	3805883a 	mov	r2,r7
  80ac98:	f800283a 	ret
  80ac9c:	30c00336 	bltu	r6,r3,80acac <__mcmp+0x58>
  80aca0:	01c00044 	movi	r7,1
  80aca4:	3805883a 	mov	r2,r7
  80aca8:	f800283a 	ret
  80acac:	01ffffc4 	movi	r7,-1
  80acb0:	003ff806 	br	80ac94 <__mcmp+0x40>

0080acb4 <__ulp>:
  80acb4:	295ffc2c 	andhi	r5,r5,32752
  80acb8:	013f3034 	movhi	r4,64704
  80acbc:	290b883a 	add	r5,r5,r4
  80acc0:	0145c83a 	sub	r2,zero,r5
  80acc4:	1007d53a 	srai	r3,r2,20
  80acc8:	000d883a 	mov	r6,zero
  80accc:	0140040e 	bge	zero,r5,80ace0 <__ulp+0x2c>
  80acd0:	280f883a 	mov	r7,r5
  80acd4:	3807883a 	mov	r3,r7
  80acd8:	3005883a 	mov	r2,r6
  80acdc:	f800283a 	ret
  80ace0:	008004c4 	movi	r2,19
  80ace4:	193ffb04 	addi	r4,r3,-20
  80ace8:	10c00c0e 	bge	r2,r3,80ad1c <__ulp+0x68>
  80acec:	008007c4 	movi	r2,31
  80acf0:	1107c83a 	sub	r3,r2,r4
  80acf4:	00800784 	movi	r2,30
  80acf8:	01400044 	movi	r5,1
  80acfc:	11000216 	blt	r2,r4,80ad08 <__ulp+0x54>
  80ad00:	00800044 	movi	r2,1
  80ad04:	10ca983a 	sll	r5,r2,r3
  80ad08:	000f883a 	mov	r7,zero
  80ad0c:	280d883a 	mov	r6,r5
  80ad10:	3807883a 	mov	r3,r7
  80ad14:	3005883a 	mov	r2,r6
  80ad18:	f800283a 	ret
  80ad1c:	00800234 	movhi	r2,8
  80ad20:	10cfd83a 	sra	r7,r2,r3
  80ad24:	000d883a 	mov	r6,zero
  80ad28:	3005883a 	mov	r2,r6
  80ad2c:	3807883a 	mov	r3,r7
  80ad30:	f800283a 	ret

0080ad34 <__b2d>:
  80ad34:	20800417 	ldw	r2,16(r4)
  80ad38:	defff904 	addi	sp,sp,-28
  80ad3c:	dd000415 	stw	r20,16(sp)
  80ad40:	1085883a 	add	r2,r2,r2
  80ad44:	25000504 	addi	r20,r4,20
  80ad48:	1085883a 	add	r2,r2,r2
  80ad4c:	dc000015 	stw	r16,0(sp)
  80ad50:	a0a1883a 	add	r16,r20,r2
  80ad54:	dd400515 	stw	r21,20(sp)
  80ad58:	857fff17 	ldw	r21,-4(r16)
  80ad5c:	dc400115 	stw	r17,4(sp)
  80ad60:	dfc00615 	stw	ra,24(sp)
  80ad64:	a809883a 	mov	r4,r21
  80ad68:	2823883a 	mov	r17,r5
  80ad6c:	dcc00315 	stw	r19,12(sp)
  80ad70:	dc800215 	stw	r18,8(sp)
  80ad74:	080ab200 	call	80ab20 <__hi0bits>
  80ad78:	100b883a 	mov	r5,r2
  80ad7c:	00800804 	movi	r2,32
  80ad80:	1145c83a 	sub	r2,r2,r5
  80ad84:	88800015 	stw	r2,0(r17)
  80ad88:	00800284 	movi	r2,10
  80ad8c:	80ffff04 	addi	r3,r16,-4
  80ad90:	11401416 	blt	r2,r5,80ade4 <__b2d+0xb0>
  80ad94:	008002c4 	movi	r2,11
  80ad98:	1149c83a 	sub	r4,r2,r5
  80ad9c:	a0c02736 	bltu	r20,r3,80ae3c <__b2d+0x108>
  80ada0:	000d883a 	mov	r6,zero
  80ada4:	28800544 	addi	r2,r5,21
  80ada8:	a906d83a 	srl	r3,r21,r4
  80adac:	a884983a 	sll	r2,r21,r2
  80adb0:	1ccffc34 	orhi	r19,r3,16368
  80adb4:	11a4b03a 	or	r18,r2,r6
  80adb8:	9005883a 	mov	r2,r18
  80adbc:	9807883a 	mov	r3,r19
  80adc0:	dfc00617 	ldw	ra,24(sp)
  80adc4:	dd400517 	ldw	r21,20(sp)
  80adc8:	dd000417 	ldw	r20,16(sp)
  80adcc:	dcc00317 	ldw	r19,12(sp)
  80add0:	dc800217 	ldw	r18,8(sp)
  80add4:	dc400117 	ldw	r17,4(sp)
  80add8:	dc000017 	ldw	r16,0(sp)
  80addc:	dec00704 	addi	sp,sp,28
  80ade0:	f800283a 	ret
  80ade4:	a0c00e36 	bltu	r20,r3,80ae20 <__b2d+0xec>
  80ade8:	293ffd44 	addi	r4,r5,-11
  80adec:	000d883a 	mov	r6,zero
  80adf0:	20000f26 	beq	r4,zero,80ae30 <__b2d+0xfc>
  80adf4:	00800804 	movi	r2,32
  80adf8:	110bc83a 	sub	r5,r2,r4
  80adfc:	a0c01236 	bltu	r20,r3,80ae48 <__b2d+0x114>
  80ae00:	000f883a 	mov	r7,zero
  80ae04:	a904983a 	sll	r2,r21,r4
  80ae08:	3146d83a 	srl	r3,r6,r5
  80ae0c:	3108983a 	sll	r4,r6,r4
  80ae10:	108ffc34 	orhi	r2,r2,16368
  80ae14:	18a6b03a 	or	r19,r3,r2
  80ae18:	3924b03a 	or	r18,r7,r4
  80ae1c:	003fe606 	br	80adb8 <__b2d+0x84>
  80ae20:	293ffd44 	addi	r4,r5,-11
  80ae24:	81bffe17 	ldw	r6,-8(r16)
  80ae28:	80fffe04 	addi	r3,r16,-8
  80ae2c:	203ff11e 	bne	r4,zero,80adf4 <__b2d+0xc0>
  80ae30:	accffc34 	orhi	r19,r21,16368
  80ae34:	3025883a 	mov	r18,r6
  80ae38:	003fdf06 	br	80adb8 <__b2d+0x84>
  80ae3c:	18bfff17 	ldw	r2,-4(r3)
  80ae40:	110cd83a 	srl	r6,r2,r4
  80ae44:	003fd706 	br	80ada4 <__b2d+0x70>
  80ae48:	18bfff17 	ldw	r2,-4(r3)
  80ae4c:	114ed83a 	srl	r7,r2,r5
  80ae50:	003fec06 	br	80ae04 <__b2d+0xd0>

0080ae54 <__ratio>:
  80ae54:	defff904 	addi	sp,sp,-28
  80ae58:	dc400215 	stw	r17,8(sp)
  80ae5c:	2823883a 	mov	r17,r5
  80ae60:	d80b883a 	mov	r5,sp
  80ae64:	dfc00615 	stw	ra,24(sp)
  80ae68:	dd000515 	stw	r20,20(sp)
  80ae6c:	dcc00415 	stw	r19,16(sp)
  80ae70:	dc800315 	stw	r18,12(sp)
  80ae74:	2025883a 	mov	r18,r4
  80ae78:	080ad340 	call	80ad34 <__b2d>
  80ae7c:	8809883a 	mov	r4,r17
  80ae80:	d9400104 	addi	r5,sp,4
  80ae84:	1027883a 	mov	r19,r2
  80ae88:	1829883a 	mov	r20,r3
  80ae8c:	080ad340 	call	80ad34 <__b2d>
  80ae90:	89000417 	ldw	r4,16(r17)
  80ae94:	91c00417 	ldw	r7,16(r18)
  80ae98:	d9800117 	ldw	r6,4(sp)
  80ae9c:	180b883a 	mov	r5,r3
  80aea0:	390fc83a 	sub	r7,r7,r4
  80aea4:	1009883a 	mov	r4,r2
  80aea8:	d8800017 	ldw	r2,0(sp)
  80aeac:	380e917a 	slli	r7,r7,5
  80aeb0:	2011883a 	mov	r8,r4
  80aeb4:	1185c83a 	sub	r2,r2,r6
  80aeb8:	11c5883a 	add	r2,r2,r7
  80aebc:	1006953a 	slli	r3,r2,20
  80aec0:	2813883a 	mov	r9,r5
  80aec4:	00800d0e 	bge	zero,r2,80aefc <__ratio+0xa8>
  80aec8:	1d29883a 	add	r20,r3,r20
  80aecc:	a00b883a 	mov	r5,r20
  80aed0:	480f883a 	mov	r7,r9
  80aed4:	9809883a 	mov	r4,r19
  80aed8:	400d883a 	mov	r6,r8
  80aedc:	080d6600 	call	80d660 <__divdf3>
  80aee0:	dfc00617 	ldw	ra,24(sp)
  80aee4:	dd000517 	ldw	r20,20(sp)
  80aee8:	dcc00417 	ldw	r19,16(sp)
  80aeec:	dc800317 	ldw	r18,12(sp)
  80aef0:	dc400217 	ldw	r17,8(sp)
  80aef4:	dec00704 	addi	sp,sp,28
  80aef8:	f800283a 	ret
  80aefc:	28d3c83a 	sub	r9,r5,r3
  80af00:	003ff206 	br	80aecc <__ratio+0x78>

0080af04 <_mprec_log10>:
  80af04:	defffe04 	addi	sp,sp,-8
  80af08:	008005c4 	movi	r2,23
  80af0c:	dc000015 	stw	r16,0(sp)
  80af10:	dfc00115 	stw	ra,4(sp)
  80af14:	2021883a 	mov	r16,r4
  80af18:	11000c16 	blt	r2,r4,80af4c <_mprec_log10+0x48>
  80af1c:	200490fa 	slli	r2,r4,3
  80af20:	00c02074 	movhi	r3,129
  80af24:	18c2c804 	addi	r3,r3,2848
  80af28:	10c5883a 	add	r2,r2,r3
  80af2c:	12400117 	ldw	r9,4(r2)
  80af30:	12000017 	ldw	r8,0(r2)
  80af34:	4807883a 	mov	r3,r9
  80af38:	4005883a 	mov	r2,r8
  80af3c:	dfc00117 	ldw	ra,4(sp)
  80af40:	dc000017 	ldw	r16,0(sp)
  80af44:	dec00204 	addi	sp,sp,8
  80af48:	f800283a 	ret
  80af4c:	0011883a 	mov	r8,zero
  80af50:	024ffc34 	movhi	r9,16368
  80af54:	0005883a 	mov	r2,zero
  80af58:	00d00934 	movhi	r3,16420
  80af5c:	480b883a 	mov	r5,r9
  80af60:	4009883a 	mov	r4,r8
  80af64:	180f883a 	mov	r7,r3
  80af68:	100d883a 	mov	r6,r2
  80af6c:	080340c0 	call	80340c <__muldf3>
  80af70:	843fffc4 	addi	r16,r16,-1
  80af74:	1011883a 	mov	r8,r2
  80af78:	1813883a 	mov	r9,r3
  80af7c:	803ff51e 	bne	r16,zero,80af54 <_mprec_log10+0x50>
  80af80:	4005883a 	mov	r2,r8
  80af84:	4807883a 	mov	r3,r9
  80af88:	dfc00117 	ldw	ra,4(sp)
  80af8c:	dc000017 	ldw	r16,0(sp)
  80af90:	dec00204 	addi	sp,sp,8
  80af94:	f800283a 	ret

0080af98 <__copybits>:
  80af98:	297fffc4 	addi	r5,r5,-1
  80af9c:	30800417 	ldw	r2,16(r6)
  80afa0:	280bd17a 	srai	r5,r5,5
  80afa4:	31800504 	addi	r6,r6,20
  80afa8:	1085883a 	add	r2,r2,r2
  80afac:	294b883a 	add	r5,r5,r5
  80afb0:	294b883a 	add	r5,r5,r5
  80afb4:	1085883a 	add	r2,r2,r2
  80afb8:	290b883a 	add	r5,r5,r4
  80afbc:	3087883a 	add	r3,r6,r2
  80afc0:	29400104 	addi	r5,r5,4
  80afc4:	30c0052e 	bgeu	r6,r3,80afdc <__copybits+0x44>
  80afc8:	30800017 	ldw	r2,0(r6)
  80afcc:	31800104 	addi	r6,r6,4
  80afd0:	20800015 	stw	r2,0(r4)
  80afd4:	21000104 	addi	r4,r4,4
  80afd8:	30fffb36 	bltu	r6,r3,80afc8 <__copybits+0x30>
  80afdc:	2140032e 	bgeu	r4,r5,80afec <__copybits+0x54>
  80afe0:	20000015 	stw	zero,0(r4)
  80afe4:	21000104 	addi	r4,r4,4
  80afe8:	217ffd36 	bltu	r4,r5,80afe0 <__copybits+0x48>
  80afec:	f800283a 	ret

0080aff0 <__any_on>:
  80aff0:	20800417 	ldw	r2,16(r4)
  80aff4:	2807d17a 	srai	r3,r5,5
  80aff8:	21000504 	addi	r4,r4,20
  80affc:	10c00d0e 	bge	r2,r3,80b034 <__any_on+0x44>
  80b000:	1085883a 	add	r2,r2,r2
  80b004:	1085883a 	add	r2,r2,r2
  80b008:	208d883a 	add	r6,r4,r2
  80b00c:	2180182e 	bgeu	r4,r6,80b070 <__any_on+0x80>
  80b010:	30bfff17 	ldw	r2,-4(r6)
  80b014:	30ffff04 	addi	r3,r6,-4
  80b018:	1000041e 	bne	r2,zero,80b02c <__any_on+0x3c>
  80b01c:	20c0142e 	bgeu	r4,r3,80b070 <__any_on+0x80>
  80b020:	18ffff04 	addi	r3,r3,-4
  80b024:	18800017 	ldw	r2,0(r3)
  80b028:	103ffc26 	beq	r2,zero,80b01c <__any_on+0x2c>
  80b02c:	00800044 	movi	r2,1
  80b030:	f800283a 	ret
  80b034:	18800a0e 	bge	r3,r2,80b060 <__any_on+0x70>
  80b038:	294007cc 	andi	r5,r5,31
  80b03c:	28000826 	beq	r5,zero,80b060 <__any_on+0x70>
  80b040:	18c5883a 	add	r2,r3,r3
  80b044:	1085883a 	add	r2,r2,r2
  80b048:	208d883a 	add	r6,r4,r2
  80b04c:	30c00017 	ldw	r3,0(r6)
  80b050:	1944d83a 	srl	r2,r3,r5
  80b054:	1144983a 	sll	r2,r2,r5
  80b058:	18bff41e 	bne	r3,r2,80b02c <__any_on+0x3c>
  80b05c:	003feb06 	br	80b00c <__any_on+0x1c>
  80b060:	18c5883a 	add	r2,r3,r3
  80b064:	1085883a 	add	r2,r2,r2
  80b068:	208d883a 	add	r6,r4,r2
  80b06c:	003fe706 	br	80b00c <__any_on+0x1c>
  80b070:	0005883a 	mov	r2,zero
  80b074:	f800283a 	ret

0080b078 <_Balloc>:
  80b078:	20c01317 	ldw	r3,76(r4)
  80b07c:	defffb04 	addi	sp,sp,-20
  80b080:	dcc00315 	stw	r19,12(sp)
  80b084:	dc800215 	stw	r18,8(sp)
  80b088:	dfc00415 	stw	ra,16(sp)
  80b08c:	2825883a 	mov	r18,r5
  80b090:	dc400115 	stw	r17,4(sp)
  80b094:	dc000015 	stw	r16,0(sp)
  80b098:	2027883a 	mov	r19,r4
  80b09c:	01800404 	movi	r6,16
  80b0a0:	01400104 	movi	r5,4
  80b0a4:	18001726 	beq	r3,zero,80b104 <_Balloc+0x8c>
  80b0a8:	01400044 	movi	r5,1
  80b0ac:	9485883a 	add	r2,r18,r18
  80b0b0:	2ca2983a 	sll	r17,r5,r18
  80b0b4:	1085883a 	add	r2,r2,r2
  80b0b8:	10c7883a 	add	r3,r2,r3
  80b0bc:	1c000017 	ldw	r16,0(r3)
  80b0c0:	8c4d883a 	add	r6,r17,r17
  80b0c4:	318d883a 	add	r6,r6,r6
  80b0c8:	9809883a 	mov	r4,r19
  80b0cc:	31800504 	addi	r6,r6,20
  80b0d0:	80001226 	beq	r16,zero,80b11c <_Balloc+0xa4>
  80b0d4:	80800017 	ldw	r2,0(r16)
  80b0d8:	18800015 	stw	r2,0(r3)
  80b0dc:	80000415 	stw	zero,16(r16)
  80b0e0:	80000315 	stw	zero,12(r16)
  80b0e4:	8005883a 	mov	r2,r16
  80b0e8:	dfc00417 	ldw	ra,16(sp)
  80b0ec:	dcc00317 	ldw	r19,12(sp)
  80b0f0:	dc800217 	ldw	r18,8(sp)
  80b0f4:	dc400117 	ldw	r17,4(sp)
  80b0f8:	dc000017 	ldw	r16,0(sp)
  80b0fc:	dec00504 	addi	sp,sp,20
  80b100:	f800283a 	ret
  80b104:	080c5640 	call	80c564 <_calloc_r>
  80b108:	1007883a 	mov	r3,r2
  80b10c:	0021883a 	mov	r16,zero
  80b110:	98801315 	stw	r2,76(r19)
  80b114:	103fe41e 	bne	r2,zero,80b0a8 <_Balloc+0x30>
  80b118:	003ff206 	br	80b0e4 <_Balloc+0x6c>
  80b11c:	080c5640 	call	80c564 <_calloc_r>
  80b120:	103ff026 	beq	r2,zero,80b0e4 <_Balloc+0x6c>
  80b124:	1021883a 	mov	r16,r2
  80b128:	14800115 	stw	r18,4(r2)
  80b12c:	14400215 	stw	r17,8(r2)
  80b130:	003fea06 	br	80b0dc <_Balloc+0x64>

0080b134 <__d2b>:
  80b134:	defff504 	addi	sp,sp,-44
  80b138:	dcc00515 	stw	r19,20(sp)
  80b13c:	04c00044 	movi	r19,1
  80b140:	dc000215 	stw	r16,8(sp)
  80b144:	2821883a 	mov	r16,r5
  80b148:	980b883a 	mov	r5,r19
  80b14c:	ddc00915 	stw	r23,36(sp)
  80b150:	dd800815 	stw	r22,32(sp)
  80b154:	dd400715 	stw	r21,28(sp)
  80b158:	dd000615 	stw	r20,24(sp)
  80b15c:	dc800415 	stw	r18,16(sp)
  80b160:	dc400315 	stw	r17,12(sp)
  80b164:	dfc00a15 	stw	ra,40(sp)
  80b168:	3023883a 	mov	r17,r6
  80b16c:	382d883a 	mov	r22,r7
  80b170:	ddc00b17 	ldw	r23,44(sp)
  80b174:	080b0780 	call	80b078 <_Balloc>
  80b178:	1025883a 	mov	r18,r2
  80b17c:	00a00034 	movhi	r2,32768
  80b180:	10bfffc4 	addi	r2,r2,-1
  80b184:	8888703a 	and	r4,r17,r2
  80b188:	202ad53a 	srli	r21,r4,20
  80b18c:	00800434 	movhi	r2,16
  80b190:	10bfffc4 	addi	r2,r2,-1
  80b194:	8886703a 	and	r3,r17,r2
  80b198:	a829003a 	cmpeq	r20,r21,zero
  80b19c:	800b883a 	mov	r5,r16
  80b1a0:	d8c00115 	stw	r3,4(sp)
  80b1a4:	94000504 	addi	r16,r18,20
  80b1a8:	a000021e 	bne	r20,zero,80b1b4 <__d2b+0x80>
  80b1ac:	18c00434 	orhi	r3,r3,16
  80b1b0:	d8c00115 	stw	r3,4(sp)
  80b1b4:	28002726 	beq	r5,zero,80b254 <__d2b+0x120>
  80b1b8:	d809883a 	mov	r4,sp
  80b1bc:	d9400015 	stw	r5,0(sp)
  80b1c0:	080ab900 	call	80ab90 <__lo0bits>
  80b1c4:	100d883a 	mov	r6,r2
  80b1c8:	10003526 	beq	r2,zero,80b2a0 <__d2b+0x16c>
  80b1cc:	d8c00117 	ldw	r3,4(sp)
  80b1d0:	00800804 	movi	r2,32
  80b1d4:	1185c83a 	sub	r2,r2,r6
  80b1d8:	d9000017 	ldw	r4,0(sp)
  80b1dc:	1886983a 	sll	r3,r3,r2
  80b1e0:	1906b03a 	or	r3,r3,r4
  80b1e4:	90c00515 	stw	r3,20(r18)
  80b1e8:	d8c00117 	ldw	r3,4(sp)
  80b1ec:	1986d83a 	srl	r3,r3,r6
  80b1f0:	d8c00115 	stw	r3,4(sp)
  80b1f4:	180b003a 	cmpeq	r5,r3,zero
  80b1f8:	00800084 	movi	r2,2
  80b1fc:	114bc83a 	sub	r5,r2,r5
  80b200:	80c00115 	stw	r3,4(r16)
  80b204:	91400415 	stw	r5,16(r18)
  80b208:	a0001a1e 	bne	r20,zero,80b274 <__d2b+0x140>
  80b20c:	3545883a 	add	r2,r6,r21
  80b210:	10bef344 	addi	r2,r2,-1075
  80b214:	00c00d44 	movi	r3,53
  80b218:	b0800015 	stw	r2,0(r22)
  80b21c:	1987c83a 	sub	r3,r3,r6
  80b220:	b8c00015 	stw	r3,0(r23)
  80b224:	9005883a 	mov	r2,r18
  80b228:	dfc00a17 	ldw	ra,40(sp)
  80b22c:	ddc00917 	ldw	r23,36(sp)
  80b230:	dd800817 	ldw	r22,32(sp)
  80b234:	dd400717 	ldw	r21,28(sp)
  80b238:	dd000617 	ldw	r20,24(sp)
  80b23c:	dcc00517 	ldw	r19,20(sp)
  80b240:	dc800417 	ldw	r18,16(sp)
  80b244:	dc400317 	ldw	r17,12(sp)
  80b248:	dc000217 	ldw	r16,8(sp)
  80b24c:	dec00b04 	addi	sp,sp,44
  80b250:	f800283a 	ret
  80b254:	d9000104 	addi	r4,sp,4
  80b258:	080ab900 	call	80ab90 <__lo0bits>
  80b25c:	11800804 	addi	r6,r2,32
  80b260:	d8800117 	ldw	r2,4(sp)
  80b264:	94c00415 	stw	r19,16(r18)
  80b268:	980b883a 	mov	r5,r19
  80b26c:	90800515 	stw	r2,20(r18)
  80b270:	a03fe626 	beq	r20,zero,80b20c <__d2b+0xd8>
  80b274:	2945883a 	add	r2,r5,r5
  80b278:	1085883a 	add	r2,r2,r2
  80b27c:	1405883a 	add	r2,r2,r16
  80b280:	113fff17 	ldw	r4,-4(r2)
  80b284:	30fef384 	addi	r3,r6,-1074
  80b288:	2820917a 	slli	r16,r5,5
  80b28c:	b0c00015 	stw	r3,0(r22)
  80b290:	080ab200 	call	80ab20 <__hi0bits>
  80b294:	80a1c83a 	sub	r16,r16,r2
  80b298:	bc000015 	stw	r16,0(r23)
  80b29c:	003fe106 	br	80b224 <__d2b+0xf0>
  80b2a0:	d8800017 	ldw	r2,0(sp)
  80b2a4:	90800515 	stw	r2,20(r18)
  80b2a8:	d8c00117 	ldw	r3,4(sp)
  80b2ac:	003fd106 	br	80b1f4 <__d2b+0xc0>

0080b2b0 <__mdiff>:
  80b2b0:	defffb04 	addi	sp,sp,-20
  80b2b4:	dc000015 	stw	r16,0(sp)
  80b2b8:	2821883a 	mov	r16,r5
  80b2bc:	dc800215 	stw	r18,8(sp)
  80b2c0:	300b883a 	mov	r5,r6
  80b2c4:	2025883a 	mov	r18,r4
  80b2c8:	8009883a 	mov	r4,r16
  80b2cc:	dc400115 	stw	r17,4(sp)
  80b2d0:	dfc00415 	stw	ra,16(sp)
  80b2d4:	dcc00315 	stw	r19,12(sp)
  80b2d8:	3023883a 	mov	r17,r6
  80b2dc:	080ac540 	call	80ac54 <__mcmp>
  80b2e0:	10004226 	beq	r2,zero,80b3ec <__mdiff+0x13c>
  80b2e4:	10005016 	blt	r2,zero,80b428 <__mdiff+0x178>
  80b2e8:	0027883a 	mov	r19,zero
  80b2ec:	81400117 	ldw	r5,4(r16)
  80b2f0:	9009883a 	mov	r4,r18
  80b2f4:	080b0780 	call	80b078 <_Balloc>
  80b2f8:	1019883a 	mov	r12,r2
  80b2fc:	82800417 	ldw	r10,16(r16)
  80b300:	88800417 	ldw	r2,16(r17)
  80b304:	81800504 	addi	r6,r16,20
  80b308:	5287883a 	add	r3,r10,r10
  80b30c:	1085883a 	add	r2,r2,r2
  80b310:	18c7883a 	add	r3,r3,r3
  80b314:	1085883a 	add	r2,r2,r2
  80b318:	8a000504 	addi	r8,r17,20
  80b31c:	64c00315 	stw	r19,12(r12)
  80b320:	30db883a 	add	r13,r6,r3
  80b324:	4097883a 	add	r11,r8,r2
  80b328:	61c00504 	addi	r7,r12,20
  80b32c:	0013883a 	mov	r9,zero
  80b330:	31000017 	ldw	r4,0(r6)
  80b334:	41400017 	ldw	r5,0(r8)
  80b338:	42000104 	addi	r8,r8,4
  80b33c:	20bfffcc 	andi	r2,r4,65535
  80b340:	28ffffcc 	andi	r3,r5,65535
  80b344:	10c5c83a 	sub	r2,r2,r3
  80b348:	1245883a 	add	r2,r2,r9
  80b34c:	2008d43a 	srli	r4,r4,16
  80b350:	280ad43a 	srli	r5,r5,16
  80b354:	1007d43a 	srai	r3,r2,16
  80b358:	3880000d 	sth	r2,0(r7)
  80b35c:	2149c83a 	sub	r4,r4,r5
  80b360:	20c9883a 	add	r4,r4,r3
  80b364:	3900008d 	sth	r4,2(r7)
  80b368:	31800104 	addi	r6,r6,4
  80b36c:	39c00104 	addi	r7,r7,4
  80b370:	2013d43a 	srai	r9,r4,16
  80b374:	42ffee36 	bltu	r8,r11,80b330 <__mdiff+0x80>
  80b378:	33400c2e 	bgeu	r6,r13,80b3ac <__mdiff+0xfc>
  80b37c:	30800017 	ldw	r2,0(r6)
  80b380:	31800104 	addi	r6,r6,4
  80b384:	10ffffcc 	andi	r3,r2,65535
  80b388:	1a47883a 	add	r3,r3,r9
  80b38c:	1004d43a 	srli	r2,r2,16
  80b390:	1809d43a 	srai	r4,r3,16
  80b394:	38c0000d 	sth	r3,0(r7)
  80b398:	1105883a 	add	r2,r2,r4
  80b39c:	3880008d 	sth	r2,2(r7)
  80b3a0:	1013d43a 	srai	r9,r2,16
  80b3a4:	39c00104 	addi	r7,r7,4
  80b3a8:	337ff436 	bltu	r6,r13,80b37c <__mdiff+0xcc>
  80b3ac:	38bfff17 	ldw	r2,-4(r7)
  80b3b0:	38ffff04 	addi	r3,r7,-4
  80b3b4:	1000041e 	bne	r2,zero,80b3c8 <__mdiff+0x118>
  80b3b8:	18ffff04 	addi	r3,r3,-4
  80b3bc:	18800017 	ldw	r2,0(r3)
  80b3c0:	52bfffc4 	addi	r10,r10,-1
  80b3c4:	103ffc26 	beq	r2,zero,80b3b8 <__mdiff+0x108>
  80b3c8:	6005883a 	mov	r2,r12
  80b3cc:	62800415 	stw	r10,16(r12)
  80b3d0:	dfc00417 	ldw	ra,16(sp)
  80b3d4:	dcc00317 	ldw	r19,12(sp)
  80b3d8:	dc800217 	ldw	r18,8(sp)
  80b3dc:	dc400117 	ldw	r17,4(sp)
  80b3e0:	dc000017 	ldw	r16,0(sp)
  80b3e4:	dec00504 	addi	sp,sp,20
  80b3e8:	f800283a 	ret
  80b3ec:	9009883a 	mov	r4,r18
  80b3f0:	000b883a 	mov	r5,zero
  80b3f4:	080b0780 	call	80b078 <_Balloc>
  80b3f8:	1019883a 	mov	r12,r2
  80b3fc:	00800044 	movi	r2,1
  80b400:	60800415 	stw	r2,16(r12)
  80b404:	6005883a 	mov	r2,r12
  80b408:	60000515 	stw	zero,20(r12)
  80b40c:	dfc00417 	ldw	ra,16(sp)
  80b410:	dcc00317 	ldw	r19,12(sp)
  80b414:	dc800217 	ldw	r18,8(sp)
  80b418:	dc400117 	ldw	r17,4(sp)
  80b41c:	dc000017 	ldw	r16,0(sp)
  80b420:	dec00504 	addi	sp,sp,20
  80b424:	f800283a 	ret
  80b428:	880d883a 	mov	r6,r17
  80b42c:	04c00044 	movi	r19,1
  80b430:	8023883a 	mov	r17,r16
  80b434:	3021883a 	mov	r16,r6
  80b438:	003fac06 	br	80b2ec <__mdiff+0x3c>

0080b43c <__lshift>:
  80b43c:	defff904 	addi	sp,sp,-28
  80b440:	28800417 	ldw	r2,16(r5)
  80b444:	dc000015 	stw	r16,0(sp)
  80b448:	3021d17a 	srai	r16,r6,5
  80b44c:	28c00217 	ldw	r3,8(r5)
  80b450:	10800044 	addi	r2,r2,1
  80b454:	dc400115 	stw	r17,4(sp)
  80b458:	80a3883a 	add	r17,r16,r2
  80b45c:	dd400515 	stw	r21,20(sp)
  80b460:	dd000415 	stw	r20,16(sp)
  80b464:	dc800215 	stw	r18,8(sp)
  80b468:	dfc00615 	stw	ra,24(sp)
  80b46c:	2825883a 	mov	r18,r5
  80b470:	dcc00315 	stw	r19,12(sp)
  80b474:	3029883a 	mov	r20,r6
  80b478:	202b883a 	mov	r21,r4
  80b47c:	29400117 	ldw	r5,4(r5)
  80b480:	1c40030e 	bge	r3,r17,80b490 <__lshift+0x54>
  80b484:	18c7883a 	add	r3,r3,r3
  80b488:	29400044 	addi	r5,r5,1
  80b48c:	1c7ffd16 	blt	r3,r17,80b484 <__lshift+0x48>
  80b490:	a809883a 	mov	r4,r21
  80b494:	080b0780 	call	80b078 <_Balloc>
  80b498:	1027883a 	mov	r19,r2
  80b49c:	11400504 	addi	r5,r2,20
  80b4a0:	0400090e 	bge	zero,r16,80b4c8 <__lshift+0x8c>
  80b4a4:	2805883a 	mov	r2,r5
  80b4a8:	0007883a 	mov	r3,zero
  80b4ac:	18c00044 	addi	r3,r3,1
  80b4b0:	10000015 	stw	zero,0(r2)
  80b4b4:	10800104 	addi	r2,r2,4
  80b4b8:	80fffc1e 	bne	r16,r3,80b4ac <__lshift+0x70>
  80b4bc:	8405883a 	add	r2,r16,r16
  80b4c0:	1085883a 	add	r2,r2,r2
  80b4c4:	288b883a 	add	r5,r5,r2
  80b4c8:	90800417 	ldw	r2,16(r18)
  80b4cc:	91000504 	addi	r4,r18,20
  80b4d0:	a18007cc 	andi	r6,r20,31
  80b4d4:	1085883a 	add	r2,r2,r2
  80b4d8:	1085883a 	add	r2,r2,r2
  80b4dc:	208f883a 	add	r7,r4,r2
  80b4e0:	30001e26 	beq	r6,zero,80b55c <__lshift+0x120>
  80b4e4:	00800804 	movi	r2,32
  80b4e8:	1191c83a 	sub	r8,r2,r6
  80b4ec:	0007883a 	mov	r3,zero
  80b4f0:	20800017 	ldw	r2,0(r4)
  80b4f4:	1184983a 	sll	r2,r2,r6
  80b4f8:	1884b03a 	or	r2,r3,r2
  80b4fc:	28800015 	stw	r2,0(r5)
  80b500:	20c00017 	ldw	r3,0(r4)
  80b504:	21000104 	addi	r4,r4,4
  80b508:	29400104 	addi	r5,r5,4
  80b50c:	1a06d83a 	srl	r3,r3,r8
  80b510:	21fff736 	bltu	r4,r7,80b4f0 <__lshift+0xb4>
  80b514:	28c00015 	stw	r3,0(r5)
  80b518:	18000126 	beq	r3,zero,80b520 <__lshift+0xe4>
  80b51c:	8c400044 	addi	r17,r17,1
  80b520:	88bfffc4 	addi	r2,r17,-1
  80b524:	98800415 	stw	r2,16(r19)
  80b528:	a809883a 	mov	r4,r21
  80b52c:	900b883a 	mov	r5,r18
  80b530:	080aaf80 	call	80aaf8 <_Bfree>
  80b534:	9805883a 	mov	r2,r19
  80b538:	dfc00617 	ldw	ra,24(sp)
  80b53c:	dd400517 	ldw	r21,20(sp)
  80b540:	dd000417 	ldw	r20,16(sp)
  80b544:	dcc00317 	ldw	r19,12(sp)
  80b548:	dc800217 	ldw	r18,8(sp)
  80b54c:	dc400117 	ldw	r17,4(sp)
  80b550:	dc000017 	ldw	r16,0(sp)
  80b554:	dec00704 	addi	sp,sp,28
  80b558:	f800283a 	ret
  80b55c:	20800017 	ldw	r2,0(r4)
  80b560:	21000104 	addi	r4,r4,4
  80b564:	28800015 	stw	r2,0(r5)
  80b568:	29400104 	addi	r5,r5,4
  80b56c:	21ffec2e 	bgeu	r4,r7,80b520 <__lshift+0xe4>
  80b570:	20800017 	ldw	r2,0(r4)
  80b574:	21000104 	addi	r4,r4,4
  80b578:	28800015 	stw	r2,0(r5)
  80b57c:	29400104 	addi	r5,r5,4
  80b580:	21fff636 	bltu	r4,r7,80b55c <__lshift+0x120>
  80b584:	003fe606 	br	80b520 <__lshift+0xe4>

0080b588 <__multiply>:
  80b588:	defff004 	addi	sp,sp,-64
  80b58c:	dc800815 	stw	r18,32(sp)
  80b590:	dc400715 	stw	r17,28(sp)
  80b594:	2c800417 	ldw	r18,16(r5)
  80b598:	34400417 	ldw	r17,16(r6)
  80b59c:	dcc00915 	stw	r19,36(sp)
  80b5a0:	dc000615 	stw	r16,24(sp)
  80b5a4:	dfc00f15 	stw	ra,60(sp)
  80b5a8:	df000e15 	stw	fp,56(sp)
  80b5ac:	ddc00d15 	stw	r23,52(sp)
  80b5b0:	dd800c15 	stw	r22,48(sp)
  80b5b4:	dd400b15 	stw	r21,44(sp)
  80b5b8:	dd000a15 	stw	r20,40(sp)
  80b5bc:	2821883a 	mov	r16,r5
  80b5c0:	3027883a 	mov	r19,r6
  80b5c4:	9440040e 	bge	r18,r17,80b5d8 <__multiply+0x50>
  80b5c8:	8825883a 	mov	r18,r17
  80b5cc:	2c400417 	ldw	r17,16(r5)
  80b5d0:	2827883a 	mov	r19,r5
  80b5d4:	3021883a 	mov	r16,r6
  80b5d8:	80800217 	ldw	r2,8(r16)
  80b5dc:	9447883a 	add	r3,r18,r17
  80b5e0:	d8c00415 	stw	r3,16(sp)
  80b5e4:	81400117 	ldw	r5,4(r16)
  80b5e8:	10c0010e 	bge	r2,r3,80b5f0 <__multiply+0x68>
  80b5ec:	29400044 	addi	r5,r5,1
  80b5f0:	080b0780 	call	80b078 <_Balloc>
  80b5f4:	d8800515 	stw	r2,20(sp)
  80b5f8:	d9000417 	ldw	r4,16(sp)
  80b5fc:	d8c00517 	ldw	r3,20(sp)
  80b600:	2105883a 	add	r2,r4,r4
  80b604:	1085883a 	add	r2,r2,r2
  80b608:	19000504 	addi	r4,r3,20
  80b60c:	2085883a 	add	r2,r4,r2
  80b610:	d8800315 	stw	r2,12(sp)
  80b614:	2080052e 	bgeu	r4,r2,80b62c <__multiply+0xa4>
  80b618:	2005883a 	mov	r2,r4
  80b61c:	d8c00317 	ldw	r3,12(sp)
  80b620:	10000015 	stw	zero,0(r2)
  80b624:	10800104 	addi	r2,r2,4
  80b628:	10fffc36 	bltu	r2,r3,80b61c <__multiply+0x94>
  80b62c:	8c45883a 	add	r2,r17,r17
  80b630:	9487883a 	add	r3,r18,r18
  80b634:	9dc00504 	addi	r23,r19,20
  80b638:	1085883a 	add	r2,r2,r2
  80b63c:	84000504 	addi	r16,r16,20
  80b640:	18c7883a 	add	r3,r3,r3
  80b644:	b885883a 	add	r2,r23,r2
  80b648:	dc000015 	stw	r16,0(sp)
  80b64c:	d8800215 	stw	r2,8(sp)
  80b650:	80f9883a 	add	fp,r16,r3
  80b654:	b880432e 	bgeu	r23,r2,80b764 <__multiply+0x1dc>
  80b658:	d9000115 	stw	r4,4(sp)
  80b65c:	b9000017 	ldw	r4,0(r23)
  80b660:	253fffcc 	andi	r20,r4,65535
  80b664:	a0001a26 	beq	r20,zero,80b6d0 <__multiply+0x148>
  80b668:	dcc00017 	ldw	r19,0(sp)
  80b66c:	dc800117 	ldw	r18,4(sp)
  80b670:	002b883a 	mov	r21,zero
  80b674:	9c400017 	ldw	r17,0(r19)
  80b678:	94000017 	ldw	r16,0(r18)
  80b67c:	a009883a 	mov	r4,r20
  80b680:	897fffcc 	andi	r5,r17,65535
  80b684:	0803ec40 	call	803ec4 <__mulsi3>
  80b688:	880ad43a 	srli	r5,r17,16
  80b68c:	80ffffcc 	andi	r3,r16,65535
  80b690:	a8c7883a 	add	r3,r21,r3
  80b694:	a009883a 	mov	r4,r20
  80b698:	10e3883a 	add	r17,r2,r3
  80b69c:	8020d43a 	srli	r16,r16,16
  80b6a0:	0803ec40 	call	803ec4 <__mulsi3>
  80b6a4:	8806d43a 	srli	r3,r17,16
  80b6a8:	1405883a 	add	r2,r2,r16
  80b6ac:	9cc00104 	addi	r19,r19,4
  80b6b0:	1887883a 	add	r3,r3,r2
  80b6b4:	90c0008d 	sth	r3,2(r18)
  80b6b8:	9440000d 	sth	r17,0(r18)
  80b6bc:	182ad43a 	srli	r21,r3,16
  80b6c0:	94800104 	addi	r18,r18,4
  80b6c4:	9f3feb36 	bltu	r19,fp,80b674 <__multiply+0xec>
  80b6c8:	95400015 	stw	r21,0(r18)
  80b6cc:	b9000017 	ldw	r4,0(r23)
  80b6d0:	202ad43a 	srli	r21,r4,16
  80b6d4:	a8001c26 	beq	r21,zero,80b748 <__multiply+0x1c0>
  80b6d8:	d9000117 	ldw	r4,4(sp)
  80b6dc:	dd000017 	ldw	r20,0(sp)
  80b6e0:	002d883a 	mov	r22,zero
  80b6e4:	24c00017 	ldw	r19,0(r4)
  80b6e8:	2025883a 	mov	r18,r4
  80b6ec:	9823883a 	mov	r17,r19
  80b6f0:	a4000017 	ldw	r16,0(r20)
  80b6f4:	a809883a 	mov	r4,r21
  80b6f8:	a5000104 	addi	r20,r20,4
  80b6fc:	817fffcc 	andi	r5,r16,65535
  80b700:	0803ec40 	call	803ec4 <__mulsi3>
  80b704:	8806d43a 	srli	r3,r17,16
  80b708:	800ad43a 	srli	r5,r16,16
  80b70c:	94c0000d 	sth	r19,0(r18)
  80b710:	b0c7883a 	add	r3,r22,r3
  80b714:	10e1883a 	add	r16,r2,r3
  80b718:	9400008d 	sth	r16,2(r18)
  80b71c:	a809883a 	mov	r4,r21
  80b720:	94800104 	addi	r18,r18,4
  80b724:	0803ec40 	call	803ec4 <__mulsi3>
  80b728:	94400017 	ldw	r17,0(r18)
  80b72c:	8020d43a 	srli	r16,r16,16
  80b730:	88ffffcc 	andi	r3,r17,65535
  80b734:	10c5883a 	add	r2,r2,r3
  80b738:	80a7883a 	add	r19,r16,r2
  80b73c:	982cd43a 	srli	r22,r19,16
  80b740:	a73feb36 	bltu	r20,fp,80b6f0 <__multiply+0x168>
  80b744:	94c00015 	stw	r19,0(r18)
  80b748:	d8800217 	ldw	r2,8(sp)
  80b74c:	bdc00104 	addi	r23,r23,4
  80b750:	b880042e 	bgeu	r23,r2,80b764 <__multiply+0x1dc>
  80b754:	d8c00117 	ldw	r3,4(sp)
  80b758:	18c00104 	addi	r3,r3,4
  80b75c:	d8c00115 	stw	r3,4(sp)
  80b760:	003fbe06 	br	80b65c <__multiply+0xd4>
  80b764:	d9000417 	ldw	r4,16(sp)
  80b768:	01000c0e 	bge	zero,r4,80b79c <__multiply+0x214>
  80b76c:	d8c00317 	ldw	r3,12(sp)
  80b770:	18bfff17 	ldw	r2,-4(r3)
  80b774:	18ffff04 	addi	r3,r3,-4
  80b778:	10000326 	beq	r2,zero,80b788 <__multiply+0x200>
  80b77c:	00000706 	br	80b79c <__multiply+0x214>
  80b780:	18800017 	ldw	r2,0(r3)
  80b784:	1000051e 	bne	r2,zero,80b79c <__multiply+0x214>
  80b788:	d9000417 	ldw	r4,16(sp)
  80b78c:	18ffff04 	addi	r3,r3,-4
  80b790:	213fffc4 	addi	r4,r4,-1
  80b794:	d9000415 	stw	r4,16(sp)
  80b798:	203ff91e 	bne	r4,zero,80b780 <__multiply+0x1f8>
  80b79c:	d8800417 	ldw	r2,16(sp)
  80b7a0:	d8c00517 	ldw	r3,20(sp)
  80b7a4:	18800415 	stw	r2,16(r3)
  80b7a8:	1805883a 	mov	r2,r3
  80b7ac:	dfc00f17 	ldw	ra,60(sp)
  80b7b0:	df000e17 	ldw	fp,56(sp)
  80b7b4:	ddc00d17 	ldw	r23,52(sp)
  80b7b8:	dd800c17 	ldw	r22,48(sp)
  80b7bc:	dd400b17 	ldw	r21,44(sp)
  80b7c0:	dd000a17 	ldw	r20,40(sp)
  80b7c4:	dcc00917 	ldw	r19,36(sp)
  80b7c8:	dc800817 	ldw	r18,32(sp)
  80b7cc:	dc400717 	ldw	r17,28(sp)
  80b7d0:	dc000617 	ldw	r16,24(sp)
  80b7d4:	dec01004 	addi	sp,sp,64
  80b7d8:	f800283a 	ret

0080b7dc <__i2b>:
  80b7dc:	defffd04 	addi	sp,sp,-12
  80b7e0:	dc000015 	stw	r16,0(sp)
  80b7e4:	04000044 	movi	r16,1
  80b7e8:	dc800115 	stw	r18,4(sp)
  80b7ec:	2825883a 	mov	r18,r5
  80b7f0:	800b883a 	mov	r5,r16
  80b7f4:	dfc00215 	stw	ra,8(sp)
  80b7f8:	080b0780 	call	80b078 <_Balloc>
  80b7fc:	14000415 	stw	r16,16(r2)
  80b800:	14800515 	stw	r18,20(r2)
  80b804:	dfc00217 	ldw	ra,8(sp)
  80b808:	dc800117 	ldw	r18,4(sp)
  80b80c:	dc000017 	ldw	r16,0(sp)
  80b810:	dec00304 	addi	sp,sp,12
  80b814:	f800283a 	ret

0080b818 <__multadd>:
  80b818:	defff604 	addi	sp,sp,-40
  80b81c:	dd800615 	stw	r22,24(sp)
  80b820:	2d800417 	ldw	r22,16(r5)
  80b824:	df000815 	stw	fp,32(sp)
  80b828:	ddc00715 	stw	r23,28(sp)
  80b82c:	dd400515 	stw	r21,20(sp)
  80b830:	dd000415 	stw	r20,16(sp)
  80b834:	dcc00315 	stw	r19,12(sp)
  80b838:	dc800215 	stw	r18,8(sp)
  80b83c:	dfc00915 	stw	ra,36(sp)
  80b840:	dc400115 	stw	r17,4(sp)
  80b844:	dc000015 	stw	r16,0(sp)
  80b848:	282f883a 	mov	r23,r5
  80b84c:	2039883a 	mov	fp,r4
  80b850:	302b883a 	mov	r21,r6
  80b854:	3829883a 	mov	r20,r7
  80b858:	2c800504 	addi	r18,r5,20
  80b85c:	0027883a 	mov	r19,zero
  80b860:	94400017 	ldw	r17,0(r18)
  80b864:	a80b883a 	mov	r5,r21
  80b868:	9cc00044 	addi	r19,r19,1
  80b86c:	893fffcc 	andi	r4,r17,65535
  80b870:	0803ec40 	call	803ec4 <__mulsi3>
  80b874:	8808d43a 	srli	r4,r17,16
  80b878:	1521883a 	add	r16,r2,r20
  80b87c:	a80b883a 	mov	r5,r21
  80b880:	0803ec40 	call	803ec4 <__mulsi3>
  80b884:	8008d43a 	srli	r4,r16,16
  80b888:	843fffcc 	andi	r16,r16,65535
  80b88c:	1105883a 	add	r2,r2,r4
  80b890:	1006943a 	slli	r3,r2,16
  80b894:	1028d43a 	srli	r20,r2,16
  80b898:	1c07883a 	add	r3,r3,r16
  80b89c:	90c00015 	stw	r3,0(r18)
  80b8a0:	94800104 	addi	r18,r18,4
  80b8a4:	9dbfee16 	blt	r19,r22,80b860 <__multadd+0x48>
  80b8a8:	a0000826 	beq	r20,zero,80b8cc <__multadd+0xb4>
  80b8ac:	b8800217 	ldw	r2,8(r23)
  80b8b0:	b080130e 	bge	r22,r2,80b900 <__multadd+0xe8>
  80b8b4:	b585883a 	add	r2,r22,r22
  80b8b8:	1085883a 	add	r2,r2,r2
  80b8bc:	15c5883a 	add	r2,r2,r23
  80b8c0:	b0c00044 	addi	r3,r22,1
  80b8c4:	15000515 	stw	r20,20(r2)
  80b8c8:	b8c00415 	stw	r3,16(r23)
  80b8cc:	b805883a 	mov	r2,r23
  80b8d0:	dfc00917 	ldw	ra,36(sp)
  80b8d4:	df000817 	ldw	fp,32(sp)
  80b8d8:	ddc00717 	ldw	r23,28(sp)
  80b8dc:	dd800617 	ldw	r22,24(sp)
  80b8e0:	dd400517 	ldw	r21,20(sp)
  80b8e4:	dd000417 	ldw	r20,16(sp)
  80b8e8:	dcc00317 	ldw	r19,12(sp)
  80b8ec:	dc800217 	ldw	r18,8(sp)
  80b8f0:	dc400117 	ldw	r17,4(sp)
  80b8f4:	dc000017 	ldw	r16,0(sp)
  80b8f8:	dec00a04 	addi	sp,sp,40
  80b8fc:	f800283a 	ret
  80b900:	b9400117 	ldw	r5,4(r23)
  80b904:	e009883a 	mov	r4,fp
  80b908:	29400044 	addi	r5,r5,1
  80b90c:	080b0780 	call	80b078 <_Balloc>
  80b910:	b9800417 	ldw	r6,16(r23)
  80b914:	b9400304 	addi	r5,r23,12
  80b918:	11000304 	addi	r4,r2,12
  80b91c:	318d883a 	add	r6,r6,r6
  80b920:	318d883a 	add	r6,r6,r6
  80b924:	31800204 	addi	r6,r6,8
  80b928:	1023883a 	mov	r17,r2
  80b92c:	080a8e00 	call	80a8e0 <memcpy>
  80b930:	b80b883a 	mov	r5,r23
  80b934:	e009883a 	mov	r4,fp
  80b938:	080aaf80 	call	80aaf8 <_Bfree>
  80b93c:	882f883a 	mov	r23,r17
  80b940:	003fdc06 	br	80b8b4 <__multadd+0x9c>

0080b944 <__pow5mult>:
  80b944:	defffa04 	addi	sp,sp,-24
  80b948:	308000cc 	andi	r2,r6,3
  80b94c:	dd000415 	stw	r20,16(sp)
  80b950:	dcc00315 	stw	r19,12(sp)
  80b954:	dc000015 	stw	r16,0(sp)
  80b958:	dfc00515 	stw	ra,20(sp)
  80b95c:	dc800215 	stw	r18,8(sp)
  80b960:	dc400115 	stw	r17,4(sp)
  80b964:	3021883a 	mov	r16,r6
  80b968:	2027883a 	mov	r19,r4
  80b96c:	2829883a 	mov	r20,r5
  80b970:	10002b1e 	bne	r2,zero,80ba20 <__pow5mult+0xdc>
  80b974:	8025d0ba 	srai	r18,r16,2
  80b978:	90001b26 	beq	r18,zero,80b9e8 <__pow5mult+0xa4>
  80b97c:	9c001217 	ldw	r16,72(r19)
  80b980:	8000081e 	bne	r16,zero,80b9a4 <__pow5mult+0x60>
  80b984:	00003006 	br	80ba48 <__pow5mult+0x104>
  80b988:	800b883a 	mov	r5,r16
  80b98c:	800d883a 	mov	r6,r16
  80b990:	9809883a 	mov	r4,r19
  80b994:	90001426 	beq	r18,zero,80b9e8 <__pow5mult+0xa4>
  80b998:	80800017 	ldw	r2,0(r16)
  80b99c:	10001b26 	beq	r2,zero,80ba0c <__pow5mult+0xc8>
  80b9a0:	1021883a 	mov	r16,r2
  80b9a4:	9080004c 	andi	r2,r18,1
  80b9a8:	1005003a 	cmpeq	r2,r2,zero
  80b9ac:	9025d07a 	srai	r18,r18,1
  80b9b0:	800d883a 	mov	r6,r16
  80b9b4:	9809883a 	mov	r4,r19
  80b9b8:	a00b883a 	mov	r5,r20
  80b9bc:	103ff21e 	bne	r2,zero,80b988 <__pow5mult+0x44>
  80b9c0:	080b5880 	call	80b588 <__multiply>
  80b9c4:	a00b883a 	mov	r5,r20
  80b9c8:	9809883a 	mov	r4,r19
  80b9cc:	1023883a 	mov	r17,r2
  80b9d0:	080aaf80 	call	80aaf8 <_Bfree>
  80b9d4:	8829883a 	mov	r20,r17
  80b9d8:	800b883a 	mov	r5,r16
  80b9dc:	800d883a 	mov	r6,r16
  80b9e0:	9809883a 	mov	r4,r19
  80b9e4:	903fec1e 	bne	r18,zero,80b998 <__pow5mult+0x54>
  80b9e8:	a005883a 	mov	r2,r20
  80b9ec:	dfc00517 	ldw	ra,20(sp)
  80b9f0:	dd000417 	ldw	r20,16(sp)
  80b9f4:	dcc00317 	ldw	r19,12(sp)
  80b9f8:	dc800217 	ldw	r18,8(sp)
  80b9fc:	dc400117 	ldw	r17,4(sp)
  80ba00:	dc000017 	ldw	r16,0(sp)
  80ba04:	dec00604 	addi	sp,sp,24
  80ba08:	f800283a 	ret
  80ba0c:	080b5880 	call	80b588 <__multiply>
  80ba10:	80800015 	stw	r2,0(r16)
  80ba14:	1021883a 	mov	r16,r2
  80ba18:	10000015 	stw	zero,0(r2)
  80ba1c:	003fe106 	br	80b9a4 <__pow5mult+0x60>
  80ba20:	1085883a 	add	r2,r2,r2
  80ba24:	00c02074 	movhi	r3,129
  80ba28:	18c30e04 	addi	r3,r3,3128
  80ba2c:	1085883a 	add	r2,r2,r2
  80ba30:	10c5883a 	add	r2,r2,r3
  80ba34:	11bfff17 	ldw	r6,-4(r2)
  80ba38:	000f883a 	mov	r7,zero
  80ba3c:	080b8180 	call	80b818 <__multadd>
  80ba40:	1029883a 	mov	r20,r2
  80ba44:	003fcb06 	br	80b974 <__pow5mult+0x30>
  80ba48:	9809883a 	mov	r4,r19
  80ba4c:	01409c44 	movi	r5,625
  80ba50:	080b7dc0 	call	80b7dc <__i2b>
  80ba54:	98801215 	stw	r2,72(r19)
  80ba58:	1021883a 	mov	r16,r2
  80ba5c:	10000015 	stw	zero,0(r2)
  80ba60:	003fd006 	br	80b9a4 <__pow5mult+0x60>

0080ba64 <__s2b>:
  80ba64:	defff904 	addi	sp,sp,-28
  80ba68:	dcc00315 	stw	r19,12(sp)
  80ba6c:	dc800215 	stw	r18,8(sp)
  80ba70:	2827883a 	mov	r19,r5
  80ba74:	2025883a 	mov	r18,r4
  80ba78:	01400244 	movi	r5,9
  80ba7c:	39000204 	addi	r4,r7,8
  80ba80:	dd000415 	stw	r20,16(sp)
  80ba84:	dc400115 	stw	r17,4(sp)
  80ba88:	dfc00615 	stw	ra,24(sp)
  80ba8c:	dd400515 	stw	r21,20(sp)
  80ba90:	dc000015 	stw	r16,0(sp)
  80ba94:	3829883a 	mov	r20,r7
  80ba98:	3023883a 	mov	r17,r6
  80ba9c:	0803df40 	call	803df4 <__divsi3>
  80baa0:	00c00044 	movi	r3,1
  80baa4:	1880350e 	bge	r3,r2,80bb7c <__s2b+0x118>
  80baa8:	000b883a 	mov	r5,zero
  80baac:	18c7883a 	add	r3,r3,r3
  80bab0:	29400044 	addi	r5,r5,1
  80bab4:	18bffd16 	blt	r3,r2,80baac <__s2b+0x48>
  80bab8:	9009883a 	mov	r4,r18
  80babc:	080b0780 	call	80b078 <_Balloc>
  80bac0:	1011883a 	mov	r8,r2
  80bac4:	d8800717 	ldw	r2,28(sp)
  80bac8:	00c00044 	movi	r3,1
  80bacc:	01800244 	movi	r6,9
  80bad0:	40800515 	stw	r2,20(r8)
  80bad4:	40c00415 	stw	r3,16(r8)
  80bad8:	3440260e 	bge	r6,r17,80bb74 <__s2b+0x110>
  80badc:	3021883a 	mov	r16,r6
  80bae0:	99ab883a 	add	r21,r19,r6
  80bae4:	9c05883a 	add	r2,r19,r16
  80bae8:	11c00007 	ldb	r7,0(r2)
  80baec:	400b883a 	mov	r5,r8
  80baf0:	9009883a 	mov	r4,r18
  80baf4:	39fff404 	addi	r7,r7,-48
  80baf8:	01800284 	movi	r6,10
  80bafc:	080b8180 	call	80b818 <__multadd>
  80bb00:	84000044 	addi	r16,r16,1
  80bb04:	1011883a 	mov	r8,r2
  80bb08:	8c3ff61e 	bne	r17,r16,80bae4 <__s2b+0x80>
  80bb0c:	ac45883a 	add	r2,r21,r17
  80bb10:	117ffe04 	addi	r5,r2,-8
  80bb14:	880d883a 	mov	r6,r17
  80bb18:	35000c0e 	bge	r6,r20,80bb4c <__s2b+0xe8>
  80bb1c:	a185c83a 	sub	r2,r20,r6
  80bb20:	2821883a 	mov	r16,r5
  80bb24:	28a3883a 	add	r17,r5,r2
  80bb28:	81c00007 	ldb	r7,0(r16)
  80bb2c:	400b883a 	mov	r5,r8
  80bb30:	9009883a 	mov	r4,r18
  80bb34:	39fff404 	addi	r7,r7,-48
  80bb38:	01800284 	movi	r6,10
  80bb3c:	080b8180 	call	80b818 <__multadd>
  80bb40:	84000044 	addi	r16,r16,1
  80bb44:	1011883a 	mov	r8,r2
  80bb48:	847ff71e 	bne	r16,r17,80bb28 <__s2b+0xc4>
  80bb4c:	4005883a 	mov	r2,r8
  80bb50:	dfc00617 	ldw	ra,24(sp)
  80bb54:	dd400517 	ldw	r21,20(sp)
  80bb58:	dd000417 	ldw	r20,16(sp)
  80bb5c:	dcc00317 	ldw	r19,12(sp)
  80bb60:	dc800217 	ldw	r18,8(sp)
  80bb64:	dc400117 	ldw	r17,4(sp)
  80bb68:	dc000017 	ldw	r16,0(sp)
  80bb6c:	dec00704 	addi	sp,sp,28
  80bb70:	f800283a 	ret
  80bb74:	99400284 	addi	r5,r19,10
  80bb78:	003fe706 	br	80bb18 <__s2b+0xb4>
  80bb7c:	000b883a 	mov	r5,zero
  80bb80:	003fcd06 	br	80bab8 <__s2b+0x54>

0080bb84 <_realloc_r>:
  80bb84:	defff404 	addi	sp,sp,-48
  80bb88:	dd800815 	stw	r22,32(sp)
  80bb8c:	dc800415 	stw	r18,16(sp)
  80bb90:	dc400315 	stw	r17,12(sp)
  80bb94:	dfc00b15 	stw	ra,44(sp)
  80bb98:	df000a15 	stw	fp,40(sp)
  80bb9c:	ddc00915 	stw	r23,36(sp)
  80bba0:	dd400715 	stw	r21,28(sp)
  80bba4:	dd000615 	stw	r20,24(sp)
  80bba8:	dcc00515 	stw	r19,20(sp)
  80bbac:	dc000215 	stw	r16,8(sp)
  80bbb0:	2825883a 	mov	r18,r5
  80bbb4:	3023883a 	mov	r17,r6
  80bbb8:	202d883a 	mov	r22,r4
  80bbbc:	2800c926 	beq	r5,zero,80bee4 <_realloc_r+0x360>
  80bbc0:	080e0e40 	call	80e0e4 <__malloc_lock>
  80bbc4:	943ffe04 	addi	r16,r18,-8
  80bbc8:	88c002c4 	addi	r3,r17,11
  80bbcc:	00800584 	movi	r2,22
  80bbd0:	82000117 	ldw	r8,4(r16)
  80bbd4:	10c01b2e 	bgeu	r2,r3,80bc44 <_realloc_r+0xc0>
  80bbd8:	00bffe04 	movi	r2,-8
  80bbdc:	188e703a 	and	r7,r3,r2
  80bbe0:	3839883a 	mov	fp,r7
  80bbe4:	38001a16 	blt	r7,zero,80bc50 <_realloc_r+0xcc>
  80bbe8:	e4401936 	bltu	fp,r17,80bc50 <_realloc_r+0xcc>
  80bbec:	013fff04 	movi	r4,-4
  80bbf0:	4126703a 	and	r19,r8,r4
  80bbf4:	99c02616 	blt	r19,r7,80bc90 <_realloc_r+0x10c>
  80bbf8:	802b883a 	mov	r21,r16
  80bbfc:	9829883a 	mov	r20,r19
  80bc00:	84000204 	addi	r16,r16,8
  80bc04:	a80f883a 	mov	r7,r21
  80bc08:	a70dc83a 	sub	r6,r20,fp
  80bc0c:	008003c4 	movi	r2,15
  80bc10:	1180c136 	bltu	r2,r6,80bf18 <_realloc_r+0x394>
  80bc14:	38800117 	ldw	r2,4(r7)
  80bc18:	a549883a 	add	r4,r20,r21
  80bc1c:	1080004c 	andi	r2,r2,1
  80bc20:	a084b03a 	or	r2,r20,r2
  80bc24:	38800115 	stw	r2,4(r7)
  80bc28:	20c00117 	ldw	r3,4(r4)
  80bc2c:	18c00054 	ori	r3,r3,1
  80bc30:	20c00115 	stw	r3,4(r4)
  80bc34:	b009883a 	mov	r4,r22
  80bc38:	080e1040 	call	80e104 <__malloc_unlock>
  80bc3c:	8023883a 	mov	r17,r16
  80bc40:	00000606 	br	80bc5c <_realloc_r+0xd8>
  80bc44:	01c00404 	movi	r7,16
  80bc48:	3839883a 	mov	fp,r7
  80bc4c:	e47fe72e 	bgeu	fp,r17,80bbec <_realloc_r+0x68>
  80bc50:	00800304 	movi	r2,12
  80bc54:	0023883a 	mov	r17,zero
  80bc58:	b0800015 	stw	r2,0(r22)
  80bc5c:	8805883a 	mov	r2,r17
  80bc60:	dfc00b17 	ldw	ra,44(sp)
  80bc64:	df000a17 	ldw	fp,40(sp)
  80bc68:	ddc00917 	ldw	r23,36(sp)
  80bc6c:	dd800817 	ldw	r22,32(sp)
  80bc70:	dd400717 	ldw	r21,28(sp)
  80bc74:	dd000617 	ldw	r20,24(sp)
  80bc78:	dcc00517 	ldw	r19,20(sp)
  80bc7c:	dc800417 	ldw	r18,16(sp)
  80bc80:	dc400317 	ldw	r17,12(sp)
  80bc84:	dc000217 	ldw	r16,8(sp)
  80bc88:	dec00c04 	addi	sp,sp,48
  80bc8c:	f800283a 	ret
  80bc90:	00802074 	movhi	r2,129
  80bc94:	10841f04 	addi	r2,r2,4220
  80bc98:	12400217 	ldw	r9,8(r2)
  80bc9c:	84cd883a 	add	r6,r16,r19
  80bca0:	802b883a 	mov	r21,r16
  80bca4:	3240b926 	beq	r6,r9,80bf8c <_realloc_r+0x408>
  80bca8:	31400117 	ldw	r5,4(r6)
  80bcac:	00bfff84 	movi	r2,-2
  80bcb0:	2884703a 	and	r2,r5,r2
  80bcb4:	1185883a 	add	r2,r2,r6
  80bcb8:	10c00117 	ldw	r3,4(r2)
  80bcbc:	18c0004c 	andi	r3,r3,1
  80bcc0:	1807003a 	cmpeq	r3,r3,zero
  80bcc4:	1800a326 	beq	r3,zero,80bf54 <_realloc_r+0x3d0>
  80bcc8:	2908703a 	and	r4,r5,r4
  80bccc:	9929883a 	add	r20,r19,r4
  80bcd0:	a1c0a30e 	bge	r20,r7,80bf60 <_realloc_r+0x3dc>
  80bcd4:	4080004c 	andi	r2,r8,1
  80bcd8:	1000551e 	bne	r2,zero,80be30 <_realloc_r+0x2ac>
  80bcdc:	80800017 	ldw	r2,0(r16)
  80bce0:	80afc83a 	sub	r23,r16,r2
  80bce4:	b8c00117 	ldw	r3,4(r23)
  80bce8:	00bfff04 	movi	r2,-4
  80bcec:	1884703a 	and	r2,r3,r2
  80bcf0:	30002e26 	beq	r6,zero,80bdac <_realloc_r+0x228>
  80bcf4:	3240b926 	beq	r6,r9,80bfdc <_realloc_r+0x458>
  80bcf8:	98a9883a 	add	r20,r19,r2
  80bcfc:	2509883a 	add	r4,r4,r20
  80bd00:	d9000015 	stw	r4,0(sp)
  80bd04:	21c02a16 	blt	r4,r7,80bdb0 <_realloc_r+0x22c>
  80bd08:	30800317 	ldw	r2,12(r6)
  80bd0c:	30c00217 	ldw	r3,8(r6)
  80bd10:	01400904 	movi	r5,36
  80bd14:	99bfff04 	addi	r6,r19,-4
  80bd18:	18800315 	stw	r2,12(r3)
  80bd1c:	10c00215 	stw	r3,8(r2)
  80bd20:	b9000317 	ldw	r4,12(r23)
  80bd24:	b8800217 	ldw	r2,8(r23)
  80bd28:	b82b883a 	mov	r21,r23
  80bd2c:	bc000204 	addi	r16,r23,8
  80bd30:	20800215 	stw	r2,8(r4)
  80bd34:	11000315 	stw	r4,12(r2)
  80bd38:	2980e436 	bltu	r5,r6,80c0cc <_realloc_r+0x548>
  80bd3c:	008004c4 	movi	r2,19
  80bd40:	9009883a 	mov	r4,r18
  80bd44:	8011883a 	mov	r8,r16
  80bd48:	11800f2e 	bgeu	r2,r6,80bd88 <_realloc_r+0x204>
  80bd4c:	90800017 	ldw	r2,0(r18)
  80bd50:	ba000404 	addi	r8,r23,16
  80bd54:	91000204 	addi	r4,r18,8
  80bd58:	b8800215 	stw	r2,8(r23)
  80bd5c:	90c00117 	ldw	r3,4(r18)
  80bd60:	008006c4 	movi	r2,27
  80bd64:	b8c00315 	stw	r3,12(r23)
  80bd68:	1180072e 	bgeu	r2,r6,80bd88 <_realloc_r+0x204>
  80bd6c:	90c00217 	ldw	r3,8(r18)
  80bd70:	ba000604 	addi	r8,r23,24
  80bd74:	91000404 	addi	r4,r18,16
  80bd78:	b8c00415 	stw	r3,16(r23)
  80bd7c:	90800317 	ldw	r2,12(r18)
  80bd80:	b8800515 	stw	r2,20(r23)
  80bd84:	3140e726 	beq	r6,r5,80c124 <_realloc_r+0x5a0>
  80bd88:	20800017 	ldw	r2,0(r4)
  80bd8c:	dd000017 	ldw	r20,0(sp)
  80bd90:	b80f883a 	mov	r7,r23
  80bd94:	40800015 	stw	r2,0(r8)
  80bd98:	20c00117 	ldw	r3,4(r4)
  80bd9c:	40c00115 	stw	r3,4(r8)
  80bda0:	20800217 	ldw	r2,8(r4)
  80bda4:	40800215 	stw	r2,8(r8)
  80bda8:	003f9706 	br	80bc08 <_realloc_r+0x84>
  80bdac:	98a9883a 	add	r20,r19,r2
  80bdb0:	a1c01f16 	blt	r20,r7,80be30 <_realloc_r+0x2ac>
  80bdb4:	b8c00317 	ldw	r3,12(r23)
  80bdb8:	b8800217 	ldw	r2,8(r23)
  80bdbc:	99bfff04 	addi	r6,r19,-4
  80bdc0:	01400904 	movi	r5,36
  80bdc4:	b82b883a 	mov	r21,r23
  80bdc8:	18800215 	stw	r2,8(r3)
  80bdcc:	10c00315 	stw	r3,12(r2)
  80bdd0:	bc000204 	addi	r16,r23,8
  80bdd4:	2980c336 	bltu	r5,r6,80c0e4 <_realloc_r+0x560>
  80bdd8:	008004c4 	movi	r2,19
  80bddc:	9009883a 	mov	r4,r18
  80bde0:	8011883a 	mov	r8,r16
  80bde4:	11800f2e 	bgeu	r2,r6,80be24 <_realloc_r+0x2a0>
  80bde8:	90800017 	ldw	r2,0(r18)
  80bdec:	ba000404 	addi	r8,r23,16
  80bdf0:	91000204 	addi	r4,r18,8
  80bdf4:	b8800215 	stw	r2,8(r23)
  80bdf8:	90c00117 	ldw	r3,4(r18)
  80bdfc:	008006c4 	movi	r2,27
  80be00:	b8c00315 	stw	r3,12(r23)
  80be04:	1180072e 	bgeu	r2,r6,80be24 <_realloc_r+0x2a0>
  80be08:	90c00217 	ldw	r3,8(r18)
  80be0c:	ba000604 	addi	r8,r23,24
  80be10:	91000404 	addi	r4,r18,16
  80be14:	b8c00415 	stw	r3,16(r23)
  80be18:	90800317 	ldw	r2,12(r18)
  80be1c:	b8800515 	stw	r2,20(r23)
  80be20:	3140c726 	beq	r6,r5,80c140 <_realloc_r+0x5bc>
  80be24:	20800017 	ldw	r2,0(r4)
  80be28:	b80f883a 	mov	r7,r23
  80be2c:	003fd906 	br	80bd94 <_realloc_r+0x210>
  80be30:	880b883a 	mov	r5,r17
  80be34:	b009883a 	mov	r4,r22
  80be38:	080a0bc0 	call	80a0bc <_malloc_r>
  80be3c:	1023883a 	mov	r17,r2
  80be40:	10002526 	beq	r2,zero,80bed8 <_realloc_r+0x354>
  80be44:	80800117 	ldw	r2,4(r16)
  80be48:	00ffff84 	movi	r3,-2
  80be4c:	893ffe04 	addi	r4,r17,-8
  80be50:	10c4703a 	and	r2,r2,r3
  80be54:	8085883a 	add	r2,r16,r2
  80be58:	20809526 	beq	r4,r2,80c0b0 <_realloc_r+0x52c>
  80be5c:	99bfff04 	addi	r6,r19,-4
  80be60:	01c00904 	movi	r7,36
  80be64:	39804536 	bltu	r7,r6,80bf7c <_realloc_r+0x3f8>
  80be68:	008004c4 	movi	r2,19
  80be6c:	9009883a 	mov	r4,r18
  80be70:	880b883a 	mov	r5,r17
  80be74:	11800f2e 	bgeu	r2,r6,80beb4 <_realloc_r+0x330>
  80be78:	90800017 	ldw	r2,0(r18)
  80be7c:	89400204 	addi	r5,r17,8
  80be80:	91000204 	addi	r4,r18,8
  80be84:	88800015 	stw	r2,0(r17)
  80be88:	90c00117 	ldw	r3,4(r18)
  80be8c:	008006c4 	movi	r2,27
  80be90:	88c00115 	stw	r3,4(r17)
  80be94:	1180072e 	bgeu	r2,r6,80beb4 <_realloc_r+0x330>
  80be98:	90c00217 	ldw	r3,8(r18)
  80be9c:	89400404 	addi	r5,r17,16
  80bea0:	91000404 	addi	r4,r18,16
  80bea4:	88c00215 	stw	r3,8(r17)
  80bea8:	90800317 	ldw	r2,12(r18)
  80beac:	88800315 	stw	r2,12(r17)
  80beb0:	31c09126 	beq	r6,r7,80c0f8 <_realloc_r+0x574>
  80beb4:	20800017 	ldw	r2,0(r4)
  80beb8:	28800015 	stw	r2,0(r5)
  80bebc:	20c00117 	ldw	r3,4(r4)
  80bec0:	28c00115 	stw	r3,4(r5)
  80bec4:	20800217 	ldw	r2,8(r4)
  80bec8:	28800215 	stw	r2,8(r5)
  80becc:	900b883a 	mov	r5,r18
  80bed0:	b009883a 	mov	r4,r22
  80bed4:	08095340 	call	809534 <_free_r>
  80bed8:	b009883a 	mov	r4,r22
  80bedc:	080e1040 	call	80e104 <__malloc_unlock>
  80bee0:	003f5e06 	br	80bc5c <_realloc_r+0xd8>
  80bee4:	300b883a 	mov	r5,r6
  80bee8:	dfc00b17 	ldw	ra,44(sp)
  80beec:	df000a17 	ldw	fp,40(sp)
  80bef0:	ddc00917 	ldw	r23,36(sp)
  80bef4:	dd800817 	ldw	r22,32(sp)
  80bef8:	dd400717 	ldw	r21,28(sp)
  80befc:	dd000617 	ldw	r20,24(sp)
  80bf00:	dcc00517 	ldw	r19,20(sp)
  80bf04:	dc800417 	ldw	r18,16(sp)
  80bf08:	dc400317 	ldw	r17,12(sp)
  80bf0c:	dc000217 	ldw	r16,8(sp)
  80bf10:	dec00c04 	addi	sp,sp,48
  80bf14:	080a0bc1 	jmpi	80a0bc <_malloc_r>
  80bf18:	38800117 	ldw	r2,4(r7)
  80bf1c:	e54b883a 	add	r5,fp,r21
  80bf20:	31000054 	ori	r4,r6,1
  80bf24:	1080004c 	andi	r2,r2,1
  80bf28:	1704b03a 	or	r2,r2,fp
  80bf2c:	38800115 	stw	r2,4(r7)
  80bf30:	29000115 	stw	r4,4(r5)
  80bf34:	2987883a 	add	r3,r5,r6
  80bf38:	18800117 	ldw	r2,4(r3)
  80bf3c:	29400204 	addi	r5,r5,8
  80bf40:	b009883a 	mov	r4,r22
  80bf44:	10800054 	ori	r2,r2,1
  80bf48:	18800115 	stw	r2,4(r3)
  80bf4c:	08095340 	call	809534 <_free_r>
  80bf50:	003f3806 	br	80bc34 <_realloc_r+0xb0>
  80bf54:	000d883a 	mov	r6,zero
  80bf58:	0009883a 	mov	r4,zero
  80bf5c:	003f5d06 	br	80bcd4 <_realloc_r+0x150>
  80bf60:	30c00217 	ldw	r3,8(r6)
  80bf64:	30800317 	ldw	r2,12(r6)
  80bf68:	800f883a 	mov	r7,r16
  80bf6c:	84000204 	addi	r16,r16,8
  80bf70:	10c00215 	stw	r3,8(r2)
  80bf74:	18800315 	stw	r2,12(r3)
  80bf78:	003f2306 	br	80bc08 <_realloc_r+0x84>
  80bf7c:	8809883a 	mov	r4,r17
  80bf80:	900b883a 	mov	r5,r18
  80bf84:	080a9800 	call	80a980 <memmove>
  80bf88:	003fd006 	br	80becc <_realloc_r+0x348>
  80bf8c:	30800117 	ldw	r2,4(r6)
  80bf90:	e0c00404 	addi	r3,fp,16
  80bf94:	1108703a 	and	r4,r2,r4
  80bf98:	9905883a 	add	r2,r19,r4
  80bf9c:	10ff4d16 	blt	r2,r3,80bcd4 <_realloc_r+0x150>
  80bfa0:	1705c83a 	sub	r2,r2,fp
  80bfa4:	870b883a 	add	r5,r16,fp
  80bfa8:	10800054 	ori	r2,r2,1
  80bfac:	28800115 	stw	r2,4(r5)
  80bfb0:	80c00117 	ldw	r3,4(r16)
  80bfb4:	00802074 	movhi	r2,129
  80bfb8:	10841f04 	addi	r2,r2,4220
  80bfbc:	b009883a 	mov	r4,r22
  80bfc0:	18c0004c 	andi	r3,r3,1
  80bfc4:	e0c6b03a 	or	r3,fp,r3
  80bfc8:	11400215 	stw	r5,8(r2)
  80bfcc:	80c00115 	stw	r3,4(r16)
  80bfd0:	080e1040 	call	80e104 <__malloc_unlock>
  80bfd4:	84400204 	addi	r17,r16,8
  80bfd8:	003f2006 	br	80bc5c <_realloc_r+0xd8>
  80bfdc:	98a9883a 	add	r20,r19,r2
  80bfe0:	2509883a 	add	r4,r4,r20
  80bfe4:	e0800404 	addi	r2,fp,16
  80bfe8:	d9000115 	stw	r4,4(sp)
  80bfec:	20bf7016 	blt	r4,r2,80bdb0 <_realloc_r+0x22c>
  80bff0:	b8c00317 	ldw	r3,12(r23)
  80bff4:	b8800217 	ldw	r2,8(r23)
  80bff8:	99bfff04 	addi	r6,r19,-4
  80bffc:	01400904 	movi	r5,36
  80c000:	18800215 	stw	r2,8(r3)
  80c004:	10c00315 	stw	r3,12(r2)
  80c008:	bc400204 	addi	r17,r23,8
  80c00c:	29804136 	bltu	r5,r6,80c114 <_realloc_r+0x590>
  80c010:	008004c4 	movi	r2,19
  80c014:	9009883a 	mov	r4,r18
  80c018:	880f883a 	mov	r7,r17
  80c01c:	11800f2e 	bgeu	r2,r6,80c05c <_realloc_r+0x4d8>
  80c020:	90800017 	ldw	r2,0(r18)
  80c024:	b9c00404 	addi	r7,r23,16
  80c028:	91000204 	addi	r4,r18,8
  80c02c:	b8800215 	stw	r2,8(r23)
  80c030:	90c00117 	ldw	r3,4(r18)
  80c034:	008006c4 	movi	r2,27
  80c038:	b8c00315 	stw	r3,12(r23)
  80c03c:	1180072e 	bgeu	r2,r6,80c05c <_realloc_r+0x4d8>
  80c040:	90c00217 	ldw	r3,8(r18)
  80c044:	b9c00604 	addi	r7,r23,24
  80c048:	91000404 	addi	r4,r18,16
  80c04c:	b8c00415 	stw	r3,16(r23)
  80c050:	90800317 	ldw	r2,12(r18)
  80c054:	b8800515 	stw	r2,20(r23)
  80c058:	31404026 	beq	r6,r5,80c15c <_realloc_r+0x5d8>
  80c05c:	20800017 	ldw	r2,0(r4)
  80c060:	38800015 	stw	r2,0(r7)
  80c064:	20c00117 	ldw	r3,4(r4)
  80c068:	38c00115 	stw	r3,4(r7)
  80c06c:	20800217 	ldw	r2,8(r4)
  80c070:	38800215 	stw	r2,8(r7)
  80c074:	d8c00117 	ldw	r3,4(sp)
  80c078:	bf0b883a 	add	r5,r23,fp
  80c07c:	b009883a 	mov	r4,r22
  80c080:	1f05c83a 	sub	r2,r3,fp
  80c084:	10800054 	ori	r2,r2,1
  80c088:	28800115 	stw	r2,4(r5)
  80c08c:	b8c00117 	ldw	r3,4(r23)
  80c090:	00802074 	movhi	r2,129
  80c094:	10841f04 	addi	r2,r2,4220
  80c098:	11400215 	stw	r5,8(r2)
  80c09c:	18c0004c 	andi	r3,r3,1
  80c0a0:	e0c6b03a 	or	r3,fp,r3
  80c0a4:	b8c00115 	stw	r3,4(r23)
  80c0a8:	080e1040 	call	80e104 <__malloc_unlock>
  80c0ac:	003eeb06 	br	80bc5c <_realloc_r+0xd8>
  80c0b0:	20800117 	ldw	r2,4(r4)
  80c0b4:	00ffff04 	movi	r3,-4
  80c0b8:	800f883a 	mov	r7,r16
  80c0bc:	10c4703a 	and	r2,r2,r3
  80c0c0:	98a9883a 	add	r20,r19,r2
  80c0c4:	84000204 	addi	r16,r16,8
  80c0c8:	003ecf06 	br	80bc08 <_realloc_r+0x84>
  80c0cc:	900b883a 	mov	r5,r18
  80c0d0:	8009883a 	mov	r4,r16
  80c0d4:	080a9800 	call	80a980 <memmove>
  80c0d8:	dd000017 	ldw	r20,0(sp)
  80c0dc:	b80f883a 	mov	r7,r23
  80c0e0:	003ec906 	br	80bc08 <_realloc_r+0x84>
  80c0e4:	900b883a 	mov	r5,r18
  80c0e8:	8009883a 	mov	r4,r16
  80c0ec:	080a9800 	call	80a980 <memmove>
  80c0f0:	b80f883a 	mov	r7,r23
  80c0f4:	003ec406 	br	80bc08 <_realloc_r+0x84>
  80c0f8:	90c00417 	ldw	r3,16(r18)
  80c0fc:	89400604 	addi	r5,r17,24
  80c100:	91000604 	addi	r4,r18,24
  80c104:	88c00415 	stw	r3,16(r17)
  80c108:	90800517 	ldw	r2,20(r18)
  80c10c:	88800515 	stw	r2,20(r17)
  80c110:	003f6806 	br	80beb4 <_realloc_r+0x330>
  80c114:	900b883a 	mov	r5,r18
  80c118:	8809883a 	mov	r4,r17
  80c11c:	080a9800 	call	80a980 <memmove>
  80c120:	003fd406 	br	80c074 <_realloc_r+0x4f0>
  80c124:	90c00417 	ldw	r3,16(r18)
  80c128:	91000604 	addi	r4,r18,24
  80c12c:	ba000804 	addi	r8,r23,32
  80c130:	b8c00615 	stw	r3,24(r23)
  80c134:	90800517 	ldw	r2,20(r18)
  80c138:	b8800715 	stw	r2,28(r23)
  80c13c:	003f1206 	br	80bd88 <_realloc_r+0x204>
  80c140:	90c00417 	ldw	r3,16(r18)
  80c144:	91000604 	addi	r4,r18,24
  80c148:	ba000804 	addi	r8,r23,32
  80c14c:	b8c00615 	stw	r3,24(r23)
  80c150:	90800517 	ldw	r2,20(r18)
  80c154:	b8800715 	stw	r2,28(r23)
  80c158:	003f3206 	br	80be24 <_realloc_r+0x2a0>
  80c15c:	90c00417 	ldw	r3,16(r18)
  80c160:	91000604 	addi	r4,r18,24
  80c164:	b9c00804 	addi	r7,r23,32
  80c168:	b8c00615 	stw	r3,24(r23)
  80c16c:	90800517 	ldw	r2,20(r18)
  80c170:	b8800715 	stw	r2,28(r23)
  80c174:	003fb906 	br	80c05c <_realloc_r+0x4d8>

0080c178 <__isinfd>:
  80c178:	200d883a 	mov	r6,r4
  80c17c:	0109c83a 	sub	r4,zero,r4
  80c180:	2188b03a 	or	r4,r4,r6
  80c184:	2008d7fa 	srli	r4,r4,31
  80c188:	00a00034 	movhi	r2,32768
  80c18c:	10bfffc4 	addi	r2,r2,-1
  80c190:	1144703a 	and	r2,r2,r5
  80c194:	2088b03a 	or	r4,r4,r2
  80c198:	009ffc34 	movhi	r2,32752
  80c19c:	1105c83a 	sub	r2,r2,r4
  80c1a0:	0087c83a 	sub	r3,zero,r2
  80c1a4:	10c4b03a 	or	r2,r2,r3
  80c1a8:	1004d7fa 	srli	r2,r2,31
  80c1ac:	00c00044 	movi	r3,1
  80c1b0:	1885c83a 	sub	r2,r3,r2
  80c1b4:	f800283a 	ret

0080c1b8 <__isnand>:
  80c1b8:	200d883a 	mov	r6,r4
  80c1bc:	0109c83a 	sub	r4,zero,r4
  80c1c0:	2188b03a 	or	r4,r4,r6
  80c1c4:	2008d7fa 	srli	r4,r4,31
  80c1c8:	00a00034 	movhi	r2,32768
  80c1cc:	10bfffc4 	addi	r2,r2,-1
  80c1d0:	1144703a 	and	r2,r2,r5
  80c1d4:	2088b03a 	or	r4,r4,r2
  80c1d8:	009ffc34 	movhi	r2,32752
  80c1dc:	1105c83a 	sub	r2,r2,r4
  80c1e0:	1004d7fa 	srli	r2,r2,31
  80c1e4:	f800283a 	ret

0080c1e8 <_sbrk_r>:
  80c1e8:	defffd04 	addi	sp,sp,-12
  80c1ec:	dc000015 	stw	r16,0(sp)
  80c1f0:	04002074 	movhi	r16,129
  80c1f4:	84105004 	addi	r16,r16,16704
  80c1f8:	dc400115 	stw	r17,4(sp)
  80c1fc:	80000015 	stw	zero,0(r16)
  80c200:	2023883a 	mov	r17,r4
  80c204:	2809883a 	mov	r4,r5
  80c208:	dfc00215 	stw	ra,8(sp)
  80c20c:	080e3600 	call	80e360 <sbrk>
  80c210:	1007883a 	mov	r3,r2
  80c214:	00bfffc4 	movi	r2,-1
  80c218:	18800626 	beq	r3,r2,80c234 <_sbrk_r+0x4c>
  80c21c:	1805883a 	mov	r2,r3
  80c220:	dfc00217 	ldw	ra,8(sp)
  80c224:	dc400117 	ldw	r17,4(sp)
  80c228:	dc000017 	ldw	r16,0(sp)
  80c22c:	dec00304 	addi	sp,sp,12
  80c230:	f800283a 	ret
  80c234:	80800017 	ldw	r2,0(r16)
  80c238:	103ff826 	beq	r2,zero,80c21c <_sbrk_r+0x34>
  80c23c:	88800015 	stw	r2,0(r17)
  80c240:	1805883a 	mov	r2,r3
  80c244:	dfc00217 	ldw	ra,8(sp)
  80c248:	dc400117 	ldw	r17,4(sp)
  80c24c:	dc000017 	ldw	r16,0(sp)
  80c250:	dec00304 	addi	sp,sp,12
  80c254:	f800283a 	ret

0080c258 <__sclose>:
  80c258:	2940038f 	ldh	r5,14(r5)
  80c25c:	080c62c1 	jmpi	80c62c <_close_r>

0080c260 <__sseek>:
  80c260:	defffe04 	addi	sp,sp,-8
  80c264:	dc000015 	stw	r16,0(sp)
  80c268:	2821883a 	mov	r16,r5
  80c26c:	2940038f 	ldh	r5,14(r5)
  80c270:	dfc00115 	stw	ra,4(sp)
  80c274:	080c8a40 	call	80c8a4 <_lseek_r>
  80c278:	1007883a 	mov	r3,r2
  80c27c:	00bfffc4 	movi	r2,-1
  80c280:	18800926 	beq	r3,r2,80c2a8 <__sseek+0x48>
  80c284:	8080030b 	ldhu	r2,12(r16)
  80c288:	80c01415 	stw	r3,80(r16)
  80c28c:	10840014 	ori	r2,r2,4096
  80c290:	8080030d 	sth	r2,12(r16)
  80c294:	1805883a 	mov	r2,r3
  80c298:	dfc00117 	ldw	ra,4(sp)
  80c29c:	dc000017 	ldw	r16,0(sp)
  80c2a0:	dec00204 	addi	sp,sp,8
  80c2a4:	f800283a 	ret
  80c2a8:	8080030b 	ldhu	r2,12(r16)
  80c2ac:	10bbffcc 	andi	r2,r2,61439
  80c2b0:	8080030d 	sth	r2,12(r16)
  80c2b4:	1805883a 	mov	r2,r3
  80c2b8:	dfc00117 	ldw	ra,4(sp)
  80c2bc:	dc000017 	ldw	r16,0(sp)
  80c2c0:	dec00204 	addi	sp,sp,8
  80c2c4:	f800283a 	ret

0080c2c8 <__swrite>:
  80c2c8:	2880030b 	ldhu	r2,12(r5)
  80c2cc:	defffb04 	addi	sp,sp,-20
  80c2d0:	dcc00315 	stw	r19,12(sp)
  80c2d4:	1080400c 	andi	r2,r2,256
  80c2d8:	dc800215 	stw	r18,8(sp)
  80c2dc:	dc400115 	stw	r17,4(sp)
  80c2e0:	dc000015 	stw	r16,0(sp)
  80c2e4:	3027883a 	mov	r19,r6
  80c2e8:	3825883a 	mov	r18,r7
  80c2ec:	dfc00415 	stw	ra,16(sp)
  80c2f0:	2821883a 	mov	r16,r5
  80c2f4:	000d883a 	mov	r6,zero
  80c2f8:	01c00084 	movi	r7,2
  80c2fc:	2023883a 	mov	r17,r4
  80c300:	10000226 	beq	r2,zero,80c30c <__swrite+0x44>
  80c304:	2940038f 	ldh	r5,14(r5)
  80c308:	080c8a40 	call	80c8a4 <_lseek_r>
  80c30c:	8080030b 	ldhu	r2,12(r16)
  80c310:	8140038f 	ldh	r5,14(r16)
  80c314:	8809883a 	mov	r4,r17
  80c318:	10bbffcc 	andi	r2,r2,61439
  80c31c:	980d883a 	mov	r6,r19
  80c320:	900f883a 	mov	r7,r18
  80c324:	8080030d 	sth	r2,12(r16)
  80c328:	dfc00417 	ldw	ra,16(sp)
  80c32c:	dcc00317 	ldw	r19,12(sp)
  80c330:	dc800217 	ldw	r18,8(sp)
  80c334:	dc400117 	ldw	r17,4(sp)
  80c338:	dc000017 	ldw	r16,0(sp)
  80c33c:	dec00504 	addi	sp,sp,20
  80c340:	080c4ec1 	jmpi	80c4ec <_write_r>

0080c344 <__sread>:
  80c344:	defffe04 	addi	sp,sp,-8
  80c348:	dc000015 	stw	r16,0(sp)
  80c34c:	2821883a 	mov	r16,r5
  80c350:	2940038f 	ldh	r5,14(r5)
  80c354:	dfc00115 	stw	ra,4(sp)
  80c358:	080c91c0 	call	80c91c <_read_r>
  80c35c:	1007883a 	mov	r3,r2
  80c360:	10000816 	blt	r2,zero,80c384 <__sread+0x40>
  80c364:	80801417 	ldw	r2,80(r16)
  80c368:	10c5883a 	add	r2,r2,r3
  80c36c:	80801415 	stw	r2,80(r16)
  80c370:	1805883a 	mov	r2,r3
  80c374:	dfc00117 	ldw	ra,4(sp)
  80c378:	dc000017 	ldw	r16,0(sp)
  80c37c:	dec00204 	addi	sp,sp,8
  80c380:	f800283a 	ret
  80c384:	8080030b 	ldhu	r2,12(r16)
  80c388:	10bbffcc 	andi	r2,r2,61439
  80c38c:	8080030d 	sth	r2,12(r16)
  80c390:	1805883a 	mov	r2,r3
  80c394:	dfc00117 	ldw	ra,4(sp)
  80c398:	dc000017 	ldw	r16,0(sp)
  80c39c:	dec00204 	addi	sp,sp,8
  80c3a0:	f800283a 	ret

0080c3a4 <strcmp>:
  80c3a4:	2144b03a 	or	r2,r4,r5
  80c3a8:	108000cc 	andi	r2,r2,3
  80c3ac:	10001d1e 	bne	r2,zero,80c424 <strcmp+0x80>
  80c3b0:	200f883a 	mov	r7,r4
  80c3b4:	28800017 	ldw	r2,0(r5)
  80c3b8:	21000017 	ldw	r4,0(r4)
  80c3bc:	280d883a 	mov	r6,r5
  80c3c0:	2080161e 	bne	r4,r2,80c41c <strcmp+0x78>
  80c3c4:	023fbff4 	movhi	r8,65279
  80c3c8:	423fbfc4 	addi	r8,r8,-257
  80c3cc:	2207883a 	add	r3,r4,r8
  80c3d0:	01602074 	movhi	r5,32897
  80c3d4:	29602004 	addi	r5,r5,-32640
  80c3d8:	1946703a 	and	r3,r3,r5
  80c3dc:	0104303a 	nor	r2,zero,r4
  80c3e0:	10c4703a 	and	r2,r2,r3
  80c3e4:	10001c1e 	bne	r2,zero,80c458 <strcmp+0xb4>
  80c3e8:	4013883a 	mov	r9,r8
  80c3ec:	2811883a 	mov	r8,r5
  80c3f0:	00000106 	br	80c3f8 <strcmp+0x54>
  80c3f4:	1800181e 	bne	r3,zero,80c458 <strcmp+0xb4>
  80c3f8:	39c00104 	addi	r7,r7,4
  80c3fc:	39000017 	ldw	r4,0(r7)
  80c400:	31800104 	addi	r6,r6,4
  80c404:	31400017 	ldw	r5,0(r6)
  80c408:	2245883a 	add	r2,r4,r9
  80c40c:	1204703a 	and	r2,r2,r8
  80c410:	0106303a 	nor	r3,zero,r4
  80c414:	1886703a 	and	r3,r3,r2
  80c418:	217ff626 	beq	r4,r5,80c3f4 <strcmp+0x50>
  80c41c:	3809883a 	mov	r4,r7
  80c420:	300b883a 	mov	r5,r6
  80c424:	20c00007 	ldb	r3,0(r4)
  80c428:	1800051e 	bne	r3,zero,80c440 <strcmp+0x9c>
  80c42c:	00000606 	br	80c448 <strcmp+0xa4>
  80c430:	21000044 	addi	r4,r4,1
  80c434:	20c00007 	ldb	r3,0(r4)
  80c438:	29400044 	addi	r5,r5,1
  80c43c:	18000226 	beq	r3,zero,80c448 <strcmp+0xa4>
  80c440:	28800007 	ldb	r2,0(r5)
  80c444:	18bffa26 	beq	r3,r2,80c430 <strcmp+0x8c>
  80c448:	20c00003 	ldbu	r3,0(r4)
  80c44c:	28800003 	ldbu	r2,0(r5)
  80c450:	1885c83a 	sub	r2,r3,r2
  80c454:	f800283a 	ret
  80c458:	0005883a 	mov	r2,zero
  80c45c:	f800283a 	ret

0080c460 <strcpy>:
  80c460:	2904b03a 	or	r2,r5,r4
  80c464:	108000cc 	andi	r2,r2,3
  80c468:	10000826 	beq	r2,zero,80c48c <strcpy+0x2c>
  80c46c:	2007883a 	mov	r3,r4
  80c470:	28800003 	ldbu	r2,0(r5)
  80c474:	29400044 	addi	r5,r5,1
  80c478:	18800005 	stb	r2,0(r3)
  80c47c:	18c00044 	addi	r3,r3,1
  80c480:	103ffb1e 	bne	r2,zero,80c470 <strcpy+0x10>
  80c484:	2005883a 	mov	r2,r4
  80c488:	f800283a 	ret
  80c48c:	29800017 	ldw	r6,0(r5)
  80c490:	023fbff4 	movhi	r8,65279
  80c494:	423fbfc4 	addi	r8,r8,-257
  80c498:	02a02074 	movhi	r10,32897
  80c49c:	52a02004 	addi	r10,r10,-32640
  80c4a0:	3205883a 	add	r2,r6,r8
  80c4a4:	0186303a 	nor	r3,zero,r6
  80c4a8:	10c4703a 	and	r2,r2,r3
  80c4ac:	1284703a 	and	r2,r2,r10
  80c4b0:	200f883a 	mov	r7,r4
  80c4b4:	10000b1e 	bne	r2,zero,80c4e4 <strcpy+0x84>
  80c4b8:	4013883a 	mov	r9,r8
  80c4bc:	5011883a 	mov	r8,r10
  80c4c0:	39800015 	stw	r6,0(r7)
  80c4c4:	29400104 	addi	r5,r5,4
  80c4c8:	29800017 	ldw	r6,0(r5)
  80c4cc:	39c00104 	addi	r7,r7,4
  80c4d0:	3245883a 	add	r2,r6,r9
  80c4d4:	0186303a 	nor	r3,zero,r6
  80c4d8:	10c4703a 	and	r2,r2,r3
  80c4dc:	1204703a 	and	r2,r2,r8
  80c4e0:	103ff726 	beq	r2,zero,80c4c0 <strcpy+0x60>
  80c4e4:	3807883a 	mov	r3,r7
  80c4e8:	003fe106 	br	80c470 <strcpy+0x10>

0080c4ec <_write_r>:
  80c4ec:	defffd04 	addi	sp,sp,-12
  80c4f0:	dc000015 	stw	r16,0(sp)
  80c4f4:	04002074 	movhi	r16,129
  80c4f8:	84105004 	addi	r16,r16,16704
  80c4fc:	dc400115 	stw	r17,4(sp)
  80c500:	80000015 	stw	zero,0(r16)
  80c504:	2023883a 	mov	r17,r4
  80c508:	2809883a 	mov	r4,r5
  80c50c:	300b883a 	mov	r5,r6
  80c510:	380d883a 	mov	r6,r7
  80c514:	dfc00215 	stw	ra,8(sp)
  80c518:	080e5100 	call	80e510 <write>
  80c51c:	1007883a 	mov	r3,r2
  80c520:	00bfffc4 	movi	r2,-1
  80c524:	18800626 	beq	r3,r2,80c540 <_write_r+0x54>
  80c528:	1805883a 	mov	r2,r3
  80c52c:	dfc00217 	ldw	ra,8(sp)
  80c530:	dc400117 	ldw	r17,4(sp)
  80c534:	dc000017 	ldw	r16,0(sp)
  80c538:	dec00304 	addi	sp,sp,12
  80c53c:	f800283a 	ret
  80c540:	80800017 	ldw	r2,0(r16)
  80c544:	103ff826 	beq	r2,zero,80c528 <_write_r+0x3c>
  80c548:	88800015 	stw	r2,0(r17)
  80c54c:	1805883a 	mov	r2,r3
  80c550:	dfc00217 	ldw	ra,8(sp)
  80c554:	dc400117 	ldw	r17,4(sp)
  80c558:	dc000017 	ldw	r16,0(sp)
  80c55c:	dec00304 	addi	sp,sp,12
  80c560:	f800283a 	ret

0080c564 <_calloc_r>:
  80c564:	defffe04 	addi	sp,sp,-8
  80c568:	dc400015 	stw	r17,0(sp)
  80c56c:	2023883a 	mov	r17,r4
  80c570:	2809883a 	mov	r4,r5
  80c574:	300b883a 	mov	r5,r6
  80c578:	dfc00115 	stw	ra,4(sp)
  80c57c:	0803ec40 	call	803ec4 <__mulsi3>
  80c580:	100b883a 	mov	r5,r2
  80c584:	8809883a 	mov	r4,r17
  80c588:	080a0bc0 	call	80a0bc <_malloc_r>
  80c58c:	1023883a 	mov	r17,r2
  80c590:	01c00904 	movi	r7,36
  80c594:	10000d26 	beq	r2,zero,80c5cc <_calloc_r+0x68>
  80c598:	10ffff17 	ldw	r3,-4(r2)
  80c59c:	1009883a 	mov	r4,r2
  80c5a0:	00bfff04 	movi	r2,-4
  80c5a4:	1886703a 	and	r3,r3,r2
  80c5a8:	1887883a 	add	r3,r3,r2
  80c5ac:	180d883a 	mov	r6,r3
  80c5b0:	000b883a 	mov	r5,zero
  80c5b4:	38c01736 	bltu	r7,r3,80c614 <_calloc_r+0xb0>
  80c5b8:	008004c4 	movi	r2,19
  80c5bc:	10c00836 	bltu	r2,r3,80c5e0 <_calloc_r+0x7c>
  80c5c0:	20000215 	stw	zero,8(r4)
  80c5c4:	20000015 	stw	zero,0(r4)
  80c5c8:	20000115 	stw	zero,4(r4)
  80c5cc:	8805883a 	mov	r2,r17
  80c5d0:	dfc00117 	ldw	ra,4(sp)
  80c5d4:	dc400017 	ldw	r17,0(sp)
  80c5d8:	dec00204 	addi	sp,sp,8
  80c5dc:	f800283a 	ret
  80c5e0:	008006c4 	movi	r2,27
  80c5e4:	88000015 	stw	zero,0(r17)
  80c5e8:	88000115 	stw	zero,4(r17)
  80c5ec:	89000204 	addi	r4,r17,8
  80c5f0:	10fff32e 	bgeu	r2,r3,80c5c0 <_calloc_r+0x5c>
  80c5f4:	88000215 	stw	zero,8(r17)
  80c5f8:	88000315 	stw	zero,12(r17)
  80c5fc:	89000404 	addi	r4,r17,16
  80c600:	19ffef1e 	bne	r3,r7,80c5c0 <_calloc_r+0x5c>
  80c604:	89000604 	addi	r4,r17,24
  80c608:	88000415 	stw	zero,16(r17)
  80c60c:	88000515 	stw	zero,20(r17)
  80c610:	003feb06 	br	80c5c0 <_calloc_r+0x5c>
  80c614:	080aa600 	call	80aa60 <memset>
  80c618:	8805883a 	mov	r2,r17
  80c61c:	dfc00117 	ldw	ra,4(sp)
  80c620:	dc400017 	ldw	r17,0(sp)
  80c624:	dec00204 	addi	sp,sp,8
  80c628:	f800283a 	ret

0080c62c <_close_r>:
  80c62c:	defffd04 	addi	sp,sp,-12
  80c630:	dc000015 	stw	r16,0(sp)
  80c634:	04002074 	movhi	r16,129
  80c638:	84105004 	addi	r16,r16,16704
  80c63c:	dc400115 	stw	r17,4(sp)
  80c640:	80000015 	stw	zero,0(r16)
  80c644:	2023883a 	mov	r17,r4
  80c648:	2809883a 	mov	r4,r5
  80c64c:	dfc00215 	stw	ra,8(sp)
  80c650:	080da500 	call	80da50 <close>
  80c654:	1007883a 	mov	r3,r2
  80c658:	00bfffc4 	movi	r2,-1
  80c65c:	18800626 	beq	r3,r2,80c678 <_close_r+0x4c>
  80c660:	1805883a 	mov	r2,r3
  80c664:	dfc00217 	ldw	ra,8(sp)
  80c668:	dc400117 	ldw	r17,4(sp)
  80c66c:	dc000017 	ldw	r16,0(sp)
  80c670:	dec00304 	addi	sp,sp,12
  80c674:	f800283a 	ret
  80c678:	80800017 	ldw	r2,0(r16)
  80c67c:	103ff826 	beq	r2,zero,80c660 <_close_r+0x34>
  80c680:	88800015 	stw	r2,0(r17)
  80c684:	1805883a 	mov	r2,r3
  80c688:	dfc00217 	ldw	ra,8(sp)
  80c68c:	dc400117 	ldw	r17,4(sp)
  80c690:	dc000017 	ldw	r16,0(sp)
  80c694:	dec00304 	addi	sp,sp,12
  80c698:	f800283a 	ret

0080c69c <_fclose_r>:
  80c69c:	defffc04 	addi	sp,sp,-16
  80c6a0:	dc400115 	stw	r17,4(sp)
  80c6a4:	dc000015 	stw	r16,0(sp)
  80c6a8:	dfc00315 	stw	ra,12(sp)
  80c6ac:	dc800215 	stw	r18,8(sp)
  80c6b0:	2821883a 	mov	r16,r5
  80c6b4:	2023883a 	mov	r17,r4
  80c6b8:	28002926 	beq	r5,zero,80c760 <_fclose_r+0xc4>
  80c6bc:	080916c0 	call	80916c <__sfp_lock_acquire>
  80c6c0:	88000226 	beq	r17,zero,80c6cc <_fclose_r+0x30>
  80c6c4:	88800e17 	ldw	r2,56(r17)
  80c6c8:	10002d26 	beq	r2,zero,80c780 <_fclose_r+0xe4>
  80c6cc:	8080030f 	ldh	r2,12(r16)
  80c6d0:	10002226 	beq	r2,zero,80c75c <_fclose_r+0xc0>
  80c6d4:	8809883a 	mov	r4,r17
  80c6d8:	800b883a 	mov	r5,r16
  80c6dc:	0808ee40 	call	808ee4 <_fflush_r>
  80c6e0:	1025883a 	mov	r18,r2
  80c6e4:	80800b17 	ldw	r2,44(r16)
  80c6e8:	10000426 	beq	r2,zero,80c6fc <_fclose_r+0x60>
  80c6ec:	81400717 	ldw	r5,28(r16)
  80c6f0:	8809883a 	mov	r4,r17
  80c6f4:	103ee83a 	callr	r2
  80c6f8:	10002a16 	blt	r2,zero,80c7a4 <_fclose_r+0x108>
  80c6fc:	8080030b 	ldhu	r2,12(r16)
  80c700:	1080200c 	andi	r2,r2,128
  80c704:	1000231e 	bne	r2,zero,80c794 <_fclose_r+0xf8>
  80c708:	81400c17 	ldw	r5,48(r16)
  80c70c:	28000526 	beq	r5,zero,80c724 <_fclose_r+0x88>
  80c710:	80801004 	addi	r2,r16,64
  80c714:	28800226 	beq	r5,r2,80c720 <_fclose_r+0x84>
  80c718:	8809883a 	mov	r4,r17
  80c71c:	08095340 	call	809534 <_free_r>
  80c720:	80000c15 	stw	zero,48(r16)
  80c724:	81401117 	ldw	r5,68(r16)
  80c728:	28000326 	beq	r5,zero,80c738 <_fclose_r+0x9c>
  80c72c:	8809883a 	mov	r4,r17
  80c730:	08095340 	call	809534 <_free_r>
  80c734:	80001115 	stw	zero,68(r16)
  80c738:	8000030d 	sth	zero,12(r16)
  80c73c:	08091700 	call	809170 <__sfp_lock_release>
  80c740:	9005883a 	mov	r2,r18
  80c744:	dfc00317 	ldw	ra,12(sp)
  80c748:	dc800217 	ldw	r18,8(sp)
  80c74c:	dc400117 	ldw	r17,4(sp)
  80c750:	dc000017 	ldw	r16,0(sp)
  80c754:	dec00404 	addi	sp,sp,16
  80c758:	f800283a 	ret
  80c75c:	08091700 	call	809170 <__sfp_lock_release>
  80c760:	0025883a 	mov	r18,zero
  80c764:	9005883a 	mov	r2,r18
  80c768:	dfc00317 	ldw	ra,12(sp)
  80c76c:	dc800217 	ldw	r18,8(sp)
  80c770:	dc400117 	ldw	r17,4(sp)
  80c774:	dc000017 	ldw	r16,0(sp)
  80c778:	dec00404 	addi	sp,sp,16
  80c77c:	f800283a 	ret
  80c780:	8809883a 	mov	r4,r17
  80c784:	080917c0 	call	80917c <__sinit>
  80c788:	8080030f 	ldh	r2,12(r16)
  80c78c:	103fd11e 	bne	r2,zero,80c6d4 <_fclose_r+0x38>
  80c790:	003ff206 	br	80c75c <_fclose_r+0xc0>
  80c794:	81400417 	ldw	r5,16(r16)
  80c798:	8809883a 	mov	r4,r17
  80c79c:	08095340 	call	809534 <_free_r>
  80c7a0:	003fd906 	br	80c708 <_fclose_r+0x6c>
  80c7a4:	04bfffc4 	movi	r18,-1
  80c7a8:	003fd406 	br	80c6fc <_fclose_r+0x60>

0080c7ac <fclose>:
  80c7ac:	00802074 	movhi	r2,129
  80c7b0:	1089a304 	addi	r2,r2,9868
  80c7b4:	200b883a 	mov	r5,r4
  80c7b8:	11000017 	ldw	r4,0(r2)
  80c7bc:	080c69c1 	jmpi	80c69c <_fclose_r>

0080c7c0 <_fstat_r>:
  80c7c0:	defffd04 	addi	sp,sp,-12
  80c7c4:	dc000015 	stw	r16,0(sp)
  80c7c8:	04002074 	movhi	r16,129
  80c7cc:	84105004 	addi	r16,r16,16704
  80c7d0:	dc400115 	stw	r17,4(sp)
  80c7d4:	80000015 	stw	zero,0(r16)
  80c7d8:	2023883a 	mov	r17,r4
  80c7dc:	2809883a 	mov	r4,r5
  80c7e0:	300b883a 	mov	r5,r6
  80c7e4:	dfc00215 	stw	ra,8(sp)
  80c7e8:	080dbdc0 	call	80dbdc <fstat>
  80c7ec:	1007883a 	mov	r3,r2
  80c7f0:	00bfffc4 	movi	r2,-1
  80c7f4:	18800626 	beq	r3,r2,80c810 <_fstat_r+0x50>
  80c7f8:	1805883a 	mov	r2,r3
  80c7fc:	dfc00217 	ldw	ra,8(sp)
  80c800:	dc400117 	ldw	r17,4(sp)
  80c804:	dc000017 	ldw	r16,0(sp)
  80c808:	dec00304 	addi	sp,sp,12
  80c80c:	f800283a 	ret
  80c810:	80800017 	ldw	r2,0(r16)
  80c814:	103ff826 	beq	r2,zero,80c7f8 <_fstat_r+0x38>
  80c818:	88800015 	stw	r2,0(r17)
  80c81c:	1805883a 	mov	r2,r3
  80c820:	dfc00217 	ldw	ra,8(sp)
  80c824:	dc400117 	ldw	r17,4(sp)
  80c828:	dc000017 	ldw	r16,0(sp)
  80c82c:	dec00304 	addi	sp,sp,12
  80c830:	f800283a 	ret

0080c834 <_isatty_r>:
  80c834:	defffd04 	addi	sp,sp,-12
  80c838:	dc000015 	stw	r16,0(sp)
  80c83c:	04002074 	movhi	r16,129
  80c840:	84105004 	addi	r16,r16,16704
  80c844:	dc400115 	stw	r17,4(sp)
  80c848:	80000015 	stw	zero,0(r16)
  80c84c:	2023883a 	mov	r17,r4
  80c850:	2809883a 	mov	r4,r5
  80c854:	dfc00215 	stw	ra,8(sp)
  80c858:	080dd140 	call	80dd14 <isatty>
  80c85c:	1007883a 	mov	r3,r2
  80c860:	00bfffc4 	movi	r2,-1
  80c864:	18800626 	beq	r3,r2,80c880 <_isatty_r+0x4c>
  80c868:	1805883a 	mov	r2,r3
  80c86c:	dfc00217 	ldw	ra,8(sp)
  80c870:	dc400117 	ldw	r17,4(sp)
  80c874:	dc000017 	ldw	r16,0(sp)
  80c878:	dec00304 	addi	sp,sp,12
  80c87c:	f800283a 	ret
  80c880:	80800017 	ldw	r2,0(r16)
  80c884:	103ff826 	beq	r2,zero,80c868 <_isatty_r+0x34>
  80c888:	88800015 	stw	r2,0(r17)
  80c88c:	1805883a 	mov	r2,r3
  80c890:	dfc00217 	ldw	ra,8(sp)
  80c894:	dc400117 	ldw	r17,4(sp)
  80c898:	dc000017 	ldw	r16,0(sp)
  80c89c:	dec00304 	addi	sp,sp,12
  80c8a0:	f800283a 	ret

0080c8a4 <_lseek_r>:
  80c8a4:	defffd04 	addi	sp,sp,-12
  80c8a8:	dc000015 	stw	r16,0(sp)
  80c8ac:	04002074 	movhi	r16,129
  80c8b0:	84105004 	addi	r16,r16,16704
  80c8b4:	dc400115 	stw	r17,4(sp)
  80c8b8:	80000015 	stw	zero,0(r16)
  80c8bc:	2023883a 	mov	r17,r4
  80c8c0:	2809883a 	mov	r4,r5
  80c8c4:	300b883a 	mov	r5,r6
  80c8c8:	380d883a 	mov	r6,r7
  80c8cc:	dfc00215 	stw	ra,8(sp)
  80c8d0:	080df240 	call	80df24 <lseek>
  80c8d4:	1007883a 	mov	r3,r2
  80c8d8:	00bfffc4 	movi	r2,-1
  80c8dc:	18800626 	beq	r3,r2,80c8f8 <_lseek_r+0x54>
  80c8e0:	1805883a 	mov	r2,r3
  80c8e4:	dfc00217 	ldw	ra,8(sp)
  80c8e8:	dc400117 	ldw	r17,4(sp)
  80c8ec:	dc000017 	ldw	r16,0(sp)
  80c8f0:	dec00304 	addi	sp,sp,12
  80c8f4:	f800283a 	ret
  80c8f8:	80800017 	ldw	r2,0(r16)
  80c8fc:	103ff826 	beq	r2,zero,80c8e0 <_lseek_r+0x3c>
  80c900:	88800015 	stw	r2,0(r17)
  80c904:	1805883a 	mov	r2,r3
  80c908:	dfc00217 	ldw	ra,8(sp)
  80c90c:	dc400117 	ldw	r17,4(sp)
  80c910:	dc000017 	ldw	r16,0(sp)
  80c914:	dec00304 	addi	sp,sp,12
  80c918:	f800283a 	ret

0080c91c <_read_r>:
  80c91c:	defffd04 	addi	sp,sp,-12
  80c920:	dc000015 	stw	r16,0(sp)
  80c924:	04002074 	movhi	r16,129
  80c928:	84105004 	addi	r16,r16,16704
  80c92c:	dc400115 	stw	r17,4(sp)
  80c930:	80000015 	stw	zero,0(r16)
  80c934:	2023883a 	mov	r17,r4
  80c938:	2809883a 	mov	r4,r5
  80c93c:	300b883a 	mov	r5,r6
  80c940:	380d883a 	mov	r6,r7
  80c944:	dfc00215 	stw	ra,8(sp)
  80c948:	080e1640 	call	80e164 <read>
  80c94c:	1007883a 	mov	r3,r2
  80c950:	00bfffc4 	movi	r2,-1
  80c954:	18800626 	beq	r3,r2,80c970 <_read_r+0x54>
  80c958:	1805883a 	mov	r2,r3
  80c95c:	dfc00217 	ldw	ra,8(sp)
  80c960:	dc400117 	ldw	r17,4(sp)
  80c964:	dc000017 	ldw	r16,0(sp)
  80c968:	dec00304 	addi	sp,sp,12
  80c96c:	f800283a 	ret
  80c970:	80800017 	ldw	r2,0(r16)
  80c974:	103ff826 	beq	r2,zero,80c958 <_read_r+0x3c>
  80c978:	88800015 	stw	r2,0(r17)
  80c97c:	1805883a 	mov	r2,r3
  80c980:	dfc00217 	ldw	ra,8(sp)
  80c984:	dc400117 	ldw	r17,4(sp)
  80c988:	dc000017 	ldw	r16,0(sp)
  80c98c:	dec00304 	addi	sp,sp,12
  80c990:	f800283a 	ret

0080c994 <__udivdi3>:
  80c994:	defff104 	addi	sp,sp,-60
  80c998:	0015883a 	mov	r10,zero
  80c99c:	2005883a 	mov	r2,r4
  80c9a0:	3011883a 	mov	r8,r6
  80c9a4:	df000d15 	stw	fp,52(sp)
  80c9a8:	dd400a15 	stw	r21,40(sp)
  80c9ac:	dcc00815 	stw	r19,32(sp)
  80c9b0:	dfc00e15 	stw	ra,56(sp)
  80c9b4:	ddc00c15 	stw	r23,48(sp)
  80c9b8:	dd800b15 	stw	r22,44(sp)
  80c9bc:	dd000915 	stw	r20,36(sp)
  80c9c0:	dc800715 	stw	r18,28(sp)
  80c9c4:	dc400615 	stw	r17,24(sp)
  80c9c8:	dc000515 	stw	r16,20(sp)
  80c9cc:	da800315 	stw	r10,12(sp)
  80c9d0:	4027883a 	mov	r19,r8
  80c9d4:	1039883a 	mov	fp,r2
  80c9d8:	282b883a 	mov	r21,r5
  80c9dc:	da800415 	stw	r10,16(sp)
  80c9e0:	3800401e 	bne	r7,zero,80cae4 <__udivdi3+0x150>
  80c9e4:	2a006536 	bltu	r5,r8,80cb7c <__udivdi3+0x1e8>
  80c9e8:	4000b526 	beq	r8,zero,80ccc0 <__udivdi3+0x32c>
  80c9ec:	00bfffd4 	movui	r2,65535
  80c9f0:	14c0ad36 	bltu	r2,r19,80cca8 <__udivdi3+0x314>
  80c9f4:	00803fc4 	movi	r2,255
  80c9f8:	14c15e36 	bltu	r2,r19,80cf74 <__udivdi3+0x5e0>
  80c9fc:	000b883a 	mov	r5,zero
  80ca00:	0005883a 	mov	r2,zero
  80ca04:	9884d83a 	srl	r2,r19,r2
  80ca08:	01002074 	movhi	r4,129
  80ca0c:	21025204 	addi	r4,r4,2376
  80ca10:	01800804 	movi	r6,32
  80ca14:	1105883a 	add	r2,r2,r4
  80ca18:	10c00003 	ldbu	r3,0(r2)
  80ca1c:	28c7883a 	add	r3,r5,r3
  80ca20:	30e9c83a 	sub	r20,r6,r3
  80ca24:	a0010a1e 	bne	r20,zero,80ce50 <__udivdi3+0x4bc>
  80ca28:	982ed43a 	srli	r23,r19,16
  80ca2c:	acebc83a 	sub	r21,r21,r19
  80ca30:	9dbfffcc 	andi	r22,r19,65535
  80ca34:	05000044 	movi	r20,1
  80ca38:	a809883a 	mov	r4,r21
  80ca3c:	b80b883a 	mov	r5,r23
  80ca40:	0803eb40 	call	803eb4 <__udivsi3>
  80ca44:	100b883a 	mov	r5,r2
  80ca48:	b009883a 	mov	r4,r22
  80ca4c:	1021883a 	mov	r16,r2
  80ca50:	0803ec40 	call	803ec4 <__mulsi3>
  80ca54:	a809883a 	mov	r4,r21
  80ca58:	b80b883a 	mov	r5,r23
  80ca5c:	1023883a 	mov	r17,r2
  80ca60:	0803ebc0 	call	803ebc <__umodsi3>
  80ca64:	1004943a 	slli	r2,r2,16
  80ca68:	e006d43a 	srli	r3,fp,16
  80ca6c:	10c4b03a 	or	r2,r2,r3
  80ca70:	1440042e 	bgeu	r2,r17,80ca84 <__udivdi3+0xf0>
  80ca74:	14c5883a 	add	r2,r2,r19
  80ca78:	843fffc4 	addi	r16,r16,-1
  80ca7c:	14c00136 	bltu	r2,r19,80ca84 <__udivdi3+0xf0>
  80ca80:	14415c36 	bltu	r2,r17,80cff4 <__udivdi3+0x660>
  80ca84:	1463c83a 	sub	r17,r2,r17
  80ca88:	8809883a 	mov	r4,r17
  80ca8c:	b80b883a 	mov	r5,r23
  80ca90:	0803eb40 	call	803eb4 <__udivsi3>
  80ca94:	100b883a 	mov	r5,r2
  80ca98:	b009883a 	mov	r4,r22
  80ca9c:	102b883a 	mov	r21,r2
  80caa0:	0803ec40 	call	803ec4 <__mulsi3>
  80caa4:	8809883a 	mov	r4,r17
  80caa8:	b80b883a 	mov	r5,r23
  80caac:	1025883a 	mov	r18,r2
  80cab0:	0803ebc0 	call	803ebc <__umodsi3>
  80cab4:	1004943a 	slli	r2,r2,16
  80cab8:	e0ffffcc 	andi	r3,fp,65535
  80cabc:	10c4b03a 	or	r2,r2,r3
  80cac0:	1480042e 	bgeu	r2,r18,80cad4 <__udivdi3+0x140>
  80cac4:	9885883a 	add	r2,r19,r2
  80cac8:	ad7fffc4 	addi	r21,r21,-1
  80cacc:	14c00136 	bltu	r2,r19,80cad4 <__udivdi3+0x140>
  80cad0:	14813c36 	bltu	r2,r18,80cfc4 <__udivdi3+0x630>
  80cad4:	8004943a 	slli	r2,r16,16
  80cad8:	a009883a 	mov	r4,r20
  80cadc:	a884b03a 	or	r2,r21,r2
  80cae0:	00001506 	br	80cb38 <__udivdi3+0x1a4>
  80cae4:	380d883a 	mov	r6,r7
  80cae8:	29c06c36 	bltu	r5,r7,80cc9c <__udivdi3+0x308>
  80caec:	00bfffd4 	movui	r2,65535
  80caf0:	11c06436 	bltu	r2,r7,80cc84 <__udivdi3+0x2f0>
  80caf4:	00803fc4 	movi	r2,255
  80caf8:	11c11836 	bltu	r2,r7,80cf5c <__udivdi3+0x5c8>
  80cafc:	000b883a 	mov	r5,zero
  80cb00:	0005883a 	mov	r2,zero
  80cb04:	3084d83a 	srl	r2,r6,r2
  80cb08:	01002074 	movhi	r4,129
  80cb0c:	21025204 	addi	r4,r4,2376
  80cb10:	01c00804 	movi	r7,32
  80cb14:	1105883a 	add	r2,r2,r4
  80cb18:	10c00003 	ldbu	r3,0(r2)
  80cb1c:	28c7883a 	add	r3,r5,r3
  80cb20:	38edc83a 	sub	r22,r7,r3
  80cb24:	b000731e 	bne	r22,zero,80ccf4 <__udivdi3+0x360>
  80cb28:	35400136 	bltu	r6,r21,80cb30 <__udivdi3+0x19c>
  80cb2c:	e4c05b36 	bltu	fp,r19,80cc9c <__udivdi3+0x308>
  80cb30:	00800044 	movi	r2,1
  80cb34:	0009883a 	mov	r4,zero
  80cb38:	d8800315 	stw	r2,12(sp)
  80cb3c:	d9400317 	ldw	r5,12(sp)
  80cb40:	2007883a 	mov	r3,r4
  80cb44:	d9000415 	stw	r4,16(sp)
  80cb48:	2805883a 	mov	r2,r5
  80cb4c:	dfc00e17 	ldw	ra,56(sp)
  80cb50:	df000d17 	ldw	fp,52(sp)
  80cb54:	ddc00c17 	ldw	r23,48(sp)
  80cb58:	dd800b17 	ldw	r22,44(sp)
  80cb5c:	dd400a17 	ldw	r21,40(sp)
  80cb60:	dd000917 	ldw	r20,36(sp)
  80cb64:	dcc00817 	ldw	r19,32(sp)
  80cb68:	dc800717 	ldw	r18,28(sp)
  80cb6c:	dc400617 	ldw	r17,24(sp)
  80cb70:	dc000517 	ldw	r16,20(sp)
  80cb74:	dec00f04 	addi	sp,sp,60
  80cb78:	f800283a 	ret
  80cb7c:	00bfffd4 	movui	r2,65535
  80cb80:	12005636 	bltu	r2,r8,80ccdc <__udivdi3+0x348>
  80cb84:	00803fc4 	movi	r2,255
  80cb88:	12010036 	bltu	r2,r8,80cf8c <__udivdi3+0x5f8>
  80cb8c:	000b883a 	mov	r5,zero
  80cb90:	0005883a 	mov	r2,zero
  80cb94:	9884d83a 	srl	r2,r19,r2
  80cb98:	01002074 	movhi	r4,129
  80cb9c:	21025204 	addi	r4,r4,2376
  80cba0:	01800804 	movi	r6,32
  80cba4:	1105883a 	add	r2,r2,r4
  80cba8:	10c00003 	ldbu	r3,0(r2)
  80cbac:	28c7883a 	add	r3,r5,r3
  80cbb0:	30cbc83a 	sub	r5,r6,r3
  80cbb4:	28000626 	beq	r5,zero,80cbd0 <__udivdi3+0x23c>
  80cbb8:	3145c83a 	sub	r2,r6,r5
  80cbbc:	e084d83a 	srl	r2,fp,r2
  80cbc0:	a946983a 	sll	r3,r21,r5
  80cbc4:	e178983a 	sll	fp,fp,r5
  80cbc8:	9966983a 	sll	r19,r19,r5
  80cbcc:	18aab03a 	or	r21,r3,r2
  80cbd0:	982ed43a 	srli	r23,r19,16
  80cbd4:	a809883a 	mov	r4,r21
  80cbd8:	9cbfffcc 	andi	r18,r19,65535
  80cbdc:	b80b883a 	mov	r5,r23
  80cbe0:	0803eb40 	call	803eb4 <__udivsi3>
  80cbe4:	100b883a 	mov	r5,r2
  80cbe8:	9009883a 	mov	r4,r18
  80cbec:	1021883a 	mov	r16,r2
  80cbf0:	0803ec40 	call	803ec4 <__mulsi3>
  80cbf4:	a809883a 	mov	r4,r21
  80cbf8:	b80b883a 	mov	r5,r23
  80cbfc:	1023883a 	mov	r17,r2
  80cc00:	0803ebc0 	call	803ebc <__umodsi3>
  80cc04:	1004943a 	slli	r2,r2,16
  80cc08:	e006d43a 	srli	r3,fp,16
  80cc0c:	10c4b03a 	or	r2,r2,r3
  80cc10:	1440042e 	bgeu	r2,r17,80cc24 <__udivdi3+0x290>
  80cc14:	14c5883a 	add	r2,r2,r19
  80cc18:	843fffc4 	addi	r16,r16,-1
  80cc1c:	14c00136 	bltu	r2,r19,80cc24 <__udivdi3+0x290>
  80cc20:	1440ea36 	bltu	r2,r17,80cfcc <__udivdi3+0x638>
  80cc24:	1463c83a 	sub	r17,r2,r17
  80cc28:	8809883a 	mov	r4,r17
  80cc2c:	b80b883a 	mov	r5,r23
  80cc30:	0803eb40 	call	803eb4 <__udivsi3>
  80cc34:	100b883a 	mov	r5,r2
  80cc38:	9009883a 	mov	r4,r18
  80cc3c:	102b883a 	mov	r21,r2
  80cc40:	0803ec40 	call	803ec4 <__mulsi3>
  80cc44:	8809883a 	mov	r4,r17
  80cc48:	b80b883a 	mov	r5,r23
  80cc4c:	1025883a 	mov	r18,r2
  80cc50:	0803ebc0 	call	803ebc <__umodsi3>
  80cc54:	1004943a 	slli	r2,r2,16
  80cc58:	e0ffffcc 	andi	r3,fp,65535
  80cc5c:	10c4b03a 	or	r2,r2,r3
  80cc60:	1480042e 	bgeu	r2,r18,80cc74 <__udivdi3+0x2e0>
  80cc64:	9885883a 	add	r2,r19,r2
  80cc68:	ad7fffc4 	addi	r21,r21,-1
  80cc6c:	14c00136 	bltu	r2,r19,80cc74 <__udivdi3+0x2e0>
  80cc70:	1480d936 	bltu	r2,r18,80cfd8 <__udivdi3+0x644>
  80cc74:	8004943a 	slli	r2,r16,16
  80cc78:	0009883a 	mov	r4,zero
  80cc7c:	a884b03a 	or	r2,r21,r2
  80cc80:	003fad06 	br	80cb38 <__udivdi3+0x1a4>
  80cc84:	00804034 	movhi	r2,256
  80cc88:	10bfffc4 	addi	r2,r2,-1
  80cc8c:	11c0b636 	bltu	r2,r7,80cf68 <__udivdi3+0x5d4>
  80cc90:	01400404 	movi	r5,16
  80cc94:	2805883a 	mov	r2,r5
  80cc98:	003f9a06 	br	80cb04 <__udivdi3+0x170>
  80cc9c:	0005883a 	mov	r2,zero
  80cca0:	0009883a 	mov	r4,zero
  80cca4:	003fa406 	br	80cb38 <__udivdi3+0x1a4>
  80cca8:	00804034 	movhi	r2,256
  80ccac:	10bfffc4 	addi	r2,r2,-1
  80ccb0:	14c0b336 	bltu	r2,r19,80cf80 <__udivdi3+0x5ec>
  80ccb4:	01400404 	movi	r5,16
  80ccb8:	2805883a 	mov	r2,r5
  80ccbc:	003f5106 	br	80ca04 <__udivdi3+0x70>
  80ccc0:	01000044 	movi	r4,1
  80ccc4:	000b883a 	mov	r5,zero
  80ccc8:	0803eb40 	call	803eb4 <__udivsi3>
  80cccc:	1027883a 	mov	r19,r2
  80ccd0:	00bfffd4 	movui	r2,65535
  80ccd4:	14fff436 	bltu	r2,r19,80cca8 <__udivdi3+0x314>
  80ccd8:	003f4606 	br	80c9f4 <__udivdi3+0x60>
  80ccdc:	00804034 	movhi	r2,256
  80cce0:	10bfffc4 	addi	r2,r2,-1
  80cce4:	1200ac36 	bltu	r2,r8,80cf98 <__udivdi3+0x604>
  80cce8:	01400404 	movi	r5,16
  80ccec:	2805883a 	mov	r2,r5
  80ccf0:	003fa806 	br	80cb94 <__udivdi3+0x200>
  80ccf4:	3d85c83a 	sub	r2,r7,r22
  80ccf8:	3588983a 	sll	r4,r6,r22
  80ccfc:	9886d83a 	srl	r3,r19,r2
  80cd00:	a8a2d83a 	srl	r17,r21,r2
  80cd04:	e084d83a 	srl	r2,fp,r2
  80cd08:	20eeb03a 	or	r23,r4,r3
  80cd0c:	b824d43a 	srli	r18,r23,16
  80cd10:	ad86983a 	sll	r3,r21,r22
  80cd14:	8809883a 	mov	r4,r17
  80cd18:	900b883a 	mov	r5,r18
  80cd1c:	1886b03a 	or	r3,r3,r2
  80cd20:	d8c00115 	stw	r3,4(sp)
  80cd24:	bc3fffcc 	andi	r16,r23,65535
  80cd28:	0803eb40 	call	803eb4 <__udivsi3>
  80cd2c:	100b883a 	mov	r5,r2
  80cd30:	8009883a 	mov	r4,r16
  80cd34:	1029883a 	mov	r20,r2
  80cd38:	0803ec40 	call	803ec4 <__mulsi3>
  80cd3c:	900b883a 	mov	r5,r18
  80cd40:	8809883a 	mov	r4,r17
  80cd44:	102b883a 	mov	r21,r2
  80cd48:	0803ebc0 	call	803ebc <__umodsi3>
  80cd4c:	d9400117 	ldw	r5,4(sp)
  80cd50:	1004943a 	slli	r2,r2,16
  80cd54:	9da6983a 	sll	r19,r19,r22
  80cd58:	2806d43a 	srli	r3,r5,16
  80cd5c:	10c4b03a 	or	r2,r2,r3
  80cd60:	1540032e 	bgeu	r2,r21,80cd70 <__udivdi3+0x3dc>
  80cd64:	15c5883a 	add	r2,r2,r23
  80cd68:	a53fffc4 	addi	r20,r20,-1
  80cd6c:	15c0912e 	bgeu	r2,r23,80cfb4 <__udivdi3+0x620>
  80cd70:	1563c83a 	sub	r17,r2,r21
  80cd74:	8809883a 	mov	r4,r17
  80cd78:	900b883a 	mov	r5,r18
  80cd7c:	0803eb40 	call	803eb4 <__udivsi3>
  80cd80:	100b883a 	mov	r5,r2
  80cd84:	8009883a 	mov	r4,r16
  80cd88:	102b883a 	mov	r21,r2
  80cd8c:	0803ec40 	call	803ec4 <__mulsi3>
  80cd90:	8809883a 	mov	r4,r17
  80cd94:	900b883a 	mov	r5,r18
  80cd98:	1021883a 	mov	r16,r2
  80cd9c:	0803ebc0 	call	803ebc <__umodsi3>
  80cda0:	da800117 	ldw	r10,4(sp)
  80cda4:	1004943a 	slli	r2,r2,16
  80cda8:	50ffffcc 	andi	r3,r10,65535
  80cdac:	10c6b03a 	or	r3,r2,r3
  80cdb0:	1c00032e 	bgeu	r3,r16,80cdc0 <__udivdi3+0x42c>
  80cdb4:	1dc7883a 	add	r3,r3,r23
  80cdb8:	ad7fffc4 	addi	r21,r21,-1
  80cdbc:	1dc0792e 	bgeu	r3,r23,80cfa4 <__udivdi3+0x610>
  80cdc0:	a004943a 	slli	r2,r20,16
  80cdc4:	982ed43a 	srli	r23,r19,16
  80cdc8:	9cffffcc 	andi	r19,r19,65535
  80cdcc:	a8a4b03a 	or	r18,r21,r2
  80cdd0:	947fffcc 	andi	r17,r18,65535
  80cdd4:	902ad43a 	srli	r21,r18,16
  80cdd8:	8809883a 	mov	r4,r17
  80cddc:	980b883a 	mov	r5,r19
  80cde0:	1c21c83a 	sub	r16,r3,r16
  80cde4:	0803ec40 	call	803ec4 <__mulsi3>
  80cde8:	8809883a 	mov	r4,r17
  80cdec:	b80b883a 	mov	r5,r23
  80cdf0:	1029883a 	mov	r20,r2
  80cdf4:	0803ec40 	call	803ec4 <__mulsi3>
  80cdf8:	980b883a 	mov	r5,r19
  80cdfc:	a809883a 	mov	r4,r21
  80ce00:	1023883a 	mov	r17,r2
  80ce04:	0803ec40 	call	803ec4 <__mulsi3>
  80ce08:	a809883a 	mov	r4,r21
  80ce0c:	b80b883a 	mov	r5,r23
  80ce10:	1027883a 	mov	r19,r2
  80ce14:	0803ec40 	call	803ec4 <__mulsi3>
  80ce18:	1009883a 	mov	r4,r2
  80ce1c:	a004d43a 	srli	r2,r20,16
  80ce20:	8ce3883a 	add	r17,r17,r19
  80ce24:	1447883a 	add	r3,r2,r17
  80ce28:	1cc0022e 	bgeu	r3,r19,80ce34 <__udivdi3+0x4a0>
  80ce2c:	00800074 	movhi	r2,1
  80ce30:	2089883a 	add	r4,r4,r2
  80ce34:	1804d43a 	srli	r2,r3,16
  80ce38:	2085883a 	add	r2,r4,r2
  80ce3c:	80804436 	bltu	r16,r2,80cf50 <__udivdi3+0x5bc>
  80ce40:	80803e26 	beq	r16,r2,80cf3c <__udivdi3+0x5a8>
  80ce44:	9005883a 	mov	r2,r18
  80ce48:	0009883a 	mov	r4,zero
  80ce4c:	003f3a06 	br	80cb38 <__udivdi3+0x1a4>
  80ce50:	9d26983a 	sll	r19,r19,r20
  80ce54:	3505c83a 	sub	r2,r6,r20
  80ce58:	a8a2d83a 	srl	r17,r21,r2
  80ce5c:	982ed43a 	srli	r23,r19,16
  80ce60:	e084d83a 	srl	r2,fp,r2
  80ce64:	ad06983a 	sll	r3,r21,r20
  80ce68:	8809883a 	mov	r4,r17
  80ce6c:	b80b883a 	mov	r5,r23
  80ce70:	1886b03a 	or	r3,r3,r2
  80ce74:	d8c00015 	stw	r3,0(sp)
  80ce78:	9dbfffcc 	andi	r22,r19,65535
  80ce7c:	0803eb40 	call	803eb4 <__udivsi3>
  80ce80:	100b883a 	mov	r5,r2
  80ce84:	b009883a 	mov	r4,r22
  80ce88:	d8800215 	stw	r2,8(sp)
  80ce8c:	0803ec40 	call	803ec4 <__mulsi3>
  80ce90:	8809883a 	mov	r4,r17
  80ce94:	b80b883a 	mov	r5,r23
  80ce98:	102b883a 	mov	r21,r2
  80ce9c:	0803ebc0 	call	803ebc <__umodsi3>
  80cea0:	d9000017 	ldw	r4,0(sp)
  80cea4:	1004943a 	slli	r2,r2,16
  80cea8:	2006d43a 	srli	r3,r4,16
  80ceac:	10c4b03a 	or	r2,r2,r3
  80ceb0:	1540052e 	bgeu	r2,r21,80cec8 <__udivdi3+0x534>
  80ceb4:	d9400217 	ldw	r5,8(sp)
  80ceb8:	14c5883a 	add	r2,r2,r19
  80cebc:	297fffc4 	addi	r5,r5,-1
  80cec0:	d9400215 	stw	r5,8(sp)
  80cec4:	14c0462e 	bgeu	r2,r19,80cfe0 <__udivdi3+0x64c>
  80cec8:	1563c83a 	sub	r17,r2,r21
  80cecc:	8809883a 	mov	r4,r17
  80ced0:	b80b883a 	mov	r5,r23
  80ced4:	0803eb40 	call	803eb4 <__udivsi3>
  80ced8:	100b883a 	mov	r5,r2
  80cedc:	b009883a 	mov	r4,r22
  80cee0:	1025883a 	mov	r18,r2
  80cee4:	0803ec40 	call	803ec4 <__mulsi3>
  80cee8:	8809883a 	mov	r4,r17
  80ceec:	b80b883a 	mov	r5,r23
  80cef0:	1021883a 	mov	r16,r2
  80cef4:	0803ebc0 	call	803ebc <__umodsi3>
  80cef8:	da800017 	ldw	r10,0(sp)
  80cefc:	1004943a 	slli	r2,r2,16
  80cf00:	50ffffcc 	andi	r3,r10,65535
  80cf04:	10c6b03a 	or	r3,r2,r3
  80cf08:	1c00062e 	bgeu	r3,r16,80cf24 <__udivdi3+0x590>
  80cf0c:	1cc7883a 	add	r3,r3,r19
  80cf10:	94bfffc4 	addi	r18,r18,-1
  80cf14:	1cc00336 	bltu	r3,r19,80cf24 <__udivdi3+0x590>
  80cf18:	1c00022e 	bgeu	r3,r16,80cf24 <__udivdi3+0x590>
  80cf1c:	94bfffc4 	addi	r18,r18,-1
  80cf20:	1cc7883a 	add	r3,r3,r19
  80cf24:	d9000217 	ldw	r4,8(sp)
  80cf28:	e538983a 	sll	fp,fp,r20
  80cf2c:	1c2bc83a 	sub	r21,r3,r16
  80cf30:	2004943a 	slli	r2,r4,16
  80cf34:	90a8b03a 	or	r20,r18,r2
  80cf38:	003ebf06 	br	80ca38 <__udivdi3+0xa4>
  80cf3c:	1804943a 	slli	r2,r3,16
  80cf40:	e588983a 	sll	r4,fp,r22
  80cf44:	a0ffffcc 	andi	r3,r20,65535
  80cf48:	10c5883a 	add	r2,r2,r3
  80cf4c:	20bfbd2e 	bgeu	r4,r2,80ce44 <__udivdi3+0x4b0>
  80cf50:	90bfffc4 	addi	r2,r18,-1
  80cf54:	0009883a 	mov	r4,zero
  80cf58:	003ef706 	br	80cb38 <__udivdi3+0x1a4>
  80cf5c:	01400204 	movi	r5,8
  80cf60:	2805883a 	mov	r2,r5
  80cf64:	003ee706 	br	80cb04 <__udivdi3+0x170>
  80cf68:	01400604 	movi	r5,24
  80cf6c:	2805883a 	mov	r2,r5
  80cf70:	003ee406 	br	80cb04 <__udivdi3+0x170>
  80cf74:	01400204 	movi	r5,8
  80cf78:	2805883a 	mov	r2,r5
  80cf7c:	003ea106 	br	80ca04 <__udivdi3+0x70>
  80cf80:	01400604 	movi	r5,24
  80cf84:	2805883a 	mov	r2,r5
  80cf88:	003e9e06 	br	80ca04 <__udivdi3+0x70>
  80cf8c:	01400204 	movi	r5,8
  80cf90:	2805883a 	mov	r2,r5
  80cf94:	003eff06 	br	80cb94 <__udivdi3+0x200>
  80cf98:	01400604 	movi	r5,24
  80cf9c:	2805883a 	mov	r2,r5
  80cfa0:	003efc06 	br	80cb94 <__udivdi3+0x200>
  80cfa4:	1c3f862e 	bgeu	r3,r16,80cdc0 <__udivdi3+0x42c>
  80cfa8:	1dc7883a 	add	r3,r3,r23
  80cfac:	ad7fffc4 	addi	r21,r21,-1
  80cfb0:	003f8306 	br	80cdc0 <__udivdi3+0x42c>
  80cfb4:	157f6e2e 	bgeu	r2,r21,80cd70 <__udivdi3+0x3dc>
  80cfb8:	a53fffc4 	addi	r20,r20,-1
  80cfbc:	15c5883a 	add	r2,r2,r23
  80cfc0:	003f6b06 	br	80cd70 <__udivdi3+0x3dc>
  80cfc4:	ad7fffc4 	addi	r21,r21,-1
  80cfc8:	003ec206 	br	80cad4 <__udivdi3+0x140>
  80cfcc:	843fffc4 	addi	r16,r16,-1
  80cfd0:	14c5883a 	add	r2,r2,r19
  80cfd4:	003f1306 	br	80cc24 <__udivdi3+0x290>
  80cfd8:	ad7fffc4 	addi	r21,r21,-1
  80cfdc:	003f2506 	br	80cc74 <__udivdi3+0x2e0>
  80cfe0:	157fb92e 	bgeu	r2,r21,80cec8 <__udivdi3+0x534>
  80cfe4:	297fffc4 	addi	r5,r5,-1
  80cfe8:	14c5883a 	add	r2,r2,r19
  80cfec:	d9400215 	stw	r5,8(sp)
  80cff0:	003fb506 	br	80cec8 <__udivdi3+0x534>
  80cff4:	843fffc4 	addi	r16,r16,-1
  80cff8:	14c5883a 	add	r2,r2,r19
  80cffc:	003ea106 	br	80ca84 <__udivdi3+0xf0>

0080d000 <__umoddi3>:
  80d000:	defff004 	addi	sp,sp,-64
  80d004:	3011883a 	mov	r8,r6
  80d008:	000d883a 	mov	r6,zero
  80d00c:	dd400b15 	stw	r21,44(sp)
  80d010:	dcc00915 	stw	r19,36(sp)
  80d014:	dc000615 	stw	r16,24(sp)
  80d018:	dfc00f15 	stw	ra,60(sp)
  80d01c:	df000e15 	stw	fp,56(sp)
  80d020:	ddc00d15 	stw	r23,52(sp)
  80d024:	dd800c15 	stw	r22,48(sp)
  80d028:	dd000a15 	stw	r20,40(sp)
  80d02c:	dc800815 	stw	r18,32(sp)
  80d030:	dc400715 	stw	r17,28(sp)
  80d034:	2817883a 	mov	r11,r5
  80d038:	d9800415 	stw	r6,16(sp)
  80d03c:	4027883a 	mov	r19,r8
  80d040:	d9800515 	stw	r6,20(sp)
  80d044:	2021883a 	mov	r16,r4
  80d048:	282b883a 	mov	r21,r5
  80d04c:	38002c1e 	bne	r7,zero,80d100 <__umoddi3+0x100>
  80d050:	2a005636 	bltu	r5,r8,80d1ac <__umoddi3+0x1ac>
  80d054:	40009a26 	beq	r8,zero,80d2c0 <__umoddi3+0x2c0>
  80d058:	00bfffd4 	movui	r2,65535
  80d05c:	14c09236 	bltu	r2,r19,80d2a8 <__umoddi3+0x2a8>
  80d060:	00803fc4 	movi	r2,255
  80d064:	14c15c36 	bltu	r2,r19,80d5d8 <__umoddi3+0x5d8>
  80d068:	000b883a 	mov	r5,zero
  80d06c:	0005883a 	mov	r2,zero
  80d070:	9884d83a 	srl	r2,r19,r2
  80d074:	01002074 	movhi	r4,129
  80d078:	21025204 	addi	r4,r4,2376
  80d07c:	01800804 	movi	r6,32
  80d080:	1105883a 	add	r2,r2,r4
  80d084:	10c00003 	ldbu	r3,0(r2)
  80d088:	28c7883a 	add	r3,r5,r3
  80d08c:	30e5c83a 	sub	r18,r6,r3
  80d090:	9000a41e 	bne	r18,zero,80d324 <__umoddi3+0x324>
  80d094:	982ed43a 	srli	r23,r19,16
  80d098:	acebc83a 	sub	r21,r21,r19
  80d09c:	9d3fffcc 	andi	r20,r19,65535
  80d0a0:	002d883a 	mov	r22,zero
  80d0a4:	a809883a 	mov	r4,r21
  80d0a8:	b80b883a 	mov	r5,r23
  80d0ac:	0803eb40 	call	803eb4 <__udivsi3>
  80d0b0:	100b883a 	mov	r5,r2
  80d0b4:	a009883a 	mov	r4,r20
  80d0b8:	0803ec40 	call	803ec4 <__mulsi3>
  80d0bc:	a809883a 	mov	r4,r21
  80d0c0:	b80b883a 	mov	r5,r23
  80d0c4:	1023883a 	mov	r17,r2
  80d0c8:	0803ebc0 	call	803ebc <__umodsi3>
  80d0cc:	1004943a 	slli	r2,r2,16
  80d0d0:	8006d43a 	srli	r3,r16,16
  80d0d4:	10c4b03a 	or	r2,r2,r3
  80d0d8:	1440032e 	bgeu	r2,r17,80d0e8 <__umoddi3+0xe8>
  80d0dc:	14c5883a 	add	r2,r2,r19
  80d0e0:	14c00136 	bltu	r2,r19,80d0e8 <__umoddi3+0xe8>
  80d0e4:	14415836 	bltu	r2,r17,80d648 <__umoddi3+0x648>
  80d0e8:	1463c83a 	sub	r17,r2,r17
  80d0ec:	8809883a 	mov	r4,r17
  80d0f0:	b80b883a 	mov	r5,r23
  80d0f4:	0803eb40 	call	803eb4 <__udivsi3>
  80d0f8:	a009883a 	mov	r4,r20
  80d0fc:	00005306 	br	80d24c <__umoddi3+0x24c>
  80d100:	380d883a 	mov	r6,r7
  80d104:	29c0132e 	bgeu	r5,r7,80d154 <__umoddi3+0x154>
  80d108:	d9000415 	stw	r4,16(sp)
  80d10c:	d9400515 	stw	r5,20(sp)
  80d110:	d9400417 	ldw	r5,16(sp)
  80d114:	5813883a 	mov	r9,r11
  80d118:	2811883a 	mov	r8,r5
  80d11c:	4005883a 	mov	r2,r8
  80d120:	4807883a 	mov	r3,r9
  80d124:	dfc00f17 	ldw	ra,60(sp)
  80d128:	df000e17 	ldw	fp,56(sp)
  80d12c:	ddc00d17 	ldw	r23,52(sp)
  80d130:	dd800c17 	ldw	r22,48(sp)
  80d134:	dd400b17 	ldw	r21,44(sp)
  80d138:	dd000a17 	ldw	r20,40(sp)
  80d13c:	dcc00917 	ldw	r19,36(sp)
  80d140:	dc800817 	ldw	r18,32(sp)
  80d144:	dc400717 	ldw	r17,28(sp)
  80d148:	dc000617 	ldw	r16,24(sp)
  80d14c:	dec01004 	addi	sp,sp,64
  80d150:	f800283a 	ret
  80d154:	00bfffd4 	movui	r2,65535
  80d158:	11c06636 	bltu	r2,r7,80d2f4 <__umoddi3+0x2f4>
  80d15c:	00803fc4 	movi	r2,255
  80d160:	11c12036 	bltu	r2,r7,80d5e4 <__umoddi3+0x5e4>
  80d164:	000b883a 	mov	r5,zero
  80d168:	0005883a 	mov	r2,zero
  80d16c:	3084d83a 	srl	r2,r6,r2
  80d170:	01002074 	movhi	r4,129
  80d174:	21025204 	addi	r4,r4,2376
  80d178:	01c00804 	movi	r7,32
  80d17c:	1105883a 	add	r2,r2,r4
  80d180:	10c00003 	ldbu	r3,0(r2)
  80d184:	28c7883a 	add	r3,r5,r3
  80d188:	38e5c83a 	sub	r18,r7,r3
  80d18c:	9000941e 	bne	r18,zero,80d3e0 <__umoddi3+0x3e0>
  80d190:	35405e36 	bltu	r6,r21,80d30c <__umoddi3+0x30c>
  80d194:	84c05d2e 	bgeu	r16,r19,80d30c <__umoddi3+0x30c>
  80d198:	8011883a 	mov	r8,r16
  80d19c:	a813883a 	mov	r9,r21
  80d1a0:	dc000415 	stw	r16,16(sp)
  80d1a4:	dd400515 	stw	r21,20(sp)
  80d1a8:	003fdc06 	br	80d11c <__umoddi3+0x11c>
  80d1ac:	00bfffd4 	movui	r2,65535
  80d1b0:	12004a36 	bltu	r2,r8,80d2dc <__umoddi3+0x2dc>
  80d1b4:	00803fc4 	movi	r2,255
  80d1b8:	12010d36 	bltu	r2,r8,80d5f0 <__umoddi3+0x5f0>
  80d1bc:	000b883a 	mov	r5,zero
  80d1c0:	0005883a 	mov	r2,zero
  80d1c4:	9884d83a 	srl	r2,r19,r2
  80d1c8:	01002074 	movhi	r4,129
  80d1cc:	21025204 	addi	r4,r4,2376
  80d1d0:	01800804 	movi	r6,32
  80d1d4:	1105883a 	add	r2,r2,r4
  80d1d8:	10c00003 	ldbu	r3,0(r2)
  80d1dc:	28c7883a 	add	r3,r5,r3
  80d1e0:	30c7c83a 	sub	r3,r6,r3
  80d1e4:	1800dc1e 	bne	r3,zero,80d558 <__umoddi3+0x558>
  80d1e8:	002d883a 	mov	r22,zero
  80d1ec:	982ed43a 	srli	r23,r19,16
  80d1f0:	a809883a 	mov	r4,r21
  80d1f4:	9cbfffcc 	andi	r18,r19,65535
  80d1f8:	b80b883a 	mov	r5,r23
  80d1fc:	0803eb40 	call	803eb4 <__udivsi3>
  80d200:	100b883a 	mov	r5,r2
  80d204:	9009883a 	mov	r4,r18
  80d208:	0803ec40 	call	803ec4 <__mulsi3>
  80d20c:	a809883a 	mov	r4,r21
  80d210:	b80b883a 	mov	r5,r23
  80d214:	1023883a 	mov	r17,r2
  80d218:	0803ebc0 	call	803ebc <__umodsi3>
  80d21c:	1004943a 	slli	r2,r2,16
  80d220:	8006d43a 	srli	r3,r16,16
  80d224:	10c4b03a 	or	r2,r2,r3
  80d228:	1440032e 	bgeu	r2,r17,80d238 <__umoddi3+0x238>
  80d22c:	14c5883a 	add	r2,r2,r19
  80d230:	14c00136 	bltu	r2,r19,80d238 <__umoddi3+0x238>
  80d234:	14410236 	bltu	r2,r17,80d640 <__umoddi3+0x640>
  80d238:	1463c83a 	sub	r17,r2,r17
  80d23c:	8809883a 	mov	r4,r17
  80d240:	b80b883a 	mov	r5,r23
  80d244:	0803eb40 	call	803eb4 <__udivsi3>
  80d248:	9009883a 	mov	r4,r18
  80d24c:	100b883a 	mov	r5,r2
  80d250:	0803ec40 	call	803ec4 <__mulsi3>
  80d254:	8809883a 	mov	r4,r17
  80d258:	b80b883a 	mov	r5,r23
  80d25c:	102b883a 	mov	r21,r2
  80d260:	0803ebc0 	call	803ebc <__umodsi3>
  80d264:	1004943a 	slli	r2,r2,16
  80d268:	80ffffcc 	andi	r3,r16,65535
  80d26c:	10c4b03a 	or	r2,r2,r3
  80d270:	1540042e 	bgeu	r2,r21,80d284 <__umoddi3+0x284>
  80d274:	14c5883a 	add	r2,r2,r19
  80d278:	14c00236 	bltu	r2,r19,80d284 <__umoddi3+0x284>
  80d27c:	1540012e 	bgeu	r2,r21,80d284 <__umoddi3+0x284>
  80d280:	14c5883a 	add	r2,r2,r19
  80d284:	1545c83a 	sub	r2,r2,r21
  80d288:	1584d83a 	srl	r2,r2,r22
  80d28c:	0013883a 	mov	r9,zero
  80d290:	d8800415 	stw	r2,16(sp)
  80d294:	d8c00417 	ldw	r3,16(sp)
  80d298:	0005883a 	mov	r2,zero
  80d29c:	d8800515 	stw	r2,20(sp)
  80d2a0:	1811883a 	mov	r8,r3
  80d2a4:	003f9d06 	br	80d11c <__umoddi3+0x11c>
  80d2a8:	00804034 	movhi	r2,256
  80d2ac:	10bfffc4 	addi	r2,r2,-1
  80d2b0:	14c0c636 	bltu	r2,r19,80d5cc <__umoddi3+0x5cc>
  80d2b4:	01400404 	movi	r5,16
  80d2b8:	2805883a 	mov	r2,r5
  80d2bc:	003f6c06 	br	80d070 <__umoddi3+0x70>
  80d2c0:	01000044 	movi	r4,1
  80d2c4:	000b883a 	mov	r5,zero
  80d2c8:	0803eb40 	call	803eb4 <__udivsi3>
  80d2cc:	1027883a 	mov	r19,r2
  80d2d0:	00bfffd4 	movui	r2,65535
  80d2d4:	14fff436 	bltu	r2,r19,80d2a8 <__umoddi3+0x2a8>
  80d2d8:	003f6106 	br	80d060 <__umoddi3+0x60>
  80d2dc:	00804034 	movhi	r2,256
  80d2e0:	10bfffc4 	addi	r2,r2,-1
  80d2e4:	1200c536 	bltu	r2,r8,80d5fc <__umoddi3+0x5fc>
  80d2e8:	01400404 	movi	r5,16
  80d2ec:	2805883a 	mov	r2,r5
  80d2f0:	003fb406 	br	80d1c4 <__umoddi3+0x1c4>
  80d2f4:	00804034 	movhi	r2,256
  80d2f8:	10bfffc4 	addi	r2,r2,-1
  80d2fc:	11c0c236 	bltu	r2,r7,80d608 <__umoddi3+0x608>
  80d300:	01400404 	movi	r5,16
  80d304:	2805883a 	mov	r2,r5
  80d308:	003f9806 	br	80d16c <__umoddi3+0x16c>
  80d30c:	84c9c83a 	sub	r4,r16,r19
  80d310:	8105803a 	cmpltu	r2,r16,r4
  80d314:	a987c83a 	sub	r3,r21,r6
  80d318:	18abc83a 	sub	r21,r3,r2
  80d31c:	2021883a 	mov	r16,r4
  80d320:	003f9d06 	br	80d198 <__umoddi3+0x198>
  80d324:	9ca6983a 	sll	r19,r19,r18
  80d328:	3485c83a 	sub	r2,r6,r18
  80d32c:	a8a2d83a 	srl	r17,r21,r2
  80d330:	982ed43a 	srli	r23,r19,16
  80d334:	ac86983a 	sll	r3,r21,r18
  80d338:	8084d83a 	srl	r2,r16,r2
  80d33c:	8809883a 	mov	r4,r17
  80d340:	b80b883a 	mov	r5,r23
  80d344:	18b8b03a 	or	fp,r3,r2
  80d348:	9d3fffcc 	andi	r20,r19,65535
  80d34c:	0803eb40 	call	803eb4 <__udivsi3>
  80d350:	100b883a 	mov	r5,r2
  80d354:	a009883a 	mov	r4,r20
  80d358:	0803ec40 	call	803ec4 <__mulsi3>
  80d35c:	8809883a 	mov	r4,r17
  80d360:	b80b883a 	mov	r5,r23
  80d364:	102b883a 	mov	r21,r2
  80d368:	0803ebc0 	call	803ebc <__umodsi3>
  80d36c:	1004943a 	slli	r2,r2,16
  80d370:	e006d43a 	srli	r3,fp,16
  80d374:	902d883a 	mov	r22,r18
  80d378:	10c4b03a 	or	r2,r2,r3
  80d37c:	1540022e 	bgeu	r2,r21,80d388 <__umoddi3+0x388>
  80d380:	14c5883a 	add	r2,r2,r19
  80d384:	14c0ab2e 	bgeu	r2,r19,80d634 <__umoddi3+0x634>
  80d388:	1563c83a 	sub	r17,r2,r21
  80d38c:	8809883a 	mov	r4,r17
  80d390:	b80b883a 	mov	r5,r23
  80d394:	0803eb40 	call	803eb4 <__udivsi3>
  80d398:	100b883a 	mov	r5,r2
  80d39c:	a009883a 	mov	r4,r20
  80d3a0:	0803ec40 	call	803ec4 <__mulsi3>
  80d3a4:	8809883a 	mov	r4,r17
  80d3a8:	b80b883a 	mov	r5,r23
  80d3ac:	102b883a 	mov	r21,r2
  80d3b0:	0803ebc0 	call	803ebc <__umodsi3>
  80d3b4:	1004943a 	slli	r2,r2,16
  80d3b8:	e0ffffcc 	andi	r3,fp,65535
  80d3bc:	10c4b03a 	or	r2,r2,r3
  80d3c0:	1540042e 	bgeu	r2,r21,80d3d4 <__umoddi3+0x3d4>
  80d3c4:	14c5883a 	add	r2,r2,r19
  80d3c8:	14c00236 	bltu	r2,r19,80d3d4 <__umoddi3+0x3d4>
  80d3cc:	1540012e 	bgeu	r2,r21,80d3d4 <__umoddi3+0x3d4>
  80d3d0:	14c5883a 	add	r2,r2,r19
  80d3d4:	84a0983a 	sll	r16,r16,r18
  80d3d8:	156bc83a 	sub	r21,r2,r21
  80d3dc:	003f3106 	br	80d0a4 <__umoddi3+0xa4>
  80d3e0:	3c8fc83a 	sub	r7,r7,r18
  80d3e4:	3486983a 	sll	r3,r6,r18
  80d3e8:	99c4d83a 	srl	r2,r19,r7
  80d3ec:	a9e2d83a 	srl	r17,r21,r7
  80d3f0:	ac8c983a 	sll	r6,r21,r18
  80d3f4:	18acb03a 	or	r22,r3,r2
  80d3f8:	b02ed43a 	srli	r23,r22,16
  80d3fc:	81c4d83a 	srl	r2,r16,r7
  80d400:	8809883a 	mov	r4,r17
  80d404:	b80b883a 	mov	r5,r23
  80d408:	308cb03a 	or	r6,r6,r2
  80d40c:	d9c00315 	stw	r7,12(sp)
  80d410:	d9800215 	stw	r6,8(sp)
  80d414:	b53fffcc 	andi	r20,r22,65535
  80d418:	0803eb40 	call	803eb4 <__udivsi3>
  80d41c:	100b883a 	mov	r5,r2
  80d420:	a009883a 	mov	r4,r20
  80d424:	1039883a 	mov	fp,r2
  80d428:	0803ec40 	call	803ec4 <__mulsi3>
  80d42c:	8809883a 	mov	r4,r17
  80d430:	b80b883a 	mov	r5,r23
  80d434:	102b883a 	mov	r21,r2
  80d438:	0803ebc0 	call	803ebc <__umodsi3>
  80d43c:	d9000217 	ldw	r4,8(sp)
  80d440:	1004943a 	slli	r2,r2,16
  80d444:	9ca6983a 	sll	r19,r19,r18
  80d448:	2006d43a 	srli	r3,r4,16
  80d44c:	84a0983a 	sll	r16,r16,r18
  80d450:	dcc00015 	stw	r19,0(sp)
  80d454:	10c4b03a 	or	r2,r2,r3
  80d458:	dc000115 	stw	r16,4(sp)
  80d45c:	1540032e 	bgeu	r2,r21,80d46c <__umoddi3+0x46c>
  80d460:	1585883a 	add	r2,r2,r22
  80d464:	e73fffc4 	addi	fp,fp,-1
  80d468:	15806e2e 	bgeu	r2,r22,80d624 <__umoddi3+0x624>
  80d46c:	1563c83a 	sub	r17,r2,r21
  80d470:	8809883a 	mov	r4,r17
  80d474:	b80b883a 	mov	r5,r23
  80d478:	0803eb40 	call	803eb4 <__udivsi3>
  80d47c:	100b883a 	mov	r5,r2
  80d480:	a009883a 	mov	r4,r20
  80d484:	1021883a 	mov	r16,r2
  80d488:	0803ec40 	call	803ec4 <__mulsi3>
  80d48c:	b80b883a 	mov	r5,r23
  80d490:	8809883a 	mov	r4,r17
  80d494:	1029883a 	mov	r20,r2
  80d498:	0803ebc0 	call	803ebc <__umodsi3>
  80d49c:	d9400217 	ldw	r5,8(sp)
  80d4a0:	1004943a 	slli	r2,r2,16
  80d4a4:	28ffffcc 	andi	r3,r5,65535
  80d4a8:	10c4b03a 	or	r2,r2,r3
  80d4ac:	1500032e 	bgeu	r2,r20,80d4bc <__umoddi3+0x4bc>
  80d4b0:	1585883a 	add	r2,r2,r22
  80d4b4:	843fffc4 	addi	r16,r16,-1
  80d4b8:	1580562e 	bgeu	r2,r22,80d614 <__umoddi3+0x614>
  80d4bc:	d9800017 	ldw	r6,0(sp)
  80d4c0:	e022943a 	slli	r17,fp,16
  80d4c4:	302ed43a 	srli	r23,r6,16
  80d4c8:	8462b03a 	or	r17,r16,r17
  80d4cc:	34ffffcc 	andi	r19,r6,65535
  80d4d0:	882ad43a 	srli	r21,r17,16
  80d4d4:	8c7fffcc 	andi	r17,r17,65535
  80d4d8:	8809883a 	mov	r4,r17
  80d4dc:	980b883a 	mov	r5,r19
  80d4e0:	1521c83a 	sub	r16,r2,r20
  80d4e4:	0803ec40 	call	803ec4 <__mulsi3>
  80d4e8:	8809883a 	mov	r4,r17
  80d4ec:	b80b883a 	mov	r5,r23
  80d4f0:	1029883a 	mov	r20,r2
  80d4f4:	0803ec40 	call	803ec4 <__mulsi3>
  80d4f8:	980b883a 	mov	r5,r19
  80d4fc:	a809883a 	mov	r4,r21
  80d500:	1023883a 	mov	r17,r2
  80d504:	0803ec40 	call	803ec4 <__mulsi3>
  80d508:	a809883a 	mov	r4,r21
  80d50c:	b80b883a 	mov	r5,r23
  80d510:	1027883a 	mov	r19,r2
  80d514:	0803ec40 	call	803ec4 <__mulsi3>
  80d518:	100b883a 	mov	r5,r2
  80d51c:	a004d43a 	srli	r2,r20,16
  80d520:	8ce3883a 	add	r17,r17,r19
  80d524:	1449883a 	add	r4,r2,r17
  80d528:	24c0022e 	bgeu	r4,r19,80d534 <__umoddi3+0x534>
  80d52c:	00800074 	movhi	r2,1
  80d530:	288b883a 	add	r5,r5,r2
  80d534:	2004d43a 	srli	r2,r4,16
  80d538:	2008943a 	slli	r4,r4,16
  80d53c:	a0ffffcc 	andi	r3,r20,65535
  80d540:	288d883a 	add	r6,r5,r2
  80d544:	20c9883a 	add	r4,r4,r3
  80d548:	81800b36 	bltu	r16,r6,80d578 <__umoddi3+0x578>
  80d54c:	81804026 	beq	r16,r6,80d650 <__umoddi3+0x650>
  80d550:	818dc83a 	sub	r6,r16,r6
  80d554:	00000f06 	br	80d594 <__umoddi3+0x594>
  80d558:	30c5c83a 	sub	r2,r6,r3
  80d55c:	182d883a 	mov	r22,r3
  80d560:	8084d83a 	srl	r2,r16,r2
  80d564:	a8c6983a 	sll	r3,r21,r3
  80d568:	9da6983a 	sll	r19,r19,r22
  80d56c:	85a0983a 	sll	r16,r16,r22
  80d570:	18aab03a 	or	r21,r3,r2
  80d574:	003f1d06 	br	80d1ec <__umoddi3+0x1ec>
  80d578:	d8c00017 	ldw	r3,0(sp)
  80d57c:	20c5c83a 	sub	r2,r4,r3
  80d580:	2089803a 	cmpltu	r4,r4,r2
  80d584:	3587c83a 	sub	r3,r6,r22
  80d588:	1907c83a 	sub	r3,r3,r4
  80d58c:	80cdc83a 	sub	r6,r16,r3
  80d590:	1009883a 	mov	r4,r2
  80d594:	d9400117 	ldw	r5,4(sp)
  80d598:	2905c83a 	sub	r2,r5,r4
  80d59c:	2887803a 	cmpltu	r3,r5,r2
  80d5a0:	30c7c83a 	sub	r3,r6,r3
  80d5a4:	d9800317 	ldw	r6,12(sp)
  80d5a8:	1484d83a 	srl	r2,r2,r18
  80d5ac:	1988983a 	sll	r4,r3,r6
  80d5b0:	1c86d83a 	srl	r3,r3,r18
  80d5b4:	2088b03a 	or	r4,r4,r2
  80d5b8:	2011883a 	mov	r8,r4
  80d5bc:	1813883a 	mov	r9,r3
  80d5c0:	d9000415 	stw	r4,16(sp)
  80d5c4:	d8c00515 	stw	r3,20(sp)
  80d5c8:	003ed406 	br	80d11c <__umoddi3+0x11c>
  80d5cc:	01400604 	movi	r5,24
  80d5d0:	2805883a 	mov	r2,r5
  80d5d4:	003ea606 	br	80d070 <__umoddi3+0x70>
  80d5d8:	01400204 	movi	r5,8
  80d5dc:	2805883a 	mov	r2,r5
  80d5e0:	003ea306 	br	80d070 <__umoddi3+0x70>
  80d5e4:	01400204 	movi	r5,8
  80d5e8:	2805883a 	mov	r2,r5
  80d5ec:	003edf06 	br	80d16c <__umoddi3+0x16c>
  80d5f0:	01400204 	movi	r5,8
  80d5f4:	2805883a 	mov	r2,r5
  80d5f8:	003ef206 	br	80d1c4 <__umoddi3+0x1c4>
  80d5fc:	01400604 	movi	r5,24
  80d600:	2805883a 	mov	r2,r5
  80d604:	003eef06 	br	80d1c4 <__umoddi3+0x1c4>
  80d608:	01400604 	movi	r5,24
  80d60c:	2805883a 	mov	r2,r5
  80d610:	003ed606 	br	80d16c <__umoddi3+0x16c>
  80d614:	153fa92e 	bgeu	r2,r20,80d4bc <__umoddi3+0x4bc>
  80d618:	843fffc4 	addi	r16,r16,-1
  80d61c:	1585883a 	add	r2,r2,r22
  80d620:	003fa606 	br	80d4bc <__umoddi3+0x4bc>
  80d624:	157f912e 	bgeu	r2,r21,80d46c <__umoddi3+0x46c>
  80d628:	e73fffc4 	addi	fp,fp,-1
  80d62c:	1585883a 	add	r2,r2,r22
  80d630:	003f8e06 	br	80d46c <__umoddi3+0x46c>
  80d634:	157f542e 	bgeu	r2,r21,80d388 <__umoddi3+0x388>
  80d638:	14c5883a 	add	r2,r2,r19
  80d63c:	003f5206 	br	80d388 <__umoddi3+0x388>
  80d640:	14c5883a 	add	r2,r2,r19
  80d644:	003efc06 	br	80d238 <__umoddi3+0x238>
  80d648:	14c5883a 	add	r2,r2,r19
  80d64c:	003ea606 	br	80d0e8 <__umoddi3+0xe8>
  80d650:	d8800117 	ldw	r2,4(sp)
  80d654:	113fc836 	bltu	r2,r4,80d578 <__umoddi3+0x578>
  80d658:	000d883a 	mov	r6,zero
  80d65c:	003fcd06 	br	80d594 <__umoddi3+0x594>

0080d660 <__divdf3>:
  80d660:	deffed04 	addi	sp,sp,-76
  80d664:	dcc01115 	stw	r19,68(sp)
  80d668:	dcc00404 	addi	r19,sp,16
  80d66c:	2011883a 	mov	r8,r4
  80d670:	2813883a 	mov	r9,r5
  80d674:	dc000e15 	stw	r16,56(sp)
  80d678:	d809883a 	mov	r4,sp
  80d67c:	980b883a 	mov	r5,r19
  80d680:	dc000904 	addi	r16,sp,36
  80d684:	dfc01215 	stw	ra,72(sp)
  80d688:	da400115 	stw	r9,4(sp)
  80d68c:	d9c00315 	stw	r7,12(sp)
  80d690:	da000015 	stw	r8,0(sp)
  80d694:	d9800215 	stw	r6,8(sp)
  80d698:	dc801015 	stw	r18,64(sp)
  80d69c:	dc400f15 	stw	r17,60(sp)
  80d6a0:	08046080 	call	804608 <__unpack_d>
  80d6a4:	d9000204 	addi	r4,sp,8
  80d6a8:	800b883a 	mov	r5,r16
  80d6ac:	08046080 	call	804608 <__unpack_d>
  80d6b0:	d9000417 	ldw	r4,16(sp)
  80d6b4:	00800044 	movi	r2,1
  80d6b8:	11000b2e 	bgeu	r2,r4,80d6e8 <__divdf3+0x88>
  80d6bc:	d9400917 	ldw	r5,36(sp)
  80d6c0:	1140762e 	bgeu	r2,r5,80d89c <__divdf3+0x23c>
  80d6c4:	d8800517 	ldw	r2,20(sp)
  80d6c8:	d8c00a17 	ldw	r3,40(sp)
  80d6cc:	01800104 	movi	r6,4
  80d6d0:	10c4f03a 	xor	r2,r2,r3
  80d6d4:	d8800515 	stw	r2,20(sp)
  80d6d8:	21800226 	beq	r4,r6,80d6e4 <__divdf3+0x84>
  80d6dc:	00800084 	movi	r2,2
  80d6e0:	2080141e 	bne	r4,r2,80d734 <__divdf3+0xd4>
  80d6e4:	29000926 	beq	r5,r4,80d70c <__divdf3+0xac>
  80d6e8:	9809883a 	mov	r4,r19
  80d6ec:	08042f40 	call	8042f4 <__pack_d>
  80d6f0:	dfc01217 	ldw	ra,72(sp)
  80d6f4:	dcc01117 	ldw	r19,68(sp)
  80d6f8:	dc801017 	ldw	r18,64(sp)
  80d6fc:	dc400f17 	ldw	r17,60(sp)
  80d700:	dc000e17 	ldw	r16,56(sp)
  80d704:	dec01304 	addi	sp,sp,76
  80d708:	f800283a 	ret
  80d70c:	01002074 	movhi	r4,129
  80d710:	21024d04 	addi	r4,r4,2356
  80d714:	08042f40 	call	8042f4 <__pack_d>
  80d718:	dfc01217 	ldw	ra,72(sp)
  80d71c:	dcc01117 	ldw	r19,68(sp)
  80d720:	dc801017 	ldw	r18,64(sp)
  80d724:	dc400f17 	ldw	r17,60(sp)
  80d728:	dc000e17 	ldw	r16,56(sp)
  80d72c:	dec01304 	addi	sp,sp,76
  80d730:	f800283a 	ret
  80d734:	29805b26 	beq	r5,r6,80d8a4 <__divdf3+0x244>
  80d738:	28802d26 	beq	r5,r2,80d7f0 <__divdf3+0x190>
  80d73c:	d8c00617 	ldw	r3,24(sp)
  80d740:	d8800b17 	ldw	r2,44(sp)
  80d744:	d9c00817 	ldw	r7,32(sp)
  80d748:	dc400d17 	ldw	r17,52(sp)
  80d74c:	188bc83a 	sub	r5,r3,r2
  80d750:	d9800717 	ldw	r6,28(sp)
  80d754:	dc000c17 	ldw	r16,48(sp)
  80d758:	d9400615 	stw	r5,24(sp)
  80d75c:	3c403836 	bltu	r7,r17,80d840 <__divdf3+0x1e0>
  80d760:	89c03626 	beq	r17,r7,80d83c <__divdf3+0x1dc>
  80d764:	0015883a 	mov	r10,zero
  80d768:	001d883a 	mov	r14,zero
  80d76c:	02c40034 	movhi	r11,4096
  80d770:	001f883a 	mov	r15,zero
  80d774:	003f883a 	mov	ra,zero
  80d778:	04800f44 	movi	r18,61
  80d77c:	00000f06 	br	80d7bc <__divdf3+0x15c>
  80d780:	601d883a 	mov	r14,r12
  80d784:	681f883a 	mov	r15,r13
  80d788:	400d883a 	mov	r6,r8
  80d78c:	100f883a 	mov	r7,r2
  80d790:	3191883a 	add	r8,r6,r6
  80d794:	5808d07a 	srli	r4,r11,1
  80d798:	4185803a 	cmpltu	r2,r8,r6
  80d79c:	39d3883a 	add	r9,r7,r7
  80d7a0:	28c6b03a 	or	r3,r5,r3
  80d7a4:	1245883a 	add	r2,r2,r9
  80d7a8:	1815883a 	mov	r10,r3
  80d7ac:	2017883a 	mov	r11,r4
  80d7b0:	400d883a 	mov	r6,r8
  80d7b4:	100f883a 	mov	r7,r2
  80d7b8:	fc801726 	beq	ra,r18,80d818 <__divdf3+0x1b8>
  80d7bc:	580a97fa 	slli	r5,r11,31
  80d7c0:	5006d07a 	srli	r3,r10,1
  80d7c4:	ffc00044 	addi	ra,ra,1
  80d7c8:	3c7ff136 	bltu	r7,r17,80d790 <__divdf3+0x130>
  80d7cc:	3411c83a 	sub	r8,r6,r16
  80d7d0:	3205803a 	cmpltu	r2,r6,r8
  80d7d4:	3c53c83a 	sub	r9,r7,r17
  80d7d8:	7298b03a 	or	r12,r14,r10
  80d7dc:	7adab03a 	or	r13,r15,r11
  80d7e0:	4885c83a 	sub	r2,r9,r2
  80d7e4:	89ffe61e 	bne	r17,r7,80d780 <__divdf3+0x120>
  80d7e8:	343fe936 	bltu	r6,r16,80d790 <__divdf3+0x130>
  80d7ec:	003fe406 	br	80d780 <__divdf3+0x120>
  80d7f0:	9809883a 	mov	r4,r19
  80d7f4:	d9800415 	stw	r6,16(sp)
  80d7f8:	08042f40 	call	8042f4 <__pack_d>
  80d7fc:	dfc01217 	ldw	ra,72(sp)
  80d800:	dcc01117 	ldw	r19,68(sp)
  80d804:	dc801017 	ldw	r18,64(sp)
  80d808:	dc400f17 	ldw	r17,60(sp)
  80d80c:	dc000e17 	ldw	r16,56(sp)
  80d810:	dec01304 	addi	sp,sp,76
  80d814:	f800283a 	ret
  80d818:	00803fc4 	movi	r2,255
  80d81c:	7090703a 	and	r8,r14,r2
  80d820:	00802004 	movi	r2,128
  80d824:	0007883a 	mov	r3,zero
  80d828:	0013883a 	mov	r9,zero
  80d82c:	40800d26 	beq	r8,r2,80d864 <__divdf3+0x204>
  80d830:	dbc00815 	stw	r15,32(sp)
  80d834:	db800715 	stw	r14,28(sp)
  80d838:	003fab06 	br	80d6e8 <__divdf3+0x88>
  80d83c:	343fc92e 	bgeu	r6,r16,80d764 <__divdf3+0x104>
  80d840:	3185883a 	add	r2,r6,r6
  80d844:	1189803a 	cmpltu	r4,r2,r6
  80d848:	39c7883a 	add	r3,r7,r7
  80d84c:	20c9883a 	add	r4,r4,r3
  80d850:	297fffc4 	addi	r5,r5,-1
  80d854:	100d883a 	mov	r6,r2
  80d858:	200f883a 	mov	r7,r4
  80d85c:	d9400615 	stw	r5,24(sp)
  80d860:	003fc006 	br	80d764 <__divdf3+0x104>
  80d864:	483ff21e 	bne	r9,zero,80d830 <__divdf3+0x1d0>
  80d868:	01004004 	movi	r4,256
  80d86c:	7104703a 	and	r2,r14,r4
  80d870:	10c4b03a 	or	r2,r2,r3
  80d874:	103fee1e 	bne	r2,zero,80d830 <__divdf3+0x1d0>
  80d878:	31c4b03a 	or	r2,r6,r7
  80d87c:	103fec26 	beq	r2,zero,80d830 <__divdf3+0x1d0>
  80d880:	7205883a 	add	r2,r14,r8
  80d884:	1391803a 	cmpltu	r8,r2,r14
  80d888:	43d1883a 	add	r8,r8,r15
  80d88c:	013fc004 	movi	r4,-256
  80d890:	111c703a 	and	r14,r2,r4
  80d894:	401f883a 	mov	r15,r8
  80d898:	003fe506 	br	80d830 <__divdf3+0x1d0>
  80d89c:	8009883a 	mov	r4,r16
  80d8a0:	003f9206 	br	80d6ec <__divdf3+0x8c>
  80d8a4:	9809883a 	mov	r4,r19
  80d8a8:	d8000715 	stw	zero,28(sp)
  80d8ac:	d8000815 	stw	zero,32(sp)
  80d8b0:	d8000615 	stw	zero,24(sp)
  80d8b4:	003f8d06 	br	80d6ec <__divdf3+0x8c>

0080d8b8 <__nedf2>:
  80d8b8:	deffef04 	addi	sp,sp,-68
  80d8bc:	dc400f15 	stw	r17,60(sp)
  80d8c0:	dc400404 	addi	r17,sp,16
  80d8c4:	2005883a 	mov	r2,r4
  80d8c8:	2807883a 	mov	r3,r5
  80d8cc:	dc000e15 	stw	r16,56(sp)
  80d8d0:	d809883a 	mov	r4,sp
  80d8d4:	880b883a 	mov	r5,r17
  80d8d8:	dc000904 	addi	r16,sp,36
  80d8dc:	d8c00115 	stw	r3,4(sp)
  80d8e0:	d8800015 	stw	r2,0(sp)
  80d8e4:	d9800215 	stw	r6,8(sp)
  80d8e8:	dfc01015 	stw	ra,64(sp)
  80d8ec:	d9c00315 	stw	r7,12(sp)
  80d8f0:	08046080 	call	804608 <__unpack_d>
  80d8f4:	d9000204 	addi	r4,sp,8
  80d8f8:	800b883a 	mov	r5,r16
  80d8fc:	08046080 	call	804608 <__unpack_d>
  80d900:	d8800417 	ldw	r2,16(sp)
  80d904:	00c00044 	movi	r3,1
  80d908:	180d883a 	mov	r6,r3
  80d90c:	1880062e 	bgeu	r3,r2,80d928 <__nedf2+0x70>
  80d910:	d8800917 	ldw	r2,36(sp)
  80d914:	8809883a 	mov	r4,r17
  80d918:	800b883a 	mov	r5,r16
  80d91c:	1880022e 	bgeu	r3,r2,80d928 <__nedf2+0x70>
  80d920:	08047400 	call	804740 <__fpcmp_parts_d>
  80d924:	100d883a 	mov	r6,r2
  80d928:	3005883a 	mov	r2,r6
  80d92c:	dfc01017 	ldw	ra,64(sp)
  80d930:	dc400f17 	ldw	r17,60(sp)
  80d934:	dc000e17 	ldw	r16,56(sp)
  80d938:	dec01104 	addi	sp,sp,68
  80d93c:	f800283a 	ret

0080d940 <__ltdf2>:
  80d940:	deffef04 	addi	sp,sp,-68
  80d944:	dc400f15 	stw	r17,60(sp)
  80d948:	dc400404 	addi	r17,sp,16
  80d94c:	2005883a 	mov	r2,r4
  80d950:	2807883a 	mov	r3,r5
  80d954:	dc000e15 	stw	r16,56(sp)
  80d958:	d809883a 	mov	r4,sp
  80d95c:	880b883a 	mov	r5,r17
  80d960:	dc000904 	addi	r16,sp,36
  80d964:	d8c00115 	stw	r3,4(sp)
  80d968:	d8800015 	stw	r2,0(sp)
  80d96c:	d9800215 	stw	r6,8(sp)
  80d970:	dfc01015 	stw	ra,64(sp)
  80d974:	d9c00315 	stw	r7,12(sp)
  80d978:	08046080 	call	804608 <__unpack_d>
  80d97c:	d9000204 	addi	r4,sp,8
  80d980:	800b883a 	mov	r5,r16
  80d984:	08046080 	call	804608 <__unpack_d>
  80d988:	d8800417 	ldw	r2,16(sp)
  80d98c:	00c00044 	movi	r3,1
  80d990:	180d883a 	mov	r6,r3
  80d994:	1880062e 	bgeu	r3,r2,80d9b0 <__ltdf2+0x70>
  80d998:	d8800917 	ldw	r2,36(sp)
  80d99c:	8809883a 	mov	r4,r17
  80d9a0:	800b883a 	mov	r5,r16
  80d9a4:	1880022e 	bgeu	r3,r2,80d9b0 <__ltdf2+0x70>
  80d9a8:	08047400 	call	804740 <__fpcmp_parts_d>
  80d9ac:	100d883a 	mov	r6,r2
  80d9b0:	3005883a 	mov	r2,r6
  80d9b4:	dfc01017 	ldw	ra,64(sp)
  80d9b8:	dc400f17 	ldw	r17,60(sp)
  80d9bc:	dc000e17 	ldw	r16,56(sp)
  80d9c0:	dec01104 	addi	sp,sp,68
  80d9c4:	f800283a 	ret

0080d9c8 <__ledf2>:
  80d9c8:	deffef04 	addi	sp,sp,-68
  80d9cc:	dc400f15 	stw	r17,60(sp)
  80d9d0:	dc400404 	addi	r17,sp,16
  80d9d4:	2005883a 	mov	r2,r4
  80d9d8:	2807883a 	mov	r3,r5
  80d9dc:	dc000e15 	stw	r16,56(sp)
  80d9e0:	d809883a 	mov	r4,sp
  80d9e4:	880b883a 	mov	r5,r17
  80d9e8:	dc000904 	addi	r16,sp,36
  80d9ec:	d8c00115 	stw	r3,4(sp)
  80d9f0:	d8800015 	stw	r2,0(sp)
  80d9f4:	d9800215 	stw	r6,8(sp)
  80d9f8:	dfc01015 	stw	ra,64(sp)
  80d9fc:	d9c00315 	stw	r7,12(sp)
  80da00:	08046080 	call	804608 <__unpack_d>
  80da04:	d9000204 	addi	r4,sp,8
  80da08:	800b883a 	mov	r5,r16
  80da0c:	08046080 	call	804608 <__unpack_d>
  80da10:	d8800417 	ldw	r2,16(sp)
  80da14:	00c00044 	movi	r3,1
  80da18:	180d883a 	mov	r6,r3
  80da1c:	1880062e 	bgeu	r3,r2,80da38 <__ledf2+0x70>
  80da20:	d8800917 	ldw	r2,36(sp)
  80da24:	8809883a 	mov	r4,r17
  80da28:	800b883a 	mov	r5,r16
  80da2c:	1880022e 	bgeu	r3,r2,80da38 <__ledf2+0x70>
  80da30:	08047400 	call	804740 <__fpcmp_parts_d>
  80da34:	100d883a 	mov	r6,r2
  80da38:	3005883a 	mov	r2,r6
  80da3c:	dfc01017 	ldw	ra,64(sp)
  80da40:	dc400f17 	ldw	r17,60(sp)
  80da44:	dc000e17 	ldw	r16,56(sp)
  80da48:	dec01104 	addi	sp,sp,68
  80da4c:	f800283a 	ret

0080da50 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80da50:	defff804 	addi	sp,sp,-32
  80da54:	dfc00715 	stw	ra,28(sp)
  80da58:	df000615 	stw	fp,24(sp)
  80da5c:	df000604 	addi	fp,sp,24
  80da60:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80da64:	e0bffc17 	ldw	r2,-16(fp)
  80da68:	1004803a 	cmplt	r2,r2,zero
  80da6c:	1000091e 	bne	r2,zero,80da94 <close+0x44>
  80da70:	e13ffc17 	ldw	r4,-16(fp)
  80da74:	01400304 	movi	r5,12
  80da78:	0803ec40 	call	803ec4 <__mulsi3>
  80da7c:	1007883a 	mov	r3,r2
  80da80:	00802074 	movhi	r2,129
  80da84:	10852b04 	addi	r2,r2,5292
  80da88:	1887883a 	add	r3,r3,r2
  80da8c:	e0ffff15 	stw	r3,-4(fp)
  80da90:	00000106 	br	80da98 <close+0x48>
  80da94:	e03fff15 	stw	zero,-4(fp)
  80da98:	e0bfff17 	ldw	r2,-4(fp)
  80da9c:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
  80daa0:	e0bffb17 	ldw	r2,-20(fp)
  80daa4:	1005003a 	cmpeq	r2,r2,zero
  80daa8:	10001d1e 	bne	r2,zero,80db20 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80daac:	e0bffb17 	ldw	r2,-20(fp)
  80dab0:	10800017 	ldw	r2,0(r2)
  80dab4:	10800417 	ldw	r2,16(r2)
  80dab8:	1005003a 	cmpeq	r2,r2,zero
  80dabc:	1000071e 	bne	r2,zero,80dadc <close+0x8c>
  80dac0:	e0bffb17 	ldw	r2,-20(fp)
  80dac4:	10800017 	ldw	r2,0(r2)
  80dac8:	10800417 	ldw	r2,16(r2)
  80dacc:	e13ffb17 	ldw	r4,-20(fp)
  80dad0:	103ee83a 	callr	r2
  80dad4:	e0bffe15 	stw	r2,-8(fp)
  80dad8:	00000106 	br	80dae0 <close+0x90>
  80dadc:	e03ffe15 	stw	zero,-8(fp)
  80dae0:	e0bffe17 	ldw	r2,-8(fp)
  80dae4:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80dae8:	e13ffc17 	ldw	r4,-16(fp)
  80daec:	080e2e80 	call	80e2e8 <alt_release_fd>
    if (rval < 0)
  80daf0:	e0bffa17 	ldw	r2,-24(fp)
  80daf4:	1004403a 	cmpge	r2,r2,zero
  80daf8:	1000071e 	bne	r2,zero,80db18 <close+0xc8>
    {
      ALT_ERRNO = -rval;
  80dafc:	080db500 	call	80db50 <alt_get_errno>
  80db00:	e0fffa17 	ldw	r3,-24(fp)
  80db04:	00c7c83a 	sub	r3,zero,r3
  80db08:	10c00015 	stw	r3,0(r2)
      return -1;
  80db0c:	00bfffc4 	movi	r2,-1
  80db10:	e0bffd15 	stw	r2,-12(fp)
  80db14:	00000806 	br	80db38 <close+0xe8>
    }
    return 0;
  80db18:	e03ffd15 	stw	zero,-12(fp)
  80db1c:	00000606 	br	80db38 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80db20:	080db500 	call	80db50 <alt_get_errno>
  80db24:	1007883a 	mov	r3,r2
  80db28:	00801444 	movi	r2,81
  80db2c:	18800015 	stw	r2,0(r3)
    return -1;
  80db30:	00bfffc4 	movi	r2,-1
  80db34:	e0bffd15 	stw	r2,-12(fp)
  80db38:	e0bffd17 	ldw	r2,-12(fp)
  }
}
  80db3c:	e037883a 	mov	sp,fp
  80db40:	dfc00117 	ldw	ra,4(sp)
  80db44:	df000017 	ldw	fp,0(sp)
  80db48:	dec00204 	addi	sp,sp,8
  80db4c:	f800283a 	ret

0080db50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80db50:	defffd04 	addi	sp,sp,-12
  80db54:	dfc00215 	stw	ra,8(sp)
  80db58:	df000115 	stw	fp,4(sp)
  80db5c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80db60:	00802074 	movhi	r2,129
  80db64:	1089ae04 	addi	r2,r2,9912
  80db68:	10800017 	ldw	r2,0(r2)
  80db6c:	1005003a 	cmpeq	r2,r2,zero
  80db70:	1000061e 	bne	r2,zero,80db8c <alt_get_errno+0x3c>
  80db74:	00802074 	movhi	r2,129
  80db78:	1089ae04 	addi	r2,r2,9912
  80db7c:	10800017 	ldw	r2,0(r2)
  80db80:	103ee83a 	callr	r2
  80db84:	e0bfff15 	stw	r2,-4(fp)
  80db88:	00000306 	br	80db98 <alt_get_errno+0x48>
  80db8c:	00802074 	movhi	r2,129
  80db90:	10905004 	addi	r2,r2,16704
  80db94:	e0bfff15 	stw	r2,-4(fp)
  80db98:	e0bfff17 	ldw	r2,-4(fp)
}
  80db9c:	e037883a 	mov	sp,fp
  80dba0:	dfc00117 	ldw	ra,4(sp)
  80dba4:	df000017 	ldw	fp,0(sp)
  80dba8:	dec00204 	addi	sp,sp,8
  80dbac:	f800283a 	ret

0080dbb0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80dbb0:	defffc04 	addi	sp,sp,-16
  80dbb4:	df000315 	stw	fp,12(sp)
  80dbb8:	df000304 	addi	fp,sp,12
  80dbbc:	e13ffd15 	stw	r4,-12(fp)
  80dbc0:	e17ffe15 	stw	r5,-8(fp)
  80dbc4:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80dbc8:	e0bfff17 	ldw	r2,-4(fp)
}
  80dbcc:	e037883a 	mov	sp,fp
  80dbd0:	df000017 	ldw	fp,0(sp)
  80dbd4:	dec00104 	addi	sp,sp,4
  80dbd8:	f800283a 	ret

0080dbdc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80dbdc:	defff904 	addi	sp,sp,-28
  80dbe0:	dfc00615 	stw	ra,24(sp)
  80dbe4:	df000515 	stw	fp,20(sp)
  80dbe8:	df000504 	addi	fp,sp,20
  80dbec:	e13ffc15 	stw	r4,-16(fp)
  80dbf0:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dbf4:	e0bffc17 	ldw	r2,-16(fp)
  80dbf8:	1004803a 	cmplt	r2,r2,zero
  80dbfc:	1000091e 	bne	r2,zero,80dc24 <fstat+0x48>
  80dc00:	e13ffc17 	ldw	r4,-16(fp)
  80dc04:	01400304 	movi	r5,12
  80dc08:	0803ec40 	call	803ec4 <__mulsi3>
  80dc0c:	1007883a 	mov	r3,r2
  80dc10:	00802074 	movhi	r2,129
  80dc14:	10852b04 	addi	r2,r2,5292
  80dc18:	1887883a 	add	r3,r3,r2
  80dc1c:	e0ffff15 	stw	r3,-4(fp)
  80dc20:	00000106 	br	80dc28 <fstat+0x4c>
  80dc24:	e03fff15 	stw	zero,-4(fp)
  80dc28:	e0bfff17 	ldw	r2,-4(fp)
  80dc2c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80dc30:	e0bffb17 	ldw	r2,-20(fp)
  80dc34:	1005003a 	cmpeq	r2,r2,zero
  80dc38:	1000121e 	bne	r2,zero,80dc84 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80dc3c:	e0bffb17 	ldw	r2,-20(fp)
  80dc40:	10800017 	ldw	r2,0(r2)
  80dc44:	10800817 	ldw	r2,32(r2)
  80dc48:	1005003a 	cmpeq	r2,r2,zero
  80dc4c:	1000081e 	bne	r2,zero,80dc70 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
  80dc50:	e0bffb17 	ldw	r2,-20(fp)
  80dc54:	10800017 	ldw	r2,0(r2)
  80dc58:	10800817 	ldw	r2,32(r2)
  80dc5c:	e13ffb17 	ldw	r4,-20(fp)
  80dc60:	e17ffd17 	ldw	r5,-12(fp)
  80dc64:	103ee83a 	callr	r2
  80dc68:	e0bffe15 	stw	r2,-8(fp)
  80dc6c:	00000b06 	br	80dc9c <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80dc70:	e0fffd17 	ldw	r3,-12(fp)
  80dc74:	00880004 	movi	r2,8192
  80dc78:	18800115 	stw	r2,4(r3)
      return 0;
  80dc7c:	e03ffe15 	stw	zero,-8(fp)
  80dc80:	00000606 	br	80dc9c <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80dc84:	080dcb40 	call	80dcb4 <alt_get_errno>
  80dc88:	1007883a 	mov	r3,r2
  80dc8c:	00801444 	movi	r2,81
  80dc90:	18800015 	stw	r2,0(r3)
    return -1;
  80dc94:	00bfffc4 	movi	r2,-1
  80dc98:	e0bffe15 	stw	r2,-8(fp)
  80dc9c:	e0bffe17 	ldw	r2,-8(fp)
  }
}
  80dca0:	e037883a 	mov	sp,fp
  80dca4:	dfc00117 	ldw	ra,4(sp)
  80dca8:	df000017 	ldw	fp,0(sp)
  80dcac:	dec00204 	addi	sp,sp,8
  80dcb0:	f800283a 	ret

0080dcb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80dcb4:	defffd04 	addi	sp,sp,-12
  80dcb8:	dfc00215 	stw	ra,8(sp)
  80dcbc:	df000115 	stw	fp,4(sp)
  80dcc0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80dcc4:	00802074 	movhi	r2,129
  80dcc8:	1089ae04 	addi	r2,r2,9912
  80dccc:	10800017 	ldw	r2,0(r2)
  80dcd0:	1005003a 	cmpeq	r2,r2,zero
  80dcd4:	1000061e 	bne	r2,zero,80dcf0 <alt_get_errno+0x3c>
  80dcd8:	00802074 	movhi	r2,129
  80dcdc:	1089ae04 	addi	r2,r2,9912
  80dce0:	10800017 	ldw	r2,0(r2)
  80dce4:	103ee83a 	callr	r2
  80dce8:	e0bfff15 	stw	r2,-4(fp)
  80dcec:	00000306 	br	80dcfc <alt_get_errno+0x48>
  80dcf0:	00802074 	movhi	r2,129
  80dcf4:	10905004 	addi	r2,r2,16704
  80dcf8:	e0bfff15 	stw	r2,-4(fp)
  80dcfc:	e0bfff17 	ldw	r2,-4(fp)
}
  80dd00:	e037883a 	mov	sp,fp
  80dd04:	dfc00117 	ldw	ra,4(sp)
  80dd08:	df000017 	ldw	fp,0(sp)
  80dd0c:	dec00204 	addi	sp,sp,8
  80dd10:	f800283a 	ret

0080dd14 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80dd14:	deffeb04 	addi	sp,sp,-84
  80dd18:	dfc01415 	stw	ra,80(sp)
  80dd1c:	df001315 	stw	fp,76(sp)
  80dd20:	df001304 	addi	fp,sp,76
  80dd24:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dd28:	e0bffd17 	ldw	r2,-12(fp)
  80dd2c:	1004803a 	cmplt	r2,r2,zero
  80dd30:	1000091e 	bne	r2,zero,80dd58 <isatty+0x44>
  80dd34:	e13ffd17 	ldw	r4,-12(fp)
  80dd38:	01400304 	movi	r5,12
  80dd3c:	0803ec40 	call	803ec4 <__mulsi3>
  80dd40:	1007883a 	mov	r3,r2
  80dd44:	00802074 	movhi	r2,129
  80dd48:	10852b04 	addi	r2,r2,5292
  80dd4c:	1887883a 	add	r3,r3,r2
  80dd50:	e0ffff15 	stw	r3,-4(fp)
  80dd54:	00000106 	br	80dd5c <isatty+0x48>
  80dd58:	e03fff15 	stw	zero,-4(fp)
  80dd5c:	e0bfff17 	ldw	r2,-4(fp)
  80dd60:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
  80dd64:	e0bfed17 	ldw	r2,-76(fp)
  80dd68:	1005003a 	cmpeq	r2,r2,zero
  80dd6c:	10000f1e 	bne	r2,zero,80ddac <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80dd70:	e0bfed17 	ldw	r2,-76(fp)
  80dd74:	10800017 	ldw	r2,0(r2)
  80dd78:	10800817 	ldw	r2,32(r2)
  80dd7c:	1004c03a 	cmpne	r2,r2,zero
  80dd80:	1000031e 	bne	r2,zero,80dd90 <isatty+0x7c>
    {
      return 1;
  80dd84:	00800044 	movi	r2,1
  80dd88:	e0bffe15 	stw	r2,-8(fp)
  80dd8c:	00000c06 	br	80ddc0 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80dd90:	e17fee04 	addi	r5,fp,-72
  80dd94:	e13ffd17 	ldw	r4,-12(fp)
  80dd98:	080dbdc0 	call	80dbdc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80dd9c:	e0bfef17 	ldw	r2,-68(fp)
  80dda0:	10880020 	cmpeqi	r2,r2,8192
  80dda4:	e0bffe15 	stw	r2,-8(fp)
  80dda8:	00000506 	br	80ddc0 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80ddac:	080ddd80 	call	80ddd8 <alt_get_errno>
  80ddb0:	1007883a 	mov	r3,r2
  80ddb4:	00801444 	movi	r2,81
  80ddb8:	18800015 	stw	r2,0(r3)
    return 0;
  80ddbc:	e03ffe15 	stw	zero,-8(fp)
  80ddc0:	e0bffe17 	ldw	r2,-8(fp)
  }
}
  80ddc4:	e037883a 	mov	sp,fp
  80ddc8:	dfc00117 	ldw	ra,4(sp)
  80ddcc:	df000017 	ldw	fp,0(sp)
  80ddd0:	dec00204 	addi	sp,sp,8
  80ddd4:	f800283a 	ret

0080ddd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ddd8:	defffd04 	addi	sp,sp,-12
  80dddc:	dfc00215 	stw	ra,8(sp)
  80dde0:	df000115 	stw	fp,4(sp)
  80dde4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80dde8:	00802074 	movhi	r2,129
  80ddec:	1089ae04 	addi	r2,r2,9912
  80ddf0:	10800017 	ldw	r2,0(r2)
  80ddf4:	1005003a 	cmpeq	r2,r2,zero
  80ddf8:	1000061e 	bne	r2,zero,80de14 <alt_get_errno+0x3c>
  80ddfc:	00802074 	movhi	r2,129
  80de00:	1089ae04 	addi	r2,r2,9912
  80de04:	10800017 	ldw	r2,0(r2)
  80de08:	103ee83a 	callr	r2
  80de0c:	e0bfff15 	stw	r2,-4(fp)
  80de10:	00000306 	br	80de20 <alt_get_errno+0x48>
  80de14:	00802074 	movhi	r2,129
  80de18:	10905004 	addi	r2,r2,16704
  80de1c:	e0bfff15 	stw	r2,-4(fp)
  80de20:	e0bfff17 	ldw	r2,-4(fp)
}
  80de24:	e037883a 	mov	sp,fp
  80de28:	dfc00117 	ldw	ra,4(sp)
  80de2c:	df000017 	ldw	fp,0(sp)
  80de30:	dec00204 	addi	sp,sp,8
  80de34:	f800283a 	ret

0080de38 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80de38:	defffe04 	addi	sp,sp,-8
  80de3c:	dfc00115 	stw	ra,4(sp)
  80de40:	df000015 	stw	fp,0(sp)
  80de44:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80de48:	01002074 	movhi	r4,129
  80de4c:	2109b304 	addi	r4,r4,9932
  80de50:	01402074 	movhi	r5,129
  80de54:	29431c04 	addi	r5,r5,3184
  80de58:	01802074 	movhi	r6,129
  80de5c:	3189b304 	addi	r6,r6,9932
  80de60:	080deb80 	call	80deb8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80de64:	01002034 	movhi	r4,128
  80de68:	21000804 	addi	r4,r4,32
  80de6c:	01402034 	movhi	r5,128
  80de70:	29400804 	addi	r5,r5,32
  80de74:	01802034 	movhi	r6,128
  80de78:	31806d04 	addi	r6,r6,436
  80de7c:	080deb80 	call	80deb8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80de80:	01002074 	movhi	r4,129
  80de84:	2101be04 	addi	r4,r4,1784
  80de88:	01402074 	movhi	r5,129
  80de8c:	2941be04 	addi	r5,r5,1784
  80de90:	01802074 	movhi	r6,129
  80de94:	31831c04 	addi	r6,r6,3184
  80de98:	080deb80 	call	80deb8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80de9c:	080f45c0 	call	80f45c <alt_dcache_flush_all>
  alt_icache_flush_all();
  80dea0:	080f6540 	call	80f654 <alt_icache_flush_all>
}
  80dea4:	e037883a 	mov	sp,fp
  80dea8:	dfc00117 	ldw	ra,4(sp)
  80deac:	df000017 	ldw	fp,0(sp)
  80deb0:	dec00204 	addi	sp,sp,8
  80deb4:	f800283a 	ret

0080deb8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80deb8:	defffc04 	addi	sp,sp,-16
  80debc:	df000315 	stw	fp,12(sp)
  80dec0:	df000304 	addi	fp,sp,12
  80dec4:	e13ffd15 	stw	r4,-12(fp)
  80dec8:	e17ffe15 	stw	r5,-8(fp)
  80decc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80ded0:	e0fffe17 	ldw	r3,-8(fp)
  80ded4:	e0bffd17 	ldw	r2,-12(fp)
  80ded8:	18800e26 	beq	r3,r2,80df14 <alt_load_section+0x5c>
  {
    while( to != end )
  80dedc:	00000a06 	br	80df08 <alt_load_section+0x50>
    {
      *to++ = *from++;
  80dee0:	e0bffd17 	ldw	r2,-12(fp)
  80dee4:	10c00017 	ldw	r3,0(r2)
  80dee8:	e0bffe17 	ldw	r2,-8(fp)
  80deec:	10c00015 	stw	r3,0(r2)
  80def0:	e0bffe17 	ldw	r2,-8(fp)
  80def4:	10800104 	addi	r2,r2,4
  80def8:	e0bffe15 	stw	r2,-8(fp)
  80defc:	e0bffd17 	ldw	r2,-12(fp)
  80df00:	10800104 	addi	r2,r2,4
  80df04:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80df08:	e0fffe17 	ldw	r3,-8(fp)
  80df0c:	e0bfff17 	ldw	r2,-4(fp)
  80df10:	18bff31e 	bne	r3,r2,80dee0 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
  80df14:	e037883a 	mov	sp,fp
  80df18:	df000017 	ldw	fp,0(sp)
  80df1c:	dec00104 	addi	sp,sp,4
  80df20:	f800283a 	ret

0080df24 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80df24:	defff804 	addi	sp,sp,-32
  80df28:	dfc00715 	stw	ra,28(sp)
  80df2c:	df000615 	stw	fp,24(sp)
  80df30:	df000604 	addi	fp,sp,24
  80df34:	e13ffc15 	stw	r4,-16(fp)
  80df38:	e17ffd15 	stw	r5,-12(fp)
  80df3c:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80df40:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80df44:	e0bffc17 	ldw	r2,-16(fp)
  80df48:	1004803a 	cmplt	r2,r2,zero
  80df4c:	1000091e 	bne	r2,zero,80df74 <lseek+0x50>
  80df50:	e13ffc17 	ldw	r4,-16(fp)
  80df54:	01400304 	movi	r5,12
  80df58:	0803ec40 	call	803ec4 <__mulsi3>
  80df5c:	1007883a 	mov	r3,r2
  80df60:	00802074 	movhi	r2,129
  80df64:	10852b04 	addi	r2,r2,5292
  80df68:	1887883a 	add	r3,r3,r2
  80df6c:	e0ffff15 	stw	r3,-4(fp)
  80df70:	00000106 	br	80df78 <lseek+0x54>
  80df74:	e03fff15 	stw	zero,-4(fp)
  80df78:	e0bfff17 	ldw	r2,-4(fp)
  80df7c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
  80df80:	e0bffb17 	ldw	r2,-20(fp)
  80df84:	1005003a 	cmpeq	r2,r2,zero
  80df88:	1000111e 	bne	r2,zero,80dfd0 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80df8c:	e0bffb17 	ldw	r2,-20(fp)
  80df90:	10800017 	ldw	r2,0(r2)
  80df94:	10800717 	ldw	r2,28(r2)
  80df98:	1005003a 	cmpeq	r2,r2,zero
  80df9c:	1000091e 	bne	r2,zero,80dfc4 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80dfa0:	e0bffb17 	ldw	r2,-20(fp)
  80dfa4:	10800017 	ldw	r2,0(r2)
  80dfa8:	10800717 	ldw	r2,28(r2)
  80dfac:	e13ffb17 	ldw	r4,-20(fp)
  80dfb0:	e17ffd17 	ldw	r5,-12(fp)
  80dfb4:	e1bffe17 	ldw	r6,-8(fp)
  80dfb8:	103ee83a 	callr	r2
  80dfbc:	e0bffa15 	stw	r2,-24(fp)
  80dfc0:	00000506 	br	80dfd8 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80dfc4:	00bfde84 	movi	r2,-134
  80dfc8:	e0bffa15 	stw	r2,-24(fp)
  80dfcc:	00000206 	br	80dfd8 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80dfd0:	00bfebc4 	movi	r2,-81
  80dfd4:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
  80dfd8:	e0bffa17 	ldw	r2,-24(fp)
  80dfdc:	1004403a 	cmpge	r2,r2,zero
  80dfe0:	1000071e 	bne	r2,zero,80e000 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
  80dfe4:	080e0180 	call	80e018 <alt_get_errno>
  80dfe8:	1007883a 	mov	r3,r2
  80dfec:	e0bffa17 	ldw	r2,-24(fp)
  80dff0:	0085c83a 	sub	r2,zero,r2
  80dff4:	18800015 	stw	r2,0(r3)
    rc = -1;
  80dff8:	00bfffc4 	movi	r2,-1
  80dffc:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
  80e000:	e0bffa17 	ldw	r2,-24(fp)
}
  80e004:	e037883a 	mov	sp,fp
  80e008:	dfc00117 	ldw	ra,4(sp)
  80e00c:	df000017 	ldw	fp,0(sp)
  80e010:	dec00204 	addi	sp,sp,8
  80e014:	f800283a 	ret

0080e018 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e018:	defffd04 	addi	sp,sp,-12
  80e01c:	dfc00215 	stw	ra,8(sp)
  80e020:	df000115 	stw	fp,4(sp)
  80e024:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80e028:	00802074 	movhi	r2,129
  80e02c:	1089ae04 	addi	r2,r2,9912
  80e030:	10800017 	ldw	r2,0(r2)
  80e034:	1005003a 	cmpeq	r2,r2,zero
  80e038:	1000061e 	bne	r2,zero,80e054 <alt_get_errno+0x3c>
  80e03c:	00802074 	movhi	r2,129
  80e040:	1089ae04 	addi	r2,r2,9912
  80e044:	10800017 	ldw	r2,0(r2)
  80e048:	103ee83a 	callr	r2
  80e04c:	e0bfff15 	stw	r2,-4(fp)
  80e050:	00000306 	br	80e060 <alt_get_errno+0x48>
  80e054:	00802074 	movhi	r2,129
  80e058:	10905004 	addi	r2,r2,16704
  80e05c:	e0bfff15 	stw	r2,-4(fp)
  80e060:	e0bfff17 	ldw	r2,-4(fp)
}
  80e064:	e037883a 	mov	sp,fp
  80e068:	dfc00117 	ldw	ra,4(sp)
  80e06c:	df000017 	ldw	fp,0(sp)
  80e070:	dec00204 	addi	sp,sp,8
  80e074:	f800283a 	ret

0080e078 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80e078:	defffd04 	addi	sp,sp,-12
  80e07c:	dfc00215 	stw	ra,8(sp)
  80e080:	df000115 	stw	fp,4(sp)
  80e084:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80e088:	0009883a 	mov	r4,zero
  80e08c:	080e6940 	call	80e694 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80e090:	080e6c80 	call	80e6c8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80e094:	01002074 	movhi	r4,129
  80e098:	21031404 	addi	r4,r4,3152
  80e09c:	01402074 	movhi	r5,129
  80e0a0:	29431404 	addi	r5,r5,3152
  80e0a4:	01802074 	movhi	r6,129
  80e0a8:	31831404 	addi	r6,r6,3152
  80e0ac:	080fa280 	call	80fa28 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80e0b0:	080f58c0 	call	80f58c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80e0b4:	01002074 	movhi	r4,129
  80e0b8:	213d7c04 	addi	r4,r4,-2576
  80e0bc:	081025c0 	call	81025c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80e0c0:	d126ae17 	ldw	r4,-25928(gp)
  80e0c4:	d166af17 	ldw	r5,-25924(gp)
  80e0c8:	d1a6b017 	ldw	r6,-25920(gp)
  80e0cc:	08005080 	call	800508 <main>
  80e0d0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80e0d4:	01000044 	movi	r4,1
  80e0d8:	080da500 	call	80da50 <close>
  exit (result);
  80e0dc:	e13fff17 	ldw	r4,-4(fp)
  80e0e0:	08102700 	call	810270 <exit>

0080e0e4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80e0e4:	defffe04 	addi	sp,sp,-8
  80e0e8:	df000115 	stw	fp,4(sp)
  80e0ec:	df000104 	addi	fp,sp,4
  80e0f0:	e13fff15 	stw	r4,-4(fp)
}
  80e0f4:	e037883a 	mov	sp,fp
  80e0f8:	df000017 	ldw	fp,0(sp)
  80e0fc:	dec00104 	addi	sp,sp,4
  80e100:	f800283a 	ret

0080e104 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80e104:	defffe04 	addi	sp,sp,-8
  80e108:	df000115 	stw	fp,4(sp)
  80e10c:	df000104 	addi	fp,sp,4
  80e110:	e13fff15 	stw	r4,-4(fp)
}
  80e114:	e037883a 	mov	sp,fp
  80e118:	df000017 	ldw	fp,0(sp)
  80e11c:	dec00104 	addi	sp,sp,4
  80e120:	f800283a 	ret

0080e124 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
  80e124:	defffd04 	addi	sp,sp,-12
  80e128:	dfc00215 	stw	ra,8(sp)
  80e12c:	df000115 	stw	fp,4(sp)
  80e130:	df000104 	addi	fp,sp,4
  80e134:	e13fff15 	stw	r4,-4(fp)
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
  80e138:	00802074 	movhi	r2,129
  80e13c:	1089a304 	addi	r2,r2,9868
  80e140:	10800017 	ldw	r2,0(r2)
  80e144:	11400217 	ldw	r5,8(r2)
  80e148:	e13fff17 	ldw	r4,-4(fp)
  80e14c:	081031c0 	call	81031c <fputs>
#endif
}
  80e150:	e037883a 	mov	sp,fp
  80e154:	dfc00117 	ldw	ra,4(sp)
  80e158:	df000017 	ldw	fp,0(sp)
  80e15c:	dec00204 	addi	sp,sp,8
  80e160:	f800283a 	ret

0080e164 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80e164:	defff704 	addi	sp,sp,-36
  80e168:	dfc00815 	stw	ra,32(sp)
  80e16c:	df000715 	stw	fp,28(sp)
  80e170:	df000704 	addi	fp,sp,28
  80e174:	e13ffb15 	stw	r4,-20(fp)
  80e178:	e17ffc15 	stw	r5,-16(fp)
  80e17c:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e180:	e0bffb17 	ldw	r2,-20(fp)
  80e184:	1004803a 	cmplt	r2,r2,zero
  80e188:	1000091e 	bne	r2,zero,80e1b0 <read+0x4c>
  80e18c:	e13ffb17 	ldw	r4,-20(fp)
  80e190:	01400304 	movi	r5,12
  80e194:	0803ec40 	call	803ec4 <__mulsi3>
  80e198:	1007883a 	mov	r3,r2
  80e19c:	00802074 	movhi	r2,129
  80e1a0:	10852b04 	addi	r2,r2,5292
  80e1a4:	1887883a 	add	r3,r3,r2
  80e1a8:	e0ffff15 	stw	r3,-4(fp)
  80e1ac:	00000106 	br	80e1b4 <read+0x50>
  80e1b0:	e03fff15 	stw	zero,-4(fp)
  80e1b4:	e0bfff17 	ldw	r2,-4(fp)
  80e1b8:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
  80e1bc:	e0bffa17 	ldw	r2,-24(fp)
  80e1c0:	1005003a 	cmpeq	r2,r2,zero
  80e1c4:	1000241e 	bne	r2,zero,80e258 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80e1c8:	e0bffa17 	ldw	r2,-24(fp)
  80e1cc:	10800217 	ldw	r2,8(r2)
  80e1d0:	108000cc 	andi	r2,r2,3
  80e1d4:	10800060 	cmpeqi	r2,r2,1
  80e1d8:	10001a1e 	bne	r2,zero,80e244 <read+0xe0>
  80e1dc:	e0bffa17 	ldw	r2,-24(fp)
  80e1e0:	10800017 	ldw	r2,0(r2)
  80e1e4:	10800517 	ldw	r2,20(r2)
  80e1e8:	1005003a 	cmpeq	r2,r2,zero
  80e1ec:	1000151e 	bne	r2,zero,80e244 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80e1f0:	e0bffa17 	ldw	r2,-24(fp)
  80e1f4:	10800017 	ldw	r2,0(r2)
  80e1f8:	10800517 	ldw	r2,20(r2)
  80e1fc:	e17ffc17 	ldw	r5,-16(fp)
  80e200:	e1bffd17 	ldw	r6,-12(fp)
  80e204:	e13ffa17 	ldw	r4,-24(fp)
  80e208:	103ee83a 	callr	r2
  80e20c:	e0bff915 	stw	r2,-28(fp)
  80e210:	e0bff917 	ldw	r2,-28(fp)
  80e214:	1004403a 	cmpge	r2,r2,zero
  80e218:	1000071e 	bne	r2,zero,80e238 <read+0xd4>
        {
          ALT_ERRNO = -rval;
  80e21c:	080e2880 	call	80e288 <alt_get_errno>
  80e220:	e0fff917 	ldw	r3,-28(fp)
  80e224:	00c7c83a 	sub	r3,zero,r3
  80e228:	10c00015 	stw	r3,0(r2)
          return -1;
  80e22c:	00bfffc4 	movi	r2,-1
  80e230:	e0bffe15 	stw	r2,-8(fp)
  80e234:	00000e06 	br	80e270 <read+0x10c>
        }
        return rval;
  80e238:	e0bff917 	ldw	r2,-28(fp)
  80e23c:	e0bffe15 	stw	r2,-8(fp)
  80e240:	00000b06 	br	80e270 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80e244:	080e2880 	call	80e288 <alt_get_errno>
  80e248:	1007883a 	mov	r3,r2
  80e24c:	00800344 	movi	r2,13
  80e250:	18800015 	stw	r2,0(r3)
  80e254:	00000406 	br	80e268 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80e258:	080e2880 	call	80e288 <alt_get_errno>
  80e25c:	1007883a 	mov	r3,r2
  80e260:	00801444 	movi	r2,81
  80e264:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e268:	00bfffc4 	movi	r2,-1
  80e26c:	e0bffe15 	stw	r2,-8(fp)
  80e270:	e0bffe17 	ldw	r2,-8(fp)
}
  80e274:	e037883a 	mov	sp,fp
  80e278:	dfc00117 	ldw	ra,4(sp)
  80e27c:	df000017 	ldw	fp,0(sp)
  80e280:	dec00204 	addi	sp,sp,8
  80e284:	f800283a 	ret

0080e288 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e288:	defffd04 	addi	sp,sp,-12
  80e28c:	dfc00215 	stw	ra,8(sp)
  80e290:	df000115 	stw	fp,4(sp)
  80e294:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80e298:	00802074 	movhi	r2,129
  80e29c:	1089ae04 	addi	r2,r2,9912
  80e2a0:	10800017 	ldw	r2,0(r2)
  80e2a4:	1005003a 	cmpeq	r2,r2,zero
  80e2a8:	1000061e 	bne	r2,zero,80e2c4 <alt_get_errno+0x3c>
  80e2ac:	00802074 	movhi	r2,129
  80e2b0:	1089ae04 	addi	r2,r2,9912
  80e2b4:	10800017 	ldw	r2,0(r2)
  80e2b8:	103ee83a 	callr	r2
  80e2bc:	e0bfff15 	stw	r2,-4(fp)
  80e2c0:	00000306 	br	80e2d0 <alt_get_errno+0x48>
  80e2c4:	00802074 	movhi	r2,129
  80e2c8:	10905004 	addi	r2,r2,16704
  80e2cc:	e0bfff15 	stw	r2,-4(fp)
  80e2d0:	e0bfff17 	ldw	r2,-4(fp)
}
  80e2d4:	e037883a 	mov	sp,fp
  80e2d8:	dfc00117 	ldw	ra,4(sp)
  80e2dc:	df000017 	ldw	fp,0(sp)
  80e2e0:	dec00204 	addi	sp,sp,8
  80e2e4:	f800283a 	ret

0080e2e8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80e2e8:	defffc04 	addi	sp,sp,-16
  80e2ec:	dfc00315 	stw	ra,12(sp)
  80e2f0:	df000215 	stw	fp,8(sp)
  80e2f4:	dc000115 	stw	r16,4(sp)
  80e2f8:	df000104 	addi	fp,sp,4
  80e2fc:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80e300:	e0bfff17 	ldw	r2,-4(fp)
  80e304:	108000d0 	cmplti	r2,r2,3
  80e308:	10000f1e 	bne	r2,zero,80e348 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
  80e30c:	e13fff17 	ldw	r4,-4(fp)
  80e310:	04002074 	movhi	r16,129
  80e314:	84052b04 	addi	r16,r16,5292
  80e318:	01400304 	movi	r5,12
  80e31c:	0803ec40 	call	803ec4 <__mulsi3>
  80e320:	1405883a 	add	r2,r2,r16
  80e324:	10800204 	addi	r2,r2,8
  80e328:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80e32c:	e13fff17 	ldw	r4,-4(fp)
  80e330:	04002074 	movhi	r16,129
  80e334:	84052b04 	addi	r16,r16,5292
  80e338:	01400304 	movi	r5,12
  80e33c:	0803ec40 	call	803ec4 <__mulsi3>
  80e340:	1405883a 	add	r2,r2,r16
  80e344:	10000015 	stw	zero,0(r2)
  }
}
  80e348:	e037883a 	mov	sp,fp
  80e34c:	dfc00217 	ldw	ra,8(sp)
  80e350:	df000117 	ldw	fp,4(sp)
  80e354:	dc000017 	ldw	r16,0(sp)
  80e358:	dec00304 	addi	sp,sp,12
  80e35c:	f800283a 	ret

0080e360 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80e360:	defff804 	addi	sp,sp,-32
  80e364:	df000715 	stw	fp,28(sp)
  80e368:	df000704 	addi	fp,sp,28
  80e36c:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e370:	0005303a 	rdctl	r2,status
  80e374:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e378:	e0fffb17 	ldw	r3,-20(fp)
  80e37c:	00bfff84 	movi	r2,-2
  80e380:	1884703a 	and	r2,r3,r2
  80e384:	1001703a 	wrctl	status,r2
  
  return context;
  80e388:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80e38c:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80e390:	d0a00c17 	ldw	r2,-32720(gp)
  80e394:	10c000c4 	addi	r3,r2,3
  80e398:	00bfff04 	movi	r2,-4
  80e39c:	1884703a 	and	r2,r3,r2
  80e3a0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80e3a4:	d0e00c17 	ldw	r3,-32720(gp)
  80e3a8:	e0bffe17 	ldw	r2,-8(fp)
  80e3ac:	1887883a 	add	r3,r3,r2
  80e3b0:	00804034 	movhi	r2,256
  80e3b4:	10800004 	addi	r2,r2,0
  80e3b8:	10c0072e 	bgeu	r2,r3,80e3d8 <sbrk+0x78>
  80e3bc:	e0bffd17 	ldw	r2,-12(fp)
  80e3c0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e3c4:	e0bffa17 	ldw	r2,-24(fp)
  80e3c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80e3cc:	00bfffc4 	movi	r2,-1
  80e3d0:	e0bfff15 	stw	r2,-4(fp)
  80e3d4:	00000c06 	br	80e408 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80e3d8:	d0a00c17 	ldw	r2,-32720(gp)
  80e3dc:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
  80e3e0:	d0e00c17 	ldw	r3,-32720(gp)
  80e3e4:	e0bffe17 	ldw	r2,-8(fp)
  80e3e8:	1885883a 	add	r2,r3,r2
  80e3ec:	d0a00c15 	stw	r2,-32720(gp)
  80e3f0:	e0bffd17 	ldw	r2,-12(fp)
  80e3f4:	e0bff915 	stw	r2,-28(fp)
  80e3f8:	e0bff917 	ldw	r2,-28(fp)
  80e3fc:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80e400:	e0bffc17 	ldw	r2,-16(fp)
  80e404:	e0bfff15 	stw	r2,-4(fp)
  80e408:	e0bfff17 	ldw	r2,-4(fp)
} 
  80e40c:	e037883a 	mov	sp,fp
  80e410:	df000017 	ldw	fp,0(sp)
  80e414:	dec00104 	addi	sp,sp,4
  80e418:	f800283a 	ret

0080e41c <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80e41c:	defffb04 	addi	sp,sp,-20
  80e420:	dfc00415 	stw	ra,16(sp)
  80e424:	df000315 	stw	fp,12(sp)
  80e428:	df000304 	addi	fp,sp,12
  80e42c:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80e430:	00802074 	movhi	r2,129
  80e434:	10905604 	addi	r2,r2,16728
  80e438:	10800017 	ldw	r2,0(r2)
  clock_t ticks = alt_nticks(); 
  80e43c:	e0bffd15 	stw	r2,-12(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e440:	00802074 	movhi	r2,129
  80e444:	10905504 	addi	r2,r2,16724
  80e448:	10800017 	ldw	r2,0(r2)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80e44c:	1004c03a 	cmpne	r2,r2,zero
  80e450:	1000061e 	bne	r2,zero,80e46c <times+0x50>
  {
    ALT_ERRNO = ENOSYS;
  80e454:	080e4b00 	call	80e4b0 <alt_get_errno>
  80e458:	1007883a 	mov	r3,r2
  80e45c:	00801604 	movi	r2,88
  80e460:	18800015 	stw	r2,0(r3)
    return 0;
  80e464:	e03fff15 	stw	zero,-4(fp)
  80e468:	00000b06 	br	80e498 <times+0x7c>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80e46c:	e0bffe17 	ldw	r2,-8(fp)
  80e470:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80e474:	e0fffe17 	ldw	r3,-8(fp)
  80e478:	e0bffd17 	ldw	r2,-12(fp)
  80e47c:	18800115 	stw	r2,4(r3)
  buf->tms_cutime = 0;
  80e480:	e0bffe17 	ldw	r2,-8(fp)
  80e484:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80e488:	e0bffe17 	ldw	r2,-8(fp)
  80e48c:	10000315 	stw	zero,12(r2)

  return ticks;
  80e490:	e0bffd17 	ldw	r2,-12(fp)
  80e494:	e0bfff15 	stw	r2,-4(fp)
  80e498:	e0bfff17 	ldw	r2,-4(fp)
}
  80e49c:	e037883a 	mov	sp,fp
  80e4a0:	dfc00117 	ldw	ra,4(sp)
  80e4a4:	df000017 	ldw	fp,0(sp)
  80e4a8:	dec00204 	addi	sp,sp,8
  80e4ac:	f800283a 	ret

0080e4b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e4b0:	defffd04 	addi	sp,sp,-12
  80e4b4:	dfc00215 	stw	ra,8(sp)
  80e4b8:	df000115 	stw	fp,4(sp)
  80e4bc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80e4c0:	00802074 	movhi	r2,129
  80e4c4:	1089ae04 	addi	r2,r2,9912
  80e4c8:	10800017 	ldw	r2,0(r2)
  80e4cc:	1005003a 	cmpeq	r2,r2,zero
  80e4d0:	1000061e 	bne	r2,zero,80e4ec <alt_get_errno+0x3c>
  80e4d4:	00802074 	movhi	r2,129
  80e4d8:	1089ae04 	addi	r2,r2,9912
  80e4dc:	10800017 	ldw	r2,0(r2)
  80e4e0:	103ee83a 	callr	r2
  80e4e4:	e0bfff15 	stw	r2,-4(fp)
  80e4e8:	00000306 	br	80e4f8 <alt_get_errno+0x48>
  80e4ec:	00802074 	movhi	r2,129
  80e4f0:	10905004 	addi	r2,r2,16704
  80e4f4:	e0bfff15 	stw	r2,-4(fp)
  80e4f8:	e0bfff17 	ldw	r2,-4(fp)
}
  80e4fc:	e037883a 	mov	sp,fp
  80e500:	dfc00117 	ldw	ra,4(sp)
  80e504:	df000017 	ldw	fp,0(sp)
  80e508:	dec00204 	addi	sp,sp,8
  80e50c:	f800283a 	ret

0080e510 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80e510:	defff704 	addi	sp,sp,-36
  80e514:	dfc00815 	stw	ra,32(sp)
  80e518:	df000715 	stw	fp,28(sp)
  80e51c:	df000704 	addi	fp,sp,28
  80e520:	e13ffb15 	stw	r4,-20(fp)
  80e524:	e17ffc15 	stw	r5,-16(fp)
  80e528:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e52c:	e0bffb17 	ldw	r2,-20(fp)
  80e530:	1004803a 	cmplt	r2,r2,zero
  80e534:	1000091e 	bne	r2,zero,80e55c <write+0x4c>
  80e538:	e13ffb17 	ldw	r4,-20(fp)
  80e53c:	01400304 	movi	r5,12
  80e540:	0803ec40 	call	803ec4 <__mulsi3>
  80e544:	1007883a 	mov	r3,r2
  80e548:	00802074 	movhi	r2,129
  80e54c:	10852b04 	addi	r2,r2,5292
  80e550:	1887883a 	add	r3,r3,r2
  80e554:	e0ffff15 	stw	r3,-4(fp)
  80e558:	00000106 	br	80e560 <write+0x50>
  80e55c:	e03fff15 	stw	zero,-4(fp)
  80e560:	e0bfff17 	ldw	r2,-4(fp)
  80e564:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
  80e568:	e0bffa17 	ldw	r2,-24(fp)
  80e56c:	1005003a 	cmpeq	r2,r2,zero
  80e570:	1000241e 	bne	r2,zero,80e604 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80e574:	e0bffa17 	ldw	r2,-24(fp)
  80e578:	10800217 	ldw	r2,8(r2)
  80e57c:	108000cc 	andi	r2,r2,3
  80e580:	1005003a 	cmpeq	r2,r2,zero
  80e584:	10001a1e 	bne	r2,zero,80e5f0 <write+0xe0>
  80e588:	e0bffa17 	ldw	r2,-24(fp)
  80e58c:	10800017 	ldw	r2,0(r2)
  80e590:	10800617 	ldw	r2,24(r2)
  80e594:	1005003a 	cmpeq	r2,r2,zero
  80e598:	1000151e 	bne	r2,zero,80e5f0 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80e59c:	e0bffa17 	ldw	r2,-24(fp)
  80e5a0:	10800017 	ldw	r2,0(r2)
  80e5a4:	10800617 	ldw	r2,24(r2)
  80e5a8:	e17ffc17 	ldw	r5,-16(fp)
  80e5ac:	e1bffd17 	ldw	r6,-12(fp)
  80e5b0:	e13ffa17 	ldw	r4,-24(fp)
  80e5b4:	103ee83a 	callr	r2
  80e5b8:	e0bff915 	stw	r2,-28(fp)
  80e5bc:	e0bff917 	ldw	r2,-28(fp)
  80e5c0:	1004403a 	cmpge	r2,r2,zero
  80e5c4:	1000071e 	bne	r2,zero,80e5e4 <write+0xd4>
      {
        ALT_ERRNO = -rval;
  80e5c8:	080e6340 	call	80e634 <alt_get_errno>
  80e5cc:	e0fff917 	ldw	r3,-28(fp)
  80e5d0:	00c7c83a 	sub	r3,zero,r3
  80e5d4:	10c00015 	stw	r3,0(r2)
        return -1;
  80e5d8:	00bfffc4 	movi	r2,-1
  80e5dc:	e0bffe15 	stw	r2,-8(fp)
  80e5e0:	00000e06 	br	80e61c <write+0x10c>
      }
      return rval;
  80e5e4:	e0bff917 	ldw	r2,-28(fp)
  80e5e8:	e0bffe15 	stw	r2,-8(fp)
  80e5ec:	00000b06 	br	80e61c <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80e5f0:	080e6340 	call	80e634 <alt_get_errno>
  80e5f4:	1007883a 	mov	r3,r2
  80e5f8:	00800344 	movi	r2,13
  80e5fc:	18800015 	stw	r2,0(r3)
  80e600:	00000406 	br	80e614 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80e604:	080e6340 	call	80e634 <alt_get_errno>
  80e608:	1007883a 	mov	r3,r2
  80e60c:	00801444 	movi	r2,81
  80e610:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e614:	00bfffc4 	movi	r2,-1
  80e618:	e0bffe15 	stw	r2,-8(fp)
  80e61c:	e0bffe17 	ldw	r2,-8(fp)
}
  80e620:	e037883a 	mov	sp,fp
  80e624:	dfc00117 	ldw	ra,4(sp)
  80e628:	df000017 	ldw	fp,0(sp)
  80e62c:	dec00204 	addi	sp,sp,8
  80e630:	f800283a 	ret

0080e634 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e634:	defffd04 	addi	sp,sp,-12
  80e638:	dfc00215 	stw	ra,8(sp)
  80e63c:	df000115 	stw	fp,4(sp)
  80e640:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80e644:	00802074 	movhi	r2,129
  80e648:	1089ae04 	addi	r2,r2,9912
  80e64c:	10800017 	ldw	r2,0(r2)
  80e650:	1005003a 	cmpeq	r2,r2,zero
  80e654:	1000061e 	bne	r2,zero,80e670 <alt_get_errno+0x3c>
  80e658:	00802074 	movhi	r2,129
  80e65c:	1089ae04 	addi	r2,r2,9912
  80e660:	10800017 	ldw	r2,0(r2)
  80e664:	103ee83a 	callr	r2
  80e668:	e0bfff15 	stw	r2,-4(fp)
  80e66c:	00000306 	br	80e67c <alt_get_errno+0x48>
  80e670:	00802074 	movhi	r2,129
  80e674:	10905004 	addi	r2,r2,16704
  80e678:	e0bfff15 	stw	r2,-4(fp)
  80e67c:	e0bfff17 	ldw	r2,-4(fp)
}
  80e680:	e037883a 	mov	sp,fp
  80e684:	dfc00117 	ldw	ra,4(sp)
  80e688:	df000017 	ldw	fp,0(sp)
  80e68c:	dec00204 	addi	sp,sp,8
  80e690:	f800283a 	ret

0080e694 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80e694:	defffd04 	addi	sp,sp,-12
  80e698:	dfc00215 	stw	ra,8(sp)
  80e69c:	df000115 	stw	fp,4(sp)
  80e6a0:	df000104 	addi	fp,sp,4
  80e6a4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80e6a8:	080ff280 	call	80ff28 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80e6ac:	00800044 	movi	r2,1
  80e6b0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80e6b4:	e037883a 	mov	sp,fp
  80e6b8:	dfc00117 	ldw	ra,4(sp)
  80e6bc:	df000017 	ldw	fp,0(sp)
  80e6c0:	dec00204 	addi	sp,sp,8
  80e6c4:	f800283a 	ret

0080e6c8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80e6c8:	defffe04 	addi	sp,sp,-8
  80e6cc:	dfc00115 	stw	ra,4(sp)
  80e6d0:	df000015 	stw	fp,0(sp)
  80e6d4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80e6d8:	010040b4 	movhi	r4,258
  80e6dc:	21040004 	addi	r4,r4,4096
  80e6e0:	000b883a 	mov	r5,zero
  80e6e4:	01800044 	movi	r6,1
  80e6e8:	01c0fa04 	movi	r7,1000
  80e6ec:	080f2780 	call	80f278 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80e6f0:	01002074 	movhi	r4,129
  80e6f4:	21059504 	addi	r4,r4,5716
  80e6f8:	000b883a 	mov	r5,zero
  80e6fc:	01800404 	movi	r6,16
  80e700:	080e8a40 	call	80e8a4 <altera_avalon_jtag_uart_init>
  80e704:	01002074 	movhi	r4,129
  80e708:	21058b04 	addi	r4,r4,5676
  80e70c:	080e7240 	call	80e724 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
}
  80e710:	e037883a 	mov	sp,fp
  80e714:	dfc00117 	ldw	ra,4(sp)
  80e718:	df000017 	ldw	fp,0(sp)
  80e71c:	dec00204 	addi	sp,sp,8
  80e720:	f800283a 	ret

0080e724 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80e724:	defffd04 	addi	sp,sp,-12
  80e728:	dfc00215 	stw	ra,8(sp)
  80e72c:	df000115 	stw	fp,4(sp)
  80e730:	df000104 	addi	fp,sp,4
  80e734:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80e738:	e13fff17 	ldw	r4,-4(fp)
  80e73c:	01402074 	movhi	r5,129
  80e740:	2949ab04 	addi	r5,r5,9900
  80e744:	080f4780 	call	80f478 <alt_dev_llist_insert>
}
  80e748:	e037883a 	mov	sp,fp
  80e74c:	dfc00117 	ldw	ra,4(sp)
  80e750:	df000017 	ldw	fp,0(sp)
  80e754:	dec00204 	addi	sp,sp,8
  80e758:	f800283a 	ret

0080e75c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80e75c:	defffa04 	addi	sp,sp,-24
  80e760:	dfc00515 	stw	ra,20(sp)
  80e764:	df000415 	stw	fp,16(sp)
  80e768:	df000404 	addi	fp,sp,16
  80e76c:	e13ffd15 	stw	r4,-12(fp)
  80e770:	e17ffe15 	stw	r5,-8(fp)
  80e774:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e778:	e0bffd17 	ldw	r2,-12(fp)
  80e77c:	10800017 	ldw	r2,0(r2)
  80e780:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80e784:	e0bffc17 	ldw	r2,-16(fp)
  80e788:	11000a04 	addi	r4,r2,40
  80e78c:	e0bffd17 	ldw	r2,-12(fp)
  80e790:	11c00217 	ldw	r7,8(r2)
  80e794:	e17ffe17 	ldw	r5,-8(fp)
  80e798:	e1bfff17 	ldw	r6,-4(fp)
  80e79c:	080eda40 	call	80eda4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80e7a0:	e037883a 	mov	sp,fp
  80e7a4:	dfc00117 	ldw	ra,4(sp)
  80e7a8:	df000017 	ldw	fp,0(sp)
  80e7ac:	dec00204 	addi	sp,sp,8
  80e7b0:	f800283a 	ret

0080e7b4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80e7b4:	defffa04 	addi	sp,sp,-24
  80e7b8:	dfc00515 	stw	ra,20(sp)
  80e7bc:	df000415 	stw	fp,16(sp)
  80e7c0:	df000404 	addi	fp,sp,16
  80e7c4:	e13ffd15 	stw	r4,-12(fp)
  80e7c8:	e17ffe15 	stw	r5,-8(fp)
  80e7cc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e7d0:	e0bffd17 	ldw	r2,-12(fp)
  80e7d4:	10800017 	ldw	r2,0(r2)
  80e7d8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80e7dc:	e0bffc17 	ldw	r2,-16(fp)
  80e7e0:	11000a04 	addi	r4,r2,40
  80e7e4:	e0bffd17 	ldw	r2,-12(fp)
  80e7e8:	11c00217 	ldw	r7,8(r2)
  80e7ec:	e17ffe17 	ldw	r5,-8(fp)
  80e7f0:	e1bfff17 	ldw	r6,-4(fp)
  80e7f4:	080efc80 	call	80efc8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80e7f8:	e037883a 	mov	sp,fp
  80e7fc:	dfc00117 	ldw	ra,4(sp)
  80e800:	df000017 	ldw	fp,0(sp)
  80e804:	dec00204 	addi	sp,sp,8
  80e808:	f800283a 	ret

0080e80c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80e80c:	defffc04 	addi	sp,sp,-16
  80e810:	dfc00315 	stw	ra,12(sp)
  80e814:	df000215 	stw	fp,8(sp)
  80e818:	df000204 	addi	fp,sp,8
  80e81c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e820:	e0bfff17 	ldw	r2,-4(fp)
  80e824:	10800017 	ldw	r2,0(r2)
  80e828:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80e82c:	e0bffe17 	ldw	r2,-8(fp)
  80e830:	11000a04 	addi	r4,r2,40
  80e834:	e0bfff17 	ldw	r2,-4(fp)
  80e838:	11400217 	ldw	r5,8(r2)
  80e83c:	080ec3c0 	call	80ec3c <altera_avalon_jtag_uart_close>
}
  80e840:	e037883a 	mov	sp,fp
  80e844:	dfc00117 	ldw	ra,4(sp)
  80e848:	df000017 	ldw	fp,0(sp)
  80e84c:	dec00204 	addi	sp,sp,8
  80e850:	f800283a 	ret

0080e854 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80e854:	defffa04 	addi	sp,sp,-24
  80e858:	dfc00515 	stw	ra,20(sp)
  80e85c:	df000415 	stw	fp,16(sp)
  80e860:	df000404 	addi	fp,sp,16
  80e864:	e13ffd15 	stw	r4,-12(fp)
  80e868:	e17ffe15 	stw	r5,-8(fp)
  80e86c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80e870:	e0bffd17 	ldw	r2,-12(fp)
  80e874:	10800017 	ldw	r2,0(r2)
  80e878:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80e87c:	e0bffc17 	ldw	r2,-16(fp)
  80e880:	11000a04 	addi	r4,r2,40
  80e884:	e17ffe17 	ldw	r5,-8(fp)
  80e888:	e1bfff17 	ldw	r6,-4(fp)
  80e88c:	080ecb00 	call	80ecb0 <altera_avalon_jtag_uart_ioctl>
}
  80e890:	e037883a 	mov	sp,fp
  80e894:	dfc00117 	ldw	ra,4(sp)
  80e898:	df000017 	ldw	fp,0(sp)
  80e89c:	dec00204 	addi	sp,sp,8
  80e8a0:	f800283a 	ret

0080e8a4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e8a4:	defffa04 	addi	sp,sp,-24
  80e8a8:	dfc00515 	stw	ra,20(sp)
  80e8ac:	df000415 	stw	fp,16(sp)
  80e8b0:	df000404 	addi	fp,sp,16
  80e8b4:	e13ffd15 	stw	r4,-12(fp)
  80e8b8:	e17ffe15 	stw	r5,-8(fp)
  80e8bc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e8c0:	e0fffd17 	ldw	r3,-12(fp)
  80e8c4:	00800044 	movi	r2,1
  80e8c8:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e8cc:	e0bffd17 	ldw	r2,-12(fp)
  80e8d0:	10800017 	ldw	r2,0(r2)
  80e8d4:	11000104 	addi	r4,r2,4
  80e8d8:	e0bffd17 	ldw	r2,-12(fp)
  80e8dc:	10800817 	ldw	r2,32(r2)
  80e8e0:	1007883a 	mov	r3,r2
  80e8e4:	2005883a 	mov	r2,r4
  80e8e8:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e8ec:	e13ffe17 	ldw	r4,-8(fp)
  80e8f0:	e17fff17 	ldw	r5,-4(fp)
  80e8f4:	d8000015 	stw	zero,0(sp)
  80e8f8:	01802074 	movhi	r6,129
  80e8fc:	31ba5904 	addi	r6,r6,-5788
  80e900:	e1fffd17 	ldw	r7,-12(fp)
  80e904:	080f6840 	call	80f684 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e908:	e0bffd17 	ldw	r2,-12(fp)
  80e90c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e910:	e0bffd17 	ldw	r2,-12(fp)
  80e914:	11000204 	addi	r4,r2,8
  80e918:	00802074 	movhi	r2,129
  80e91c:	10905504 	addi	r2,r2,16724
  80e920:	10800017 	ldw	r2,0(r2)
  80e924:	100b883a 	mov	r5,r2
  80e928:	01802074 	movhi	r6,129
  80e92c:	31bae304 	addi	r6,r6,-5236
  80e930:	e1fffd17 	ldw	r7,-12(fp)
  80e934:	080f3080 	call	80f308 <alt_alarm_start>
  80e938:	1004403a 	cmpge	r2,r2,zero
  80e93c:	1000041e 	bne	r2,zero,80e950 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e940:	e0fffd17 	ldw	r3,-12(fp)
  80e944:	00a00034 	movhi	r2,32768
  80e948:	10bfffc4 	addi	r2,r2,-1
  80e94c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e950:	e037883a 	mov	sp,fp
  80e954:	dfc00117 	ldw	ra,4(sp)
  80e958:	df000017 	ldw	fp,0(sp)
  80e95c:	dec00204 	addi	sp,sp,8
  80e960:	f800283a 	ret

0080e964 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e964:	defff804 	addi	sp,sp,-32
  80e968:	df000715 	stw	fp,28(sp)
  80e96c:	df000704 	addi	fp,sp,28
  80e970:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e974:	e0bfff17 	ldw	r2,-4(fp)
  80e978:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
  80e97c:	e0bffe17 	ldw	r2,-8(fp)
  80e980:	10800017 	ldw	r2,0(r2)
  80e984:	e0bffd15 	stw	r2,-12(fp)
  80e988:	00000006 	br	80e98c <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e98c:	e0bffd17 	ldw	r2,-12(fp)
  80e990:	10800104 	addi	r2,r2,4
  80e994:	10800037 	ldwio	r2,0(r2)
  80e998:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e99c:	e0bffc17 	ldw	r2,-16(fp)
  80e9a0:	1080c00c 	andi	r2,r2,768
  80e9a4:	1005003a 	cmpeq	r2,r2,zero
  80e9a8:	1000741e 	bne	r2,zero,80eb7c <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e9ac:	e0bffc17 	ldw	r2,-16(fp)
  80e9b0:	1080400c 	andi	r2,r2,256
  80e9b4:	1005003a 	cmpeq	r2,r2,zero
  80e9b8:	1000351e 	bne	r2,zero,80ea90 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e9bc:	00800074 	movhi	r2,1
  80e9c0:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e9c4:	e0bffe17 	ldw	r2,-8(fp)
  80e9c8:	10800a17 	ldw	r2,40(r2)
  80e9cc:	10800044 	addi	r2,r2,1
  80e9d0:	1081ffcc 	andi	r2,r2,2047
  80e9d4:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80e9d8:	e0bffe17 	ldw	r2,-8(fp)
  80e9dc:	10c00b17 	ldw	r3,44(r2)
  80e9e0:	e0bffa17 	ldw	r2,-24(fp)
  80e9e4:	18801626 	beq	r3,r2,80ea40 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e9e8:	e0bffd17 	ldw	r2,-12(fp)
  80e9ec:	10800037 	ldwio	r2,0(r2)
  80e9f0:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e9f4:	e0bffb17 	ldw	r2,-20(fp)
  80e9f8:	10a0000c 	andi	r2,r2,32768
  80e9fc:	1005003a 	cmpeq	r2,r2,zero
  80ea00:	10000f1e 	bne	r2,zero,80ea40 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80ea04:	e0bffe17 	ldw	r2,-8(fp)
  80ea08:	10c00a17 	ldw	r3,40(r2)
  80ea0c:	e0bffb17 	ldw	r2,-20(fp)
  80ea10:	1009883a 	mov	r4,r2
  80ea14:	e0bffe17 	ldw	r2,-8(fp)
  80ea18:	1885883a 	add	r2,r3,r2
  80ea1c:	10800e04 	addi	r2,r2,56
  80ea20:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ea24:	e0bffe17 	ldw	r2,-8(fp)
  80ea28:	10800a17 	ldw	r2,40(r2)
  80ea2c:	10800044 	addi	r2,r2,1
  80ea30:	10c1ffcc 	andi	r3,r2,2047
  80ea34:	e0bffe17 	ldw	r2,-8(fp)
  80ea38:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80ea3c:	003fe106 	br	80e9c4 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80ea40:	e0bffb17 	ldw	r2,-20(fp)
  80ea44:	10bfffec 	andhi	r2,r2,65535
  80ea48:	1005003a 	cmpeq	r2,r2,zero
  80ea4c:	1000101e 	bne	r2,zero,80ea90 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80ea50:	e0bffe17 	ldw	r2,-8(fp)
  80ea54:	10c00817 	ldw	r3,32(r2)
  80ea58:	00bfff84 	movi	r2,-2
  80ea5c:	1886703a 	and	r3,r3,r2
  80ea60:	e0bffe17 	ldw	r2,-8(fp)
  80ea64:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80ea68:	e0bffd17 	ldw	r2,-12(fp)
  80ea6c:	11000104 	addi	r4,r2,4
  80ea70:	e0bffe17 	ldw	r2,-8(fp)
  80ea74:	10800817 	ldw	r2,32(r2)
  80ea78:	1007883a 	mov	r3,r2
  80ea7c:	2005883a 	mov	r2,r4
  80ea80:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80ea84:	e0bffd17 	ldw	r2,-12(fp)
  80ea88:	10800104 	addi	r2,r2,4
  80ea8c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80ea90:	e0bffc17 	ldw	r2,-16(fp)
  80ea94:	1080800c 	andi	r2,r2,512
  80ea98:	1005003a 	cmpeq	r2,r2,zero
  80ea9c:	103fbb1e 	bne	r2,zero,80e98c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80eaa0:	e0bffc17 	ldw	r2,-16(fp)
  80eaa4:	10bfffec 	andhi	r2,r2,65535
  80eaa8:	1004d43a 	srli	r2,r2,16
  80eaac:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80eab0:	00001506 	br	80eb08 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80eab4:	e13ffd17 	ldw	r4,-12(fp)
  80eab8:	e0bffe17 	ldw	r2,-8(fp)
  80eabc:	10c00d17 	ldw	r3,52(r2)
  80eac0:	e0bffe17 	ldw	r2,-8(fp)
  80eac4:	1885883a 	add	r2,r3,r2
  80eac8:	10820e04 	addi	r2,r2,2104
  80eacc:	10800003 	ldbu	r2,0(r2)
  80ead0:	10c03fcc 	andi	r3,r2,255
  80ead4:	18c0201c 	xori	r3,r3,128
  80ead8:	18ffe004 	addi	r3,r3,-128
  80eadc:	2005883a 	mov	r2,r4
  80eae0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80eae4:	e0bffe17 	ldw	r2,-8(fp)
  80eae8:	10800d17 	ldw	r2,52(r2)
  80eaec:	10800044 	addi	r2,r2,1
  80eaf0:	10c1ffcc 	andi	r3,r2,2047
  80eaf4:	e0bffe17 	ldw	r2,-8(fp)
  80eaf8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80eafc:	e0bff917 	ldw	r2,-28(fp)
  80eb00:	10bfffc4 	addi	r2,r2,-1
  80eb04:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80eb08:	e0bff917 	ldw	r2,-28(fp)
  80eb0c:	1005003a 	cmpeq	r2,r2,zero
  80eb10:	1000051e 	bne	r2,zero,80eb28 <altera_avalon_jtag_uart_irq+0x1c4>
  80eb14:	e0bffe17 	ldw	r2,-8(fp)
  80eb18:	10c00d17 	ldw	r3,52(r2)
  80eb1c:	e0bffe17 	ldw	r2,-8(fp)
  80eb20:	10800c17 	ldw	r2,48(r2)
  80eb24:	18bfe31e 	bne	r3,r2,80eab4 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80eb28:	e0bff917 	ldw	r2,-28(fp)
  80eb2c:	1005003a 	cmpeq	r2,r2,zero
  80eb30:	103f961e 	bne	r2,zero,80e98c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80eb34:	e0bffe17 	ldw	r2,-8(fp)
  80eb38:	10c00817 	ldw	r3,32(r2)
  80eb3c:	00bfff44 	movi	r2,-3
  80eb40:	1886703a 	and	r3,r3,r2
  80eb44:	e0bffe17 	ldw	r2,-8(fp)
  80eb48:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80eb4c:	e0bffe17 	ldw	r2,-8(fp)
  80eb50:	10800017 	ldw	r2,0(r2)
  80eb54:	11000104 	addi	r4,r2,4
  80eb58:	e0bffe17 	ldw	r2,-8(fp)
  80eb5c:	10800817 	ldw	r2,32(r2)
  80eb60:	1007883a 	mov	r3,r2
  80eb64:	2005883a 	mov	r2,r4
  80eb68:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80eb6c:	e0bffd17 	ldw	r2,-12(fp)
  80eb70:	10800104 	addi	r2,r2,4
  80eb74:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80eb78:	003f8406 	br	80e98c <altera_avalon_jtag_uart_irq+0x28>
}
  80eb7c:	e037883a 	mov	sp,fp
  80eb80:	df000017 	ldw	fp,0(sp)
  80eb84:	dec00104 	addi	sp,sp,4
  80eb88:	f800283a 	ret

0080eb8c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80eb8c:	defffc04 	addi	sp,sp,-16
  80eb90:	df000315 	stw	fp,12(sp)
  80eb94:	df000304 	addi	fp,sp,12
  80eb98:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80eb9c:	e0bfff17 	ldw	r2,-4(fp)
  80eba0:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80eba4:	e0bffe17 	ldw	r2,-8(fp)
  80eba8:	10800017 	ldw	r2,0(r2)
  80ebac:	10800104 	addi	r2,r2,4
  80ebb0:	10800037 	ldwio	r2,0(r2)
  80ebb4:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80ebb8:	e0bffd17 	ldw	r2,-12(fp)
  80ebbc:	1081000c 	andi	r2,r2,1024
  80ebc0:	1005003a 	cmpeq	r2,r2,zero
  80ebc4:	10000c1e 	bne	r2,zero,80ebf8 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80ebc8:	e0bffe17 	ldw	r2,-8(fp)
  80ebcc:	10800017 	ldw	r2,0(r2)
  80ebd0:	11000104 	addi	r4,r2,4
  80ebd4:	e0bffe17 	ldw	r2,-8(fp)
  80ebd8:	10800817 	ldw	r2,32(r2)
  80ebdc:	10810014 	ori	r2,r2,1024
  80ebe0:	1007883a 	mov	r3,r2
  80ebe4:	2005883a 	mov	r2,r4
  80ebe8:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
  80ebec:	e0bffe17 	ldw	r2,-8(fp)
  80ebf0:	10000915 	stw	zero,36(r2)
  80ebf4:	00000a06 	br	80ec20 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80ebf8:	e0bffe17 	ldw	r2,-8(fp)
  80ebfc:	10c00917 	ldw	r3,36(r2)
  80ec00:	00a00034 	movhi	r2,32768
  80ec04:	10bfff04 	addi	r2,r2,-4
  80ec08:	10c00536 	bltu	r2,r3,80ec20 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
  80ec0c:	e0bffe17 	ldw	r2,-8(fp)
  80ec10:	10800917 	ldw	r2,36(r2)
  80ec14:	10c00044 	addi	r3,r2,1
  80ec18:	e0bffe17 	ldw	r2,-8(fp)
  80ec1c:	10c00915 	stw	r3,36(r2)
  80ec20:	00802074 	movhi	r2,129
  80ec24:	10905504 	addi	r2,r2,16724
  80ec28:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80ec2c:	e037883a 	mov	sp,fp
  80ec30:	df000017 	ldw	fp,0(sp)
  80ec34:	dec00104 	addi	sp,sp,4
  80ec38:	f800283a 	ret

0080ec3c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80ec3c:	defffc04 	addi	sp,sp,-16
  80ec40:	df000315 	stw	fp,12(sp)
  80ec44:	df000304 	addi	fp,sp,12
  80ec48:	e13ffd15 	stw	r4,-12(fp)
  80ec4c:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80ec50:	00000706 	br	80ec70 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
  80ec54:	e0bffe17 	ldw	r2,-8(fp)
  80ec58:	1090000c 	andi	r2,r2,16384
  80ec5c:	1005003a 	cmpeq	r2,r2,zero
  80ec60:	1000031e 	bne	r2,zero,80ec70 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
  80ec64:	00bffd44 	movi	r2,-11
  80ec68:	e0bfff15 	stw	r2,-4(fp)
  80ec6c:	00000b06 	br	80ec9c <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80ec70:	e0bffd17 	ldw	r2,-12(fp)
  80ec74:	10c00d17 	ldw	r3,52(r2)
  80ec78:	e0bffd17 	ldw	r2,-12(fp)
  80ec7c:	10800c17 	ldw	r2,48(r2)
  80ec80:	18800526 	beq	r3,r2,80ec98 <altera_avalon_jtag_uart_close+0x5c>
  80ec84:	e0bffd17 	ldw	r2,-12(fp)
  80ec88:	10c00917 	ldw	r3,36(r2)
  80ec8c:	e0bffd17 	ldw	r2,-12(fp)
  80ec90:	10800117 	ldw	r2,4(r2)
  80ec94:	18bfef36 	bltu	r3,r2,80ec54 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80ec98:	e03fff15 	stw	zero,-4(fp)
  80ec9c:	e0bfff17 	ldw	r2,-4(fp)
}
  80eca0:	e037883a 	mov	sp,fp
  80eca4:	df000017 	ldw	fp,0(sp)
  80eca8:	dec00104 	addi	sp,sp,4
  80ecac:	f800283a 	ret

0080ecb0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80ecb0:	defff804 	addi	sp,sp,-32
  80ecb4:	df000715 	stw	fp,28(sp)
  80ecb8:	df000704 	addi	fp,sp,28
  80ecbc:	e13ffb15 	stw	r4,-20(fp)
  80ecc0:	e17ffc15 	stw	r5,-16(fp)
  80ecc4:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
  80ecc8:	00bff9c4 	movi	r2,-25
  80eccc:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
  80ecd0:	e0bffc17 	ldw	r2,-16(fp)
  80ecd4:	e0bfff15 	stw	r2,-4(fp)
  80ecd8:	e0ffff17 	ldw	r3,-4(fp)
  80ecdc:	189a8060 	cmpeqi	r2,r3,27137
  80ece0:	1000041e 	bne	r2,zero,80ecf4 <altera_avalon_jtag_uart_ioctl+0x44>
  80ece4:	e0ffff17 	ldw	r3,-4(fp)
  80ece8:	189a80a0 	cmpeqi	r2,r3,27138
  80ecec:	10001b1e 	bne	r2,zero,80ed5c <altera_avalon_jtag_uart_ioctl+0xac>
  80ecf0:	00002706 	br	80ed90 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80ecf4:	e0bffb17 	ldw	r2,-20(fp)
  80ecf8:	10c00117 	ldw	r3,4(r2)
  80ecfc:	00a00034 	movhi	r2,32768
  80ed00:	10bfffc4 	addi	r2,r2,-1
  80ed04:	18802226 	beq	r3,r2,80ed90 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
  80ed08:	e0bffd17 	ldw	r2,-12(fp)
  80ed0c:	10800017 	ldw	r2,0(r2)
  80ed10:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80ed14:	e0bff917 	ldw	r2,-28(fp)
  80ed18:	10800090 	cmplti	r2,r2,2
  80ed1c:	1000071e 	bne	r2,zero,80ed3c <altera_avalon_jtag_uart_ioctl+0x8c>
  80ed20:	e0fff917 	ldw	r3,-28(fp)
  80ed24:	00a00034 	movhi	r2,32768
  80ed28:	10bfffc4 	addi	r2,r2,-1
  80ed2c:	18800326 	beq	r3,r2,80ed3c <altera_avalon_jtag_uart_ioctl+0x8c>
  80ed30:	e0bff917 	ldw	r2,-28(fp)
  80ed34:	e0bffe15 	stw	r2,-8(fp)
  80ed38:	00000306 	br	80ed48 <altera_avalon_jtag_uart_ioctl+0x98>
  80ed3c:	00e00034 	movhi	r3,32768
  80ed40:	18ffff84 	addi	r3,r3,-2
  80ed44:	e0fffe15 	stw	r3,-8(fp)
  80ed48:	e0bffb17 	ldw	r2,-20(fp)
  80ed4c:	e0fffe17 	ldw	r3,-8(fp)
  80ed50:	10c00115 	stw	r3,4(r2)
      rc = 0;
  80ed54:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
  80ed58:	00000d06 	br	80ed90 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80ed5c:	e0bffb17 	ldw	r2,-20(fp)
  80ed60:	10c00117 	ldw	r3,4(r2)
  80ed64:	00a00034 	movhi	r2,32768
  80ed68:	10bfffc4 	addi	r2,r2,-1
  80ed6c:	18800826 	beq	r3,r2,80ed90 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80ed70:	e13ffd17 	ldw	r4,-12(fp)
  80ed74:	e0bffb17 	ldw	r2,-20(fp)
  80ed78:	10c00917 	ldw	r3,36(r2)
  80ed7c:	e0bffb17 	ldw	r2,-20(fp)
  80ed80:	10800117 	ldw	r2,4(r2)
  80ed84:	1885803a 	cmpltu	r2,r3,r2
  80ed88:	20800015 	stw	r2,0(r4)
      rc = 0;
  80ed8c:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
  80ed90:	e0bffa17 	ldw	r2,-24(fp)
}
  80ed94:	e037883a 	mov	sp,fp
  80ed98:	df000017 	ldw	fp,0(sp)
  80ed9c:	dec00104 	addi	sp,sp,4
  80eda0:	f800283a 	ret

0080eda4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80eda4:	defff204 	addi	sp,sp,-56
  80eda8:	dfc00d15 	stw	ra,52(sp)
  80edac:	df000c15 	stw	fp,48(sp)
  80edb0:	df000c04 	addi	fp,sp,48
  80edb4:	e13ffb15 	stw	r4,-20(fp)
  80edb8:	e17ffc15 	stw	r5,-16(fp)
  80edbc:	e1bffd15 	stw	r6,-12(fp)
  80edc0:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
  80edc4:	e0bffc17 	ldw	r2,-16(fp)
  80edc8:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80edcc:	00004806 	br	80eef0 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80edd0:	e0bffb17 	ldw	r2,-20(fp)
  80edd4:	10800a17 	ldw	r2,40(r2)
  80edd8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80eddc:	e0bffb17 	ldw	r2,-20(fp)
  80ede0:	10800b17 	ldw	r2,44(r2)
  80ede4:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
  80ede8:	e0fff717 	ldw	r3,-36(fp)
  80edec:	e0bff617 	ldw	r2,-40(fp)
  80edf0:	18800536 	bltu	r3,r2,80ee08 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80edf4:	e0bff717 	ldw	r2,-36(fp)
  80edf8:	e0fff617 	ldw	r3,-40(fp)
  80edfc:	10c5c83a 	sub	r2,r2,r3
  80ee00:	e0bff815 	stw	r2,-32(fp)
  80ee04:	00000406 	br	80ee18 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80ee08:	00820004 	movi	r2,2048
  80ee0c:	e0fff617 	ldw	r3,-40(fp)
  80ee10:	10c5c83a 	sub	r2,r2,r3
  80ee14:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
  80ee18:	e0bff817 	ldw	r2,-32(fp)
  80ee1c:	1005003a 	cmpeq	r2,r2,zero
  80ee20:	10001f1e 	bne	r2,zero,80eea0 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
  80ee24:	e0fffd17 	ldw	r3,-12(fp)
  80ee28:	e0bff817 	ldw	r2,-32(fp)
  80ee2c:	1880022e 	bgeu	r3,r2,80ee38 <altera_avalon_jtag_uart_read+0x94>
        n = space;
  80ee30:	e0bffd17 	ldw	r2,-12(fp)
  80ee34:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80ee38:	e0bffb17 	ldw	r2,-20(fp)
  80ee3c:	10c00e04 	addi	r3,r2,56
  80ee40:	e0bff617 	ldw	r2,-40(fp)
  80ee44:	1887883a 	add	r3,r3,r2
  80ee48:	e0bffa17 	ldw	r2,-24(fp)
  80ee4c:	1009883a 	mov	r4,r2
  80ee50:	180b883a 	mov	r5,r3
  80ee54:	e1bff817 	ldw	r6,-32(fp)
  80ee58:	080a8e00 	call	80a8e0 <memcpy>
      ptr   += n;
  80ee5c:	e0fff817 	ldw	r3,-32(fp)
  80ee60:	e0bffa17 	ldw	r2,-24(fp)
  80ee64:	10c5883a 	add	r2,r2,r3
  80ee68:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
  80ee6c:	e0fffd17 	ldw	r3,-12(fp)
  80ee70:	e0bff817 	ldw	r2,-32(fp)
  80ee74:	1885c83a 	sub	r2,r3,r2
  80ee78:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ee7c:	e0fff617 	ldw	r3,-40(fp)
  80ee80:	e0bff817 	ldw	r2,-32(fp)
  80ee84:	1885883a 	add	r2,r3,r2
  80ee88:	10c1ffcc 	andi	r3,r2,2047
  80ee8c:	e0bffb17 	ldw	r2,-20(fp)
  80ee90:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80ee94:	e0bffd17 	ldw	r2,-12(fp)
  80ee98:	10800048 	cmpgei	r2,r2,1
  80ee9c:	103fcc1e 	bne	r2,zero,80edd0 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
  80eea0:	e0fffa17 	ldw	r3,-24(fp)
  80eea4:	e0bffc17 	ldw	r2,-16(fp)
  80eea8:	1880141e 	bne	r3,r2,80eefc <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80eeac:	e0bffe17 	ldw	r2,-8(fp)
  80eeb0:	1090000c 	andi	r2,r2,16384
  80eeb4:	1004c03a 	cmpne	r2,r2,zero
  80eeb8:	1000101e 	bne	r2,zero,80eefc <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80eebc:	e0bffb17 	ldw	r2,-20(fp)
  80eec0:	10c00a17 	ldw	r3,40(r2)
  80eec4:	e0bff717 	ldw	r2,-36(fp)
  80eec8:	1880051e 	bne	r3,r2,80eee0 <altera_avalon_jtag_uart_read+0x13c>
  80eecc:	e0bffb17 	ldw	r2,-20(fp)
  80eed0:	10c00917 	ldw	r3,36(r2)
  80eed4:	e0bffb17 	ldw	r2,-20(fp)
  80eed8:	10800117 	ldw	r2,4(r2)
  80eedc:	18bff736 	bltu	r3,r2,80eebc <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80eee0:	e0bffb17 	ldw	r2,-20(fp)
  80eee4:	10c00a17 	ldw	r3,40(r2)
  80eee8:	e0bff717 	ldw	r2,-36(fp)
  80eeec:	18800326 	beq	r3,r2,80eefc <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80eef0:	e0bffd17 	ldw	r2,-12(fp)
  80eef4:	10800048 	cmpgei	r2,r2,1
  80eef8:	103fb51e 	bne	r2,zero,80edd0 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80eefc:	e0fffa17 	ldw	r3,-24(fp)
  80ef00:	e0bffc17 	ldw	r2,-16(fp)
  80ef04:	18801926 	beq	r3,r2,80ef6c <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ef08:	0005303a 	rdctl	r2,status
  80ef0c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ef10:	e0fff517 	ldw	r3,-44(fp)
  80ef14:	00bfff84 	movi	r2,-2
  80ef18:	1884703a 	and	r2,r3,r2
  80ef1c:	1001703a 	wrctl	status,r2
  
  return context;
  80ef20:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80ef24:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80ef28:	e0bffb17 	ldw	r2,-20(fp)
  80ef2c:	10800817 	ldw	r2,32(r2)
  80ef30:	10c00054 	ori	r3,r2,1
  80ef34:	e0bffb17 	ldw	r2,-20(fp)
  80ef38:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80ef3c:	e0bffb17 	ldw	r2,-20(fp)
  80ef40:	10800017 	ldw	r2,0(r2)
  80ef44:	11000104 	addi	r4,r2,4
  80ef48:	e0bffb17 	ldw	r2,-20(fp)
  80ef4c:	10800817 	ldw	r2,32(r2)
  80ef50:	1007883a 	mov	r3,r2
  80ef54:	2005883a 	mov	r2,r4
  80ef58:	10c00035 	stwio	r3,0(r2)
  80ef5c:	e0bff917 	ldw	r2,-28(fp)
  80ef60:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ef64:	e0bff417 	ldw	r2,-48(fp)
  80ef68:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80ef6c:	e0fffa17 	ldw	r3,-24(fp)
  80ef70:	e0bffc17 	ldw	r2,-16(fp)
  80ef74:	18800526 	beq	r3,r2,80ef8c <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
  80ef78:	e0fffa17 	ldw	r3,-24(fp)
  80ef7c:	e0bffc17 	ldw	r2,-16(fp)
  80ef80:	1887c83a 	sub	r3,r3,r2
  80ef84:	e0ffff15 	stw	r3,-4(fp)
  80ef88:	00000906 	br	80efb0 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80ef8c:	e0bffe17 	ldw	r2,-8(fp)
  80ef90:	1090000c 	andi	r2,r2,16384
  80ef94:	1005003a 	cmpeq	r2,r2,zero
  80ef98:	1000031e 	bne	r2,zero,80efa8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80ef9c:	00bffd44 	movi	r2,-11
  80efa0:	e0bfff15 	stw	r2,-4(fp)
  80efa4:	00000206 	br	80efb0 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80efa8:	00bffec4 	movi	r2,-5
  80efac:	e0bfff15 	stw	r2,-4(fp)
  80efb0:	e0bfff17 	ldw	r2,-4(fp)
}
  80efb4:	e037883a 	mov	sp,fp
  80efb8:	dfc00117 	ldw	ra,4(sp)
  80efbc:	df000017 	ldw	fp,0(sp)
  80efc0:	dec00204 	addi	sp,sp,8
  80efc4:	f800283a 	ret

0080efc8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80efc8:	defff204 	addi	sp,sp,-56
  80efcc:	dfc00d15 	stw	ra,52(sp)
  80efd0:	df000c15 	stw	fp,48(sp)
  80efd4:	df000c04 	addi	fp,sp,48
  80efd8:	e13ffb15 	stw	r4,-20(fp)
  80efdc:	e17ffc15 	stw	r5,-16(fp)
  80efe0:	e1bffd15 	stw	r6,-12(fp)
  80efe4:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80efe8:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80efec:	e0bffc17 	ldw	r2,-16(fp)
  80eff0:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80eff4:	00003a06 	br	80f0e0 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80eff8:	e0bffb17 	ldw	r2,-20(fp)
  80effc:	10800c17 	ldw	r2,48(r2)
  80f000:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
  80f004:	e0bffb17 	ldw	r2,-20(fp)
  80f008:	10800d17 	ldw	r2,52(r2)
  80f00c:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
  80f010:	e0fffa17 	ldw	r3,-24(fp)
  80f014:	e0bff917 	ldw	r2,-28(fp)
  80f018:	1880062e 	bgeu	r3,r2,80f034 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f01c:	e0fff917 	ldw	r3,-28(fp)
  80f020:	e0bffa17 	ldw	r2,-24(fp)
  80f024:	1885c83a 	sub	r2,r3,r2
  80f028:	10bfffc4 	addi	r2,r2,-1
  80f02c:	e0bff815 	stw	r2,-32(fp)
  80f030:	00000c06 	br	80f064 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
  80f034:	e0bff917 	ldw	r2,-28(fp)
  80f038:	1005003a 	cmpeq	r2,r2,zero
  80f03c:	1000051e 	bne	r2,zero,80f054 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80f040:	00820004 	movi	r2,2048
  80f044:	e0fffa17 	ldw	r3,-24(fp)
  80f048:	10c5c83a 	sub	r2,r2,r3
  80f04c:	e0bff815 	stw	r2,-32(fp)
  80f050:	00000406 	br	80f064 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80f054:	0081ffc4 	movi	r2,2047
  80f058:	e0fffa17 	ldw	r3,-24(fp)
  80f05c:	10c5c83a 	sub	r2,r2,r3
  80f060:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
  80f064:	e0bff817 	ldw	r2,-32(fp)
  80f068:	1005003a 	cmpeq	r2,r2,zero
  80f06c:	10001f1e 	bne	r2,zero,80f0ec <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
  80f070:	e0fffd17 	ldw	r3,-12(fp)
  80f074:	e0bff817 	ldw	r2,-32(fp)
  80f078:	1880022e 	bgeu	r3,r2,80f084 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
  80f07c:	e0bffd17 	ldw	r2,-12(fp)
  80f080:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80f084:	e0bffb17 	ldw	r2,-20(fp)
  80f088:	10c20e04 	addi	r3,r2,2104
  80f08c:	e0bffa17 	ldw	r2,-24(fp)
  80f090:	1885883a 	add	r2,r3,r2
  80f094:	e0fffc17 	ldw	r3,-16(fp)
  80f098:	1009883a 	mov	r4,r2
  80f09c:	180b883a 	mov	r5,r3
  80f0a0:	e1bff817 	ldw	r6,-32(fp)
  80f0a4:	080a8e00 	call	80a8e0 <memcpy>
      ptr   += n;
  80f0a8:	e0fff817 	ldw	r3,-32(fp)
  80f0ac:	e0bffc17 	ldw	r2,-16(fp)
  80f0b0:	10c5883a 	add	r2,r2,r3
  80f0b4:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
  80f0b8:	e0fffd17 	ldw	r3,-12(fp)
  80f0bc:	e0bff817 	ldw	r2,-32(fp)
  80f0c0:	1885c83a 	sub	r2,r3,r2
  80f0c4:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f0c8:	e0fffa17 	ldw	r3,-24(fp)
  80f0cc:	e0bff817 	ldw	r2,-32(fp)
  80f0d0:	1885883a 	add	r2,r3,r2
  80f0d4:	10c1ffcc 	andi	r3,r2,2047
  80f0d8:	e0bffb17 	ldw	r2,-20(fp)
  80f0dc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f0e0:	e0bffd17 	ldw	r2,-12(fp)
  80f0e4:	10800048 	cmpgei	r2,r2,1
  80f0e8:	103fc31e 	bne	r2,zero,80eff8 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f0ec:	0005303a 	rdctl	r2,status
  80f0f0:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f0f4:	e0fff517 	ldw	r3,-44(fp)
  80f0f8:	00bfff84 	movi	r2,-2
  80f0fc:	1884703a 	and	r2,r3,r2
  80f100:	1001703a 	wrctl	status,r2
  
  return context;
  80f104:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80f108:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f10c:	e0bffb17 	ldw	r2,-20(fp)
  80f110:	10800817 	ldw	r2,32(r2)
  80f114:	10c00094 	ori	r3,r2,2
  80f118:	e0bffb17 	ldw	r2,-20(fp)
  80f11c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f120:	e0bffb17 	ldw	r2,-20(fp)
  80f124:	10800017 	ldw	r2,0(r2)
  80f128:	11000104 	addi	r4,r2,4
  80f12c:	e0bffb17 	ldw	r2,-20(fp)
  80f130:	10800817 	ldw	r2,32(r2)
  80f134:	1007883a 	mov	r3,r2
  80f138:	2005883a 	mov	r2,r4
  80f13c:	10c00035 	stwio	r3,0(r2)
  80f140:	e0bff717 	ldw	r2,-36(fp)
  80f144:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f148:	e0bff417 	ldw	r2,-48(fp)
  80f14c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80f150:	e0bffd17 	ldw	r2,-12(fp)
  80f154:	10800050 	cmplti	r2,r2,1
  80f158:	1000111e 	bne	r2,zero,80f1a0 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
  80f15c:	e0bffe17 	ldw	r2,-8(fp)
  80f160:	1090000c 	andi	r2,r2,16384
  80f164:	1004c03a 	cmpne	r2,r2,zero
  80f168:	1000101e 	bne	r2,zero,80f1ac <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80f16c:	e0bffb17 	ldw	r2,-20(fp)
  80f170:	10c00d17 	ldw	r3,52(r2)
  80f174:	e0bff917 	ldw	r2,-28(fp)
  80f178:	1880051e 	bne	r3,r2,80f190 <altera_avalon_jtag_uart_write+0x1c8>
  80f17c:	e0bffb17 	ldw	r2,-20(fp)
  80f180:	10c00917 	ldw	r3,36(r2)
  80f184:	e0bffb17 	ldw	r2,-20(fp)
  80f188:	10800117 	ldw	r2,4(r2)
  80f18c:	18bff736 	bltu	r3,r2,80f16c <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
  80f190:	e0bffb17 	ldw	r2,-20(fp)
  80f194:	10c00d17 	ldw	r3,52(r2)
  80f198:	e0bff917 	ldw	r2,-28(fp)
  80f19c:	18800326 	beq	r3,r2,80f1ac <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
  80f1a0:	e0bffd17 	ldw	r2,-12(fp)
  80f1a4:	10800048 	cmpgei	r2,r2,1
  80f1a8:	103fcd1e 	bne	r2,zero,80f0e0 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80f1ac:	e0fffc17 	ldw	r3,-16(fp)
  80f1b0:	e0bff617 	ldw	r2,-40(fp)
  80f1b4:	18800526 	beq	r3,r2,80f1cc <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
  80f1b8:	e0fffc17 	ldw	r3,-16(fp)
  80f1bc:	e0bff617 	ldw	r2,-40(fp)
  80f1c0:	1887c83a 	sub	r3,r3,r2
  80f1c4:	e0ffff15 	stw	r3,-4(fp)
  80f1c8:	00000906 	br	80f1f0 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
  80f1cc:	e0bffe17 	ldw	r2,-8(fp)
  80f1d0:	1090000c 	andi	r2,r2,16384
  80f1d4:	1005003a 	cmpeq	r2,r2,zero
  80f1d8:	1000031e 	bne	r2,zero,80f1e8 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
  80f1dc:	00bffd44 	movi	r2,-11
  80f1e0:	e0bfff15 	stw	r2,-4(fp)
  80f1e4:	00000206 	br	80f1f0 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80f1e8:	00bffec4 	movi	r2,-5
  80f1ec:	e0bfff15 	stw	r2,-4(fp)
  80f1f0:	e0bfff17 	ldw	r2,-4(fp)
}
  80f1f4:	e037883a 	mov	sp,fp
  80f1f8:	dfc00117 	ldw	ra,4(sp)
  80f1fc:	df000017 	ldw	fp,0(sp)
  80f200:	dec00204 	addi	sp,sp,8
  80f204:	f800283a 	ret

0080f208 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80f208:	defffa04 	addi	sp,sp,-24
  80f20c:	dfc00515 	stw	ra,20(sp)
  80f210:	df000415 	stw	fp,16(sp)
  80f214:	df000404 	addi	fp,sp,16
  80f218:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80f21c:	e0bfff17 	ldw	r2,-4(fp)
  80f220:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80f224:	e0bfff17 	ldw	r2,-4(fp)
  80f228:	10800104 	addi	r2,r2,4
  80f22c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f230:	0005303a 	rdctl	r2,status
  80f234:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f238:	e0fffd17 	ldw	r3,-12(fp)
  80f23c:	00bfff84 	movi	r2,-2
  80f240:	1884703a 	and	r2,r3,r2
  80f244:	1001703a 	wrctl	status,r2
  
  return context;
  80f248:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80f24c:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
  80f250:	080fe1c0 	call	80fe1c <alt_tick>
  80f254:	e0bffe17 	ldw	r2,-8(fp)
  80f258:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f25c:	e0bffc17 	ldw	r2,-16(fp)
  80f260:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80f264:	e037883a 	mov	sp,fp
  80f268:	dfc00117 	ldw	ra,4(sp)
  80f26c:	df000017 	ldw	fp,0(sp)
  80f270:	dec00204 	addi	sp,sp,8
  80f274:	f800283a 	ret

0080f278 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80f278:	defff804 	addi	sp,sp,-32
  80f27c:	dfc00715 	stw	ra,28(sp)
  80f280:	df000615 	stw	fp,24(sp)
  80f284:	df000604 	addi	fp,sp,24
  80f288:	e13ffc15 	stw	r4,-16(fp)
  80f28c:	e17ffd15 	stw	r5,-12(fp)
  80f290:	e1bffe15 	stw	r6,-8(fp)
  80f294:	e1ffff15 	stw	r7,-4(fp)
  80f298:	e0bfff17 	ldw	r2,-4(fp)
  80f29c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80f2a0:	00802074 	movhi	r2,129
  80f2a4:	10905504 	addi	r2,r2,16724
  80f2a8:	10800017 	ldw	r2,0(r2)
  80f2ac:	1004c03a 	cmpne	r2,r2,zero
  80f2b0:	1000041e 	bne	r2,zero,80f2c4 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
  80f2b4:	00c02074 	movhi	r3,129
  80f2b8:	18d05504 	addi	r3,r3,16724
  80f2bc:	e0bffb17 	ldw	r2,-20(fp)
  80f2c0:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80f2c4:	e0bffc17 	ldw	r2,-16(fp)
  80f2c8:	10800104 	addi	r2,r2,4
  80f2cc:	1007883a 	mov	r3,r2
  80f2d0:	008001c4 	movi	r2,7
  80f2d4:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80f2d8:	d8000015 	stw	zero,0(sp)
  80f2dc:	e13ffd17 	ldw	r4,-12(fp)
  80f2e0:	e17ffe17 	ldw	r5,-8(fp)
  80f2e4:	01802074 	movhi	r6,129
  80f2e8:	31bc8204 	addi	r6,r6,-3576
  80f2ec:	e1fffc17 	ldw	r7,-16(fp)
  80f2f0:	080f6840 	call	80f684 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80f2f4:	e037883a 	mov	sp,fp
  80f2f8:	dfc00117 	ldw	ra,4(sp)
  80f2fc:	df000017 	ldw	fp,0(sp)
  80f300:	dec00204 	addi	sp,sp,8
  80f304:	f800283a 	ret

0080f308 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80f308:	defff404 	addi	sp,sp,-48
  80f30c:	df000b15 	stw	fp,44(sp)
  80f310:	df000b04 	addi	fp,sp,44
  80f314:	e13ffb15 	stw	r4,-20(fp)
  80f318:	e17ffc15 	stw	r5,-16(fp)
  80f31c:	e1bffd15 	stw	r6,-12(fp)
  80f320:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80f324:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80f328:	00802074 	movhi	r2,129
  80f32c:	10905504 	addi	r2,r2,16724
  80f330:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  80f334:	1005003a 	cmpeq	r2,r2,zero
  80f338:	1000411e 	bne	r2,zero,80f440 <alt_alarm_start+0x138>
  {
    if (alarm)
  80f33c:	e0bffb17 	ldw	r2,-20(fp)
  80f340:	1005003a 	cmpeq	r2,r2,zero
  80f344:	10003b1e 	bne	r2,zero,80f434 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
  80f348:	e0fffb17 	ldw	r3,-20(fp)
  80f34c:	e0bffd17 	ldw	r2,-12(fp)
  80f350:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
  80f354:	e0fffb17 	ldw	r3,-20(fp)
  80f358:	e0bffe17 	ldw	r2,-8(fp)
  80f35c:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f360:	0005303a 	rdctl	r2,status
  80f364:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f368:	e0fff817 	ldw	r3,-32(fp)
  80f36c:	00bfff84 	movi	r2,-2
  80f370:	1884703a 	and	r2,r3,r2
  80f374:	1001703a 	wrctl	status,r2
  
  return context;
  80f378:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  80f37c:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80f380:	00802074 	movhi	r2,129
  80f384:	10905604 	addi	r2,r2,16728
  80f388:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  80f38c:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80f390:	e0fffc17 	ldw	r3,-16(fp)
  80f394:	e0bff917 	ldw	r2,-28(fp)
  80f398:	1885883a 	add	r2,r3,r2
  80f39c:	10c00044 	addi	r3,r2,1
  80f3a0:	e0bffb17 	ldw	r2,-20(fp)
  80f3a4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80f3a8:	e0bffb17 	ldw	r2,-20(fp)
  80f3ac:	10c00217 	ldw	r3,8(r2)
  80f3b0:	e0bff917 	ldw	r2,-28(fp)
  80f3b4:	1880042e 	bgeu	r3,r2,80f3c8 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
  80f3b8:	e0fffb17 	ldw	r3,-20(fp)
  80f3bc:	00800044 	movi	r2,1
  80f3c0:	18800405 	stb	r2,16(r3)
  80f3c4:	00000206 	br	80f3d0 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
  80f3c8:	e0bffb17 	ldw	r2,-20(fp)
  80f3cc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80f3d0:	e0fffb17 	ldw	r3,-20(fp)
  80f3d4:	00802074 	movhi	r2,129
  80f3d8:	1089b104 	addi	r2,r2,9924
  80f3dc:	e0bff615 	stw	r2,-40(fp)
  80f3e0:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80f3e4:	e0fff717 	ldw	r3,-36(fp)
  80f3e8:	e0bff617 	ldw	r2,-40(fp)
  80f3ec:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
  80f3f0:	e0bff617 	ldw	r2,-40(fp)
  80f3f4:	10c00017 	ldw	r3,0(r2)
  80f3f8:	e0bff717 	ldw	r2,-36(fp)
  80f3fc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80f400:	e0bff617 	ldw	r2,-40(fp)
  80f404:	10c00017 	ldw	r3,0(r2)
  80f408:	e0bff717 	ldw	r2,-36(fp)
  80f40c:	18800115 	stw	r2,4(r3)
  list->next           = entry;
  80f410:	e0fff617 	ldw	r3,-40(fp)
  80f414:	e0bff717 	ldw	r2,-36(fp)
  80f418:	18800015 	stw	r2,0(r3)
  80f41c:	e0bffa17 	ldw	r2,-24(fp)
  80f420:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f424:	e0bff517 	ldw	r2,-44(fp)
  80f428:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80f42c:	e03fff15 	stw	zero,-4(fp)
  80f430:	00000506 	br	80f448 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
  80f434:	00bffa84 	movi	r2,-22
  80f438:	e0bfff15 	stw	r2,-4(fp)
  80f43c:	00000206 	br	80f448 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
  80f440:	00bfde84 	movi	r2,-134
  80f444:	e0bfff15 	stw	r2,-4(fp)
  80f448:	e0bfff17 	ldw	r2,-4(fp)
  }
}
  80f44c:	e037883a 	mov	sp,fp
  80f450:	df000017 	ldw	fp,0(sp)
  80f454:	dec00104 	addi	sp,sp,4
  80f458:	f800283a 	ret

0080f45c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80f45c:	deffff04 	addi	sp,sp,-4
  80f460:	df000015 	stw	fp,0(sp)
  80f464:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80f468:	e037883a 	mov	sp,fp
  80f46c:	df000017 	ldw	fp,0(sp)
  80f470:	dec00104 	addi	sp,sp,4
  80f474:	f800283a 	ret

0080f478 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80f478:	defff904 	addi	sp,sp,-28
  80f47c:	dfc00615 	stw	ra,24(sp)
  80f480:	df000515 	stw	fp,20(sp)
  80f484:	df000504 	addi	fp,sp,20
  80f488:	e13ffd15 	stw	r4,-12(fp)
  80f48c:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80f490:	e0bffd17 	ldw	r2,-12(fp)
  80f494:	1005003a 	cmpeq	r2,r2,zero
  80f498:	1000041e 	bne	r2,zero,80f4ac <alt_dev_llist_insert+0x34>
  80f49c:	e0bffd17 	ldw	r2,-12(fp)
  80f4a0:	10800217 	ldw	r2,8(r2)
  80f4a4:	1004c03a 	cmpne	r2,r2,zero
  80f4a8:	1000071e 	bne	r2,zero,80f4c8 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
  80f4ac:	080f52c0 	call	80f52c <alt_get_errno>
  80f4b0:	1007883a 	mov	r3,r2
  80f4b4:	00800584 	movi	r2,22
  80f4b8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80f4bc:	00bffa84 	movi	r2,-22
  80f4c0:	e0bfff15 	stw	r2,-4(fp)
  80f4c4:	00001306 	br	80f514 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80f4c8:	e0fffd17 	ldw	r3,-12(fp)
  80f4cc:	e0bffe17 	ldw	r2,-8(fp)
  80f4d0:	e0bffb15 	stw	r2,-20(fp)
  80f4d4:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80f4d8:	e0fffc17 	ldw	r3,-16(fp)
  80f4dc:	e0bffb17 	ldw	r2,-20(fp)
  80f4e0:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
  80f4e4:	e0bffb17 	ldw	r2,-20(fp)
  80f4e8:	10c00017 	ldw	r3,0(r2)
  80f4ec:	e0bffc17 	ldw	r2,-16(fp)
  80f4f0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80f4f4:	e0bffb17 	ldw	r2,-20(fp)
  80f4f8:	10c00017 	ldw	r3,0(r2)
  80f4fc:	e0bffc17 	ldw	r2,-16(fp)
  80f500:	18800115 	stw	r2,4(r3)
  list->next           = entry;
  80f504:	e0fffb17 	ldw	r3,-20(fp)
  80f508:	e0bffc17 	ldw	r2,-16(fp)
  80f50c:	18800015 	stw	r2,0(r3)

  return 0;  
  80f510:	e03fff15 	stw	zero,-4(fp)
  80f514:	e0bfff17 	ldw	r2,-4(fp)
}
  80f518:	e037883a 	mov	sp,fp
  80f51c:	dfc00117 	ldw	ra,4(sp)
  80f520:	df000017 	ldw	fp,0(sp)
  80f524:	dec00204 	addi	sp,sp,8
  80f528:	f800283a 	ret

0080f52c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f52c:	defffd04 	addi	sp,sp,-12
  80f530:	dfc00215 	stw	ra,8(sp)
  80f534:	df000115 	stw	fp,4(sp)
  80f538:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80f53c:	00802074 	movhi	r2,129
  80f540:	1089ae04 	addi	r2,r2,9912
  80f544:	10800017 	ldw	r2,0(r2)
  80f548:	1005003a 	cmpeq	r2,r2,zero
  80f54c:	1000061e 	bne	r2,zero,80f568 <alt_get_errno+0x3c>
  80f550:	00802074 	movhi	r2,129
  80f554:	1089ae04 	addi	r2,r2,9912
  80f558:	10800017 	ldw	r2,0(r2)
  80f55c:	103ee83a 	callr	r2
  80f560:	e0bfff15 	stw	r2,-4(fp)
  80f564:	00000306 	br	80f574 <alt_get_errno+0x48>
  80f568:	00802074 	movhi	r2,129
  80f56c:	10905004 	addi	r2,r2,16704
  80f570:	e0bfff15 	stw	r2,-4(fp)
  80f574:	e0bfff17 	ldw	r2,-4(fp)
}
  80f578:	e037883a 	mov	sp,fp
  80f57c:	dfc00117 	ldw	ra,4(sp)
  80f580:	df000017 	ldw	fp,0(sp)
  80f584:	dec00204 	addi	sp,sp,8
  80f588:	f800283a 	ret

0080f58c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80f58c:	defffd04 	addi	sp,sp,-12
  80f590:	dfc00215 	stw	ra,8(sp)
  80f594:	df000115 	stw	fp,4(sp)
  80f598:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f59c:	00bfff04 	movi	r2,-4
  80f5a0:	00c02074 	movhi	r3,129
  80f5a4:	18c1be04 	addi	r3,r3,1784
  80f5a8:	1885883a 	add	r2,r3,r2
  80f5ac:	e0bfff15 	stw	r2,-4(fp)
  80f5b0:	00000606 	br	80f5cc <_do_ctors+0x40>
        (*ctor) (); 
  80f5b4:	e0bfff17 	ldw	r2,-4(fp)
  80f5b8:	10800017 	ldw	r2,0(r2)
  80f5bc:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f5c0:	e0bfff17 	ldw	r2,-4(fp)
  80f5c4:	10bfff04 	addi	r2,r2,-4
  80f5c8:	e0bfff15 	stw	r2,-4(fp)
  80f5cc:	e0ffff17 	ldw	r3,-4(fp)
  80f5d0:	00802074 	movhi	r2,129
  80f5d4:	1081bd04 	addi	r2,r2,1780
  80f5d8:	18bff62e 	bgeu	r3,r2,80f5b4 <_do_ctors+0x28>
        (*ctor) (); 
}
  80f5dc:	e037883a 	mov	sp,fp
  80f5e0:	dfc00117 	ldw	ra,4(sp)
  80f5e4:	df000017 	ldw	fp,0(sp)
  80f5e8:	dec00204 	addi	sp,sp,8
  80f5ec:	f800283a 	ret

0080f5f0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80f5f0:	defffd04 	addi	sp,sp,-12
  80f5f4:	dfc00215 	stw	ra,8(sp)
  80f5f8:	df000115 	stw	fp,4(sp)
  80f5fc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f600:	00bfff04 	movi	r2,-4
  80f604:	00c02074 	movhi	r3,129
  80f608:	18c1be04 	addi	r3,r3,1784
  80f60c:	1885883a 	add	r2,r3,r2
  80f610:	e0bfff15 	stw	r2,-4(fp)
  80f614:	00000606 	br	80f630 <_do_dtors+0x40>
        (*dtor) (); 
  80f618:	e0bfff17 	ldw	r2,-4(fp)
  80f61c:	10800017 	ldw	r2,0(r2)
  80f620:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f624:	e0bfff17 	ldw	r2,-4(fp)
  80f628:	10bfff04 	addi	r2,r2,-4
  80f62c:	e0bfff15 	stw	r2,-4(fp)
  80f630:	e0ffff17 	ldw	r3,-4(fp)
  80f634:	00802074 	movhi	r2,129
  80f638:	1081be04 	addi	r2,r2,1784
  80f63c:	18bff62e 	bgeu	r3,r2,80f618 <_do_dtors+0x28>
        (*dtor) (); 
}
  80f640:	e037883a 	mov	sp,fp
  80f644:	dfc00117 	ldw	ra,4(sp)
  80f648:	df000017 	ldw	fp,0(sp)
  80f64c:	dec00204 	addi	sp,sp,8
  80f650:	f800283a 	ret

0080f654 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80f654:	defffe04 	addi	sp,sp,-8
  80f658:	dfc00115 	stw	ra,4(sp)
  80f65c:	df000015 	stw	fp,0(sp)
  80f660:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80f664:	0009883a 	mov	r4,zero
  80f668:	01440004 	movi	r5,4096
  80f66c:	08101cc0 	call	8101cc <alt_icache_flush>
#endif
}
  80f670:	e037883a 	mov	sp,fp
  80f674:	dfc00117 	ldw	ra,4(sp)
  80f678:	df000017 	ldw	fp,0(sp)
  80f67c:	dec00204 	addi	sp,sp,8
  80f680:	f800283a 	ret

0080f684 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f684:	defff904 	addi	sp,sp,-28
  80f688:	dfc00615 	stw	ra,24(sp)
  80f68c:	df000515 	stw	fp,20(sp)
  80f690:	df000504 	addi	fp,sp,20
  80f694:	e13ffc15 	stw	r4,-16(fp)
  80f698:	e17ffd15 	stw	r5,-12(fp)
  80f69c:	e1bffe15 	stw	r6,-8(fp)
  80f6a0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80f6a4:	e0800217 	ldw	r2,8(fp)
  80f6a8:	d8800015 	stw	r2,0(sp)
  80f6ac:	e13ffc17 	ldw	r4,-16(fp)
  80f6b0:	e17ffd17 	ldw	r5,-12(fp)
  80f6b4:	e1bffe17 	ldw	r6,-8(fp)
  80f6b8:	e1ffff17 	ldw	r7,-4(fp)
  80f6bc:	080f8580 	call	80f858 <alt_iic_isr_register>
}  
  80f6c0:	e037883a 	mov	sp,fp
  80f6c4:	dfc00117 	ldw	ra,4(sp)
  80f6c8:	df000017 	ldw	fp,0(sp)
  80f6cc:	dec00204 	addi	sp,sp,8
  80f6d0:	f800283a 	ret

0080f6d4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80f6d4:	defff904 	addi	sp,sp,-28
  80f6d8:	df000615 	stw	fp,24(sp)
  80f6dc:	df000604 	addi	fp,sp,24
  80f6e0:	e13ffe15 	stw	r4,-8(fp)
  80f6e4:	e17fff15 	stw	r5,-4(fp)
  80f6e8:	e0bfff17 	ldw	r2,-4(fp)
  80f6ec:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f6f0:	0005303a 	rdctl	r2,status
  80f6f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f6f8:	e0fffb17 	ldw	r3,-20(fp)
  80f6fc:	00bfff84 	movi	r2,-2
  80f700:	1884703a 	and	r2,r3,r2
  80f704:	1001703a 	wrctl	status,r2
  
  return context;
  80f708:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f70c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  80f710:	e0fffc17 	ldw	r3,-16(fp)
  80f714:	00800044 	movi	r2,1
  80f718:	10c4983a 	sll	r2,r2,r3
  80f71c:	1007883a 	mov	r3,r2
  80f720:	00802074 	movhi	r2,129
  80f724:	10905404 	addi	r2,r2,16720
  80f728:	10800017 	ldw	r2,0(r2)
  80f72c:	1886b03a 	or	r3,r3,r2
  80f730:	00802074 	movhi	r2,129
  80f734:	10905404 	addi	r2,r2,16720
  80f738:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f73c:	00802074 	movhi	r2,129
  80f740:	10905404 	addi	r2,r2,16720
  80f744:	10800017 	ldw	r2,0(r2)
  80f748:	100170fa 	wrctl	ienable,r2
  80f74c:	e0bffd17 	ldw	r2,-12(fp)
  80f750:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f754:	e0bffa17 	ldw	r2,-24(fp)
  80f758:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80f75c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  80f760:	e037883a 	mov	sp,fp
  80f764:	df000017 	ldw	fp,0(sp)
  80f768:	dec00104 	addi	sp,sp,4
  80f76c:	f800283a 	ret

0080f770 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80f770:	defff904 	addi	sp,sp,-28
  80f774:	df000615 	stw	fp,24(sp)
  80f778:	df000604 	addi	fp,sp,24
  80f77c:	e13ffe15 	stw	r4,-8(fp)
  80f780:	e17fff15 	stw	r5,-4(fp)
  80f784:	e0bfff17 	ldw	r2,-4(fp)
  80f788:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f78c:	0005303a 	rdctl	r2,status
  80f790:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f794:	e0fffb17 	ldw	r3,-20(fp)
  80f798:	00bfff84 	movi	r2,-2
  80f79c:	1884703a 	and	r2,r3,r2
  80f7a0:	1001703a 	wrctl	status,r2
  
  return context;
  80f7a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f7a8:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
  80f7ac:	e0fffc17 	ldw	r3,-16(fp)
  80f7b0:	00800044 	movi	r2,1
  80f7b4:	10c4983a 	sll	r2,r2,r3
  80f7b8:	0084303a 	nor	r2,zero,r2
  80f7bc:	1007883a 	mov	r3,r2
  80f7c0:	00802074 	movhi	r2,129
  80f7c4:	10905404 	addi	r2,r2,16720
  80f7c8:	10800017 	ldw	r2,0(r2)
  80f7cc:	1886703a 	and	r3,r3,r2
  80f7d0:	00802074 	movhi	r2,129
  80f7d4:	10905404 	addi	r2,r2,16720
  80f7d8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f7dc:	00802074 	movhi	r2,129
  80f7e0:	10905404 	addi	r2,r2,16720
  80f7e4:	10800017 	ldw	r2,0(r2)
  80f7e8:	100170fa 	wrctl	ienable,r2
  80f7ec:	e0bffd17 	ldw	r2,-12(fp)
  80f7f0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f7f4:	e0bffa17 	ldw	r2,-24(fp)
  80f7f8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80f7fc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  80f800:	e037883a 	mov	sp,fp
  80f804:	df000017 	ldw	fp,0(sp)
  80f808:	dec00104 	addi	sp,sp,4
  80f80c:	f800283a 	ret

0080f810 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80f810:	defffc04 	addi	sp,sp,-16
  80f814:	df000315 	stw	fp,12(sp)
  80f818:	df000304 	addi	fp,sp,12
  80f81c:	e13ffe15 	stw	r4,-8(fp)
  80f820:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80f824:	000530fa 	rdctl	r2,ienable
  80f828:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80f82c:	e0ffff17 	ldw	r3,-4(fp)
  80f830:	00800044 	movi	r2,1
  80f834:	10c4983a 	sll	r2,r2,r3
  80f838:	1007883a 	mov	r3,r2
  80f83c:	e0bffd17 	ldw	r2,-12(fp)
  80f840:	1884703a 	and	r2,r3,r2
  80f844:	1004c03a 	cmpne	r2,r2,zero
}
  80f848:	e037883a 	mov	sp,fp
  80f84c:	df000017 	ldw	fp,0(sp)
  80f850:	dec00104 	addi	sp,sp,4
  80f854:	f800283a 	ret

0080f858 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f858:	defff404 	addi	sp,sp,-48
  80f85c:	dfc00b15 	stw	ra,44(sp)
  80f860:	df000a15 	stw	fp,40(sp)
  80f864:	df000a04 	addi	fp,sp,40
  80f868:	e13ffb15 	stw	r4,-20(fp)
  80f86c:	e17ffc15 	stw	r5,-16(fp)
  80f870:	e1bffd15 	stw	r6,-12(fp)
  80f874:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
  80f878:	00bffa84 	movi	r2,-22
  80f87c:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80f880:	e0bffc17 	ldw	r2,-16(fp)
  80f884:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80f888:	e0bff917 	ldw	r2,-28(fp)
  80f88c:	10800808 	cmpgei	r2,r2,32
  80f890:	1000291e 	bne	r2,zero,80f938 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f894:	0005303a 	rdctl	r2,status
  80f898:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f89c:	e0fff717 	ldw	r3,-36(fp)
  80f8a0:	00bfff84 	movi	r2,-2
  80f8a4:	1884703a 	and	r2,r3,r2
  80f8a8:	1001703a 	wrctl	status,r2
  
  return context;
  80f8ac:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80f8b0:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
  80f8b4:	e0bff917 	ldw	r2,-28(fp)
  80f8b8:	00c02074 	movhi	r3,129
  80f8bc:	18d06104 	addi	r3,r3,16772
  80f8c0:	100490fa 	slli	r2,r2,3
  80f8c4:	10c7883a 	add	r3,r2,r3
  80f8c8:	e0bffd17 	ldw	r2,-12(fp)
  80f8cc:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
  80f8d0:	e0bff917 	ldw	r2,-28(fp)
  80f8d4:	00c02074 	movhi	r3,129
  80f8d8:	18d06104 	addi	r3,r3,16772
  80f8dc:	100490fa 	slli	r2,r2,3
  80f8e0:	10c5883a 	add	r2,r2,r3
  80f8e4:	10c00104 	addi	r3,r2,4
  80f8e8:	e0bffe17 	ldw	r2,-8(fp)
  80f8ec:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80f8f0:	e0bffd17 	ldw	r2,-12(fp)
  80f8f4:	1005003a 	cmpeq	r2,r2,zero
  80f8f8:	1000051e 	bne	r2,zero,80f910 <alt_iic_isr_register+0xb8>
  80f8fc:	e17ff917 	ldw	r5,-28(fp)
  80f900:	e13ffb17 	ldw	r4,-20(fp)
  80f904:	080f6d40 	call	80f6d4 <alt_ic_irq_enable>
  80f908:	e0bfff15 	stw	r2,-4(fp)
  80f90c:	00000406 	br	80f920 <alt_iic_isr_register+0xc8>
  80f910:	e17ff917 	ldw	r5,-28(fp)
  80f914:	e13ffb17 	ldw	r4,-20(fp)
  80f918:	080f7700 	call	80f770 <alt_ic_irq_disable>
  80f91c:	e0bfff15 	stw	r2,-4(fp)
  80f920:	e0bfff17 	ldw	r2,-4(fp)
  80f924:	e0bffa15 	stw	r2,-24(fp)
  80f928:	e0bff817 	ldw	r2,-32(fp)
  80f92c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f930:	e0bff617 	ldw	r2,-40(fp)
  80f934:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80f938:	e0bffa17 	ldw	r2,-24(fp)
}
  80f93c:	e037883a 	mov	sp,fp
  80f940:	dfc00117 	ldw	ra,4(sp)
  80f944:	df000017 	ldw	fp,0(sp)
  80f948:	dec00204 	addi	sp,sp,8
  80f94c:	f800283a 	ret

0080f950 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80f950:	defff804 	addi	sp,sp,-32
  80f954:	dfc00715 	stw	ra,28(sp)
  80f958:	df000615 	stw	fp,24(sp)
  80f95c:	dc000515 	stw	r16,20(sp)
  80f960:	df000504 	addi	fp,sp,20
  80f964:	e13ffc15 	stw	r4,-16(fp)
  80f968:	e17ffd15 	stw	r5,-12(fp)
  80f96c:	e1bffe15 	stw	r6,-8(fp)
  80f970:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80f974:	e13ffd17 	ldw	r4,-12(fp)
  80f978:	e17ffe17 	ldw	r5,-8(fp)
  80f97c:	e1bfff17 	ldw	r6,-4(fp)
  80f980:	080fb980 	call	80fb98 <open>
  80f984:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80f988:	e0bffb17 	ldw	r2,-20(fp)
  80f98c:	1004803a 	cmplt	r2,r2,zero
  80f990:	10001f1e 	bne	r2,zero,80fa10 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
  80f994:	e13ffb17 	ldw	r4,-20(fp)
  80f998:	04002074 	movhi	r16,129
  80f99c:	84052b04 	addi	r16,r16,5292
  80f9a0:	01400304 	movi	r5,12
  80f9a4:	0803ec40 	call	803ec4 <__mulsi3>
  80f9a8:	1405883a 	add	r2,r2,r16
  80f9ac:	10c00017 	ldw	r3,0(r2)
  80f9b0:	e0bffc17 	ldw	r2,-16(fp)
  80f9b4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80f9b8:	e13ffb17 	ldw	r4,-20(fp)
  80f9bc:	04002074 	movhi	r16,129
  80f9c0:	84052b04 	addi	r16,r16,5292
  80f9c4:	01400304 	movi	r5,12
  80f9c8:	0803ec40 	call	803ec4 <__mulsi3>
  80f9cc:	1405883a 	add	r2,r2,r16
  80f9d0:	10800104 	addi	r2,r2,4
  80f9d4:	10c00017 	ldw	r3,0(r2)
  80f9d8:	e0bffc17 	ldw	r2,-16(fp)
  80f9dc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80f9e0:	e13ffb17 	ldw	r4,-20(fp)
  80f9e4:	04002074 	movhi	r16,129
  80f9e8:	84052b04 	addi	r16,r16,5292
  80f9ec:	01400304 	movi	r5,12
  80f9f0:	0803ec40 	call	803ec4 <__mulsi3>
  80f9f4:	1405883a 	add	r2,r2,r16
  80f9f8:	10800204 	addi	r2,r2,8
  80f9fc:	10c00017 	ldw	r3,0(r2)
  80fa00:	e0bffc17 	ldw	r2,-16(fp)
  80fa04:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80fa08:	e13ffb17 	ldw	r4,-20(fp)
  80fa0c:	080e2e80 	call	80e2e8 <alt_release_fd>
  }
} 
  80fa10:	e037883a 	mov	sp,fp
  80fa14:	dfc00217 	ldw	ra,8(sp)
  80fa18:	df000117 	ldw	fp,4(sp)
  80fa1c:	dc000017 	ldw	r16,0(sp)
  80fa20:	dec00304 	addi	sp,sp,12
  80fa24:	f800283a 	ret

0080fa28 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80fa28:	defffb04 	addi	sp,sp,-20
  80fa2c:	dfc00415 	stw	ra,16(sp)
  80fa30:	df000315 	stw	fp,12(sp)
  80fa34:	df000304 	addi	fp,sp,12
  80fa38:	e13ffd15 	stw	r4,-12(fp)
  80fa3c:	e17ffe15 	stw	r5,-8(fp)
  80fa40:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80fa44:	01002074 	movhi	r4,129
  80fa48:	21052e04 	addi	r4,r4,5304
  80fa4c:	e17ffd17 	ldw	r5,-12(fp)
  80fa50:	01800044 	movi	r6,1
  80fa54:	01c07fc4 	movi	r7,511
  80fa58:	080f9500 	call	80f950 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80fa5c:	01002074 	movhi	r4,129
  80fa60:	21052b04 	addi	r4,r4,5292
  80fa64:	e17ffe17 	ldw	r5,-8(fp)
  80fa68:	000d883a 	mov	r6,zero
  80fa6c:	01c07fc4 	movi	r7,511
  80fa70:	080f9500 	call	80f950 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80fa74:	01002074 	movhi	r4,129
  80fa78:	21053104 	addi	r4,r4,5316
  80fa7c:	e17fff17 	ldw	r5,-4(fp)
  80fa80:	01800044 	movi	r6,1
  80fa84:	01c07fc4 	movi	r7,511
  80fa88:	080f9500 	call	80f950 <alt_open_fd>
}  
  80fa8c:	e037883a 	mov	sp,fp
  80fa90:	dfc00117 	ldw	ra,4(sp)
  80fa94:	df000017 	ldw	fp,0(sp)
  80fa98:	dec00204 	addi	sp,sp,8
  80fa9c:	f800283a 	ret

0080faa0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80faa0:	defffa04 	addi	sp,sp,-24
  80faa4:	dfc00515 	stw	ra,20(sp)
  80faa8:	df000415 	stw	fp,16(sp)
  80faac:	dc000315 	stw	r16,12(sp)
  80fab0:	df000304 	addi	fp,sp,12
  80fab4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80fab8:	e0bffe17 	ldw	r2,-8(fp)
  80fabc:	10800217 	ldw	r2,8(r2)
  80fac0:	10d00034 	orhi	r3,r2,16384
  80fac4:	e0bffe17 	ldw	r2,-8(fp)
  80fac8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80facc:	e03ffd15 	stw	zero,-12(fp)
  80fad0:	00002306 	br	80fb60 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80fad4:	e13ffd17 	ldw	r4,-12(fp)
  80fad8:	04002074 	movhi	r16,129
  80fadc:	84052b04 	addi	r16,r16,5292
  80fae0:	01400304 	movi	r5,12
  80fae4:	0803ec40 	call	803ec4 <__mulsi3>
  80fae8:	1405883a 	add	r2,r2,r16
  80faec:	10c00017 	ldw	r3,0(r2)
  80faf0:	e0bffe17 	ldw	r2,-8(fp)
  80faf4:	10800017 	ldw	r2,0(r2)
  80faf8:	1880161e 	bne	r3,r2,80fb54 <alt_file_locked+0xb4>
  80fafc:	e13ffd17 	ldw	r4,-12(fp)
  80fb00:	04002074 	movhi	r16,129
  80fb04:	84052b04 	addi	r16,r16,5292
  80fb08:	01400304 	movi	r5,12
  80fb0c:	0803ec40 	call	803ec4 <__mulsi3>
  80fb10:	1405883a 	add	r2,r2,r16
  80fb14:	10800204 	addi	r2,r2,8
  80fb18:	10800017 	ldw	r2,0(r2)
  80fb1c:	1004403a 	cmpge	r2,r2,zero
  80fb20:	10000c1e 	bne	r2,zero,80fb54 <alt_file_locked+0xb4>
  80fb24:	e13ffd17 	ldw	r4,-12(fp)
  80fb28:	01400304 	movi	r5,12
  80fb2c:	0803ec40 	call	803ec4 <__mulsi3>
  80fb30:	1007883a 	mov	r3,r2
  80fb34:	00802074 	movhi	r2,129
  80fb38:	10852b04 	addi	r2,r2,5292
  80fb3c:	1887883a 	add	r3,r3,r2
  80fb40:	e0bffe17 	ldw	r2,-8(fp)
  80fb44:	18800326 	beq	r3,r2,80fb54 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80fb48:	00bffcc4 	movi	r2,-13
  80fb4c:	e0bfff15 	stw	r2,-4(fp)
  80fb50:	00000a06 	br	80fb7c <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80fb54:	e0bffd17 	ldw	r2,-12(fp)
  80fb58:	10800044 	addi	r2,r2,1
  80fb5c:	e0bffd15 	stw	r2,-12(fp)
  80fb60:	00802074 	movhi	r2,129
  80fb64:	1089ad04 	addi	r2,r2,9908
  80fb68:	10800017 	ldw	r2,0(r2)
  80fb6c:	1007883a 	mov	r3,r2
  80fb70:	e0bffd17 	ldw	r2,-12(fp)
  80fb74:	18bfd72e 	bgeu	r3,r2,80fad4 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80fb78:	e03fff15 	stw	zero,-4(fp)
  80fb7c:	e0bfff17 	ldw	r2,-4(fp)
}
  80fb80:	e037883a 	mov	sp,fp
  80fb84:	dfc00217 	ldw	ra,8(sp)
  80fb88:	df000117 	ldw	fp,4(sp)
  80fb8c:	dc000017 	ldw	r16,0(sp)
  80fb90:	dec00304 	addi	sp,sp,12
  80fb94:	f800283a 	ret

0080fb98 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80fb98:	defff404 	addi	sp,sp,-48
  80fb9c:	dfc00b15 	stw	ra,44(sp)
  80fba0:	df000a15 	stw	fp,40(sp)
  80fba4:	df000a04 	addi	fp,sp,40
  80fba8:	e13ffb15 	stw	r4,-20(fp)
  80fbac:	e17ffc15 	stw	r5,-16(fp)
  80fbb0:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80fbb4:	00bfffc4 	movi	r2,-1
  80fbb8:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
  80fbbc:	00bffb44 	movi	r2,-19
  80fbc0:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
  80fbc4:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80fbc8:	e13ffb17 	ldw	r4,-20(fp)
  80fbcc:	01402074 	movhi	r5,129
  80fbd0:	2949ab04 	addi	r5,r5,9900
  80fbd4:	080ff480 	call	80ff48 <alt_find_dev>
  80fbd8:	e0bffa15 	stw	r2,-24(fp)
  80fbdc:	e0bffa17 	ldw	r2,-24(fp)
  80fbe0:	1004c03a 	cmpne	r2,r2,zero
  80fbe4:	1000051e 	bne	r2,zero,80fbfc <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80fbe8:	e13ffb17 	ldw	r4,-20(fp)
  80fbec:	080ffdc0 	call	80ffdc <alt_find_file>
  80fbf0:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
  80fbf4:	00800044 	movi	r2,1
  80fbf8:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80fbfc:	e0bffa17 	ldw	r2,-24(fp)
  80fc00:	1005003a 	cmpeq	r2,r2,zero
  80fc04:	1000311e 	bne	r2,zero,80fccc <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80fc08:	e13ffa17 	ldw	r4,-24(fp)
  80fc0c:	08100fc0 	call	8100fc <alt_get_fd>
  80fc10:	e0bff815 	stw	r2,-32(fp)
  80fc14:	e0bff817 	ldw	r2,-32(fp)
  80fc18:	1004403a 	cmpge	r2,r2,zero
  80fc1c:	1000031e 	bne	r2,zero,80fc2c <open+0x94>
    {
      status = index;
  80fc20:	e0bff817 	ldw	r2,-32(fp)
  80fc24:	e0bff715 	stw	r2,-36(fp)
  80fc28:	00002a06 	br	80fcd4 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
  80fc2c:	e13ff817 	ldw	r4,-32(fp)
  80fc30:	01400304 	movi	r5,12
  80fc34:	0803ec40 	call	803ec4 <__mulsi3>
  80fc38:	1007883a 	mov	r3,r2
  80fc3c:	00802074 	movhi	r2,129
  80fc40:	10852b04 	addi	r2,r2,5292
  80fc44:	1885883a 	add	r2,r3,r2
  80fc48:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80fc4c:	e0fffc17 	ldw	r3,-16(fp)
  80fc50:	00900034 	movhi	r2,16384
  80fc54:	10bfffc4 	addi	r2,r2,-1
  80fc58:	1886703a 	and	r3,r3,r2
  80fc5c:	e0bff917 	ldw	r2,-28(fp)
  80fc60:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80fc64:	e0bff617 	ldw	r2,-40(fp)
  80fc68:	1004c03a 	cmpne	r2,r2,zero
  80fc6c:	1000061e 	bne	r2,zero,80fc88 <open+0xf0>
  80fc70:	e13ff917 	ldw	r4,-28(fp)
  80fc74:	080faa00 	call	80faa0 <alt_file_locked>
  80fc78:	e0bff715 	stw	r2,-36(fp)
  80fc7c:	e0bff717 	ldw	r2,-36(fp)
  80fc80:	1004803a 	cmplt	r2,r2,zero
  80fc84:	1000131e 	bne	r2,zero,80fcd4 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80fc88:	e0bffa17 	ldw	r2,-24(fp)
  80fc8c:	10800317 	ldw	r2,12(r2)
  80fc90:	1005003a 	cmpeq	r2,r2,zero
  80fc94:	1000091e 	bne	r2,zero,80fcbc <open+0x124>
  80fc98:	e0bffa17 	ldw	r2,-24(fp)
  80fc9c:	10800317 	ldw	r2,12(r2)
  80fca0:	e13ff917 	ldw	r4,-28(fp)
  80fca4:	e17ffb17 	ldw	r5,-20(fp)
  80fca8:	e1bffc17 	ldw	r6,-16(fp)
  80fcac:	e1fffd17 	ldw	r7,-12(fp)
  80fcb0:	103ee83a 	callr	r2
  80fcb4:	e0bfff15 	stw	r2,-4(fp)
  80fcb8:	00000106 	br	80fcc0 <open+0x128>
  80fcbc:	e03fff15 	stw	zero,-4(fp)
  80fcc0:	e0bfff17 	ldw	r2,-4(fp)
  80fcc4:	e0bff715 	stw	r2,-36(fp)
  80fcc8:	00000206 	br	80fcd4 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80fccc:	00bffb44 	movi	r2,-19
  80fcd0:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80fcd4:	e0bff717 	ldw	r2,-36(fp)
  80fcd8:	1004403a 	cmpge	r2,r2,zero
  80fcdc:	1000091e 	bne	r2,zero,80fd04 <open+0x16c>
  {
    alt_release_fd (index);  
  80fce0:	e13ff817 	ldw	r4,-32(fp)
  80fce4:	080e2e80 	call	80e2e8 <alt_release_fd>
    ALT_ERRNO = -status;
  80fce8:	080fd240 	call	80fd24 <alt_get_errno>
  80fcec:	e0fff717 	ldw	r3,-36(fp)
  80fcf0:	00c7c83a 	sub	r3,zero,r3
  80fcf4:	10c00015 	stw	r3,0(r2)
    return -1;
  80fcf8:	00bfffc4 	movi	r2,-1
  80fcfc:	e0bffe15 	stw	r2,-8(fp)
  80fd00:	00000206 	br	80fd0c <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
  80fd04:	e0bff817 	ldw	r2,-32(fp)
  80fd08:	e0bffe15 	stw	r2,-8(fp)
  80fd0c:	e0bffe17 	ldw	r2,-8(fp)
}
  80fd10:	e037883a 	mov	sp,fp
  80fd14:	dfc00117 	ldw	ra,4(sp)
  80fd18:	df000017 	ldw	fp,0(sp)
  80fd1c:	dec00204 	addi	sp,sp,8
  80fd20:	f800283a 	ret

0080fd24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fd24:	defffd04 	addi	sp,sp,-12
  80fd28:	dfc00215 	stw	ra,8(sp)
  80fd2c:	df000115 	stw	fp,4(sp)
  80fd30:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
  80fd34:	00802074 	movhi	r2,129
  80fd38:	1089ae04 	addi	r2,r2,9912
  80fd3c:	10800017 	ldw	r2,0(r2)
  80fd40:	1005003a 	cmpeq	r2,r2,zero
  80fd44:	1000061e 	bne	r2,zero,80fd60 <alt_get_errno+0x3c>
  80fd48:	00802074 	movhi	r2,129
  80fd4c:	1089ae04 	addi	r2,r2,9912
  80fd50:	10800017 	ldw	r2,0(r2)
  80fd54:	103ee83a 	callr	r2
  80fd58:	e0bfff15 	stw	r2,-4(fp)
  80fd5c:	00000306 	br	80fd6c <alt_get_errno+0x48>
  80fd60:	00802074 	movhi	r2,129
  80fd64:	10905004 	addi	r2,r2,16704
  80fd68:	e0bfff15 	stw	r2,-4(fp)
  80fd6c:	e0bfff17 	ldw	r2,-4(fp)
}
  80fd70:	e037883a 	mov	sp,fp
  80fd74:	dfc00117 	ldw	ra,4(sp)
  80fd78:	df000017 	ldw	fp,0(sp)
  80fd7c:	dec00204 	addi	sp,sp,8
  80fd80:	f800283a 	ret

0080fd84 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80fd84:	defffa04 	addi	sp,sp,-24
  80fd88:	df000515 	stw	fp,20(sp)
  80fd8c:	df000504 	addi	fp,sp,20
  80fd90:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fd94:	0005303a 	rdctl	r2,status
  80fd98:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fd9c:	e0fffd17 	ldw	r3,-12(fp)
  80fda0:	00bfff84 	movi	r2,-2
  80fda4:	1884703a 	and	r2,r3,r2
  80fda8:	1001703a 	wrctl	status,r2
  
  return context;
  80fdac:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80fdb0:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
  80fdb4:	e0bfff17 	ldw	r2,-4(fp)
  80fdb8:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80fdbc:	e0bffc17 	ldw	r2,-16(fp)
  80fdc0:	10c00017 	ldw	r3,0(r2)
  80fdc4:	e0bffc17 	ldw	r2,-16(fp)
  80fdc8:	10800117 	ldw	r2,4(r2)
  80fdcc:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
  80fdd0:	e0bffc17 	ldw	r2,-16(fp)
  80fdd4:	10c00117 	ldw	r3,4(r2)
  80fdd8:	e0bffc17 	ldw	r2,-16(fp)
  80fddc:	10800017 	ldw	r2,0(r2)
  80fde0:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80fde4:	e0fffc17 	ldw	r3,-16(fp)
  80fde8:	e0bffc17 	ldw	r2,-16(fp)
  80fdec:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
  80fdf0:	e0fffc17 	ldw	r3,-16(fp)
  80fdf4:	e0bffc17 	ldw	r2,-16(fp)
  80fdf8:	18800015 	stw	r2,0(r3)
  80fdfc:	e0bffe17 	ldw	r2,-8(fp)
  80fe00:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fe04:	e0bffb17 	ldw	r2,-20(fp)
  80fe08:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80fe0c:	e037883a 	mov	sp,fp
  80fe10:	df000017 	ldw	fp,0(sp)
  80fe14:	dec00104 	addi	sp,sp,4
  80fe18:	f800283a 	ret

0080fe1c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80fe1c:	defffb04 	addi	sp,sp,-20
  80fe20:	dfc00415 	stw	ra,16(sp)
  80fe24:	df000315 	stw	fp,12(sp)
  80fe28:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80fe2c:	d0a00e17 	ldw	r2,-32712(gp)
  80fe30:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80fe34:	d0a6b317 	ldw	r2,-25908(gp)
  80fe38:	10800044 	addi	r2,r2,1
  80fe3c:	d0a6b315 	stw	r2,-25908(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80fe40:	00003106 	br	80ff08 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
  80fe44:	e0bffe17 	ldw	r2,-8(fp)
  80fe48:	10800017 	ldw	r2,0(r2)
  80fe4c:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80fe50:	e0bffe17 	ldw	r2,-8(fp)
  80fe54:	10800403 	ldbu	r2,16(r2)
  80fe58:	10803fcc 	andi	r2,r2,255
  80fe5c:	1005003a 	cmpeq	r2,r2,zero
  80fe60:	1000051e 	bne	r2,zero,80fe78 <alt_tick+0x5c>
  80fe64:	d0a6b317 	ldw	r2,-25908(gp)
  80fe68:	1004c03a 	cmpne	r2,r2,zero
  80fe6c:	1000021e 	bne	r2,zero,80fe78 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
  80fe70:	e0bffe17 	ldw	r2,-8(fp)
  80fe74:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80fe78:	e0bffe17 	ldw	r2,-8(fp)
  80fe7c:	10c00217 	ldw	r3,8(r2)
  80fe80:	d0a6b317 	ldw	r2,-25908(gp)
  80fe84:	10c01e36 	bltu	r2,r3,80ff00 <alt_tick+0xe4>
  80fe88:	e0bffe17 	ldw	r2,-8(fp)
  80fe8c:	10800403 	ldbu	r2,16(r2)
  80fe90:	10803fcc 	andi	r2,r2,255
  80fe94:	1004c03a 	cmpne	r2,r2,zero
  80fe98:	1000191e 	bne	r2,zero,80ff00 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
  80fe9c:	e0bffe17 	ldw	r2,-8(fp)
  80fea0:	10c00317 	ldw	r3,12(r2)
  80fea4:	e0bffe17 	ldw	r2,-8(fp)
  80fea8:	11000517 	ldw	r4,20(r2)
  80feac:	183ee83a 	callr	r3
  80feb0:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80feb4:	e0bffd17 	ldw	r2,-12(fp)
  80feb8:	1004c03a 	cmpne	r2,r2,zero
  80febc:	1000031e 	bne	r2,zero,80fecc <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
  80fec0:	e13ffe17 	ldw	r4,-8(fp)
  80fec4:	080fd840 	call	80fd84 <alt_alarm_stop>
  80fec8:	00000d06 	br	80ff00 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
  80fecc:	e0bffe17 	ldw	r2,-8(fp)
  80fed0:	10c00217 	ldw	r3,8(r2)
  80fed4:	e0bffd17 	ldw	r2,-12(fp)
  80fed8:	1887883a 	add	r3,r3,r2
  80fedc:	e0bffe17 	ldw	r2,-8(fp)
  80fee0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80fee4:	e0bffe17 	ldw	r2,-8(fp)
  80fee8:	10c00217 	ldw	r3,8(r2)
  80feec:	d0a6b317 	ldw	r2,-25908(gp)
  80fef0:	1880032e 	bgeu	r3,r2,80ff00 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
  80fef4:	e0fffe17 	ldw	r3,-8(fp)
  80fef8:	00800044 	movi	r2,1
  80fefc:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
  80ff00:	e0bfff17 	ldw	r2,-4(fp)
  80ff04:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ff08:	d0e00e04 	addi	r3,gp,-32712
  80ff0c:	e0bffe17 	ldw	r2,-8(fp)
  80ff10:	10ffcc1e 	bne	r2,r3,80fe44 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
  80ff14:	e037883a 	mov	sp,fp
  80ff18:	dfc00117 	ldw	ra,4(sp)
  80ff1c:	df000017 	ldw	fp,0(sp)
  80ff20:	dec00204 	addi	sp,sp,8
  80ff24:	f800283a 	ret

0080ff28 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80ff28:	deffff04 	addi	sp,sp,-4
  80ff2c:	df000015 	stw	fp,0(sp)
  80ff30:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80ff34:	000170fa 	wrctl	ienable,zero
}
  80ff38:	e037883a 	mov	sp,fp
  80ff3c:	df000017 	ldw	fp,0(sp)
  80ff40:	dec00104 	addi	sp,sp,4
  80ff44:	f800283a 	ret

0080ff48 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80ff48:	defff904 	addi	sp,sp,-28
  80ff4c:	dfc00615 	stw	ra,24(sp)
  80ff50:	df000515 	stw	fp,20(sp)
  80ff54:	df000504 	addi	fp,sp,20
  80ff58:	e13ffd15 	stw	r4,-12(fp)
  80ff5c:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80ff60:	e0bffe17 	ldw	r2,-8(fp)
  80ff64:	10800017 	ldw	r2,0(r2)
  80ff68:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80ff6c:	e13ffd17 	ldw	r4,-12(fp)
  80ff70:	0804b300 	call	804b30 <strlen>
  80ff74:	10800044 	addi	r2,r2,1
  80ff78:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80ff7c:	00000d06 	br	80ffb4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80ff80:	e0bffc17 	ldw	r2,-16(fp)
  80ff84:	11000217 	ldw	r4,8(r2)
  80ff88:	e1bffb17 	ldw	r6,-20(fp)
  80ff8c:	e17ffd17 	ldw	r5,-12(fp)
  80ff90:	08103380 	call	810338 <memcmp>
  80ff94:	1004c03a 	cmpne	r2,r2,zero
  80ff98:	1000031e 	bne	r2,zero,80ffa8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80ff9c:	e0bffc17 	ldw	r2,-16(fp)
  80ffa0:	e0bfff15 	stw	r2,-4(fp)
  80ffa4:	00000706 	br	80ffc4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80ffa8:	e0bffc17 	ldw	r2,-16(fp)
  80ffac:	10800017 	ldw	r2,0(r2)
  80ffb0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80ffb4:	e0fffe17 	ldw	r3,-8(fp)
  80ffb8:	e0bffc17 	ldw	r2,-16(fp)
  80ffbc:	10fff01e 	bne	r2,r3,80ff80 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80ffc0:	e03fff15 	stw	zero,-4(fp)
  80ffc4:	e0bfff17 	ldw	r2,-4(fp)
}
  80ffc8:	e037883a 	mov	sp,fp
  80ffcc:	dfc00117 	ldw	ra,4(sp)
  80ffd0:	df000017 	ldw	fp,0(sp)
  80ffd4:	dec00204 	addi	sp,sp,8
  80ffd8:	f800283a 	ret

0080ffdc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80ffdc:	defffa04 	addi	sp,sp,-24
  80ffe0:	dfc00515 	stw	ra,20(sp)
  80ffe4:	df000415 	stw	fp,16(sp)
  80ffe8:	df000404 	addi	fp,sp,16
  80ffec:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80fff0:	00802074 	movhi	r2,129
  80fff4:	1089a904 	addi	r2,r2,9892
  80fff8:	10800017 	ldw	r2,0(r2)
  80fffc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  810000:	00003306 	br	8100d0 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
  810004:	e0bffd17 	ldw	r2,-12(fp)
  810008:	11000217 	ldw	r4,8(r2)
  81000c:	0804b300 	call	804b30 <strlen>
  810010:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
  810014:	e0bffd17 	ldw	r2,-12(fp)
  810018:	10c00217 	ldw	r3,8(r2)
  81001c:	e0bffc17 	ldw	r2,-16(fp)
  810020:	1885883a 	add	r2,r3,r2
  810024:	10bfffc4 	addi	r2,r2,-1
  810028:	10800003 	ldbu	r2,0(r2)
  81002c:	10803fcc 	andi	r2,r2,255
  810030:	1080201c 	xori	r2,r2,128
  810034:	10bfe004 	addi	r2,r2,-128
  810038:	10800bd8 	cmpnei	r2,r2,47
  81003c:	1000031e 	bne	r2,zero,81004c <alt_find_file+0x70>
    {
      len -= 1;
  810040:	e0bffc17 	ldw	r2,-16(fp)
  810044:	10bfffc4 	addi	r2,r2,-1
  810048:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81004c:	e0bffc17 	ldw	r2,-16(fp)
  810050:	1007883a 	mov	r3,r2
  810054:	e0bffe17 	ldw	r2,-8(fp)
  810058:	1885883a 	add	r2,r3,r2
  81005c:	10800003 	ldbu	r2,0(r2)
  810060:	10803fcc 	andi	r2,r2,255
  810064:	1080201c 	xori	r2,r2,128
  810068:	10bfe004 	addi	r2,r2,-128
  81006c:	10800be0 	cmpeqi	r2,r2,47
  810070:	10000a1e 	bne	r2,zero,81009c <alt_find_file+0xc0>
  810074:	e0bffc17 	ldw	r2,-16(fp)
  810078:	1007883a 	mov	r3,r2
  81007c:	e0bffe17 	ldw	r2,-8(fp)
  810080:	1885883a 	add	r2,r3,r2
  810084:	10800003 	ldbu	r2,0(r2)
  810088:	10803fcc 	andi	r2,r2,255
  81008c:	1080201c 	xori	r2,r2,128
  810090:	10bfe004 	addi	r2,r2,-128
  810094:	1004c03a 	cmpne	r2,r2,zero
  810098:	10000a1e 	bne	r2,zero,8100c4 <alt_find_file+0xe8>
  81009c:	e0bffd17 	ldw	r2,-12(fp)
  8100a0:	11000217 	ldw	r4,8(r2)
  8100a4:	e1bffc17 	ldw	r6,-16(fp)
  8100a8:	e17ffe17 	ldw	r5,-8(fp)
  8100ac:	08103380 	call	810338 <memcmp>
  8100b0:	1004c03a 	cmpne	r2,r2,zero
  8100b4:	1000031e 	bne	r2,zero,8100c4 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  8100b8:	e0bffd17 	ldw	r2,-12(fp)
  8100bc:	e0bfff15 	stw	r2,-4(fp)
  8100c0:	00000806 	br	8100e4 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
  8100c4:	e0bffd17 	ldw	r2,-12(fp)
  8100c8:	10800017 	ldw	r2,0(r2)
  8100cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8100d0:	00c02074 	movhi	r3,129
  8100d4:	18c9a904 	addi	r3,r3,9892
  8100d8:	e0bffd17 	ldw	r2,-12(fp)
  8100dc:	10ffc91e 	bne	r2,r3,810004 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  8100e0:	e03fff15 	stw	zero,-4(fp)
  8100e4:	e0bfff17 	ldw	r2,-4(fp)
}
  8100e8:	e037883a 	mov	sp,fp
  8100ec:	dfc00117 	ldw	ra,4(sp)
  8100f0:	df000017 	ldw	fp,0(sp)
  8100f4:	dec00204 	addi	sp,sp,8
  8100f8:	f800283a 	ret

008100fc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  8100fc:	defffa04 	addi	sp,sp,-24
  810100:	dfc00515 	stw	ra,20(sp)
  810104:	df000415 	stw	fp,16(sp)
  810108:	dc000315 	stw	r16,12(sp)
  81010c:	df000304 	addi	fp,sp,12
  810110:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  810114:	00bffa04 	movi	r2,-24
  810118:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81011c:	e03ffe15 	stw	zero,-8(fp)
  810120:	00002006 	br	8101a4 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
  810124:	e13ffe17 	ldw	r4,-8(fp)
  810128:	04002074 	movhi	r16,129
  81012c:	84052b04 	addi	r16,r16,5292
  810130:	01400304 	movi	r5,12
  810134:	0803ec40 	call	803ec4 <__mulsi3>
  810138:	1405883a 	add	r2,r2,r16
  81013c:	10800017 	ldw	r2,0(r2)
  810140:	1004c03a 	cmpne	r2,r2,zero
  810144:	1000141e 	bne	r2,zero,810198 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
  810148:	e13ffe17 	ldw	r4,-8(fp)
  81014c:	04002074 	movhi	r16,129
  810150:	84052b04 	addi	r16,r16,5292
  810154:	01400304 	movi	r5,12
  810158:	0803ec40 	call	803ec4 <__mulsi3>
  81015c:	1407883a 	add	r3,r2,r16
  810160:	e0bfff17 	ldw	r2,-4(fp)
  810164:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
  810168:	00802074 	movhi	r2,129
  81016c:	1089ad04 	addi	r2,r2,9908
  810170:	10c00017 	ldw	r3,0(r2)
  810174:	e0bffe17 	ldw	r2,-8(fp)
  810178:	1880040e 	bge	r3,r2,81018c <alt_get_fd+0x90>
      {
        alt_max_fd = i;
  81017c:	00c02074 	movhi	r3,129
  810180:	18c9ad04 	addi	r3,r3,9908
  810184:	e0bffe17 	ldw	r2,-8(fp)
  810188:	18800015 	stw	r2,0(r3)
      }
      rc = i;
  81018c:	e0bffe17 	ldw	r2,-8(fp)
  810190:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
  810194:	00000606 	br	8101b0 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  810198:	e0bffe17 	ldw	r2,-8(fp)
  81019c:	10800044 	addi	r2,r2,1
  8101a0:	e0bffe15 	stw	r2,-8(fp)
  8101a4:	e0bffe17 	ldw	r2,-8(fp)
  8101a8:	10800810 	cmplti	r2,r2,32
  8101ac:	103fdd1e 	bne	r2,zero,810124 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  8101b0:	e0bffd17 	ldw	r2,-12(fp)
}
  8101b4:	e037883a 	mov	sp,fp
  8101b8:	dfc00217 	ldw	ra,8(sp)
  8101bc:	df000117 	ldw	fp,4(sp)
  8101c0:	dc000017 	ldw	r16,0(sp)
  8101c4:	dec00304 	addi	sp,sp,12
  8101c8:	f800283a 	ret

008101cc <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  8101cc:	defffb04 	addi	sp,sp,-20
  8101d0:	df000415 	stw	fp,16(sp)
  8101d4:	df000404 	addi	fp,sp,16
  8101d8:	e13ffe15 	stw	r4,-8(fp)
  8101dc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  8101e0:	e0bfff17 	ldw	r2,-4(fp)
  8101e4:	10840070 	cmpltui	r2,r2,4097
  8101e8:	1000021e 	bne	r2,zero,8101f4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  8101ec:	00840004 	movi	r2,4096
  8101f0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  8101f4:	e0fffe17 	ldw	r3,-8(fp)
  8101f8:	e0bfff17 	ldw	r2,-4(fp)
  8101fc:	1885883a 	add	r2,r3,r2
  810200:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810204:	e0bffe17 	ldw	r2,-8(fp)
  810208:	e0bffd15 	stw	r2,-12(fp)
  81020c:	00000506 	br	810224 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  810210:	e0bffd17 	ldw	r2,-12(fp)
  810214:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810218:	e0bffd17 	ldw	r2,-12(fp)
  81021c:	10800804 	addi	r2,r2,32
  810220:	e0bffd15 	stw	r2,-12(fp)
  810224:	e0fffd17 	ldw	r3,-12(fp)
  810228:	e0bffc17 	ldw	r2,-16(fp)
  81022c:	18bff836 	bltu	r3,r2,810210 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  810230:	e0bffe17 	ldw	r2,-8(fp)
  810234:	108007cc 	andi	r2,r2,31
  810238:	1005003a 	cmpeq	r2,r2,zero
  81023c:	1000021e 	bne	r2,zero,810248 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  810240:	e0bffd17 	ldw	r2,-12(fp)
  810244:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  810248:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81024c:	e037883a 	mov	sp,fp
  810250:	df000017 	ldw	fp,0(sp)
  810254:	dec00104 	addi	sp,sp,4
  810258:	f800283a 	ret

0081025c <atexit>:
  81025c:	200b883a 	mov	r5,r4
  810260:	000d883a 	mov	r6,zero
  810264:	0009883a 	mov	r4,zero
  810268:	000f883a 	mov	r7,zero
  81026c:	08103ac1 	jmpi	8103ac <__register_exitproc>

00810270 <exit>:
  810270:	defffe04 	addi	sp,sp,-8
  810274:	000b883a 	mov	r5,zero
  810278:	dc000015 	stw	r16,0(sp)
  81027c:	dfc00115 	stw	ra,4(sp)
  810280:	2021883a 	mov	r16,r4
  810284:	08104e40 	call	8104e4 <__call_exitprocs>
  810288:	00802074 	movhi	r2,129
  81028c:	1089a404 	addi	r2,r2,9872
  810290:	11000017 	ldw	r4,0(r2)
  810294:	20800f17 	ldw	r2,60(r4)
  810298:	10000126 	beq	r2,zero,8102a0 <exit+0x30>
  81029c:	103ee83a 	callr	r2
  8102a0:	8009883a 	mov	r4,r16
  8102a4:	08106d40 	call	8106d4 <_exit>

008102a8 <_fputs_r>:
  8102a8:	defff804 	addi	sp,sp,-32
  8102ac:	dc000515 	stw	r16,20(sp)
  8102b0:	2021883a 	mov	r16,r4
  8102b4:	2809883a 	mov	r4,r5
  8102b8:	dc400615 	stw	r17,24(sp)
  8102bc:	dfc00715 	stw	ra,28(sp)
  8102c0:	3023883a 	mov	r17,r6
  8102c4:	d9400015 	stw	r5,0(sp)
  8102c8:	0804b300 	call	804b30 <strlen>
  8102cc:	00c00044 	movi	r3,1
  8102d0:	d8800115 	stw	r2,4(sp)
  8102d4:	d8c00315 	stw	r3,12(sp)
  8102d8:	d8800415 	stw	r2,16(sp)
  8102dc:	dec00215 	stw	sp,8(sp)
  8102e0:	80000326 	beq	r16,zero,8102f0 <_fputs_r+0x48>
  8102e4:	80800e17 	ldw	r2,56(r16)
  8102e8:	8009883a 	mov	r4,r16
  8102ec:	10000926 	beq	r2,zero,810314 <_fputs_r+0x6c>
  8102f0:	8009883a 	mov	r4,r16
  8102f4:	880b883a 	mov	r5,r17
  8102f8:	d9800204 	addi	r6,sp,8
  8102fc:	08098480 	call	809848 <__sfvwrite_r>
  810300:	dfc00717 	ldw	ra,28(sp)
  810304:	dc400617 	ldw	r17,24(sp)
  810308:	dc000517 	ldw	r16,20(sp)
  81030c:	dec00804 	addi	sp,sp,32
  810310:	f800283a 	ret
  810314:	080917c0 	call	80917c <__sinit>
  810318:	003ff506 	br	8102f0 <_fputs_r+0x48>

0081031c <fputs>:
  81031c:	01802074 	movhi	r6,129
  810320:	3189a304 	addi	r6,r6,9868
  810324:	2007883a 	mov	r3,r4
  810328:	31000017 	ldw	r4,0(r6)
  81032c:	280d883a 	mov	r6,r5
  810330:	180b883a 	mov	r5,r3
  810334:	08102a81 	jmpi	8102a8 <_fputs_r>

00810338 <memcmp>:
  810338:	00c000c4 	movi	r3,3
  81033c:	1980032e 	bgeu	r3,r6,81034c <memcmp+0x14>
  810340:	2144b03a 	or	r2,r4,r5
  810344:	10c4703a 	and	r2,r2,r3
  810348:	10000f26 	beq	r2,zero,810388 <memcmp+0x50>
  81034c:	31ffffc4 	addi	r7,r6,-1
  810350:	3000061e 	bne	r6,zero,81036c <memcmp+0x34>
  810354:	00000a06 	br	810380 <memcmp+0x48>
  810358:	39ffffc4 	addi	r7,r7,-1
  81035c:	00bfffc4 	movi	r2,-1
  810360:	21000044 	addi	r4,r4,1
  810364:	29400044 	addi	r5,r5,1
  810368:	38800526 	beq	r7,r2,810380 <memcmp+0x48>
  81036c:	20c00003 	ldbu	r3,0(r4)
  810370:	28800003 	ldbu	r2,0(r5)
  810374:	18bff826 	beq	r3,r2,810358 <memcmp+0x20>
  810378:	1885c83a 	sub	r2,r3,r2
  81037c:	f800283a 	ret
  810380:	0005883a 	mov	r2,zero
  810384:	f800283a 	ret
  810388:	180f883a 	mov	r7,r3
  81038c:	20c00017 	ldw	r3,0(r4)
  810390:	28800017 	ldw	r2,0(r5)
  810394:	18bfed1e 	bne	r3,r2,81034c <memcmp+0x14>
  810398:	31bfff04 	addi	r6,r6,-4
  81039c:	21000104 	addi	r4,r4,4
  8103a0:	29400104 	addi	r5,r5,4
  8103a4:	39bff936 	bltu	r7,r6,81038c <memcmp+0x54>
  8103a8:	003fe806 	br	81034c <memcmp+0x14>

008103ac <__register_exitproc>:
  8103ac:	defffa04 	addi	sp,sp,-24
  8103b0:	00802074 	movhi	r2,129
  8103b4:	1089a404 	addi	r2,r2,9872
  8103b8:	dc000015 	stw	r16,0(sp)
  8103bc:	14000017 	ldw	r16,0(r2)
  8103c0:	dd000415 	stw	r20,16(sp)
  8103c4:	2829883a 	mov	r20,r5
  8103c8:	81405217 	ldw	r5,328(r16)
  8103cc:	dcc00315 	stw	r19,12(sp)
  8103d0:	dc800215 	stw	r18,8(sp)
  8103d4:	dc400115 	stw	r17,4(sp)
  8103d8:	dfc00515 	stw	ra,20(sp)
  8103dc:	2023883a 	mov	r17,r4
  8103e0:	3027883a 	mov	r19,r6
  8103e4:	3825883a 	mov	r18,r7
  8103e8:	28002526 	beq	r5,zero,810480 <__register_exitproc+0xd4>
  8103ec:	29000117 	ldw	r4,4(r5)
  8103f0:	008007c4 	movi	r2,31
  8103f4:	11002716 	blt	r2,r4,810494 <__register_exitproc+0xe8>
  8103f8:	8800101e 	bne	r17,zero,81043c <__register_exitproc+0x90>
  8103fc:	2105883a 	add	r2,r4,r4
  810400:	1085883a 	add	r2,r2,r2
  810404:	20c00044 	addi	r3,r4,1
  810408:	1145883a 	add	r2,r2,r5
  81040c:	0009883a 	mov	r4,zero
  810410:	15000215 	stw	r20,8(r2)
  810414:	28c00115 	stw	r3,4(r5)
  810418:	2005883a 	mov	r2,r4
  81041c:	dfc00517 	ldw	ra,20(sp)
  810420:	dd000417 	ldw	r20,16(sp)
  810424:	dcc00317 	ldw	r19,12(sp)
  810428:	dc800217 	ldw	r18,8(sp)
  81042c:	dc400117 	ldw	r17,4(sp)
  810430:	dc000017 	ldw	r16,0(sp)
  810434:	dec00604 	addi	sp,sp,24
  810438:	f800283a 	ret
  81043c:	29802204 	addi	r6,r5,136
  810440:	00800044 	movi	r2,1
  810444:	110e983a 	sll	r7,r2,r4
  810448:	30c04017 	ldw	r3,256(r6)
  81044c:	2105883a 	add	r2,r4,r4
  810450:	1085883a 	add	r2,r2,r2
  810454:	1185883a 	add	r2,r2,r6
  810458:	19c6b03a 	or	r3,r3,r7
  81045c:	14802015 	stw	r18,128(r2)
  810460:	14c00015 	stw	r19,0(r2)
  810464:	00800084 	movi	r2,2
  810468:	30c04015 	stw	r3,256(r6)
  81046c:	88bfe31e 	bne	r17,r2,8103fc <__register_exitproc+0x50>
  810470:	30804117 	ldw	r2,260(r6)
  810474:	11c4b03a 	or	r2,r2,r7
  810478:	30804115 	stw	r2,260(r6)
  81047c:	003fdf06 	br	8103fc <__register_exitproc+0x50>
  810480:	00802074 	movhi	r2,129
  810484:	1090a104 	addi	r2,r2,17028
  810488:	100b883a 	mov	r5,r2
  81048c:	80805215 	stw	r2,328(r16)
  810490:	003fd606 	br	8103ec <__register_exitproc+0x40>
  810494:	00800034 	movhi	r2,0
  810498:	10800004 	addi	r2,r2,0
  81049c:	1000021e 	bne	r2,zero,8104a8 <__register_exitproc+0xfc>
  8104a0:	013fffc4 	movi	r4,-1
  8104a4:	003fdc06 	br	810418 <__register_exitproc+0x6c>
  8104a8:	01006404 	movi	r4,400
  8104ac:	103ee83a 	callr	r2
  8104b0:	1007883a 	mov	r3,r2
  8104b4:	103ffa26 	beq	r2,zero,8104a0 <__register_exitproc+0xf4>
  8104b8:	80805217 	ldw	r2,328(r16)
  8104bc:	180b883a 	mov	r5,r3
  8104c0:	18000115 	stw	zero,4(r3)
  8104c4:	18800015 	stw	r2,0(r3)
  8104c8:	80c05215 	stw	r3,328(r16)
  8104cc:	18006215 	stw	zero,392(r3)
  8104d0:	18006315 	stw	zero,396(r3)
  8104d4:	0009883a 	mov	r4,zero
  8104d8:	883fc826 	beq	r17,zero,8103fc <__register_exitproc+0x50>
  8104dc:	003fd706 	br	81043c <__register_exitproc+0x90>

008104e0 <register_fini>:
  8104e0:	f800283a 	ret

008104e4 <__call_exitprocs>:
  8104e4:	00802074 	movhi	r2,129
  8104e8:	1089a404 	addi	r2,r2,9872
  8104ec:	10800017 	ldw	r2,0(r2)
  8104f0:	defff304 	addi	sp,sp,-52
  8104f4:	df000b15 	stw	fp,44(sp)
  8104f8:	d8800115 	stw	r2,4(sp)
  8104fc:	00800034 	movhi	r2,0
  810500:	10800004 	addi	r2,r2,0
  810504:	1005003a 	cmpeq	r2,r2,zero
  810508:	d8800215 	stw	r2,8(sp)
  81050c:	d8800117 	ldw	r2,4(sp)
  810510:	dd400815 	stw	r21,32(sp)
  810514:	dd000715 	stw	r20,28(sp)
  810518:	10805204 	addi	r2,r2,328
  81051c:	dfc00c15 	stw	ra,48(sp)
  810520:	ddc00a15 	stw	r23,40(sp)
  810524:	dd800915 	stw	r22,36(sp)
  810528:	dcc00615 	stw	r19,24(sp)
  81052c:	dc800515 	stw	r18,20(sp)
  810530:	dc400415 	stw	r17,16(sp)
  810534:	dc000315 	stw	r16,12(sp)
  810538:	282b883a 	mov	r21,r5
  81053c:	2039883a 	mov	fp,r4
  810540:	d8800015 	stw	r2,0(sp)
  810544:	2829003a 	cmpeq	r20,r5,zero
  810548:	d8800117 	ldw	r2,4(sp)
  81054c:	14405217 	ldw	r17,328(r2)
  810550:	88001026 	beq	r17,zero,810594 <__call_exitprocs+0xb0>
  810554:	ddc00017 	ldw	r23,0(sp)
  810558:	88800117 	ldw	r2,4(r17)
  81055c:	8c802204 	addi	r18,r17,136
  810560:	143fffc4 	addi	r16,r2,-1
  810564:	80000916 	blt	r16,zero,81058c <__call_exitprocs+0xa8>
  810568:	05bfffc4 	movi	r22,-1
  81056c:	a000151e 	bne	r20,zero,8105c4 <__call_exitprocs+0xe0>
  810570:	8409883a 	add	r4,r16,r16
  810574:	2105883a 	add	r2,r4,r4
  810578:	1485883a 	add	r2,r2,r18
  81057c:	10c02017 	ldw	r3,128(r2)
  810580:	a8c01126 	beq	r21,r3,8105c8 <__call_exitprocs+0xe4>
  810584:	843fffc4 	addi	r16,r16,-1
  810588:	85bff81e 	bne	r16,r22,81056c <__call_exitprocs+0x88>
  81058c:	d8800217 	ldw	r2,8(sp)
  810590:	10003126 	beq	r2,zero,810658 <__call_exitprocs+0x174>
  810594:	dfc00c17 	ldw	ra,48(sp)
  810598:	df000b17 	ldw	fp,44(sp)
  81059c:	ddc00a17 	ldw	r23,40(sp)
  8105a0:	dd800917 	ldw	r22,36(sp)
  8105a4:	dd400817 	ldw	r21,32(sp)
  8105a8:	dd000717 	ldw	r20,28(sp)
  8105ac:	dcc00617 	ldw	r19,24(sp)
  8105b0:	dc800517 	ldw	r18,20(sp)
  8105b4:	dc400417 	ldw	r17,16(sp)
  8105b8:	dc000317 	ldw	r16,12(sp)
  8105bc:	dec00d04 	addi	sp,sp,52
  8105c0:	f800283a 	ret
  8105c4:	8409883a 	add	r4,r16,r16
  8105c8:	88c00117 	ldw	r3,4(r17)
  8105cc:	2105883a 	add	r2,r4,r4
  8105d0:	1445883a 	add	r2,r2,r17
  8105d4:	18ffffc4 	addi	r3,r3,-1
  8105d8:	11800217 	ldw	r6,8(r2)
  8105dc:	1c001526 	beq	r3,r16,810634 <__call_exitprocs+0x150>
  8105e0:	10000215 	stw	zero,8(r2)
  8105e4:	303fe726 	beq	r6,zero,810584 <__call_exitprocs+0xa0>
  8105e8:	00c00044 	movi	r3,1
  8105ec:	1c06983a 	sll	r3,r3,r16
  8105f0:	90804017 	ldw	r2,256(r18)
  8105f4:	8cc00117 	ldw	r19,4(r17)
  8105f8:	1884703a 	and	r2,r3,r2
  8105fc:	10001426 	beq	r2,zero,810650 <__call_exitprocs+0x16c>
  810600:	90804117 	ldw	r2,260(r18)
  810604:	1884703a 	and	r2,r3,r2
  810608:	10000c1e 	bne	r2,zero,81063c <__call_exitprocs+0x158>
  81060c:	2105883a 	add	r2,r4,r4
  810610:	1485883a 	add	r2,r2,r18
  810614:	11400017 	ldw	r5,0(r2)
  810618:	e009883a 	mov	r4,fp
  81061c:	303ee83a 	callr	r6
  810620:	88800117 	ldw	r2,4(r17)
  810624:	98bfc81e 	bne	r19,r2,810548 <__call_exitprocs+0x64>
  810628:	b8800017 	ldw	r2,0(r23)
  81062c:	147fd526 	beq	r2,r17,810584 <__call_exitprocs+0xa0>
  810630:	003fc506 	br	810548 <__call_exitprocs+0x64>
  810634:	8c000115 	stw	r16,4(r17)
  810638:	003fea06 	br	8105e4 <__call_exitprocs+0x100>
  81063c:	2105883a 	add	r2,r4,r4
  810640:	1485883a 	add	r2,r2,r18
  810644:	11000017 	ldw	r4,0(r2)
  810648:	303ee83a 	callr	r6
  81064c:	003ff406 	br	810620 <__call_exitprocs+0x13c>
  810650:	303ee83a 	callr	r6
  810654:	003ff206 	br	810620 <__call_exitprocs+0x13c>
  810658:	88800117 	ldw	r2,4(r17)
  81065c:	1000081e 	bne	r2,zero,810680 <__call_exitprocs+0x19c>
  810660:	89000017 	ldw	r4,0(r17)
  810664:	20000726 	beq	r4,zero,810684 <__call_exitprocs+0x1a0>
  810668:	b9000015 	stw	r4,0(r23)
  81066c:	8809883a 	mov	r4,r17
  810670:	00000000 	call	0 <__reset-0x800000>
  810674:	bc400017 	ldw	r17,0(r23)
  810678:	883fb71e 	bne	r17,zero,810558 <__call_exitprocs+0x74>
  81067c:	003fc506 	br	810594 <__call_exitprocs+0xb0>
  810680:	89000017 	ldw	r4,0(r17)
  810684:	882f883a 	mov	r23,r17
  810688:	2023883a 	mov	r17,r4
  81068c:	883fb21e 	bne	r17,zero,810558 <__call_exitprocs+0x74>
  810690:	003fc006 	br	810594 <__call_exitprocs+0xb0>

00810694 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  810694:	defffd04 	addi	sp,sp,-12
  810698:	df000215 	stw	fp,8(sp)
  81069c:	df000204 	addi	fp,sp,8
  8106a0:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
  8106a4:	e0bfff17 	ldw	r2,-4(fp)
  8106a8:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  8106ac:	e0bffe17 	ldw	r2,-8(fp)
  8106b0:	1005003a 	cmpeq	r2,r2,zero
  8106b4:	1000021e 	bne	r2,zero,8106c0 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
  8106b8:	002af070 	cmpltui	zero,zero,43969
  8106bc:	00000106 	br	8106c4 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
  8106c0:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
  8106c4:	e037883a 	mov	sp,fp
  8106c8:	df000017 	ldw	fp,0(sp)
  8106cc:	dec00104 	addi	sp,sp,4
  8106d0:	f800283a 	ret

008106d4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  8106d4:	defffd04 	addi	sp,sp,-12
  8106d8:	dfc00215 	stw	ra,8(sp)
  8106dc:	df000115 	stw	fp,4(sp)
  8106e0:	df000104 	addi	fp,sp,4
  8106e4:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
  8106e8:	e13fff17 	ldw	r4,-4(fp)
  8106ec:	08106940 	call	810694 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8106f0:	003fff06 	br	8106f0 <_exit+0x1c>
  8106f4:	008104e0 	cmpeqi	r2,zero,1043
